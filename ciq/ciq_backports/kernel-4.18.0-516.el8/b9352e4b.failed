s390/pkey: fix PKEY_TYPE_EP11_AES handling for sysfs attributes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-516.el8
commit-author Holger Dengler <dengler@linux.ibm.com>
commit b9352e4b9b9eff949bcc6907b8569b3a1d992f1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-516.el8/b9352e4b.failed

Commit 'fa6999e326fe ("s390/pkey: support CCA and EP11 secure ECC
private keys")' introduced a new PKEY_TYPE_EP11_AES securekey type as
a supplement to the existing PKEY_TYPE_EP11 (which won't work in
environments with session-bound keys). The pkey EP11 securekey
attributes use PKEY_TYPE_EP11_AES (instead of PKEY_TYPE_EP11)
keyblobs, to make the generated keyblobs usable also in environments,
where session-bound keys are required.

There should be no negative impacts to userspace because the internal
structure of the keyblobs is opaque. The increased size of the
generated keyblobs is reflected by the changed size of the attributes.

Fixes: fa6999e326fe ("s390/pkey: support CCA and EP11 secure ECC private keys")
	Signed-off-by: Holger Dengler <dengler@linux.ibm.com>
	Reviewed-by: Ingo Franzki <ifranzki@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit b9352e4b9b9eff949bcc6907b8569b3a1d992f1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/pkey_api.c
diff --cc drivers/s390/crypto/pkey_api.c
index 4babcd53e1cc,396a159afdf5..000000000000
--- a/drivers/s390/crypto/pkey_api.c
+++ b/drivers/s390/crypto/pkey_api.c
@@@ -2020,7 -2170,8 +2020,12 @@@ static ssize_t pkey_ep11_aes_attr_read(
  	for (i = 0, rc = -ENODEV; i < nr_apqns; i++) {
  		card = apqns[i] >> 16;
  		dom = apqns[i] & 0xFFFF;
++<<<<<<< HEAD
 +		rc = ep11_genaeskey(card, dom, keybits, 0, buf, &keysize);
++=======
+ 		rc = ep11_genaeskey(card, dom, keybits, 0, buf, &keysize,
+ 				    PKEY_TYPE_EP11_AES);
++>>>>>>> b9352e4b9b9e (s390/pkey: fix PKEY_TYPE_EP11_AES handling for sysfs attributes)
  		if (rc == 0)
  			break;
  	}
@@@ -2030,7 -2181,8 +2035,12 @@@
  	if (is_xts) {
  		keysize = MAXEP11AESKEYBLOBSIZE;
  		buf += MAXEP11AESKEYBLOBSIZE;
++<<<<<<< HEAD
 +		rc = ep11_genaeskey(card, dom, keybits, 0, buf, &keysize);
++=======
+ 		rc = ep11_genaeskey(card, dom, keybits, 0, buf, &keysize,
+ 				    PKEY_TYPE_EP11_AES);
++>>>>>>> b9352e4b9b9e (s390/pkey: fix PKEY_TYPE_EP11_AES handling for sysfs attributes)
  		if (rc == 0)
  			return 2 * MAXEP11AESKEYBLOBSIZE;
  	}
diff --git a/arch/s390/include/uapi/asm/pkey.h b/arch/s390/include/uapi/asm/pkey.h
index 924b876f992c..29c6fd369761 100644
--- a/arch/s390/include/uapi/asm/pkey.h
+++ b/arch/s390/include/uapi/asm/pkey.h
@@ -26,7 +26,7 @@
 #define MAXCLRKEYSIZE	32	   /* a clear key value may be up to 32 bytes */
 #define MAXAESCIPHERKEYSIZE 136  /* our aes cipher keys have always 136 bytes */
 #define MINEP11AESKEYBLOBSIZE 256  /* min EP11 AES key blob size  */
-#define MAXEP11AESKEYBLOBSIZE 320  /* max EP11 AES key blob size */
+#define MAXEP11AESKEYBLOBSIZE 336  /* max EP11 AES key blob size */
 
 /* Minimum size of a key blob */
 #define MINKEYBLOBSIZE	SECKEYBLOBSIZE
* Unmerged path drivers/s390/crypto/pkey_api.c
