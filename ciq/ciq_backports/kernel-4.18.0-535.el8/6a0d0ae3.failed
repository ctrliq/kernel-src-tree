scsi: scsi_debug: Fix sdebug_blk_mq_poll() in_use_bm bitmap use

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author Damien Le Moal <damien.lemoal@opensource.wdc.com>
commit 6a0d0ae3e8b533d6de627c814c60264b9a85bad6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/6a0d0ae3.failed

The in_use_bm bitmap of struct sdebug_queue should be accessed under
protection of the qc_lock spinlock. Make sure that this lock is taken
before calling find_first_bit() at the beginning of the function
sdebug_blk_mq_poll().

Link: https://lore.kernel.org/r/20220404045547.579887-1-damien.lemoal@opensource.wdc.com
Fixes: 3fd07aecb750 ("scsi: scsi_debug: Fix qc_lock use in sdebug_blk_mq_poll()")
	Acked-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Damien Le Moal <damien.lemoal@opensource.wdc.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 6a0d0ae3e8b533d6de627c814c60264b9a85bad6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index cbf25e8d2473,ff78ef702f22..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -7527,12 -7519,18 +7527,20 @@@ static int sdebug_blk_mq_poll(struct Sc
  	struct sdebug_defer *sd_dp;
  
  	sqp = sdebug_q_arr + queue_num;
++<<<<<<< HEAD
++=======
+ 
++>>>>>>> 6a0d0ae3e8b5 (scsi: scsi_debug: Fix sdebug_blk_mq_poll() in_use_bm bitmap use)
  	spin_lock_irqsave(&sqp->qc_lock, iflags);
  
+ 	qc_idx = find_first_bit(sqp->in_use_bm, sdebug_max_queue);
+ 	if (qc_idx >= sdebug_max_queue)
+ 		goto unlock;
+ 
  	for (first = true; first || qc_idx + 1 < sdebug_max_queue; )   {
  		if (first) {
 +			qc_idx = find_first_bit(sqp->in_use_bm, sdebug_max_queue);
  			first = false;
 -			if (!test_bit(qc_idx, sqp->in_use_bm))
 -				continue;
  		} else {
  			qc_idx = find_next_bit(sqp->in_use_bm, sdebug_max_queue, qc_idx + 1);
  		}
@@@ -7585,11 -7583,16 +7593,16 @@@
  		}
  		WRITE_ONCE(sd_dp->defer_t, SDEB_DEFER_NONE);
  		spin_unlock_irqrestore(&sqp->qc_lock, iflags);
 -		scsi_done(scp); /* callback to mid level */
 -		num_entries++;
 +		scp->scsi_done(scp); /* callback to mid level */
  		spin_lock_irqsave(&sqp->qc_lock, iflags);
 -		if (find_first_bit(sqp->in_use_bm, sdebug_max_queue) >= sdebug_max_queue)
 -			break;
 +		num_entries++;
  	}
++<<<<<<< HEAD
++=======
+ 
+ unlock:
++>>>>>>> 6a0d0ae3e8b5 (scsi: scsi_debug: Fix sdebug_blk_mq_poll() in_use_bm bitmap use)
  	spin_unlock_irqrestore(&sqp->qc_lock, iflags);
 -
  	if (num_entries > 0)
  		atomic_add(num_entries, &sdeb_mq_poll_count);
  	return num_entries;
* Unmerged path drivers/scsi/scsi_debug.c
