ice: remove ICE_F_PTP_EXTTS feature flag

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 12a5a28b565bfb5abab7ab17fe3c6a3c02a2affe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/12a5a28b.failed

The ICE_F_PTP_EXTTS feature flag is ostensibly intended to support checking
whether the device supports external timestamp pins. It is only checked in
E810-specific code flows, and is enabled for all E810-based devices. E822
and E823 flows unconditionally enable external timestamp support.

This makes the feature flag meaningless, as it is always enabled. Just
unconditionally enable support for external timestamp pins and remove this
unnecessary flag.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Sunitha Mekala <sunithax.d.mekala@intel.com> (A Contingent worker at Intel)
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 12a5a28b565bfb5abab7ab17fe3c6a3c02a2affe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice.h
#	drivers/net/ethernet/intel/ice/ice_lib.c
diff --cc drivers/net/ethernet/intel/ice/ice.h
index f6ff90f05780,04665aff2234..000000000000
--- a/drivers/net/ethernet/intel/ice/ice.h
+++ b/drivers/net/ethernet/intel/ice/ice.h
@@@ -198,9 -198,12 +198,13 @@@
  
  enum ice_feature {
  	ICE_F_DSCP,
++<<<<<<< HEAD
 +	ICE_F_PTP_EXTTS,
++=======
+ 	ICE_F_PHY_RCLK,
++>>>>>>> 12a5a28b565b (ice: remove ICE_F_PTP_EXTTS feature flag)
  	ICE_F_SMA_CTRL,
 -	ICE_F_CGU,
  	ICE_F_GNSS,
 -	ICE_F_ROCE_LAG,
 -	ICE_F_SRIOV_LAG,
  	ICE_F_MAX
  };
  
diff --cc drivers/net/ethernet/intel/ice/ice_lib.c
index 77eb6cc5cf05,382196486054..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_lib.c
+++ b/drivers/net/ethernet/intel/ice/ice_lib.c
@@@ -4290,13 -3985,21 +4290,24 @@@ void ice_init_feature_support(struct ic
  	case ICE_DEV_ID_E810C_BACKPLANE:
  	case ICE_DEV_ID_E810C_QSFP:
  	case ICE_DEV_ID_E810C_SFP:
 -	case ICE_DEV_ID_E810_XXV_BACKPLANE:
 -	case ICE_DEV_ID_E810_XXV_QSFP:
 -	case ICE_DEV_ID_E810_XXV_SFP:
  		ice_set_feature_support(pf, ICE_F_DSCP);
++<<<<<<< HEAD
 +		ice_set_feature_support(pf, ICE_F_PTP_EXTTS);
 +		if (ice_is_e810t(&pf->hw)) {
++=======
+ 		if (ice_is_phy_rclk_present(&pf->hw))
+ 			ice_set_feature_support(pf, ICE_F_PHY_RCLK);
+ 		/* If we don't own the timer - don't enable other caps */
+ 		if (!pf->hw.func_caps.ts_func_info.src_tmr_owned)
+ 			break;
+ 		if (ice_is_cgu_present(&pf->hw))
+ 			ice_set_feature_support(pf, ICE_F_CGU);
+ 		if (ice_is_clock_mux_present_e810t(&pf->hw))
++>>>>>>> 12a5a28b565b (ice: remove ICE_F_PTP_EXTTS feature flag)
  			ice_set_feature_support(pf, ICE_F_SMA_CTRL);
 -		if (ice_gnss_is_gps_present(&pf->hw))
 -			ice_set_feature_support(pf, ICE_F_GNSS);
 +			if (ice_gnss_is_gps_present(&pf->hw))
 +				ice_set_feature_support(pf, ICE_F_GNSS);
 +		}
  		break;
  	default:
  		break;
* Unmerged path drivers/net/ethernet/intel/ice/ice.h
* Unmerged path drivers/net/ethernet/intel/ice/ice_lib.c
diff --git a/drivers/net/ethernet/intel/ice/ice_ptp.c b/drivers/net/ethernet/intel/ice/ice_ptp.c
index ef0fc73589be..994db80aaebd 100644
--- a/drivers/net/ethernet/intel/ice/ice_ptp.c
+++ b/drivers/net/ethernet/intel/ice/ice_ptp.c
@@ -2282,9 +2282,7 @@ static void
 ice_ptp_setup_pins_e810(struct ice_pf *pf, struct ptp_clock_info *info)
 {
 	info->n_per_out = N_PER_OUT_E810;
-
-	if (ice_is_feature_supported(pf, ICE_F_PTP_EXTTS))
-		info->n_ext_ts = N_EXT_TS_E810;
+	info->n_ext_ts = N_EXT_TS_E810;
 
 	if (ice_is_feature_supported(pf, ICE_F_SMA_CTRL)) {
 		info->n_ext_ts = N_EXT_TS_E810;
