scsi: scsi_debug: Refine sdebug_blk_mq_poll()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author Douglas Gilbert <dgilbert@interlog.com>
commit b05d4e481eff1b4cdd38d9bb7914d3273b11885b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/b05d4e48.failed

Refine the sdebug_blk_mq_poll() function so it only takes the spinlock on
the queue when it can see one or more requests with the in_use bitmap flag
set.

Link: https://lore.kernel.org/r/20220109012853.301953-5-dgilbert@interlog.com
	Signed-off-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit b05d4e481eff1b4cdd38d9bb7914d3273b11885b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index cbf25e8d2473,c6798d991fbe..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -7585,11 -7473,14 +7593,19 @@@ static int sdebug_blk_mq_poll(struct Sc
  		}
  		WRITE_ONCE(sd_dp->defer_t, SDEB_DEFER_NONE);
  		spin_unlock_irqrestore(&sqp->qc_lock, iflags);
++<<<<<<< HEAD
 +		scp->scsi_done(scp); /* callback to mid level */
 +		spin_lock_irqsave(&sqp->qc_lock, iflags);
++=======
+ 		locked = false;
+ 		scsi_done(scp); /* callback to mid level */
++>>>>>>> b05d4e481eff (scsi: scsi_debug: Refine sdebug_blk_mq_poll())
  		num_entries++;
+ 		if (find_first_bit(sqp->in_use_bm, sdebug_max_queue) >= sdebug_max_queue)
+ 			break;	/* if no more then exit without retaking spinlock */
  	}
- 	spin_unlock_irqrestore(&sqp->qc_lock, iflags);
+ 	if (locked)
+ 		spin_unlock_irqrestore(&sqp->qc_lock, iflags);
  	if (num_entries > 0)
  		atomic_add(num_entries, &sdeb_mq_poll_count);
  	return num_entries;
* Unmerged path drivers/scsi/scsi_debug.c
