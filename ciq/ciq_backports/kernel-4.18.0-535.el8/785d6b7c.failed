scsi: scsi_debug: Don't hold driver host struct pointer in host->hostdata[]

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author John Garry <john.g.garry@oracle.com>
commit 785d6b7cf300637c684e5c7b7c186b01d8a4cf28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/785d6b7c.failed

This driver stores just a pointer to the driver host structure in
host->hostdata[]. Most other drivers actually have the driver host
structure allocated in host->hostdata[], but this driver is different as we
allocate that memory separately before allocating the shost memory.

However there is no need to allocate this memory only in host->hostdata[]
when we can already look up the driver host structure from shost->dma_dev,
so add a macro for this - shost_to_sdebug_host(). Rename to_sdebug_host()
-> dev_to_sdebug_host() to avoid ambiguity.

Also remove a check for !sdbg_host in find_build_dev_info(), as this cannot
be true. Other similar checks will be later removed.

	Signed-off-by: John Garry <john.g.garry@oracle.com>
Link: https://lore.kernel.org/r/20230313093114.1498305-2-john.g.garry@oracle.com
	Acked-by: Douglas Gilbert <dgilbert@interlog.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 785d6b7cf300637c684e5c7b7c186b01d8a4cf28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index ab4a94d023ac,309a0c88c7ea..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -7806,9 -7815,10 +7805,16 @@@ static int sdebug_driver_probe(struct d
  
  	sdebug_driver_template.can_queue = sdebug_max_queue;
  	sdebug_driver_template.cmd_per_lun = sdebug_max_queue;
++<<<<<<< HEAD
 +	if (sdebug_clustering)
 +		sdebug_driver_template.use_clustering = ENABLE_CLUSTERING;
 +	hpnt = scsi_host_alloc(&sdebug_driver_template, sizeof(sdbg_host));
++=======
+ 	if (!sdebug_clustering)
+ 		sdebug_driver_template.dma_boundary = PAGE_SIZE - 1;
+ 
+ 	hpnt = scsi_host_alloc(&sdebug_driver_template, 0);
++>>>>>>> 785d6b7cf300 (scsi: scsi_debug: Don't hold driver host struct pointer in host->hostdata[])
  	if (NULL == hpnt) {
  		pr_err("scsi_host_alloc failed\n");
  		error = -ENODEV;
* Unmerged path drivers/scsi/scsi_debug.c
