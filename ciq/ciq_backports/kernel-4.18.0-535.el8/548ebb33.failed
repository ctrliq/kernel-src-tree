scsi: scsi_debug: Add poll mode deferred completions to statistics

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author John Garry <john.g.garry@oracle.com>
commit 548ebb335f743fa2647fe61bb1ad29d2c706afda
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/548ebb33.failed

Currently commands completed via poll mode are not included in the
statistics gathering for deferred completions and missed CPUs.

Poll mode completions should be treated the same as other deferred
completion types, so add poll mode completions to the statistics.

	Signed-off-by: John Garry <john.g.garry@oracle.com>
	Acked-by: Douglas Gilbert <dgilbert@interlog.com>
Link: https://lore.kernel.org/r/20230313093114.1498305-12-john.g.garry@oracle.com
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 548ebb335f743fa2647fe61bb1ad29d2c706afda)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index 11c773f222f0,7ed117e78bd4..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -7580,11 -7531,23 +7580,23 @@@ static int sdebug_blk_mq_poll(struct Sc
  		}
  		WRITE_ONCE(sd_dp->defer_t, SDEB_DEFER_NONE);
  		spin_unlock_irqrestore(&sqp->qc_lock, iflags);
++<<<<<<< HEAD
 +		scp->scsi_done(scp); /* callback to mid level */
++=======
+ 
+ 		if (sdebug_statistics) {
+ 			atomic_inc(&sdebug_completions);
+ 			if (raw_smp_processor_id() != sd_dp->issuing_cpu)
+ 				atomic_inc(&sdebug_miss_cpus);
+ 		}
+ 
+ 		scsi_done(scp); /* callback to mid level */
+ 		num_entries++;
++>>>>>>> 548ebb335f74 (scsi: scsi_debug: Add poll mode deferred completions to statistics)
  		spin_lock_irqsave(&sqp->qc_lock, iflags);
 -		if (find_first_bit(sqp->in_use_bm, sdebug_max_queue) >= sdebug_max_queue)
 -			break;
 +		num_entries++;
  	}
 -
 -unlock:
  	spin_unlock_irqrestore(&sqp->qc_lock, iflags);
 -
  	if (num_entries > 0)
  		atomic_add(num_entries, &sdeb_mq_poll_count);
  	return num_entries;
* Unmerged path drivers/scsi/scsi_debug.c
