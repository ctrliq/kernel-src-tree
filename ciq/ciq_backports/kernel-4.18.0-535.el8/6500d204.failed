scsi: scsi_debug: Fix check for sdev queue full

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author John Garry <john.g.garry@oracle.com>
commit 6500d2045d5247cfb2ac31cc1691d7191096389b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/6500d204.failed

There is a report that the blktests scsi/004 test for "TASK SET FULL" (TSF)
now fails.

The condition upon we should issue this TSF is when the sdev queue is
full. The check for a full queue has an off-by-1 error. Previously we would
increment the number of requests in the queue after testing if the queue
would be full, i.e. test if one less than full. Since we now use
scsi_device_busy() to count the number of requests in the queue, this would
already account for the current request, so fix the test for queue full
accordingly.

Fixes: 151f0ec9ddb5 ("scsi: scsi_debug: Drop sdebug_dev_info.num_in_q")
	Reported-by: kernel test robot <oliver.sang@intel.com>
Link: https://lore.kernel.org/oe-lkp/202303201334.18b30edc-oliver.sang@intel.com
	Signed-off-by: John Garry <john.g.garry@oracle.com>
Link: https://lore.kernel.org/r/20230327074310.1862889-2-john.g.garry@oracle.com
	Acked-by: Douglas Gilbert <dgilbert@interlog.com>
	Tested-by: Yi Zhang <yi.zhang@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 6500d2045d5247cfb2ac31cc1691d7191096389b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_debug.c
diff --cc drivers/scsi/scsi_debug.c
index 4d9883ffacaa,782515abca2c..000000000000
--- a/drivers/scsi/scsi_debug.c
+++ b/drivers/scsi/scsi_debug.c
@@@ -5614,11 -5574,13 +5614,18 @@@ static int schedule_resp(struct scsi_cm
  		spin_unlock_irqrestore(&sqp->qc_lock, iflags);
  		return SCSI_MLQUEUE_HOST_BUSY;
  	}
 -
 +	num_in_q = atomic_read(&devip->num_in_q);
 +	qdepth = cmnd->device->queue_depth;
  	if (unlikely(sdebug_every_nth && (SDEBUG_OPT_RARE_TSF & sdebug_opts) &&
  		     (scsi_result == 0))) {
++<<<<<<< HEAD
 +		if ((num_in_q == (qdepth - 1)) &&
++=======
+ 		int num_in_q = scsi_device_busy(sdp);
+ 		int qdepth = cmnd->device->queue_depth;
+ 
+ 		if ((num_in_q == qdepth) &&
++>>>>>>> 6500d2045d52 (scsi: scsi_debug: Fix check for sdev queue full)
  		    (atomic_inc_return(&sdebug_a_tsf) >=
  		     abs(sdebug_every_nth))) {
  			atomic_set(&sdebug_a_tsf, 0);
* Unmerged path drivers/scsi/scsi_debug.c
