ice: always report VF overflowing mailbox even without PF VSI

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-535.el8
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit 4f0636fef61ad0b22fed4fb06f369d6ba38f807d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-535.el8/4f0636fe.failed

In ice_is_malicious_vf we report a message warning the system administrator
when a VF is potentially spamming the PF with asynchronous messages that
could overflow the PF mailbox.

The specific message was requested by our customer support team to include
the VF and PF MAC address. In some cases we may not be able to locate the
PF VSI to obtain the MAC address for the PF. The current implementation
discards the message entirely in this case. Fix this to instead print a
zero address in that case so that we always print something here. Note that
dev_warn will also include the PCI device information allowing another
mechanism for determining on which PF the potentially malicious VF belongs.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
	Tested-by: Marek Szlosek <marek.szlosek@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 4f0636fef61ad0b22fed4fb06f369d6ba38f807d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_sriov.c
diff --cc drivers/net/ethernet/intel/ice/ice_sriov.c
index 33fbbf188926,185673afb781..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_sriov.c
+++ b/drivers/net/ethernet/intel/ice/ice_sriov.c
@@@ -1813,25 -1815,13 +1813,35 @@@ ice_is_malicious_vf(struct ice_pf *pf, 
  	if (status)
  		goto out_put_vf;
  
++<<<<<<< HEAD
 +	if (malvf) {
 +		bool report_vf = false;
 +
 +		/* if the VF is malicious and we haven't let the user
 +		 * know about it, then let them know now
 +		 */
 +		status = ice_mbx_report_malvf(&pf->hw, &vf->mbx_info,
 +					      &report_vf);
 +		if (status)
 +			dev_dbg(dev, "Error reporting malicious VF\n");
 +
 +		if (report_vf) {
 +			struct ice_vsi *pf_vsi = ice_get_main_vsi(pf);
 +
 +			if (pf_vsi)
 +				dev_warn(dev, "VF MAC %pM on PF MAC %pM is generating asynchronous messages and may be overflowing the PF message queue. Please see the Adapter User Guide for more information\n",
 +					 &vf->dev_lan_addr[0],
 +					 pf_vsi->netdev->dev_addr);
 +		}
++=======
+ 	if (report_malvf) {
+ 		struct ice_vsi *pf_vsi = ice_get_main_vsi(pf);
+ 		u8 zero_addr[ETH_ALEN] = {};
+ 
+ 		dev_warn(dev, "VF MAC %pM on PF MAC %pM is generating asynchronous messages and may be overflowing the PF message queue. Please see the Adapter User Guide for more information\n",
+ 			 &vf->dev_lan_addr[0],
+ 			 pf_vsi ? pf_vsi->netdev->dev_addr : zero_addr);
++>>>>>>> 4f0636fef61a (ice: always report VF overflowing mailbox even without PF VSI)
  	}
  
  out_put_vf:
* Unmerged path drivers/net/ethernet/intel/ice/ice_sriov.c
