net: asix: fix "can't send until first packet is send" issue

jira LE-3201
cve CVE-2021-47101
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.22.1.rt7.363.el8_10
commit-author Oleksij Rempel <o.rempel@pengutronix.de>
commit 805206e66fab4ba1e0ebd19402006d62cd1d4902
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.22.1.rt7.363.el8_10/805206e6.failed

If cable is attached after probe sequence, the usbnet framework would
not automatically start processing RX packets except at least one
packet was transmitted.

On systems with any kind of address auto configuration this issue was
not detected, because some packets are send immediately after link state
is changed to "running".

With this patch we will notify usbnet about link status change provided by the
PHYlib.

Fixes: e532a096be0e ("net: usb: asix: ax88772: add phylib support")
	Reported-by: Anton Lundin <glance@acc.umu.se>
	Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
	Tested-by: Anton Lundin <glance@acc.umu.se>
Link: https://lore.kernel.org/r/20220624075139.3139300-1-o.rempel@pengutronix.de
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 805206e66fab4ba1e0ebd19402006d62cd1d4902)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/asix_common.c
diff --cc drivers/net/usb/asix_common.c
index 113993e61ac8,b4a1b7abcfc9..000000000000
--- a/drivers/net/usb/asix_common.c
+++ b/drivers/net/usb/asix_common.c
@@@ -396,6 -412,28 +396,31 @@@ int asix_write_medium_mode(struct usbne
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ /* set MAC link settings according to information from phylib */
+ void asix_adjust_link(struct net_device *netdev)
+ {
+ 	struct phy_device *phydev = netdev->phydev;
+ 	struct usbnet *dev = netdev_priv(netdev);
+ 	u16 mode = 0;
+ 
+ 	if (phydev->link) {
+ 		mode = AX88772_MEDIUM_DEFAULT;
+ 
+ 		if (phydev->duplex == DUPLEX_HALF)
+ 			mode &= ~AX_MEDIUM_FD;
+ 
+ 		if (phydev->speed != SPEED_100)
+ 			mode &= ~AX_MEDIUM_PS;
+ 	}
+ 
+ 	asix_write_medium_mode(dev, mode, 0);
+ 	phy_print_status(phydev);
+ 	usbnet_link_change(dev, phydev->link, 0);
+ }
+ 
++>>>>>>> 805206e66fab (net: asix: fix "can't send until first packet is send" issue)
  int asix_write_gpio(struct usbnet *dev, u16 value, int sleep, int in_pm)
  {
  	int ret;
* Unmerged path drivers/net/usb/asix_common.c
