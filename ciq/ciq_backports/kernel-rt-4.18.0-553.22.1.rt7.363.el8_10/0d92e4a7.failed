KVM: arm64: Disassociate vcpus from redistributor region on teardown

jira LE-3201
cve CVE-2024-40989
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.22.1.rt7.363.el8_10
commit-author Marc Zyngier <maz@kernel.org>
commit 0d92e4a7ffd5c42b9fa864692f82476c0bf8bcc8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.22.1.rt7.363.el8_10/0d92e4a7.failed

When tearing down a redistributor region, make sure we don't have
any dangling pointer to that region stored in a vcpu.

Fixes: e5a35635464b ("kvm: arm64: vgic-v3: Introduce vgic_v3_free_redist_region()")
	Reported-by: Alexander Potapenko <glider@google.com>
	Reviewed-by: Oliver Upton <oliver.upton@linux.dev>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20240605175637.1635653-1-maz@kernel.org
	Cc: stable@vger.kernel.org
(cherry picked from commit 0d92e4a7ffd5c42b9fa864692f82476c0bf8bcc8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/vgic/vgic-mmio-v3.c
diff --cc arch/arm64/kvm/vgic/vgic-mmio-v3.c
index 3eb3708b1e5f,9e50928f5d7d..000000000000
--- a/arch/arm64/kvm/vgic/vgic-mmio-v3.c
+++ b/arch/arm64/kvm/vgic/vgic-mmio-v3.c
@@@ -855,8 -954,10 +866,13 @@@ int vgic_v3_set_redist_base(struct kvm 
  	if (ret) {
  		struct vgic_redist_region *rdreg;
  
 -		mutex_lock(&kvm->arch.config_lock);
  		rdreg = vgic_v3_rdist_region_from_index(kvm, index);
++<<<<<<< HEAD
 +		vgic_v3_free_redist_region(rdreg);
++=======
+ 		vgic_v3_free_redist_region(kvm, rdreg);
+ 		mutex_unlock(&kvm->arch.config_lock);
++>>>>>>> 0d92e4a7ffd5 (KVM: arm64: Disassociate vcpus from redistributor region on teardown)
  		return ret;
  	}
  
diff --git a/arch/arm64/kvm/vgic/vgic-init.c b/arch/arm64/kvm/vgic/vgic-init.c
index 164e5a908b39..03250afec0b8 100644
--- a/arch/arm64/kvm/vgic/vgic-init.c
+++ b/arch/arm64/kvm/vgic/vgic-init.c
@@ -352,7 +352,7 @@ static void kvm_vgic_dist_destroy(struct kvm *kvm)
 
 	if (dist->vgic_model == KVM_DEV_TYPE_ARM_VGIC_V3) {
 		list_for_each_entry_safe(rdreg, next, &dist->rd_regions, list)
-			vgic_v3_free_redist_region(rdreg);
+			vgic_v3_free_redist_region(kvm, rdreg);
 		INIT_LIST_HEAD(&dist->rd_regions);
 	} else {
 		dist->vgic_cpu_base = VGIC_ADDR_UNDEF;
* Unmerged path arch/arm64/kvm/vgic/vgic-mmio-v3.c
diff --git a/arch/arm64/kvm/vgic/vgic.h b/arch/arm64/kvm/vgic/vgic.h
index 683827a34c25..a4475f76d2c2 100644
--- a/arch/arm64/kvm/vgic/vgic.h
+++ b/arch/arm64/kvm/vgic/vgic.h
@@ -305,7 +305,7 @@ vgic_v3_rd_region_size(struct kvm *kvm, struct vgic_redist_region *rdreg)
 
 struct vgic_redist_region *vgic_v3_rdist_region_from_index(struct kvm *kvm,
 							   u32 index);
-void vgic_v3_free_redist_region(struct vgic_redist_region *rdreg);
+void vgic_v3_free_redist_region(struct kvm *kvm, struct vgic_redist_region *rdreg);
 
 bool vgic_v3_rdist_overlap(struct kvm *kvm, gpa_t base, size_t size);
 
