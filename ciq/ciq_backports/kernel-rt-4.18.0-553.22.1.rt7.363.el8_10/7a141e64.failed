net: usb: asix: ax88772: move embedded PHY detection as early as possible

jira LE-3201
cve CVE-2021-47101
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.22.1.rt7.363.el8_10
commit-author Oleksij Rempel <o.rempel@pengutronix.de>
commit 7a141e64cf14099d84e530db0e86fcb2c489e341
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.22.1.rt7.363.el8_10/7a141e64.failed

Some HW revisions need additional MAC configuration before the embedded PHY
can be enabled. If this is not done, we won't be able to get response
from the internal PHY.

This issue was detected on chipcode == AX_AX88772_CHIPCODE variant,
where ax88772_hw_reset() was executed with missing embd_phy flag.

Fixes: e532a096be0e ("net: usb: asix: ax88772: add phylib support")
	Reported-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
	Tested-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
	Signed-off-by: Oleksij Rempel <o.rempel@pengutronix.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7a141e64cf14099d84e530db0e86fcb2c489e341)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/asix.h
#	drivers/net/usb/asix_devices.c
diff --cc drivers/net/usb/asix.h
index a337c5c1945f,2a1e31defe71..000000000000
--- a/drivers/net/usb/asix.h
+++ b/drivers/net/usb/asix.h
@@@ -190,6 -180,11 +190,14 @@@ struct asix_common_private 
  	u16 presvd_phy_advertise;
  	u16 presvd_phy_bmcr;
  	struct asix_rx_fixup_info rx_fixup_info;
++<<<<<<< HEAD
++=======
+ 	struct mii_bus *mdio;
+ 	struct phy_device *phydev;
+ 	u16 phy_addr;
+ 	char phy_name[20];
+ 	bool embd_phy;
++>>>>>>> 7a141e64cf14 (net: usb: asix: ax88772: move embedded PHY detection as early as possible)
  };
  
  extern const struct driver_info ax88172a_info;
diff --cc drivers/net/usb/asix_devices.c
index 08e5168f1e5f,15460d419e3f..000000000000
--- a/drivers/net/usb/asix_devices.c
+++ b/drivers/net/usb/asix_devices.c
@@@ -689,13 -657,63 +687,66 @@@ static int asix_resume(struct usb_inter
  	return usbnet_resume(intf);
  }
  
++<<<<<<< HEAD
++=======
+ static int ax88772_init_mdio(struct usbnet *dev)
+ {
+ 	struct asix_common_private *priv = dev->driver_priv;
+ 
+ 	priv->mdio = devm_mdiobus_alloc(&dev->udev->dev);
+ 	if (!priv->mdio)
+ 		return -ENOMEM;
+ 
+ 	priv->mdio->priv = dev;
+ 	priv->mdio->read = &asix_mdio_bus_read;
+ 	priv->mdio->write = &asix_mdio_bus_write;
+ 	priv->mdio->name = "Asix MDIO Bus";
+ 	/* mii bus name is usb-<usb bus number>-<usb device number> */
+ 	snprintf(priv->mdio->id, MII_BUS_ID_SIZE, "usb-%03d:%03d",
+ 		 dev->udev->bus->busnum, dev->udev->devnum);
+ 
+ 	return devm_mdiobus_register(&dev->udev->dev, priv->mdio);
+ }
+ 
+ static int ax88772_init_phy(struct usbnet *dev)
+ {
+ 	struct asix_common_private *priv = dev->driver_priv;
+ 	int ret;
+ 
+ 	snprintf(priv->phy_name, sizeof(priv->phy_name), PHY_ID_FMT,
+ 		 priv->mdio->id, priv->phy_addr);
+ 
+ 	priv->phydev = phy_connect(dev->net, priv->phy_name, &asix_adjust_link,
+ 				   PHY_INTERFACE_MODE_INTERNAL);
+ 	if (IS_ERR(priv->phydev)) {
+ 		netdev_err(dev->net, "Could not connect to PHY device %s\n",
+ 			   priv->phy_name);
+ 		ret = PTR_ERR(priv->phydev);
+ 		return ret;
+ 	}
+ 
+ 	phy_suspend(priv->phydev);
+ 	priv->phydev->mac_managed_pm = 1;
+ 
+ 	phy_attached_info(priv->phydev);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 7a141e64cf14 (net: usb: asix: ax88772: move embedded PHY detection as early as possible)
  static int ax88772_bind(struct usbnet *dev, struct usb_interface *intf)
  {
 -	u8 buf[ETH_ALEN] = {0}, chipcode = 0;
 -	struct asix_common_private *priv;
  	int ret, i;
 +	u8 buf[ETH_ALEN] = {0}, chipcode = 0;
  	u32 phyid;
 +	struct asix_common_private *priv;
  
+ 	priv = devm_kzalloc(&dev->udev->dev, sizeof(*priv), GFP_KERNEL);
+ 	if (!priv)
+ 		return -ENOMEM;
+ 
+ 	dev->driver_priv = priv;
+ 
  	usbnet_get_endpoints(dev, intf);
  
  	/* Maybe the boot loader passed the MAC address via device tree */
@@@ -764,12 -778,6 +822,15 @@@
  		dev->rx_urb_size = 2048;
  	}
  
++<<<<<<< HEAD
 +	dev->driver_priv = kzalloc(sizeof(struct asix_common_private), GFP_KERNEL);
 +	if (!dev->driver_priv)
 +		return -ENOMEM;
 +
 +	priv = dev->driver_priv;
 +
++=======
++>>>>>>> 7a141e64cf14 (net: usb: asix: ax88772: move embedded PHY detection as early as possible)
  	priv->presvd_phy_bmcr = 0;
  	priv->presvd_phy_advertise = 0;
  	if (chipcode == AX_AX88772_CHIPCODE) {
* Unmerged path drivers/net/usb/asix.h
* Unmerged path drivers/net/usb/asix_devices.c
