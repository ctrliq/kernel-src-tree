net: asix: add proper error handling of usb read errors

jira LE-3201
cve CVE-2021-47101
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.22.1.rt7.363.el8_10
commit-author Pavel Skripkin <paskripkin@gmail.com>
commit 920a9fa27e7805499cfe78491b36fed2322c02ec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.22.1.rt7.363.el8_10/920a9fa2.failed

Syzbot once again hit uninit value in asix driver. The problem still the
same -- asix_read_cmd() reads less bytes, than was requested by caller.

Since all read requests are performed via asix_read_cmd() let's catch
usb related error there and add __must_check notation to be sure all
callers actually check return value.

So, this patch adds sanity check inside asix_read_cmd(), that simply
checks if bytes read are not less, than was requested and adds missing
error handling of asix_read_cmd() all across the driver code.

Fixes: d9fe64e51114 ("net: asix: Add in_pm parameter")
Reported-and-tested-by: syzbot+6ca9f7867b77c2d316ac@syzkaller.appspotmail.com
	Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
	Tested-by: Oleksij Rempel <o.rempel@pengutronix.de>
	Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 920a9fa27e7805499cfe78491b36fed2322c02ec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/asix_common.c
#	drivers/net/usb/asix_devices.c
diff --cc drivers/net/usb/asix_common.c
index 113993e61ac8,524805285019..000000000000
--- a/drivers/net/usb/asix_common.c
+++ b/drivers/net/usb/asix_common.c
@@@ -21,8 -9,10 +21,15 @@@
  
  #include "asix.h"
  
++<<<<<<< HEAD
 +int asix_read_cmd(struct usbnet *dev, u8 cmd, u16 value, u16 index,
 +		  u16 size, void *data, int in_pm)
++=======
+ #define AX_HOST_EN_RETRIES	30
+ 
+ int __must_check asix_read_cmd(struct usbnet *dev, u8 cmd, u16 value, u16 index,
+ 			       u16 size, void *data, int in_pm)
++>>>>>>> 920a9fa27e78 (net: asix: add proper error handling of usb read errors)
  {
  	int ret;
  	int (*fn)(struct usbnet *, u8, u8, u16, u16, void *, u16);
@@@ -75,6 -68,29 +85,32 @@@ void asix_write_cmd_async(struct usbne
  			       value, index, data, size);
  }
  
++<<<<<<< HEAD
++=======
+ static int asix_check_host_enable(struct usbnet *dev, int in_pm)
+ {
+ 	int i, ret;
+ 	u8 smsr;
+ 
+ 	for (i = 0; i < AX_HOST_EN_RETRIES; ++i) {
+ 		ret = asix_set_sw_mii(dev, in_pm);
+ 		if (ret == -ENODEV || ret == -ETIMEDOUT)
+ 			break;
+ 		usleep_range(1000, 1100);
+ 		ret = asix_read_cmd(dev, AX_CMD_STATMNGSTS_REG,
+ 				    0, 0, 1, &smsr, in_pm);
+ 		if (ret == -ENODEV)
+ 			break;
+ 		else if (ret < 0)
+ 			continue;
+ 		else if (smsr & AX_HOST_EN)
+ 			break;
+ 	}
+ 
+ 	return i >= AX_HOST_EN_RETRIES ? -ETIMEDOUT : ret;
+ }
+ 
++>>>>>>> 920a9fa27e78 (net: asix: add proper error handling of usb read errors)
  static void reset_asix_rx_fixup_info(struct asix_rx_fixup_info *rx)
  {
  	/* Reset the variables that have a lifetime outside of
diff --cc drivers/net/usb/asix_devices.c
index 557e8671b5aa,6ea44e53713a..000000000000
--- a/drivers/net/usb/asix_devices.c
+++ b/drivers/net/usb/asix_devices.c
@@@ -742,7 -748,19 +742,23 @@@ static int ax88772_bind(struct usbnet *
  	dev->net->needed_headroom = 4; /* cf asix_tx_fixup() */
  	dev->net->needed_tailroom = 4; /* cf asix_tx_fixup() */
  
++<<<<<<< HEAD
 +	asix_read_cmd(dev, AX_CMD_STATMNGSTS_REG, 0, 0, 1, &chipcode, 0);
++=======
+ 	ret = asix_read_phy_addr(dev, true);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	priv->phy_addr = ret;
+ 	priv->embd_phy = ((priv->phy_addr & 0x1f) == 0x10);
+ 
+ 	ret = asix_read_cmd(dev, AX_CMD_STATMNGSTS_REG, 0, 0, 1, &chipcode, 0);
+ 	if (ret < 0) {
+ 		netdev_dbg(dev->net, "Failed to read STATMNGSTS_REG: %d\n", ret);
+ 		return ret;
+ 	}
+ 
++>>>>>>> 920a9fa27e78 (net: asix: add proper error handling of usb read errors)
  	chipcode &= AX_CHIPCODE_MASK;
  
  	ret = (chipcode == AX_AX88772_CHIPCODE) ? ax88772_hw_reset(dev, 0) :
diff --git a/drivers/net/usb/asix.h b/drivers/net/usb/asix.h
index a337c5c1945f..b2855bbdc900 100644
--- a/drivers/net/usb/asix.h
+++ b/drivers/net/usb/asix.h
@@ -197,8 +197,8 @@ extern const struct driver_info ax88172a_info;
 /* ASIX specific flags */
 #define FLAG_EEPROM_MAC		(1UL << 0)  /* init device MAC from eeprom */
 
-int asix_read_cmd(struct usbnet *dev, u8 cmd, u16 value, u16 index,
-		  u16 size, void *data, int in_pm);
+int __must_check asix_read_cmd(struct usbnet *dev, u8 cmd, u16 value, u16 index,
+			       u16 size, void *data, int in_pm);
 
 int asix_write_cmd(struct usbnet *dev, u8 cmd, u16 value, u16 index,
 		   u16 size, void *data, int in_pm);
* Unmerged path drivers/net/usb/asix_common.c
* Unmerged path drivers/net/usb/asix_devices.c
