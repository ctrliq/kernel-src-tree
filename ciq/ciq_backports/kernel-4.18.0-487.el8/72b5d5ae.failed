kernfs: fix potential NULL dereference in __kernfs_remove

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-487.el8
commit-author Yushan Zhou <katrinzhou@tencent.com>
commit 72b5d5aef246a0387cefa23121dd90901c7a691a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-487.el8/72b5d5ae.failed

When lockdep is enabled, lockdep_assert_held_write would
cause potential NULL pointer dereference.

Fix the following smatch warnings:

fs/kernfs/dir.c:1353 __kernfs_remove() warn: variable dereferenced before check 'kn' (see line 1346)

Fixes: 393c3714081a ("kernfs: switch global kernfs_rwsem lock to per-fs lock")
	Signed-off-by: Yushan Zhou <katrinzhou@tencent.com>
Link: https://lore.kernel.org/r/20220630082512.3482581-1-zys.zljxml@gmail.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 72b5d5aef246a0387cefa23121dd90901c7a691a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/kernfs/dir.c
diff --cc fs/kernfs/dir.c
index baa2c1382a0d,1cc88ba6de90..000000000000
--- a/fs/kernfs/dir.c
+++ b/fs/kernfs/dir.c
@@@ -1312,10 -1343,13 +1312,17 @@@ static void __kernfs_remove(struct kern
  {
  	struct kernfs_node *pos;
  
++<<<<<<< HEAD
 +	lockdep_assert_held_write(&kernfs_rwsem);
++=======
+ 	/* Short-circuit if non-root @kn has already finished removal. */
+ 	if (!kn)
+ 		return;
+ 
+ 	lockdep_assert_held_write(&kernfs_root(kn)->kernfs_rwsem);
++>>>>>>> 72b5d5aef246 (kernfs: fix potential NULL dereference in __kernfs_remove)
  
  	/*
- 	 * Short-circuit if non-root @kn has already finished removal.
  	 * This is for kernfs_remove_self() which plays with active ref
  	 * after removal.
  	 */
* Unmerged path fs/kernfs/dir.c
