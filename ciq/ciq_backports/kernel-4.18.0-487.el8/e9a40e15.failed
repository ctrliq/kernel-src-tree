fortify: Do not cast to "unsigned char"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-487.el8
commit-author Kees Cook <keescook@chromium.org>
commit e9a40e1585d792751d3a122392695e5a53032809
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-487.el8/e9a40e15.failed

Do not cast to "unsigned char", as this needlessly creates type problems
when attempting builds without -Wno-pointer-sign[1]. The intent of the
cast is to drop possible "const" types.

[1] https://lore.kernel.org/lkml/CAHk-=wgz3Uba8w7kdXhsqR1qvfemYL+OFQdefJnkeqXG8qZ_pA@mail.gmail.com/

	Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
Fixes: 3009f891bb9f ("fortify: Allow strlen() and strnlen() to pass compile-time known lengths")
	Cc: linux-hardening@vger.kernel.org
	Signed-off-by: Kees Cook <keescook@chromium.org>
(cherry picked from commit e9a40e1585d792751d3a122392695e5a53032809)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fortify-string.h
diff --cc include/linux/fortify-string.h
index 04fead270553,aa31f54f8b57..000000000000
--- a/include/linux/fortify-string.h
+++ b/include/linux/fortify-string.h
@@@ -5,10 -5,23 +5,17 @@@
  
  #define __compiletime_strlen(p)					\
  ({								\
++<<<<<<< HEAD
 +	unsigned char *__p = (unsigned char *)(p);		\
 +	size_t __ret = (size_t)-1;				\
 +	size_t __p_size = __builtin_object_size(p, 1);		\
 +	if (__p_size != (size_t)-1 &&				\
++=======
+ 	char *__p = (char *)(p);				\
+ 	size_t __ret = SIZE_MAX;				\
+ 	size_t __p_size = __member_size(p);			\
+ 	if (__p_size != SIZE_MAX &&				\
++>>>>>>> e9a40e1585d7 (fortify: Do not cast to "unsigned char")
  	    __builtin_constant_p(*__p)) {			\
  		size_t __p_len = __p_size - 1;			\
  		if (__builtin_constant_p(__p[__p_len]) &&	\
* Unmerged path include/linux/fortify-string.h
