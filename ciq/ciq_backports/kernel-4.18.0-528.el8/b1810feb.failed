Bluetooth: Fix crash in mgmt_add_adv_patterns_monitor_complete

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Howard Chung <howardchung@google.com>
commit b1810febda94cae09e1095d02fad3be00ce93b6d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/b1810feb.failed

If hci_add_adv_monitor is a pending command(e.g. forward to
msft_add_monitor_pattern), it is possible that
mgmt_add_adv_patterns_monitor_complete gets called before
cmd->user_data gets set, which will cause a crash when we
try to get the moniter handle through cmd->user_data in
mgmt_add_adv_patterns_monitor_complete.

This moves the cmd->user_data assignment earlier than
hci_add_adv_monitor.

RIP: 0010:mgmt_add_adv_patterns_monitor_complete+0x82/0x187 [bluetooth]
Code: 1e bf 03 00 00 00 be 52 00 00 00 4c 89 ea e8 9e
e4 02 00 49 89 c6 48 85 c0 0f 84 06 01 00 00 48 89 5d b8 4c 89 fb 4d 8b
7e 30 <41> 0f b7 47 18 66 89 45 c0 45 84 e4 75 5a 4d 8b 56 28 48 8d 4d
c8
RSP: 0018:ffffae81807dbcb8 EFLAGS: 00010286
RAX: ffff91c4bdf723c0 RBX: 0000000000000000 RCX: ffff91c4e5da5b80
RDX: ffff91c405680000 RSI: 0000000000000052 RDI: ffff91c49d654c00
RBP: ffffae81807dbd00 R08: ffff91c49fb157e0 R09: ffff91c49fb157e0
R10: 000000000002a4f0 R11: ffffffffc0819cfd R12: 0000000000000000
R13: ffff91c405680000 R14: ffff91c4bdf723c0 R15: 0000000000000000
FS:  0000000000000000(0000) GS:ffff91c4ea300000(0000)
knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000018 CR3: 0000000133612002 CR4:
00000000003606e0
Call Trace:
 ? msft_le_monitor_advertisement_cb+0x111/0x141
[bluetooth]
 hci_event_packet+0x425e/0x631c [bluetooth]
 ? printk+0x59/0x73
 ? __switch_to_asm+0x41/0x70
 ?
msft_le_set_advertisement_filter_enable_cb+0xa6/0xa6 [bluetooth]
 ? bt_dbg+0xb4/0xbb [bluetooth]
 ? __switch_to_asm+0x41/0x70
 hci_rx_work+0x101/0x319 [bluetooth]
 process_one_work+0x257/0x506
 worker_thread+0x10d/0x284
 kthread+0x14c/0x154
 ? process_one_work+0x506/0x506
 ? kthread_blkcg+0x2c/0x2c
 ret_from_fork+0x1f/0x40

	Reviewed-by: Miao-chen Chou <mcchou@chromium.org>
	Reviewed-by: Manish Mandlik <mmandlik@chromium.org>
	Reviewed-by: Archie Pusaka <apusaka@chromium.org>
	Signed-off-by: Howard Chung <howardchung@google.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit b1810febda94cae09e1095d02fad3be00ce93b6d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/mgmt.c
diff --cc net/bluetooth/mgmt.c
index 571df4b44339,74971b4bd457..000000000000
--- a/net/bluetooth/mgmt.c
+++ b/net/bluetooth/mgmt.c
@@@ -4237,24 -4236,80 +4237,29 @@@ static int read_adv_mon_features(struc
  	return err;
  }
  
 -int mgmt_add_adv_patterns_monitor_complete(struct hci_dev *hdev, u8 status)
 -{
 -	struct mgmt_rp_add_adv_patterns_monitor rp;
 -	struct mgmt_pending_cmd *cmd;
 -	struct adv_monitor *monitor;
 -	int err = 0;
 -
 -	hci_dev_lock(hdev);
 -
 -	cmd = pending_find(MGMT_OP_ADD_ADV_PATTERNS_MONITOR_RSSI, hdev);
 -	if (!cmd) {
 -		cmd = pending_find(MGMT_OP_ADD_ADV_PATTERNS_MONITOR, hdev);
 -		if (!cmd)
 -			goto done;
 -	}
 -
 -	monitor = cmd->user_data;
 -	rp.monitor_handle = cpu_to_le16(monitor->handle);
 -
 -	if (!status) {
 -		mgmt_adv_monitor_added(cmd->sk, hdev, monitor->handle);
 -		hdev->adv_monitors_cnt++;
 -		if (monitor->state == ADV_MONITOR_STATE_NOT_REGISTERED)
 -			monitor->state = ADV_MONITOR_STATE_REGISTERED;
 -		hci_update_background_scan(hdev);
 -	}
 -
 -	err = mgmt_cmd_complete(cmd->sk, cmd->index, cmd->opcode,
 -				mgmt_status(status), &rp, sizeof(rp));
 -	mgmt_pending_remove(cmd);
 -
 -done:
 -	hci_dev_unlock(hdev);
 -	bt_dev_dbg(hdev, "add monitor %d complete, status %d",
 -		   rp.monitor_handle, status);
 -
 -	return err;
 -}
 -
  static int __add_adv_patterns_monitor(struct sock *sk, struct hci_dev *hdev,
 -				      struct adv_monitor *m, u8 status,
 -				      void *data, u16 len, u16 op)
 +				      struct adv_monitor *m, u8 status, u16 op)
  {
  	struct mgmt_rp_add_adv_patterns_monitor rp;
 -	struct mgmt_pending_cmd *cmd;
 +	unsigned int prev_adv_monitors_cnt;
  	int err;
 -	bool pending;
 -
 -	hci_dev_lock(hdev);
  
  	if (status)
 -		goto unlock;
 +		goto failed;
  
 -	if (pending_find(MGMT_OP_SET_LE, hdev) ||
 -	    pending_find(MGMT_OP_ADD_ADV_PATTERNS_MONITOR, hdev) ||
 -	    pending_find(MGMT_OP_ADD_ADV_PATTERNS_MONITOR_RSSI, hdev) ||
 -	    pending_find(MGMT_OP_REMOVE_ADV_MONITOR, hdev)) {
 -		status = MGMT_STATUS_BUSY;
 -		goto unlock;
 -	}
 +	hci_dev_lock(hdev);
  
 -	cmd = mgmt_pending_add(sk, op, hdev, data, len);
 -	if (!cmd) {
 -		status = MGMT_STATUS_NO_RESOURCES;
 -		goto unlock;
 -	}
 +	prev_adv_monitors_cnt = hdev->adv_monitors_cnt;
  
++<<<<<<< HEAD
 +	err = hci_add_adv_monitor(hdev, m);
++=======
+ 	cmd->user_data = m;
+ 	pending = hci_add_adv_monitor(hdev, m, &err);
++>>>>>>> b1810febda94 (Bluetooth: Fix crash in mgmt_add_adv_patterns_monitor_complete)
  	if (err) {
 -		if (err == -ENOSPC || err == -ENOMEM)
 +		if (err == -ENOSPC)
  			status = MGMT_STATUS_NO_RESOURCES;
 -		else if (err == -EINVAL)
 -			status = MGMT_STATUS_INVALID_PARAMS;
  		else
  			status = MGMT_STATUS_FAILED;
  
@@@ -4266,16 -4324,18 +4271,20 @@@
  
  	hci_dev_unlock(hdev);
  
++<<<<<<< HEAD
 +	rp.monitor_handle = cpu_to_le16(m->handle);
 +
 +	return mgmt_cmd_complete(sk, hdev->id, op,
 +				 MGMT_STATUS_SUCCESS, &rp, sizeof(rp));
++=======
+ 	return 0;
++>>>>>>> b1810febda94 (Bluetooth: Fix crash in mgmt_add_adv_patterns_monitor_complete)
  
  unlock:
 -	hci_free_adv_monitor(hdev, m);
  	hci_dev_unlock(hdev);
 +
 +failed:
 +	hci_free_adv_monitor(m);
  	return mgmt_cmd_status(sk, hdev->id, op, status);
  }
  
* Unmerged path net/bluetooth/mgmt.c
