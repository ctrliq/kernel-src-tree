lib/test_stackinit: Handle Clang auto-initialization pattern

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Kees Cook <keescook@chromium.org>
commit 8c30d32b1a326bb120635a8b4836ec61cba454fa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/8c30d32b.failed

While the gcc plugin for automatic stack variable initialization (i.e.
CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF_ALL) performs initialization with
0x00 bytes, the Clang automatic stack variable initialization (i.e.
CONFIG_INIT_STACK_ALL) uses various type-specific patterns that are
typically 0xAA. Therefore the stackinit selftest has been fixed to check
that bytes are no longer the test fill pattern of 0xFF (instead of looking
for bytes that have become 0x00). This retains the test coverage for the
0x00 pattern of the gcc plugin while adding coverage for the mostly 0xAA
pattern of Clang.

	Signed-off-by: Kees Cook <keescook@chromium.org>
	Acked-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
(cherry picked from commit 8c30d32b1a326bb120635a8b4836ec61cba454fa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/test_stackinit.c
* Unmerged path lib/test_stackinit.c
* Unmerged path lib/test_stackinit.c
