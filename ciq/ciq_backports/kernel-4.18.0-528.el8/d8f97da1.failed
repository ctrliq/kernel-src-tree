Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
commit d8f97da1b92d2fe89d51c673ecf80c4016119e5c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/d8f97da1.failed

Added regulators,GPIOs and changes required to power on/off wcn6750.
Added support for firmware download for wcn6750.

Changes done in detail:
1. Added regulators and corresponding current values.
2. Added sw_ctrl GPIO pin which is output from BT SoC and indicates
   status of clock supply to BT SoC.
3. Added inline function to check if the SoC type is wcn6750.
4. Modified the function qca_wcn3990_init() to support wcn6750 and
   renamed it to qca_regulator_init().

	Signed-off-by: Venkata Lakshmi Narayana Gubba <gubbaven@codeaurora.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit d8f97da1b92d2fe89d51c673ecf80c4016119e5c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btqca.c
#	drivers/bluetooth/btqca.h
#	drivers/bluetooth/hci_qca.c
diff --cc drivers/bluetooth/btqca.c
index 424366e6f3e3,95742494dc40..000000000000
--- a/drivers/bluetooth/btqca.c
+++ b/drivers/bluetooth/btqca.c
@@@ -540,6 -525,16 +540,19 @@@ int qca_uart_setup(struct hci_dev *hdev
  			    (soc_ver & 0x0000000f);
  		snprintf(config.fwname, sizeof(config.fwname),
  			 "qca/crbtfw%02x.tlv", rom_ver);
++<<<<<<< HEAD
++=======
+ 	} else if (soc_type == QCA_QCA6390) {
+ 		rom_ver = ((soc_ver & 0x00000f00) >> 0x04) |
+ 			    (soc_ver & 0x0000000f);
+ 		snprintf(config.fwname, sizeof(config.fwname),
+ 			 "qca/htbtfw%02x.tlv", rom_ver);
+ 	} else if (soc_type == QCA_WCN6750) {
+ 		rom_ver = ((soc_ver & 0x00000f00) >> 0x04) |
+ 			    (soc_ver & 0x0000000f);
+ 		snprintf(config.fwname, sizeof(config.fwname),
+ 			 "qca/msbtfw%02x.tlv", rom_ver);
++>>>>>>> d8f97da1b92d (Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750)
  	} else {
  		snprintf(config.fwname, sizeof(config.fwname),
  			 "qca/rampatch_%08x.bin", soc_ver);
@@@ -559,9 -554,21 +572,16 @@@
  	if (firmware_name)
  		snprintf(config.fwname, sizeof(config.fwname),
  			 "qca/%s", firmware_name);
 -	else if (qca_is_wcn399x(soc_type)) {
 -		if (ver.soc_id == QCA_WCN3991_SOC_ID) {
 -			snprintf(config.fwname, sizeof(config.fwname),
 -				 "qca/crnv%02xu.bin", rom_ver);
 -		} else {
 -			snprintf(config.fwname, sizeof(config.fwname),
 -				 "qca/crnv%02x.bin", rom_ver);
 -		}
 -	}
 -	else if (soc_type == QCA_QCA6390)
 +	else if (qca_is_wcn399x(soc_type))
  		snprintf(config.fwname, sizeof(config.fwname),
++<<<<<<< HEAD
 +			 "qca/crnv%02x.bin", rom_ver);
++=======
+ 			 "qca/htnv%02x.bin", rom_ver);
+ 	else if (soc_type == QCA_WCN6750)
+ 		snprintf(config.fwname, sizeof(config.fwname),
+ 			 "qca/msnv%02x.bin", rom_ver);
++>>>>>>> d8f97da1b92d (Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750)
  	else
  		snprintf(config.fwname, sizeof(config.fwname),
  			 "qca/nvm_%08x.bin", soc_ver);
diff --cc drivers/bluetooth/btqca.h
index 1cbbc00fca46,6ecd329bad41..000000000000
--- a/drivers/bluetooth/btqca.h
+++ b/drivers/bluetooth/btqca.h
@@@ -141,8 -140,10 +141,13 @@@ enum qca_btsoc_type 
  	QCA_AR3002,
  	QCA_ROME,
  	QCA_WCN3990,
 -	QCA_WCN3998,
  	QCA_WCN3991,
++<<<<<<< HEAD
 +	QCA_WCN3998,
++=======
+ 	QCA_QCA6390,
+ 	QCA_WCN6750,
++>>>>>>> d8f97da1b92d (Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750)
  };
  
  #if IS_ENABLED(CONFIG_BT_QCA)
diff --cc drivers/bluetooth/hci_qca.c
index a33d551040f0,53deea2eb7b4..000000000000
--- a/drivers/bluetooth/hci_qca.c
+++ b/drivers/bluetooth/hci_qca.c
@@@ -1696,7 -1715,8 +1722,12 @@@ static int qca_setup(struct hci_uart *h
  	set_bit(HCI_QUIRK_SIMULTANEOUS_DISCOVERY, &hdev->quirks);
  
  	bt_dev_info(hdev, "setting up %s",
++<<<<<<< HEAD
 +		qca_is_wcn399x(soc_type) ? "wcn399x" : "ROME");
++=======
+ 		qca_is_wcn399x(soc_type) ? "wcn399x" :
+ 		(soc_type == QCA_WCN6750) ? "wcn6750" : "ROME/QCA6390");
++>>>>>>> d8f97da1b92d (Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750)
  
  	qca->memdump_state = QCA_MEMDUMP_IDLE;
  
@@@ -1707,14 -1727,11 +1738,15 @@@ retry
  
  	clear_bit(QCA_SSR_TRIGGERED, &qca->flags);
  
- 	if (qca_is_wcn399x(soc_type)) {
+ 	if (qca_is_wcn399x(soc_type) ||
+ 	    qca_is_wcn6750(soc_type)) {
  		set_bit(HCI_QUIRK_USE_BDADDR_PROPERTY, &hdev->quirks);
  
 -		ret = qca_read_soc_version(hdev, &ver, soc_type);
 +		ret = qca_wcn3990_init(hu);
 +		if (ret)
 +			return ret;
 +
 +		ret = qca_read_soc_version(hdev, &soc_ver, soc_type);
  		if (ret)
  			goto out;
  	} else {
@@@ -1732,9 -1748,10 +1764,10 @@@
  		qca_baudrate = qca_get_baudrate_value(speed);
  	}
  
- 	if (!qca_is_wcn399x(soc_type)) {
+ 	if (!(qca_is_wcn399x(soc_type) ||
+ 	     qca_is_wcn6750(soc_type))) {
  		/* Get QCA version information */
 -		ret = qca_read_soc_version(hdev, &ver, soc_type);
 +		ret = qca_read_soc_version(hdev, &soc_ver, soc_type);
  		if (ret)
  			goto out;
  	}
@@@ -1835,6 -1852,28 +1868,31 @@@ static const struct qca_vreg_data qca_s
  	.num_vregs = 4,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct qca_device_data qca_soc_data_qca6390 = {
+ 	.soc_type = QCA_QCA6390,
+ 	.num_vregs = 0,
+ };
+ 
+ static const struct qca_device_data qca_soc_data_wcn6750 = {
+ 	.soc_type = QCA_WCN6750,
+ 	.vregs = (struct qca_vreg []) {
+ 		{ "vddio", 5000 },
+ 		{ "vddaon", 26000 },
+ 		{ "vddbtcxmx", 126000 },
+ 		{ "vddrfacmn", 12500 },
+ 		{ "vddrfa0p8", 102000 },
+ 		{ "vddrfa1p7", 302000 },
+ 		{ "vddrfa1p2", 257000 },
+ 		{ "vddrfa2p2", 1700000 },
+ 		{ "vddasd", 200 },
+ 	},
+ 	.num_vregs = 9,
+ 	.capabilities = QCA_CAP_WIDEBAND_SPEECH | QCA_CAP_VALID_LE_STATES,
+ };
+ 
++>>>>>>> d8f97da1b92d (Bluetooth: hci_qca: Add support for QTI Bluetooth chip wcn6750)
  static void qca_power_shutdown(struct hci_uart *hu)
  {
  	struct qca_serdev *qcadev;
* Unmerged path drivers/bluetooth/btqca.c
* Unmerged path drivers/bluetooth/btqca.h
* Unmerged path drivers/bluetooth/hci_qca.c
