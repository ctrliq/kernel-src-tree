lib: test_stackinit.c: XFAIL switch variable init tests

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Kees Cook <keescook@chromium.org>
commit 9cf016e6b49b53d6c15d4137c034178148149ef4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/9cf016e6.failed

The tests for initializing a variable defined between a switch statement's
test and its first "case" statement are currently not initialized in
Clang[1] nor the proposed auto-initialization feature in GCC.

We should retain the test (so that we can evaluate compiler fixes), but
mark it as an "expected fail".  The rest of the kernel source will be
adjusted to avoid this corner case.

Also disable -Wswitch-unreachable for the test so that the intentionally
broken code won't trigger warnings for GCC (nor future Clang) when
initialization happens this unhandled place.

[1] https://bugs.llvm.org/show_bug.cgi?id=44916

	Suggested-by: Alexander Potapenko <glider@google.com>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Jann Horn <jannh@google.com>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Link: http://lkml.kernel.org/r/202002191358.2897A07C6@keescook
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 9cf016e6b49b53d6c15d4137c034178148149ef4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/Makefile
#	lib/test_stackinit.c
diff --cc lib/Makefile
index 83b51bd6948f,93d05ff4f501..000000000000
--- a/lib/Makefile
+++ b/lib/Makefile
@@@ -90,34 -85,13 +90,41 @@@ obj-$(CONFIG_TEST_XARRAY) += test_xarra
  obj-$(CONFIG_TEST_PARMAN) += test_parman.o
  obj-$(CONFIG_TEST_KMOD) += test_kmod.o
  obj-$(CONFIG_TEST_DEBUG_VIRTUAL) += test_debug_virtual.o
 -obj-$(CONFIG_TEST_MEMCAT_P) += test_memcat_p.o
  obj-$(CONFIG_TEST_OBJAGG) += test_objagg.o
++<<<<<<< HEAD
++=======
+ CFLAGS_test_stackinit.o += $(call cc-disable-warning, switch-unreachable)
+ obj-$(CONFIG_TEST_STACKINIT) += test_stackinit.o
+ obj-$(CONFIG_TEST_BLACKHOLE_DEV) += test_blackhole_dev.o
+ obj-$(CONFIG_TEST_MEMINIT) += test_meminit.o
++>>>>>>> 9cf016e6b49b (lib: test_stackinit.c: XFAIL switch variable init tests)
  obj-$(CONFIG_TEST_LOCKUP) += test_lockup.o
 +obj-$(CONFIG_TEST_HMM) += test_hmm.o
 +
 +#
 +# CFLAGS for compiling floating point code inside the kernel. x86/Makefile turns
 +# off the generation of FPU/SSE* instructions for kernel proper but FPU_FLAGS
 +# get appended last to CFLAGS and thus override those previous compiler options.
 +#
 +FPU_CFLAGS := -msse -msse2
 +ifdef CONFIG_CC_IS_GCC
 +# Stack alignment mismatch, proceed with caution.
 +# GCC < 7.1 cannot compile code using `double` and -mpreferred-stack-boundary=3
 +# (8B stack alignment).
 +# See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53383
 +#
 +# The "-msse" in the first argument is there so that the
 +# -mpreferred-stack-boundary=3 build error:
 +#
 +#  -mpreferred-stack-boundary=3 is not between 4 and 12
 +#
 +# can be triggered. Otherwise gcc doesn't complain.
 +FPU_CFLAGS += -mhard-float
 +FPU_CFLAGS += $(call cc-option,-msse -mpreferred-stack-boundary=3,-mpreferred-stack-boundary=4)
 +endif
 +
 +obj-$(CONFIG_TEST_FPU) += test_fpu.o
 +CFLAGS_test_fpu.o += $(FPU_CFLAGS)
  
  obj-$(CONFIG_TEST_LIVEPATCH) += livepatch/
  
* Unmerged path lib/test_stackinit.c
* Unmerged path lib/Makefile
* Unmerged path lib/test_stackinit.c
