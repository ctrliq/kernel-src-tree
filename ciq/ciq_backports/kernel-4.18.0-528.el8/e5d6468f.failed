Bluetooth: hci_qca: Add support for Qualcomm Bluetooth SoC QCA6390

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Rocky Liao <rjliao@codeaurora.org>
commit e5d6468fe9d8dced9af0c548a359a7dbeb31c931
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/e5d6468f.failed

This patch adds support for QCA6390, including the devicetree and acpi
compatible hwid matching, and patch/nvm downloading.

	Signed-off-by: Rocky Liao <rjliao@codeaurora.org>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit e5d6468fe9d8dced9af0c548a359a7dbeb31c931)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/hci_qca.c
diff --cc drivers/bluetooth/hci_qca.c
index fde8c76c7d56,d0ac554584a4..000000000000
--- a/drivers/bluetooth/hci_qca.c
+++ b/drivers/bluetooth/hci_qca.c
@@@ -1702,10 -1597,8 +1703,10 @@@ static int qca_setup(struct hci_uart *h
  	set_bit(HCI_QUIRK_SIMULTANEOUS_DISCOVERY, &hdev->quirks);
  
  	bt_dev_info(hdev, "setting up %s",
- 		qca_is_wcn399x(soc_type) ? "wcn399x" : "ROME");
+ 		qca_is_wcn399x(soc_type) ? "wcn399x" : "ROME/QCA6390");
  
 +	qca->memdump_state = QCA_MEMDUMP_IDLE;
 +
  retry:
  	ret = qca_power_on(hdev);
  	if (ret)
@@@ -1882,11 -1769,8 +1888,11 @@@ static int qca_power_off(struct hci_de
  	struct qca_data *qca = hu->priv;
  	enum qca_btsoc_type soc_type = qca_soc_type(hu);
  
 +	hu->hdev->hw_error = NULL;
 +	hu->hdev->cmd_timeout = NULL;
 +
  	/* Stop sending shutdown command if soc crashes. */
- 	if (qca_is_wcn399x(soc_type)
+ 	if (soc_type != QCA_ROME
  		&& qca->memdump_state == QCA_MEMDUMP_IDLE) {
  		qca_send_pre_shutdown_cmd(hdev);
  		usleep_range(8000, 10000);
@@@ -2233,9 -2054,10 +2243,14 @@@ static int __maybe_unused qca_resume(st
  
  static SIMPLE_DEV_PM_OPS(qca_pm_ops, qca_suspend, qca_resume);
  
+ #ifdef CONFIG_OF
  static const struct of_device_id qca_bluetooth_of_match[] = {
  	{ .compatible = "qcom,qca6174-bt" },
++<<<<<<< HEAD
 +	{ .compatible = "qcom,qca9377-bt" },
++=======
+ 	{ .compatible = "qcom,qca6390-bt", .data = &qca_soc_data_qca6390},
++>>>>>>> e5d6468fe9d8 (Bluetooth: hci_qca: Add support for Qualcomm Bluetooth SoC QCA6390)
  	{ .compatible = "qcom,wcn3990-bt", .data = &qca_soc_data_wcn3990},
  	{ .compatible = "qcom,wcn3991-bt", .data = &qca_soc_data_wcn3991},
  	{ .compatible = "qcom,wcn3998-bt", .data = &qca_soc_data_wcn3998},
@@@ -2248,8 -2083,8 +2276,13 @@@ static struct serdev_device_driver qca_
  	.remove = qca_serdev_remove,
  	.driver = {
  		.name = "hci_uart_qca",
++<<<<<<< HEAD
 +		.of_match_table = qca_bluetooth_of_match,
 +		.shutdown = qca_serdev_shutdown,
++=======
+ 		.of_match_table = of_match_ptr(qca_bluetooth_of_match),
+ 		.acpi_match_table = ACPI_PTR(qca_bluetooth_acpi_match),
++>>>>>>> e5d6468fe9d8 (Bluetooth: hci_qca: Add support for Qualcomm Bluetooth SoC QCA6390)
  		.pm = &qca_pm_ops,
  	},
  };
diff --git a/drivers/bluetooth/btqca.c b/drivers/bluetooth/btqca.c
index de1f7b0bbc68..1b41bcfa5590 100644
--- a/drivers/bluetooth/btqca.c
+++ b/drivers/bluetooth/btqca.c
@@ -45,7 +45,7 @@ int qca_read_soc_version(struct hci_dev *hdev, u32 *soc_version,
 	 * VSE event. WCN3991 sends version command response as a payload to
 	 * command complete event.
 	 */
-	if (soc_type == QCA_WCN3991) {
+	if (soc_type >= QCA_WCN3991) {
 		event_type = 0;
 		rlen += 1;
 		rtype = EDL_PATCH_VER_REQ_CMD;
@@ -82,7 +82,7 @@ int qca_read_soc_version(struct hci_dev *hdev, u32 *soc_version,
 		goto out;
 	}
 
-	if (soc_type == QCA_WCN3991)
+	if (soc_type >= QCA_WCN3991)
 		memmove(&edl->data, &edl->data[1], sizeof(*ver));
 
 	ver = (struct qca_btsoc_version *)(edl->data);
@@ -281,7 +281,7 @@ static void qca_tlv_check_data(struct qca_fw_config *config,
 				tlv_nvm->data[0] |= 0x80;
 
 				/* UART Baud Rate */
-				if (soc_type == QCA_WCN3991)
+				if (soc_type >= QCA_WCN3991)
 					tlv_nvm->data[1] = nvm_baud_rate;
 				else
 					tlv_nvm->data[2] = nvm_baud_rate;
@@ -332,7 +332,7 @@ static int qca_tlv_send_segment(struct hci_dev *hdev, int seg_size,
 	 * VSE event. WCN3991 sends version command response as a payload to
 	 * command complete event.
 	 */
-	if (soc_type == QCA_WCN3991) {
+	if (soc_type >= QCA_WCN3991) {
 		event_type = 0;
 		rlen = sizeof(*edl);
 		rtype = EDL_PATCH_TLV_REQ_CMD;
@@ -365,7 +365,7 @@ static int qca_tlv_send_segment(struct hci_dev *hdev, int seg_size,
 		err = -EIO;
 	}
 
-	if (soc_type == QCA_WCN3991)
+	if (soc_type >= QCA_WCN3991)
 		goto out;
 
 	tlv_resp = (struct tlv_seg_resp *)(edl->data);
@@ -540,6 +540,11 @@ int qca_uart_setup(struct hci_dev *hdev, uint8_t baudrate,
 			    (soc_ver & 0x0000000f);
 		snprintf(config.fwname, sizeof(config.fwname),
 			 "qca/crbtfw%02x.tlv", rom_ver);
+	} else if (soc_type == QCA_QCA6390) {
+		rom_ver = ((soc_ver & 0x00000f00) >> 0x04) |
+			    (soc_ver & 0x0000000f);
+		snprintf(config.fwname, sizeof(config.fwname),
+			 "qca/htbtfw%02x.tlv", rom_ver);
 	} else {
 		snprintf(config.fwname, sizeof(config.fwname),
 			 "qca/rampatch_%08x.bin", soc_ver);
@@ -562,6 +567,9 @@ int qca_uart_setup(struct hci_dev *hdev, uint8_t baudrate,
 	else if (qca_is_wcn399x(soc_type))
 		snprintf(config.fwname, sizeof(config.fwname),
 			 "qca/crnv%02x.bin", rom_ver);
+	else if (soc_type == QCA_QCA6390)
+		snprintf(config.fwname, sizeof(config.fwname),
+			 "qca/htnv%02x.bin", rom_ver);
 	else
 		snprintf(config.fwname, sizeof(config.fwname),
 			 "qca/nvm_%08x.bin", soc_ver);
diff --git a/drivers/bluetooth/btqca.h b/drivers/bluetooth/btqca.h
index 1cbbc00fca46..1c0eb42ee84d 100644
--- a/drivers/bluetooth/btqca.h
+++ b/drivers/bluetooth/btqca.h
@@ -141,8 +141,9 @@ enum qca_btsoc_type {
 	QCA_AR3002,
 	QCA_ROME,
 	QCA_WCN3990,
-	QCA_WCN3991,
 	QCA_WCN3998,
+	QCA_WCN3991,
+	QCA_QCA6390,
 };
 
 #if IS_ENABLED(CONFIG_BT_QCA)
* Unmerged path drivers/bluetooth/hci_qca.c
