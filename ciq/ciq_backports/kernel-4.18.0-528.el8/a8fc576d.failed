lib/test_stackinit: Add assigned initializers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-528.el8
commit-author Kees Cook <keescook@chromium.org>
commit a8fc576d4af2f23a87a586424252df97f0ad0b06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-528.el8/a8fc576d.failed

Add whole-variable assignments of cast static initializers. These appear
to currently behave like the direct initializers, but best to check them
too. For example:

	struct test_big_hole var;
	var = (struct test_big_hole){
		.one = arg->one,
		.two= arg->two,
		.three = arg->three,
		.four = arg->four };

Additionally adds a test for whole-object assignment, which is expected
to fail since it usually falls back to a memcpy():

	var = *arg;

	Suggested-by: Arnd Bergmann <arnd@arndb.de>
Link: https://lore.kernel.org/lkml/CAK8P3a20SEoYCrp3jOK32oZc9OkiPv+1KTjNZ2GxLbHpY4WexQ@mail.gmail.com
	Cc: Ard Biesheuvel <ardb@kernel.org>
	Signed-off-by: Kees Cook <keescook@chromium.org>
Link: https://lore.kernel.org/r/20210723221933.3431999-4-keescook@chromium.org
(cherry picked from commit a8fc576d4af2f23a87a586424252df97f0ad0b06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/test_stackinit.c
* Unmerged path lib/test_stackinit.c
* Unmerged path lib/test_stackinit.c
