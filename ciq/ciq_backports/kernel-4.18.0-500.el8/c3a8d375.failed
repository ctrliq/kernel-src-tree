net: thunderbolt: Use kmap_local_page() instead of kmap_atomic()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-500.el8
commit-author Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
commit c3a8d375f3b996e6e9a32e2b8249b6d704b358e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-500.el8/c3a8d375.failed

kmap_atomic() is being deprecated in favor of kmap_local_page(). Replace
kmap_atomic() and kunmap_atomic() with kmap_local_page() and kunmap_local()
respectively.

Note that kmap_atomic() disables preemption and page-fault processing, but
kmap_local_page() doesn't. When converting uses of kmap_atomic(), one has
to check if the code being executed between the map/unmap implicitly
depends on page-faults and/or preemption being disabled. If yes, then code
to disable page-faults and/or preemption should also be added for
functional correctness. That however doesn't appear to be the case here,
so just kmap_local_page() is used.

Also note that the page being mapped is not allocated by the driver, and so
the driver doesn't know if the page is in normal memory. This is the reason
kmap_local_page() is used as opposed to page_address().

I don't have hardware, so this change has only been compile tested.

	Cc: Michael Jamet <michael.jamet@intel.com>
	Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
	Cc: Yehezkel Bernat <YehezkelShB@gmail.com>
	Cc: Ira Weiny <ira.weiny@intel.com>
	Cc: Fabio M. De Francesco <fmdefrancesco@gmail.com>
	Signed-off-by: Anirudh Venkataramanan <anirudh.venkataramanan@intel.com>
	Acked-by: Mika Westerberg <mika.westerberg@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c3a8d375f3b996e6e9a32e2b8249b6d704b358e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/thunderbolt.c
diff --cc drivers/net/thunderbolt.c
index 01dd93e5ada4,b20cd370b7f2..000000000000
--- a/drivers/net/thunderbolt.c
+++ b/drivers/net/thunderbolt.c
@@@ -1052,7 -1051,7 +1052,11 @@@ static void *tbnet_kmap_frag(struct sk_
  	const skb_frag_t *frag = &skb_shinfo(skb)->frags[frag_num];
  
  	*len = skb_frag_size(frag);
++<<<<<<< HEAD
 +	return kmap_atomic(skb_frag_page(frag)) + frag->page_offset;
++=======
+ 	return kmap_local_page(skb_frag_page(frag)) + skb_frag_off(frag);
++>>>>>>> c3a8d375f3b9 (net: thunderbolt: Use kmap_local_page() instead of kmap_atomic())
  }
  
  static netdev_tx_t tbnet_start_xmit(struct sk_buff *skb,
* Unmerged path drivers/net/thunderbolt.c
