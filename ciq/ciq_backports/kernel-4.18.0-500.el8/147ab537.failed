usb: typec: Don't try to register component master without components

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-500.el8
commit-author Heikki Krogerus <heikki.krogerus@linux.intel.com>
commit 147ab5376f18045da9f22a8262185707745bbf77
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-500.el8/147ab537.failed

This fixes NULL pointer dereference that happens if
component master is registered with empty component match
list.

Fixes: 730b49aac426 ("usb: typec: port-mapper: Convert to the component framework")
	Reported-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
	Tested-by: John Stultz <john.stultz@linaro.org>
	Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
Link: https://lore.kernel.org/r/20220124090228.41396-3-heikki.krogerus@linux.intel.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 147ab5376f18045da9f22a8262185707745bbf77)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/typec/port-mapper.c
diff --cc drivers/usb/typec/port-mapper.c
index 9b0991bdf391,a7d507802509..000000000000
--- a/drivers/usb/typec/port-mapper.c
+++ b/drivers/usb/typec/port-mapper.c
@@@ -247,17 -54,27 +247,23 @@@ static int each_port(struct device *por
  
  int typec_link_ports(struct typec_port *con)
  {
 -	struct each_port_arg arg = { .port = con, .match = NULL };
 +	int ret = 0;
  
 -	if (!has_acpi_companion(&con->dev))
 +	con->pld = get_pld(&con->dev);
 +	if (!con->pld)
  		return 0;
  
++<<<<<<< HEAD
 +	ret = usb_for_each_port(&con->dev, each_port);
 +	if (ret)
 +		typec_unlink_ports(con);
++=======
+ 	bus_for_each_dev(&acpi_bus_type, NULL, &arg, typec_port_match);
+ 	if (!arg.match)
+ 		return 0;
++>>>>>>> 147ab5376f18 (usb: typec: Don't try to register component master without components)
  
 -	/*
 -	 * REVISIT: Now each connector can have only a single component master.
 -	 * So far only the USB ports connected to the USB Type-C connector share
 -	 * the _PLD with it, but if there one day is something else (like maybe
 -	 * the DisplayPort ACPI device object) that also shares the _PLD with
 -	 * the connector, every one of those needs to have its own component
 -	 * master, because each different type of component needs to be bind to
 -	 * the connector independently of the other components. That requires
 -	 * improvements to the component framework. Right now you can only have
 -	 * one master per device.
 -	 */
 -	return component_master_add_with_match(&con->dev, &typec_aggregate_ops, arg.match);
 +	return ret;
  }
  
  void typec_unlink_ports(struct typec_port *con)
* Unmerged path drivers/usb/typec/port-mapper.c
