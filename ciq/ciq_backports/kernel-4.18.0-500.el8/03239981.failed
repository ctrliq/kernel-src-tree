usb: typec: Add partner PD object wrapper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-500.el8
commit-author Prashant Malani <pmalani@chromium.org>
commit 032399819dd5f135e6ffe446c8e97ab54eec3464
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-500.el8/03239981.failed

Some port drivers may want to set a Type-C partner as a parent for a
USB Power Delivery object, but the Type-C partner struct isn't exposed
outside of the Type-C class driver. Add a wrapper to
usb_power_delivery_register() which sets the provided Type-C partner
as a parent to the USB PD object. This helps to avoid exposing the
Type-C partner's device struct unnecessarily.

	Cc: Benson Leung <bleung@chromium.org>
	Suggested-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Signed-off-by: Prashant Malani <pmalani@chromium.org>
Link: https://lore.kernel.org/r/20221122220538.2991775-2-pmalani@chromium.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 032399819dd5f135e6ffe446c8e97ab54eec3464)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/usb/typec.h
diff --cc include/linux/usb/typec.h
index 814f0e5b0971,8fa781207970..000000000000
--- a/include/linux/usb/typec.h
+++ b/include/linux/usb/typec.h
@@@ -324,17 -328,8 +325,22 @@@ void typec_partner_set_svdm_version(str
  				    enum usb_pd_svdm_ver svdm_version);
  int typec_get_negotiated_svdm_version(struct typec_port *port);
  
++<<<<<<< HEAD
 +#if IS_REACHABLE(CONFIG_TYPEC)
 +int typec_link_port(struct device *port);
 +void typec_unlink_port(struct device *port);
 +#else
 +static inline int typec_link_port(struct device *port)
 +{
 +	return 0;
 +}
 +
 +static inline void typec_unlink_port(struct device *port) { }
 +#endif
++=======
+ struct usb_power_delivery *typec_partner_usb_power_delivery_register(struct typec_partner *partner,
+ 							struct usb_power_delivery_desc *desc);
++>>>>>>> 032399819dd5 (usb: typec: Add partner PD object wrapper)
  
  int typec_port_set_usb_power_delivery(struct typec_port *port, struct usb_power_delivery *pd);
  int typec_partner_set_usb_power_delivery(struct typec_partner *partner,
diff --git a/drivers/usb/typec/class.c b/drivers/usb/typec/class.c
index d7f7679160ba..bfaccfd1370e 100644
--- a/drivers/usb/typec/class.c
+++ b/drivers/usb/typec/class.c
@@ -821,6 +821,25 @@ void typec_partner_set_svdm_version(struct typec_partner *partner,
 }
 EXPORT_SYMBOL_GPL(typec_partner_set_svdm_version);
 
+/**
+ * typec_partner_usb_power_delivery_register - Register Type-C partner USB Power Delivery Support
+ * @partner: Type-C partner device.
+ * @desc: Description of the USB PD contract.
+ *
+ * This routine is a wrapper around usb_power_delivery_register(). It registers
+ * USB Power Delivery Capabilities for a Type-C partner device. Specifically,
+ * it sets the Type-C partner device as a parent for the resulting USB Power Delivery object.
+ *
+ * Returns handle to struct usb_power_delivery or ERR_PTR.
+ */
+struct usb_power_delivery *
+typec_partner_usb_power_delivery_register(struct typec_partner *partner,
+					  struct usb_power_delivery_desc *desc)
+{
+	return usb_power_delivery_register(&partner->dev, desc);
+}
+EXPORT_SYMBOL_GPL(typec_partner_usb_power_delivery_register);
+
 /**
  * typec_register_partner - Register a USB Type-C Partner
  * @port: The USB Type-C Port the partner is connected to
* Unmerged path include/linux/usb/typec.h
