security: call security_sctp_assoc_request in sctp_sf_do_5_1D_ce

jira NONE_AUTOMATION
Rebuild_History Non-Buildable kernel-rt-4.18.0-348.20.1.rt7.150.el8_5
commit-author Xin Long <lucien.xin@gmail.com>
commit e215dab1c49070cd75620afd801f777207a5b65c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-348.20.1.rt7.150.el8_5/e215dab1.failed

The asoc created when receives the INIT chunk is a temporary one, it
will be deleted after INIT_ACK chunk is replied. So for the real asoc
created in sctp_sf_do_5_1D_ce() when the COOKIE_ECHO chunk is received,
security_sctp_assoc_request() should also be called.

v1->v2:
  - fix some typo and grammar errors, noticed by Ondrej.

Fixes: 72e89f50084c ("security: Add support for SCTP security hooks")
	Reported-by: Prashanth Prahlad <pprahlad@redhat.com>
	Reviewed-by: Richard Haines <richard_c_haines@btinternet.com>
	Tested-by: Richard Haines <richard_c_haines@btinternet.com>
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e215dab1c49070cd75620afd801f777207a5b65c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/sm_statefuns.c
diff --cc net/sctp/sm_statefuns.c
index 1031b88f0c6e,b818532c3fc2..000000000000
--- a/net/sctp/sm_statefuns.c
+++ b/net/sctp/sm_statefuns.c
@@@ -785,6 -781,10 +785,13 @@@ enum sctp_disposition sctp_sf_do_5_1D_c
  		}
  	}
  
++<<<<<<< HEAD
++=======
+ 	if (security_sctp_assoc_request(new_asoc, chunk->skb)) {
+ 		sctp_association_free(new_asoc);
+ 		return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands);
+ 	}
++>>>>>>> e215dab1c490 (security: call security_sctp_assoc_request in sctp_sf_do_5_1D_ce)
  
  	/* Delay state machine commands until later.
  	 *
diff --git a/Documentation/security/SCTP.rst b/Documentation/security/SCTP.rst
index d903eb97fcf3..b3fc83049d7f 100644
--- a/Documentation/security/SCTP.rst
+++ b/Documentation/security/SCTP.rst
@@ -151,9 +151,9 @@ establishing an association.
          INIT --------------------------------------------->
                                                    sctp_sf_do_5_1B_init()
                                                  Respond to an INIT chunk.
-                                             SCTP peer endpoint "A" is
-                                             asking for an association. Call
-                                             security_sctp_assoc_request()
+                                             SCTP peer endpoint "A" is asking
+                                             for a temporary association.
+                                             Call security_sctp_assoc_request()
                                              to set the peer label if first
                                              association.
                                              If not first association, check
@@ -163,9 +163,12 @@ establishing an association.
           |                                       discard the packet.
           |
     COOKIE ECHO ------------------------------------------>
-                                                          |
-                                                          |
-                                                          |
+                                                  sctp_sf_do_5_1D_ce()
+                                             Respond to an COOKIE ECHO chunk.
+                                             Confirm the cookie and create a
+                                             permanent association.
+                                             Call security_sctp_assoc_request() to
+                                             do the same as for INIT chunk Response.
           <------------------------------------------- COOKIE ACK
           |                                               |
     sctp_sf_do_5_1E_ca                                    |
* Unmerged path net/sctp/sm_statefuns.c
