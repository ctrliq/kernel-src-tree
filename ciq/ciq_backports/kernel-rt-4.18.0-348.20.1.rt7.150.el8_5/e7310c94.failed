security: implement sctp_assoc_established hook in selinux

jira NONE_AUTOMATION
Rebuild_History Non-Buildable kernel-rt-4.18.0-348.20.1.rt7.150.el8_5
commit-author Xin Long <lucien.xin@gmail.com>
commit e7310c94024cdf099c0d29e6903dd6fe9205bb60
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-348.20.1.rt7.150.el8_5/e7310c94.failed

Different from selinux_inet_conn_established(), it also gives the
secid to asoc->peer_secid in selinux_sctp_assoc_established(),
as one UDP-type socket may have more than one asocs.

Note that peer_secid in asoc will save the peer secid for this
asoc connection, and peer_sid in sksec will just keep the peer
secid for the latest connection. So the right use should be do
peeloff for UDP-type socket if there will be multiple asocs in
one socket, so that the peeloff socket has the right label for
its asoc.

v1->v2:
  - call selinux_inet_conn_established() to reduce some code
    duplication in selinux_sctp_assoc_established(), as Ondrej
    suggested.
  - when doing peeloff, it calls sock_create() where it actually
    gets secid for socket from socket_sockcreate_sid(). So reuse
    SECSID_WILD to ensure the peeloff socket keeps using that
    secid after calling selinux_sctp_sk_clone() for client side.

Fixes: 72e89f50084c ("security: Add support for SCTP security hooks")
	Reported-by: Prashanth Prahlad <pprahlad@redhat.com>
	Reviewed-by: Richard Haines <richard_c_haines@btinternet.com>
	Tested-by: Richard Haines <richard_c_haines@btinternet.com>
	Signed-off-by: Xin Long <lucien.xin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit e7310c94024cdf099c0d29e6903dd6fe9205bb60)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	security/selinux/hooks.c
diff --cc security/selinux/hooks.c
index 97342403aade,5e5215fe2e83..000000000000
--- a/security/selinux/hooks.c
+++ b/security/selinux/hooks.c
@@@ -5448,8 -5502,9 +5448,14 @@@ static void selinux_sctp_sk_clone(struc
  	if (!selinux_policycap_extsockclass())
  		return selinux_sk_clone_security(sk, newsk);
  
++<<<<<<< HEAD
 +	newsksec->sid = ep->secid;
 +	newsksec->peer_sid = ep->peer_secid;
++=======
+ 	if (asoc->secid != SECSID_WILD)
+ 		newsksec->sid = asoc->secid;
+ 	newsksec->peer_sid = asoc->peer_secid;
++>>>>>>> e7310c94024c (security: implement sctp_assoc_established hook in selinux)
  	newsksec->sclass = sksec->sclass;
  	selinux_netlbl_sctp_sk_clone(sk, newsk);
  }
* Unmerged path security/selinux/hooks.c
