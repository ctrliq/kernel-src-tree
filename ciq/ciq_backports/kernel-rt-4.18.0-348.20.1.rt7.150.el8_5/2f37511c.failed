mm/hugetlb: narrow the hugetlb_lock protection area during preparing huge page

jira NONE_AUTOMATION
Rebuild_History Non-Buildable kernel-rt-4.18.0-348.20.1.rt7.150.el8_5
commit-author Wei Yang <richard.weiyang@linux.alibaba.com>
commit 2f37511cb6c2a59b67f8f13ad206a0298992eaf5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-348.20.1.rt7.150.el8_5/2f37511c.failed

set_hugetlb_cgroup_[rsvd] just manipulate page local data, which is not
necessary to be protected by hugetlb_lock.

Let's take this out.

	Signed-off-by: Wei Yang <richard.weiyang@linux.alibaba.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Baoquan He <bhe@redhat.com>
	Reviewed-by: Mike Kravetz <mike.kravetz@oracle.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
Link: https://lkml.kernel.org/r/20200831022351.20916-7-richard.weiyang@linux.alibaba.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 2f37511cb6c2a59b67f8f13ad206a0298992eaf5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/hugetlb.c
diff --cc mm/hugetlb.c
index 647e7fd2ee4c,a5068a38d8af..000000000000
--- a/mm/hugetlb.c
+++ b/mm/hugetlb.c
@@@ -1483,10 -1504,9 +1483,14 @@@ static void prep_new_huge_page(struct h
  {
  	INIT_LIST_HEAD(&page->lru);
  	set_compound_page_dtor(page, HUGETLB_PAGE_DTOR);
++<<<<<<< HEAD
 +	hugetlb_set_page_subpool(page, NULL);
 +	spin_lock(&hugetlb_lock);
++=======
++>>>>>>> 2f37511cb6c2 (mm/hugetlb: narrow the hugetlb_lock protection area during preparing huge page)
  	set_hugetlb_cgroup(page, NULL);
  	set_hugetlb_cgroup_rsvd(page, NULL);
+ 	spin_lock(&hugetlb_lock);
  	h->nr_huge_pages++;
  	h->nr_huge_pages_node[nid]++;
  	spin_unlock(&hugetlb_lock);
* Unmerged path mm/hugetlb.c
