x86/hyperv: Fix undefined reference to isolation_type_en_snp without CONFIG_HYPERV

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-536.el8
commit-author Dexuan Cui <decui@microsoft.com>
commit 86e619c922e616d8780833562a14a5bda329f0c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-536.el8/86e619c9.failed

When CONFIG_HYPERV is not set, arch/x86/hyperv/ivm.c is not built (see
arch/x86/Kbuild), so 'isolation_type_en_snp' in the ivm.c is not defined,
and this failure happens:

ld: arch/x86/kernel/cpu/mshyperv.o: in function `ms_hyperv_init_platform':
arch/x86/kernel/cpu/mshyperv.c:417: undefined reference to `isolation_type_en_snp'

Fix the failure by testing hv_get_isolation_type() and
ms_hyperv.paravisor_present for a fully enlightened SNP VM: when
CONFIG_HYPERV is not set, hv_get_isolation_type() is defined as a
static inline function that always returns HV_ISOLATION_TYPE_NONE
(see include/asm-generic/mshyperv.h), so the compiler won't generate any
code for the ms_hyperv.paravisor_present and static_branch_enable().

	Reported-by: Tom Lendacky <thomas.lendacky@amd.com>
Closes: https://lore.kernel.org/lkml/b4979997-23b9-0c43-574e-e4a3506500ff@amd.com/
Fixes: d6e2d6524437 ("x86/hyperv: Add sev-snp enlightened guest static key")
	Signed-off-by: Dexuan Cui <decui@microsoft.com>
	Signed-off-by: Wei Liu <wei.liu@kernel.org>
Link: https://lore.kernel.org/r/20230823032008.18186-1-decui@microsoft.com
(cherry picked from commit 86e619c922e616d8780833562a14a5bda329f0c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/mshyperv.c
diff --cc arch/x86/kernel/cpu/mshyperv.c
index 1189865ffc68,c8d3ca2b0e0e..000000000000
--- a/arch/x86/kernel/cpu/mshyperv.c
+++ b/arch/x86/kernel/cpu/mshyperv.c
@@@ -385,16 -412,12 +385,25 @@@ static void __init ms_hyperv_init_platf
  		pr_info("Hyper-V: Isolation Config: Group A 0x%x, Group B 0x%x\n",
  			ms_hyperv.isolation_config_a, ms_hyperv.isolation_config_b);
  
++<<<<<<< HEAD
 +		if (hv_get_isolation_type() == HV_ISOLATION_TYPE_SNP) {
 +			static_branch_enable(&isolation_type_snp);
 +#ifdef CONFIG_SWIOTLB
 +			swiotlb_unencrypted_base = ms_hyperv.shared_gpa_boundary;
 +#endif
 +		}
 +		/* Isolation VMs are unenlightened SEV-based VMs, thus this check: */
 +		if (IS_ENABLED(CONFIG_AMD_MEM_ENCRYPT)) {
 +			if (hv_get_isolation_type() != HV_ISOLATION_TYPE_NONE)
 +				cc_set_vendor(CC_VENDOR_HYPERV);
++=======
+ 
+ 		if (hv_get_isolation_type() == HV_ISOLATION_TYPE_SNP) {
+ 			if (ms_hyperv.paravisor_present)
+ 				static_branch_enable(&isolation_type_snp);
+ 			else
+ 				static_branch_enable(&isolation_type_en_snp);
++>>>>>>> 86e619c922e6 (x86/hyperv: Fix undefined reference to isolation_type_en_snp without CONFIG_HYPERV)
  		}
  	}
  
* Unmerged path arch/x86/kernel/cpu/mshyperv.c
