perf: Fix perf_event_validate_size()

jira LE-1907
cve CVE-2023-6931
Rebuild_History Non-Buildable kernel-4.18.0-536.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 382c27f4ed28f803b1f1473ac2d8db0afc795a1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-536.el8/382c27f4.failed

Budimir noted that perf_event_validate_size() only checks the size of
the newly added event, even though the sizes of all existing events
can also change due to not all events having the same read_format.

When we attach the new event, perf_group_attach(), we do re-compute
the size for all events.

Fixes: a723968c0ed3 ("perf: Fix u16 overflows")
	Reported-by: Budimir Markovic <markovicbudimir@gmail.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
(cherry picked from commit 382c27f4ed28f803b1f1473ac2d8db0afc795a1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/events/core.c
diff --cc kernel/events/core.c
index 0e236455b9e0,c9d123e13b57..000000000000
--- a/kernel/events/core.c
+++ b/kernel/events/core.c
@@@ -1856,16 -1820,19 +1856,23 @@@ static int __perf_event_read_size(u64 r
  	int size = 0;
  	int nr = 1;
  
- 	if (event->attr.read_format & PERF_FORMAT_TOTAL_TIME_ENABLED)
+ 	if (read_format & PERF_FORMAT_TOTAL_TIME_ENABLED)
  		size += sizeof(u64);
  
- 	if (event->attr.read_format & PERF_FORMAT_TOTAL_TIME_RUNNING)
+ 	if (read_format & PERF_FORMAT_TOTAL_TIME_RUNNING)
  		size += sizeof(u64);
  
- 	if (event->attr.read_format & PERF_FORMAT_ID)
+ 	if (read_format & PERF_FORMAT_ID)
  		entry += sizeof(u64);
  
++<<<<<<< HEAD
 +	if (event->attr.read_format & PERF_FORMAT_GROUP) {
++=======
+ 	if (read_format & PERF_FORMAT_LOST)
+ 		entry += sizeof(u64);
+ 
+ 	if (read_format & PERF_FORMAT_GROUP) {
++>>>>>>> 382c27f4ed28 (perf: Fix perf_event_validate_size())
  		nr += nr_siblings;
  		size += sizeof(u64);
  	}
* Unmerged path kernel/events/core.c
