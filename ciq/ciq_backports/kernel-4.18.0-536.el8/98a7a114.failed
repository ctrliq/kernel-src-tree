ASoC: intel: sof_sdw: Clean up DAI link counting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-536.el8
commit-author Charles Keepax <ckeepax@opensource.cirrus.com>
commit 98a7a1143f83289a84cba6dab60a4531cc4dfae2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-536.el8/98a7a114.failed

The counting of each of the types of DAI link is a bit messy with things
added onto an intermediate variable as it goes along. Re-order things a
little to keep the order consistent with the rest of the function and
simplify the process down to a variable for each type of DAI and then
sum them at the end.

	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
	Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20230731214257.444605-22-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 98a7a1143f83289a84cba6dab60a4531cc4dfae2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/boards/sof_sdw.c
diff --cc sound/soc/intel/boards/sof_sdw.c
index 1d39756d780e,dc6ea21b3341..000000000000
--- a/sound/soc/intel/boards/sof_sdw.c
+++ b/sound/soc/intel/boards/sof_sdw.c
@@@ -1548,11 -1580,11 +1548,17 @@@ static int sof_card_codec_conf_alloc(st
  	return 0;
  }
  
 -static int sof_card_dai_links_create(struct snd_soc_card *card)
 +static int sof_card_dai_links_create(struct device *dev,
 +				     struct snd_soc_acpi_mach *mach,
 +				     struct snd_soc_card *card)
  {
++<<<<<<< HEAD
 +	int ssp_num, sdw_be_num = 0, hdmi_num = 0, dmic_num;
++=======
+ 	struct device *dev = card->dev;
+ 	struct snd_soc_acpi_mach *mach = dev_get_platdata(card->dev);
+ 	int sdw_be_num = 0, ssp_num = 0, dmic_num = 0, hdmi_num = 0, bt_num = 0;
++>>>>>>> 98a7a1143f83 (ASoC: intel: sof_sdw: Clean up DAI link counting)
  	struct mc_private *ctx = snd_soc_card_get_drvdata(card);
  	struct snd_soc_dai_link_component *idisp_components;
  	struct snd_soc_dai_link_component *ssp_components;
@@@ -1584,20 -1613,12 +1587,17 @@@
  	if (ret < 0)
  		return ret;
  
++<<<<<<< HEAD
 +	/* reset amp_num to ensure amp_num++ starts from 0 in each probe */
 +	for (i = 0; i < ARRAY_SIZE(codec_info_list); i++)
 +		codec_info_list[i].amp_num = 0;
- 
- 	if (mach_params->codec_mask & IDISP_CODEC_MASK) {
- 		ctx->idisp_codec = true;
- 
- 		if (sof_sdw_quirk & SOF_SDW_TGL_HDMI)
- 			hdmi_num = SOF_TGL_HDMI_COUNT;
- 		else
- 			hdmi_num = SOF_PRE_TGL_HDMI_COUNT;
++=======
+ 	ret = get_sdw_dailink_info(dev, adr_link, &sdw_be_num, &sdw_cpu_dai_num);
+ 	if (ret < 0) {
+ 		dev_err(dev, "failed to get sdw link info %d\n", ret);
+ 		return ret;
  	}
  
- 	ssp_mask = SOF_SSP_GET_PORT(sof_sdw_quirk);
  	/*
  	 * on generic tgl platform, I2S or sdw mode is supported
  	 * based on board rework. A ACPI device is registered in
@@@ -1605,36 -1626,40 +1605,53 @@@
  	 * Here check ACPI ID to confirm I2S is supported.
  	 */
  	ssp_codec_index = find_codec_info_acpi(mach->id);
- 	ssp_num = ssp_codec_index >= 0 ? hweight_long(ssp_mask) : 0;
- 	comp_num = hdmi_num + ssp_num;
+ 	if (ssp_codec_index >= 0) {
+ 		ssp_mask = SOF_SSP_GET_PORT(sof_sdw_quirk);
+ 		ssp_num = hweight_long(ssp_mask);
+ 	}
++>>>>>>> 98a7a1143f83 (ASoC: intel: sof_sdw: Clean up DAI link counting)
  
- 	ret = get_sdw_dailink_info(dev, mach_params->links,
- 				   &sdw_be_num, &sdw_cpu_dai_num);
- 	if (ret < 0) {
- 		dev_err(dev, "failed to get sdw link info %d", ret);
- 		return ret;
+ 	if (mach_params->codec_mask & IDISP_CODEC_MASK) {
+ 		ctx->idisp_codec = true;
+ 
+ 		if (sof_sdw_quirk & SOF_SDW_TGL_HDMI)
+ 			hdmi_num = SOF_TGL_HDMI_COUNT;
+ 		else
+ 			hdmi_num = SOF_PRE_TGL_HDMI_COUNT;
  	}
  
  	/* enable dmic01 & dmic16k */
- 	dmic_num = (sof_sdw_quirk & SOF_SDW_PCH_DMIC || mach_params->dmic_num) ? 2 : 0;
- 	comp_num += dmic_num;
+ 	if (sof_sdw_quirk & SOF_SDW_PCH_DMIC || mach_params->dmic_num)
+ 		dmic_num = 2;
  
  	if (sof_sdw_quirk & SOF_SSP_BT_OFFLOAD_PRESENT)
- 		comp_num++;
+ 		bt_num = 1;
  
- 	dev_dbg(dev, "sdw %d, ssp %d, dmic %d, hdmi %d", sdw_be_num, ssp_num,
- 		dmic_num, ctx->idisp_codec ? hdmi_num : 0);
+ 	dev_dbg(dev, "sdw %d, ssp %d, dmic %d, hdmi %d, bt: %d\n",
+ 		sdw_be_num, ssp_num, dmic_num, hdmi_num, bt_num);
  
  	/* allocate BE dailinks */
++<<<<<<< HEAD
 +	num_links = comp_num + sdw_be_num;
 +	links = devm_kcalloc(dev, num_links, sizeof(*links), GFP_KERNEL);
 +
 +	/* allocated CPU DAIs */
 +	total_cpu_dai_num = comp_num + sdw_cpu_dai_num;
 +	cpus = devm_kcalloc(dev, total_cpu_dai_num, sizeof(*cpus),
 +			    GFP_KERNEL);
 +
 +	if (!links || !cpus)
++=======
+ 	num_links = sdw_be_num + ssp_num + dmic_num + hdmi_num + bt_num;
+ 	dai_links = devm_kcalloc(dev, num_links, sizeof(*dai_links), GFP_KERNEL);
+ 	if (!dai_links)
+ 		return -ENOMEM;
+ 
+ 	/* allocated CPU DAIs */
+ 	total_cpu_dai_num = sdw_cpu_dai_num + ssp_num + dmic_num + hdmi_num + bt_num;
+ 	cpus = devm_kcalloc(dev, total_cpu_dai_num, sizeof(*cpus), GFP_KERNEL);
+ 	if (!cpus)
++>>>>>>> 98a7a1143f83 (ASoC: intel: sof_sdw: Clean up DAI link counting)
  		return -ENOMEM;
  
  	/* SDW */
* Unmerged path sound/soc/intel/boards/sof_sdw.c
