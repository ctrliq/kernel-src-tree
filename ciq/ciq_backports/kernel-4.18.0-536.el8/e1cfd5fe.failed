ASoC: intel: sof_sdw: Check link mask validity in get_dailink_info

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-536.el8
commit-author Charles Keepax <ckeepax@opensource.cirrus.com>
commit e1cfd5fef3d6eaf0ddbc54da70ddf54462b23592
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-536.el8/e1cfd5fe.failed

As get_dailink_info spins through all the links anyway simply check the
link masks there. This saves an extra check and means the code will
fail earlier if the mask is invalid.

	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
	Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
Link: https://lore.kernel.org/r/20230808132013.889419-3-ckeepax@opensource.cirrus.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit e1cfd5fef3d6eaf0ddbc54da70ddf54462b23592)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/boards/sof_sdw.c
diff --cc sound/soc/intel/boards/sof_sdw.c
index 5f6ef7f8be22,268629d5505c..000000000000
--- a/sound/soc/intel/boards/sof_sdw.c
+++ b/sound/soc/intel/boards/sof_sdw.c
@@@ -1024,8 -1053,12 +1024,17 @@@ static int get_sdw_dailink_info(struct 
  		int stream;
  		u64 adr;
  
++<<<<<<< HEAD
 +		for (i = 0; i < link->num_adr; i++) {
 +			adr = link->adr_d[i].adr;
++=======
+ 		/* make sure the link mask has a single bit set */
+ 		if (!is_power_of_2(adr_link->mask))
+ 			return -EINVAL;
+ 
+ 		for (i = 0; i < adr_link->num_adr; i++) {
+ 			adr = adr_link->adr_d[i].adr;
++>>>>>>> e1cfd5fef3d6 (ASoC: intel: sof_sdw: Check link mask validity in get_dailink_info)
  			codec_index = find_codec_info_part(adr);
  			if (codec_index < 0)
  				return codec_index;
* Unmerged path sound/soc/intel/boards/sof_sdw.c
