virtio-net: fix for skb_over_panic inside big mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-531.el8
commit-author Xuan Zhuo <xuanzhuo@linux.alibaba.com>
commit 1a8024239dacf53fcf39c0f07fbf2712af22864f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-531.el8/1a802423.failed

In virtio-net's large packet mode, there is a hole in the space behind
buf.

    hdr_padded_len - hdr_len

We must take this into account when calculating tailroom.

[   44.544385] skb_put.cold (net/core/skbuff.c:5254 (discriminator 1) net/core/skbuff.c:5252 (discriminator 1))
[   44.544864] page_to_skb (drivers/net/virtio_net.c:485) [   44.545361] receive_buf (drivers/net/virtio_net.c:849 drivers/net/virtio_net.c:1131)
[   44.545870] ? netif_receive_skb_list_internal (net/core/dev.c:5714)
[   44.546628] ? dev_gro_receive (net/core/dev.c:6103)
[   44.547135] ? napi_complete_done (./include/linux/list.h:35 net/core/dev.c:5867 net/core/dev.c:5862 net/core/dev.c:6565)
[   44.547672] virtnet_poll (drivers/net/virtio_net.c:1427 drivers/net/virtio_net.c:1525)
[   44.548251] __napi_poll (net/core/dev.c:6985)
[   44.548744] net_rx_action (net/core/dev.c:7054 net/core/dev.c:7139)
[   44.549264] __do_softirq (./arch/x86/include/asm/jump_label.h:19 ./include/linux/jump_label.h:200 ./include/trace/events/irq.h:142 kernel/softirq.c:560)
[   44.549762] irq_exit_rcu (kernel/softirq.c:433 kernel/softirq.c:637 kernel/softirq.c:649)
[   44.551384] common_interrupt (arch/x86/kernel/irq.c:240 (discriminator 13))
[   44.551991] ? asm_common_interrupt (./arch/x86/include/asm/idtentry.h:638)
[   44.552654] asm_common_interrupt (./arch/x86/include/asm/idtentry.h:638)

Fixes: fb32856b16ad ("virtio-net: page_to_skb() use build_skb when there's sufficient tailroom")
	Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
	Reported-by: Corentin Noël <corentin.noel@collabora.com>
	Tested-by: Corentin Noël <corentin.noel@collabora.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1a8024239dacf53fcf39c0f07fbf2712af22864f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index 9f2bd9359d3a,78a01c71a17c..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -405,21 -398,16 +405,27 @@@ static struct sk_buff *page_to_skb(stru
  	else
  		hdr_padded_len = sizeof(struct padded_vnet_hdr);
  
 -	/* If headroom is not 0, there is an offset between the beginning of the
 +	/* If whole_page, there is an offset between the beginning of the
  	 * data and the allocated space, otherwise the data and the allocated
  	 * space are aligned.
 -	 *
 -	 * Buffers with headroom use PAGE_SIZE as alloc size, see
 -	 * add_recvbuf_mergeable() + get_mergeable_buf_len()
  	 */
++<<<<<<< HEAD
 +	if (whole_page) {
 +		/* Buffers with whole_page use PAGE_SIZE as alloc size,
 +		 * see add_recvbuf_mergeable() + get_mergeable_buf_len()
 +		 */
 +		truesize = PAGE_SIZE;
 +		tailroom = truesize - len - offset;
 +		buf = page_address(page);
 +	} else {
 +		tailroom = truesize - len;
 +		buf = p;
 +	}
++=======
+ 	truesize = headroom ? PAGE_SIZE : truesize;
+ 	tailroom = truesize - len - headroom - (hdr_padded_len - hdr_len);
+ 	buf = p - headroom;
++>>>>>>> 1a8024239dac (virtio-net: fix for skb_over_panic inside big mode)
  
  	len -= hdr_len;
  	offset += hdr_padded_len;
* Unmerged path drivers/net/virtio_net.c
