virtio_net: get build_skb() buf by data ptr

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-531.el8
commit-author Xuan Zhuo <xuanzhuo@linux.alibaba.com>
commit 8fb7da9e990793299c89ed7a4281c235bfdd31f8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-531.el8/8fb7da9e.failed

In the case of merge, the page passed into page_to_skb() may be a head
page, not the page where the current data is located. So when trying to
get the buf where the data is located, we should get buf based on
headroom instead of offset.

This patch solves this problem. But if you don't use this patch, the
original code can also run, because if the page is not the page of the
current data, the calculated tailroom will be less than 0, and will not
enter the logic of build_skb() . The significance of this patch is to
modify this logical problem, allowing more situations to use
build_skb().

	Signed-off-by: Xuan Zhuo <xuanzhuo@linux.alibaba.com>
	Acked-by: Jason Wang <jasowang@redhat.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 8fb7da9e990793299c89ed7a4281c235bfdd31f8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/virtio_net.c
diff --cc drivers/net/virtio_net.c
index a4b754a78012,fa407eb8b457..000000000000
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@@ -405,21 -398,16 +405,30 @@@ static struct sk_buff *page_to_skb(stru
  	else
  		hdr_padded_len = sizeof(struct padded_vnet_hdr);
  
 -	/* If headroom is not 0, there is an offset between the beginning of the
 +	/* If whole_page, there is an offset between the beginning of the
  	 * data and the allocated space, otherwise the data and the allocated
  	 * space are aligned.
+ 	 *
+ 	 * Buffers with headroom use PAGE_SIZE as alloc size, see
+ 	 * add_recvbuf_mergeable() + get_mergeable_buf_len()
  	 */
++<<<<<<< HEAD
 +	if (whole_page) {
 +		/* Buffers with whole_page use PAGE_SIZE as alloc size,
 +		 * see add_recvbuf_mergeable() + get_mergeable_buf_len()
 +		 */
 +		truesize = PAGE_SIZE;
 +		tailroom = truesize - len - offset;
 +		buf = page_address(page);
 +	} else {
 +		tailroom = truesize - len;
 +		buf = p;
 +	}
++=======
+ 	truesize = headroom ? PAGE_SIZE : truesize;
+ 	tailroom = truesize - len - headroom;
+ 	buf = p - headroom;
++>>>>>>> 8fb7da9e9907 (virtio_net: get build_skb() buf by data ptr)
  
  	len -= hdr_len;
  	offset += hdr_padded_len;
* Unmerged path drivers/net/virtio_net.c
