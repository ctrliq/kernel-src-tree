platform/x86/intel/uncore-freq: Move to uncore-frequency folder

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.27.1.rt7.290.el8_8
commit-author Srinivas Pandruvada <srinivas.pandruvada@intel.com>
commit ce2645c458b5c83b0872ea9e39d2c3293445353a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.27.1.rt7.290.el8_8/ce2645c4.failed

Move the current driver from platform/x86/intel/uncore-frequency.c
to platform/x86/intel/uncore-frequency/uncore-frequency.c.

No functional changes are expected.

	Signed-off-by: Srinivas Pandruvada <srinivas.pandruvada@intel.com>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Link: https://lore.kernel.org/r/20220204000306.2517447-2-srinivas.pandruvada@linux.intel.com
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit ce2645c458b5c83b0872ea9e39d2c3293445353a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
#	drivers/platform/x86/intel/Kconfig
#	drivers/platform/x86/intel/Makefile
#	drivers/platform/x86/intel/uncore-frequency/uncore-frequency.c
diff --cc MAINTAINERS
index d47d520f3b66,136f817428cf..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7629,6 -9861,116 +7629,119 @@@ M:	Jarkko Nikula <jarkko.nikula@linux.i
  L:	linux-iio@vger.kernel.org
  F:	drivers/counter/intel-qep.c
  
++<<<<<<< HEAD
++=======
+ INTEL SCU DRIVERS
+ M:	Mika Westerberg <mika.westerberg@linux.intel.com>
+ S:	Maintained
+ F:	arch/x86/include/asm/intel_scu_ipc.h
+ F:	drivers/platform/x86/intel_scu_*
+ 
+ INTEL SDSI DRIVER
+ M:	David E. Box <david.e.box@linux.intel.com>
+ S:	Supported
+ F:	drivers/platform/x86/intel/sdsi.c
+ 
+ INTEL SKYLAKE INT3472 ACPI DEVICE DRIVER
+ M:	Daniel Scally <djrscally@gmail.com>
+ S:	Maintained
+ F:	drivers/platform/x86/intel/int3472/
+ 
+ INTEL SPEED SELECT TECHNOLOGY
+ M:	Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel/speed_select_if/
+ F:	include/uapi/linux/isst_if.h
+ F:	tools/power/x86/intel-speed-select/
+ 
+ INTEL STRATIX10 FIRMWARE DRIVERS
+ M:	Dinh Nguyen <dinguyen@kernel.org>
+ L:	linux-kernel@vger.kernel.org
+ S:	Maintained
+ F:	Documentation/ABI/testing/sysfs-devices-platform-stratix10-rsu
+ F:	Documentation/devicetree/bindings/firmware/intel,stratix10-svc.txt
+ F:	drivers/firmware/stratix10-rsu.c
+ F:	drivers/firmware/stratix10-svc.c
+ F:	include/linux/firmware/intel/stratix10-smc.h
+ F:	include/linux/firmware/intel/stratix10-svc-client.h
+ 
+ INTEL TELEMETRY DRIVER
+ M:	Rajneesh Bhardwaj <irenic.rajneesh@gmail.com>
+ M:	"David E. Box" <david.e.box@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	arch/x86/include/asm/intel_telemetry.h
+ F:	drivers/platform/x86/intel/telemetry/
+ 
+ INTEL UNCORE FREQUENCY CONTROL
+ M:	Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel/uncore-frequency/
+ 
+ INTEL VENDOR SPECIFIC EXTENDED CAPABILITIES DRIVER
+ M:	David E. Box <david.e.box@linux.intel.com>
+ S:	Supported
+ F:	drivers/platform/x86/intel/vsec.*
+ 
+ INTEL VIRTUAL BUTTON DRIVER
+ M:	AceLan Kao <acelan.kao@canonical.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel/vbtn.c
+ 
+ INTEL WIRELESS 3945ABG/BG, 4965AGN (iwlegacy)
+ M:	Stanislaw Gruszka <stf_xl@wp.pl>
+ L:	linux-wireless@vger.kernel.org
+ S:	Supported
+ F:	drivers/net/wireless/intel/iwlegacy/
+ 
+ INTEL WIRELESS WIFI LINK (iwlwifi)
+ M:	Luca Coelho <luciano.coelho@intel.com>
+ L:	linux-wireless@vger.kernel.org
+ S:	Supported
+ W:	https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi
+ T:	git git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi.git
+ F:	drivers/net/wireless/intel/iwlwifi/
+ 
+ INTEL WMI SLIM BOOTLOADER (SBL) FIRMWARE UPDATE DRIVER
+ M:	Jithu Joseph <jithu.joseph@intel.com>
+ R:	Maurice Ma <maurice.ma@intel.com>
+ S:	Maintained
+ W:	https://slimbootloader.github.io/security/firmware-update.html
+ F:	drivers/platform/x86/intel/wmi/sbl-fw-update.c
+ 
+ INTEL WMI THUNDERBOLT FORCE POWER DRIVER
+ L:	Dell.Client.Kernel@dell.com
+ S:	Maintained
+ F:	drivers/platform/x86/intel/wmi/thunderbolt.c
+ 
+ INTEL WWAN IOSM DRIVER
+ M:	M Chetan Kumar <m.chetan.kumar@intel.com>
+ M:	Intel Corporation <linuxwwan@intel.com>
+ L:	netdev@vger.kernel.org
+ S:	Maintained
+ F:	drivers/net/wwan/iosm/
+ 
+ INTEL(R) TRACE HUB
+ M:	Alexander Shishkin <alexander.shishkin@linux.intel.com>
+ S:	Supported
+ F:	Documentation/trace/intel_th.rst
+ F:	drivers/hwtracing/intel_th/
+ F:	include/linux/intel_th.h
+ 
+ INTEL(R) TRUSTED EXECUTION TECHNOLOGY (TXT)
+ M:	Ning Sun <ning.sun@intel.com>
+ L:	tboot-devel@lists.sourceforge.net
+ S:	Supported
+ W:	http://tboot.sourceforge.net
+ T:	hg http://tboot.hg.sourceforge.net:8000/hgroot/tboot/tboot
+ F:	Documentation/x86/intel_txt.rst
+ F:	arch/x86/kernel/tboot.c
+ F:	include/linux/tboot.h
+ 
++>>>>>>> ce2645c458b5 (platform/x86/intel/uncore-freq: Move to uncore-frequency folder)
  INTEL SGX
  M:	Jarkko Sakkinen <jarkko@kernel.org>
  R:	Dave Hansen <dave.hansen@linux.intel.com>
diff --cc drivers/platform/x86/intel/Kconfig
index 235a38a519c0,1f01a8a23c57..000000000000
--- a/drivers/platform/x86/intel/Kconfig
+++ b/drivers/platform/x86/intel/Kconfig
@@@ -18,6 -9,106 +18,109 @@@ if X86_PLATFORM_DRIVERS_INTE
  source "drivers/platform/x86/intel/pmc/Kconfig"
  source "drivers/platform/x86/intel/pmt/Kconfig"
  source "drivers/platform/x86/intel/speed_select_if/Kconfig"
++<<<<<<< HEAD
++=======
+ source "drivers/platform/x86/intel/telemetry/Kconfig"
+ source "drivers/platform/x86/intel/wmi/Kconfig"
+ source "drivers/platform/x86/intel/uncore-frequency/Kconfig"
+ 
+ 
+ config INTEL_HID_EVENT
+ 	tristate "Intel HID Event"
+ 	depends on ACPI
+ 	depends on INPUT
+ 	depends on I2C
+ 	select INPUT_SPARSEKMAP
+ 	help
+ 	  This driver provides support for the Intel HID Event hotkey interface.
+ 	  Some laptops require this driver for hotkey support.
+ 
+ 	  To compile this driver as a module, choose M here: the module will
+ 	  be called intel_hid.
+ 
+ config INTEL_VBTN
+ 	tristate "Intel Virtual Button"
+ 	depends on ACPI
+ 	depends on INPUT
+ 	depends on I2C
+ 	select INPUT_SPARSEKMAP
+ 	help
+ 	  This driver provides support for the Intel Virtual Button interface.
+ 	  Some laptops require this driver for power button support.
+ 
+ 	  To compile this driver as a module, choose M here: the module will
+ 	  be called intel_vbtn.
+ 
+ config INTEL_INT0002_VGPIO
+ 	tristate "Intel ACPI INT0002 Virtual GPIO driver"
+ 	depends on GPIOLIB && ACPI && PM_SLEEP
+ 	select GPIOLIB_IRQCHIP
+ 	help
+ 	  Some peripherals on Bay Trail and Cherry Trail platforms signal a
+ 	  Power Management Event (PME) to the Power Management Controller (PMC)
+ 	  to wakeup the system. When this happens software needs to explicitly
+ 	  clear the PME bus 0 status bit in the GPE0a_STS register to avoid an
+ 	  IRQ storm on IRQ 9.
+ 
+ 	  This is modelled in ACPI through the INT0002 ACPI device, which is
+ 	  called a "Virtual GPIO controller" in ACPI because it defines the
+ 	  event handler to call when the PME triggers through _AEI and _L02
+ 	  methods as would be done for a real GPIO interrupt in ACPI.
+ 
+ 	  To compile this driver as a module, choose M here: the module will
+ 	  be called intel_int0002_vgpio.
+ 
+ config INTEL_OAKTRAIL
+ 	tristate "Intel Oaktrail Platform Extras"
+ 	depends on ACPI
+ 	depends on ACPI_VIDEO || ACPI_VIDEO=n
+ 	depends on RFKILL && BACKLIGHT_CLASS_DEVICE && ACPI
+ 	help
+ 	  Intel Oaktrail platform need this driver to provide interfaces to
+ 	  enable/disable the Camera, WiFi, BT etc. devices. If in doubt, say Y
+ 	  here; it will only load on supported platforms.
+ 
+ config INTEL_BXTWC_PMIC_TMU
+ 	tristate "Intel Broxton Whiskey Cove TMU Driver"
+ 	depends on INTEL_SOC_PMIC_BXTWC
+ 	depends on MFD_INTEL_PMC_BXT
+ 	select REGMAP
+ 	help
+ 	  Select this driver to use Intel Broxton Whiskey Cove PMIC TMU feature.
+ 	  This driver enables the alarm wakeup functionality in the TMU unit of
+ 	  Whiskey Cove PMIC.
+ 
+ config INTEL_CHTDC_TI_PWRBTN
+ 	tristate "Intel Cherry Trail Dollar Cove TI power button driver"
+ 	depends on INTEL_SOC_PMIC_CHTDC_TI
+ 	depends on INPUT
+ 	help
+ 	  This option adds a power button driver for Dollar Cove TI
+ 	  PMIC on Intel Cherry Trail devices.
+ 
+ 	  To compile this driver as a module, choose M here: the module
+ 	  will be called intel_chtdc_ti_pwrbtn.
+ 
+ config INTEL_CHTWC_INT33FE
+ 	tristate "Intel Cherry Trail Whiskey Cove ACPI INT33FE Driver"
+ 	depends on X86 && ACPI && I2C && REGULATOR
+ 	depends on CHARGER_BQ24190=y || (CHARGER_BQ24190=m && m)
+ 	depends on USB_ROLES_INTEL_XHCI=y || (USB_ROLES_INTEL_XHCI=m && m)
+ 	depends on TYPEC_MUX_PI3USB30532=y || (TYPEC_MUX_PI3USB30532=m && m)
+ 	help
+ 	  This driver add support for the Intel Cherry Trail Whiskey Cove
+ 	  INT33FE ACPI device found on the GPD win and the GPD pocket.
+ 
+ 	  The INT33FE ACPI device on these mini laptops contains I2cSerialBusV2
+ 	  resources for a MAX17042 Fuel Gauge, FUSB302 USB Type-C Controller
+ 	  and PI3USB30532 USB switch.
+ 	  This driver instantiates i2c-clients for these, so that standard
+ 	  i2c drivers for these chips can bind to the them.
+ 
+ 	  If you enable this driver it is advised to also select
+ 	  CONFIG_TYPEC_FUSB302=m, CONFIG_TYPEC_MUX_PI3USB30532=m and
+ 	  CONFIG_BATTERY_MAX17042=m.
++>>>>>>> ce2645c458b5 (platform/x86/intel/uncore-freq: Move to uncore-frequency folder)
  
  config INTEL_ISHTP_ECLITE
  	tristate "Intel ISHTP eclite controller Driver"
@@@ -58,4 -167,38 +161,42 @@@ config INTEL_SDS
  	  To compile this driver as a module, choose M here: the module will
  	  be called intel_sdsi.
  
++<<<<<<< HEAD
 +endif # X86_PLATFORM_DRIVERS_INTEL
++=======
+ config INTEL_SMARTCONNECT
+ 	tristate "Intel Smart Connect disabling driver"
+ 	depends on ACPI
+ 	help
+ 	  Intel Smart Connect is a technology intended to permit devices to
+ 	  update state by resuming for a short period of time at regular
+ 	  intervals. If a user enables this functionality under Windows and
+ 	  then reboots into Linux, the system may remain configured to resume
+ 	  on suspend. In the absence of any userspace to support it, the system
+ 	  will then remain awake until something triggers another suspend.
+ 
+ 	  This driver checks to determine whether the device has Intel Smart
+ 	  Connect enabled, and if so disables it.
+ 
+ config INTEL_TURBO_MAX_3
+ 	bool "Intel Turbo Boost Max Technology 3.0 enumeration driver"
+ 	depends on X86_64 && SCHED_MC_PRIO
+ 	help
+ 	  This driver reads maximum performance ratio of each CPU and set up
+ 	  the scheduler priority metrics. In this way scheduler can prefer
+ 	  CPU with higher performance to schedule tasks.
+ 
+ 	  This driver is only required when the system is not using Hardware
+ 	  P-States (HWP). In HWP mode, priority can be read from ACPI tables.
+ 
+ config INTEL_VSEC
+ 	tristate "Intel Vendor Specific Extended Capabilities Driver"
+ 	depends on PCI
+ 	select AUXILIARY_BUS
+ 	help
+ 	  Adds support for feature drivers exposed using Intel PCIe VSEC and
+ 	  DVSEC.
+ 
+ 	  To compile this driver as a module, choose M here: the module will
+ 	  be called intel_vsec.
++>>>>>>> ce2645c458b5 (platform/x86/intel/uncore-freq: Move to uncore-frequency folder)
diff --cc drivers/platform/x86/intel/Makefile
index 46eaa0c181cd,c61bc3e97121..000000000000
--- a/drivers/platform/x86/intel/Makefile
+++ b/drivers/platform/x86/intel/Makefile
@@@ -6,6 -6,20 +6,19 @@@
  obj-$(CONFIG_INTEL_PMC_CORE)		+= pmc/
  obj-$(CONFIG_INTEL_PMT_CLASS)		+= pmt/
  obj-$(CONFIG_INTEL_SPEED_SELECT_INTERFACE) += speed_select_if/
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_INTEL_TELEMETRY)		+= telemetry/
+ obj-$(CONFIG_INTEL_WMI)			+= wmi/
+ obj-$(CONFIG_INTEL_UNCORE_FREQ_CONTROL)	+= uncore-frequency/
+ 
+ 
+ # Intel input drivers
+ intel-hid-y				:= hid.o
+ obj-$(CONFIG_INTEL_HID_EVENT)		+= intel-hid.o
+ intel-vbtn-y				:= vbtn.o
+ obj-$(CONFIG_INTEL_VBTN)		+= intel-vbtn.o
++>>>>>>> ce2645c458b5 (platform/x86/intel/uncore-freq: Move to uncore-frequency folder)
  
  # Intel miscellaneous drivers
  obj-$(CONFIG_INTEL_ISHTP_ECLITE)	+= ishtp_eclite.o
@@@ -13,3 -31,25 +26,28 @@@ intel_sdsi-y				:= sdsi.
  obj-$(CONFIG_INTEL_SDSI)		+= intel_sdsi.o
  intel_vsec-y				:= vsec.o
  obj-$(CONFIG_INTEL_VSEC)		+= intel_vsec.o
++<<<<<<< HEAD
++=======
+ 
+ # Intel PMIC / PMC / P-Unit drivers
+ intel_bxtwc_tmu-y			:= bxtwc_tmu.o
+ obj-$(CONFIG_INTEL_BXTWC_PMIC_TMU)	+= intel_bxtwc_tmu.o
+ intel_crystal_cove_charger-y		:= crystal_cove_charger.o
+ obj-$(CONFIG_X86_ANDROID_TABLETS)	+= intel_crystal_cove_charger.o
+ intel_chtdc_ti_pwrbtn-y			:= chtdc_ti_pwrbtn.o
+ obj-$(CONFIG_INTEL_CHTDC_TI_PWRBTN)	+= intel_chtdc_ti_pwrbtn.o
+ intel_chtwc_int33fe-y			:= chtwc_int33fe.o
+ obj-$(CONFIG_INTEL_CHTWC_INT33FE)	+= intel_chtwc_int33fe.o
+ intel_mrfld_pwrbtn-y			:= mrfld_pwrbtn.o
+ obj-$(CONFIG_INTEL_MRFLD_PWRBTN)	+= intel_mrfld_pwrbtn.o
+ intel_punit_ipc-y			:= punit_ipc.o
+ obj-$(CONFIG_INTEL_PUNIT_IPC)		+= intel_punit_ipc.o
+ 
+ # Intel Uncore drivers
+ intel-rst-y				:= rst.o
+ obj-$(CONFIG_INTEL_RST)			+= intel-rst.o
+ intel-smartconnect-y			:= smartconnect.o
+ obj-$(CONFIG_INTEL_SMARTCONNECT)	+= intel-smartconnect.o
+ intel_turbo_max_3-y			:= turbo_max_3.o
+ obj-$(CONFIG_INTEL_TURBO_MAX_3)		+= intel_turbo_max_3.o
++>>>>>>> ce2645c458b5 (platform/x86/intel/uncore-freq: Move to uncore-frequency folder)
* Unmerged path drivers/platform/x86/intel/uncore-frequency/uncore-frequency.c
* Unmerged path MAINTAINERS
* Unmerged path drivers/platform/x86/intel/Kconfig
* Unmerged path drivers/platform/x86/intel/Makefile
diff --git a/drivers/platform/x86/intel/uncore-frequency/Kconfig b/drivers/platform/x86/intel/uncore-frequency/Kconfig
new file mode 100644
index 000000000000..21b209124916
--- /dev/null
+++ b/drivers/platform/x86/intel/uncore-frequency/Kconfig
@@ -0,0 +1,21 @@
+# SPDX-License-Identifier: GPL-2.0-only
+#
+# Uncore Frquency control drivers
+#
+
+menu "Intel Uncore Frequency Control"
+	depends on X86_64 || COMPILE_TEST
+
+config INTEL_UNCORE_FREQ_CONTROL
+	tristate "Intel Uncore frequency control driver"
+	depends on X86_64
+	help
+	  This driver allows control of Uncore frequency limits on
+	  supported server platforms.
+
+	  Uncore frequency controls RING/LLC (last-level cache) clocks.
+
+	  To compile this driver as a module, choose M here: the module
+	  will be called intel-uncore-frequency.
+
+endmenu
diff --git a/drivers/platform/x86/intel/uncore-frequency/Makefile b/drivers/platform/x86/intel/uncore-frequency/Makefile
new file mode 100644
index 000000000000..e22186a480e2
--- /dev/null
+++ b/drivers/platform/x86/intel/uncore-frequency/Makefile
@@ -0,0 +1,7 @@
+# SPDX-License-Identifier: GPL-2.0
+#
+# Makefile for linux/drivers/platform/x86/intel/uncore-frequency
+#
+
+obj-$(CONFIG_INTEL_UNCORE_FREQ_CONTROL)	+= intel-uncore-frequency.o
+intel-uncore-frequency-y		:= uncore-frequency.o
* Unmerged path drivers/platform/x86/intel/uncore-frequency/uncore-frequency.c
