net/mlx5: SF, Stop waiting for FW as teardown was called

jira LE-2157
Rebuild_History Non-Buildable kernel-5.14.0-503.14.1.el9_5
commit-author Moshe Shemesh <moshe@nvidia.com>
commit 137cef6d55564fb687d12fbc5f85be43ff7b53a7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-503.14.1.el9_5/137cef6d.failed

When PF/VF teardown is called the driver sets the flag
MLX5_BREAK_FW_WAIT to stop waiting for FW loading and initializing. Same
should be applied to SF driver teardown to cut waiting time. On
mlx5_sf_dev_remove() set the flag before draining health WQ as recovery
flow may also wait for FW reloading while it is not relevant anymore.

	Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
	Reviewed-by: Aya Levin <ayal@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 137cef6d55564fb687d12fbc5f85be43ff7b53a7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/sf/dev/driver.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/sf/dev/driver.c
index 5c054a0005dd,bc863e1f062e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/sf/dev/driver.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/sf/dev/driver.c
@@@ -91,15 -95,19 +91,25 @@@ mdev_err
  static void mlx5_sf_dev_remove(struct auxiliary_device *adev)
  {
  	struct mlx5_sf_dev *sf_dev = container_of(adev, struct mlx5_sf_dev, adev);
- 	struct devlink *devlink = priv_to_devlink(sf_dev->mdev);
+ 	struct mlx5_core_dev *mdev = sf_dev->mdev;
+ 	struct devlink *devlink;
  
++<<<<<<< HEAD
 +	mlx5_drain_health_wq(sf_dev->mdev);
 +	if (mlx5_dev_is_lightweight(sf_dev->mdev))
 +		mlx5_uninit_one_light(sf_dev->mdev);
++=======
+ 	devlink = priv_to_devlink(mdev);
+ 	set_bit(MLX5_BREAK_FW_WAIT, &mdev->intf_state);
+ 	mlx5_drain_health_wq(mdev);
+ 	devlink_unregister(devlink);
+ 	if (mlx5_dev_is_lightweight(mdev))
+ 		mlx5_uninit_one_light(mdev);
++>>>>>>> 137cef6d5556 (net/mlx5: SF, Stop waiting for FW as teardown was called)
  	else
- 		mlx5_uninit_one(sf_dev->mdev);
- 	iounmap(sf_dev->mdev->iseg);
- 	mlx5_mdev_uninit(sf_dev->mdev);
+ 		mlx5_uninit_one(mdev);
+ 	iounmap(mdev->iseg);
+ 	mlx5_mdev_uninit(mdev);
  	mlx5_devlink_free(devlink);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/sf/dev/driver.c
