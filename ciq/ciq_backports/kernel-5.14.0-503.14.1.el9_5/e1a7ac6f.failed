ping: fix address binding wrt vrf

jira LE-2157
Rebuild_History Non-Buildable kernel-5.14.0-503.14.1.el9_5
commit-author Nicolas Dichtel <nicolas.dichtel@6wind.com>
commit e1a7ac6f3ba6e157adcd0ca94d92a401f1943f56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-503.14.1.el9_5/e1a7ac6f.failed

When ping_group_range is updated, 'ping' uses the DGRAM ICMP socket,
instead of an IP raw socket. In this case, 'ping' is unable to bind its
socket to a local address owned by a vrflite.

Before the patch:
$ sysctl -w net.ipv4.ping_group_range='0  2147483647'
$ ip link add blue type vrf table 10
$ ip link add foo type dummy
$ ip link set foo master blue
$ ip link set foo up
$ ip addr add 192.168.1.1/24 dev foo
$ ip addr add 2001::1/64 dev foo
$ ip vrf exec blue ping -c1 -I 192.168.1.1 192.168.1.2
ping: bind: Cannot assign requested address
$ ip vrf exec blue ping6 -c1 -I 2001::1 2001::2
ping6: bind icmp socket: Cannot assign requested address

CC: stable@vger.kernel.org
Fixes: 1b69c6d0ae90 ("net: Introduce L3 Master device abstraction")
	Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
	Reviewed-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit e1a7ac6f3ba6e157adcd0ca94d92a401f1943f56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/ping.c
diff --cc net/ipv4/ping.c
index 1c5aba05d82c,aa9a11b20d18..000000000000
--- a/net/ipv4/ping.c
+++ b/net/ipv4/ping.c
@@@ -334,15 -319,12 +335,20 @@@ static int ping_check_bind_addr(struct 
  		pr_debug("ping_check_bind_addr(sk=%p,addr=%pI4,port=%d)\n",
  			 sk, &addr->sin_addr.s_addr, ntohs(addr->sin_port));
  
++<<<<<<< HEAD
 +		if (addr->sin_addr.s_addr == htonl(INADDR_ANY))
 +			chk_addr_ret = RTN_LOCAL;
 +		else
 +			chk_addr_ret = inet_addr_type(net, addr->sin_addr.s_addr);
++=======
+ 		tb_id = l3mdev_fib_table_by_index(net, sk->sk_bound_dev_if) ? : tb_id;
+ 		chk_addr_ret = inet_addr_type_table(net, addr->sin_addr.s_addr, tb_id);
++>>>>>>> e1a7ac6f3ba6 (ping: fix address binding wrt vrf)
  
 -		if (!inet_addr_valid_or_nonlocal(net, inet_sk(sk),
 -					         addr->sin_addr.s_addr,
 -	                                         chk_addr_ret))
 +		if ((!inet_can_nonlocal_bind(net, isk) &&
 +		     chk_addr_ret != RTN_LOCAL) ||
 +		    chk_addr_ret == RTN_MULTICAST ||
 +		    chk_addr_ret == RTN_BROADCAST)
  			return -EADDRNOTAVAIL;
  
  #if IS_ENABLED(CONFIG_IPV6)
* Unmerged path net/ipv4/ping.c
