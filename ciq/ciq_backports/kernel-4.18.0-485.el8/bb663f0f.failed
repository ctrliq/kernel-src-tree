timers: Rename del_timer() to timer_delete()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-485.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit bb663f0f3c396c6d05f6c5eeeea96ced20ff112e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-485.el8/bb663f0f.failed

The timer related functions do not have a strict timer_ prefixed namespace
which is really annoying.

Rename del_timer() to timer_delete() and provide del_timer()
as a wrapper. Document that del_timer() is not for new code.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Guenter Roeck <linux@roeck-us.net>
	Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
	Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
	Reviewed-by: Anna-Maria Behnsen <anna-maria@linutronix.de>
Link: https://lore.kernel.org/r/20221123201625.015535022@linutronix.de

(cherry picked from commit bb663f0f3c396c6d05f6c5eeeea96ced20ff112e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/timer.h
diff --cc include/linux/timer.h
index 525e260a2627,e338e173ce8b..000000000000
--- a/include/linux/timer.h
+++ b/include/linux/timer.h
@@@ -191,10 -198,20 +191,25 @@@ static inline int del_timer_sync(struc
  	return timer_delete_sync(timer);
  }
  
++<<<<<<< HEAD
 +#define del_singleshot_timer_sync(t) del_timer_sync(t)
++=======
+ /**
+  * del_timer - Delete a pending timer
+  * @timer:	The timer to be deleted
+  *
+  * See timer_delete() for detailed explanation.
+  *
+  * Do not use in new code. Use timer_delete() instead.
+  */
+ static inline int del_timer(struct timer_list *timer)
+ {
+ 	return timer_delete(timer);
+ }
++>>>>>>> bb663f0f3c39 (timers: Rename del_timer() to timer_delete())
  
  extern void init_timers(void);
 +extern void run_local_timers(void);
  struct hrtimer;
  extern enum hrtimer_restart it_real_fn(struct hrtimer *);
  
* Unmerged path include/linux/timer.h
diff --git a/kernel/time/timer.c b/kernel/time/timer.c
index e7aa7a24b089..ac573ecf7575 100644
--- a/kernel/time/timer.c
+++ b/kernel/time/timer.c
@@ -1203,7 +1203,7 @@ void add_timer_on(struct timer_list *timer, int cpu)
 EXPORT_SYMBOL_GPL(add_timer_on);
 
 /**
- * del_timer - Deactivate a timer.
+ * timer_delete - Deactivate a timer
  * @timer:	The timer to be deactivated
  *
  * The function only deactivates a pending timer, but contrary to
@@ -1216,7 +1216,7 @@ EXPORT_SYMBOL_GPL(add_timer_on);
  * * %0 - The timer was not pending
  * * %1 - The timer was pending and deactivated
  */
-int del_timer(struct timer_list *timer)
+int timer_delete(struct timer_list *timer)
 {
 	struct timer_base *base;
 	unsigned long flags;
@@ -1232,7 +1232,7 @@ int del_timer(struct timer_list *timer)
 
 	return ret;
 }
-EXPORT_SYMBOL(del_timer);
+EXPORT_SYMBOL(timer_delete);
 
 /**
  * try_to_del_timer_sync - Try to deactivate a timer
