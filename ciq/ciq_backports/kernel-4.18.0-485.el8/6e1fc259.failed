clocksource/drivers/sp804: Do not use timer namespace for timer_shutdown() function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-485.el8
commit-author Steven Rostedt (Google) <rostedt@goodmis.org>
commit 6e1fc2591f116dfb20b65cf27356475461d61bd8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-485.el8/6e1fc259.failed

A new "shutdown" timer state is being added to the generic timer code. One
of the functions to change the timer into the state is called
"timer_shutdown()". This means that there can not be other functions
called "timer_shutdown()" as the timer code owns the "timer_*" name space.

Rename timer_shutdown() to evt_timer_shutdown() to avoid this conflict.

	Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Guenter Roeck <linux@roeck-us.net>
	Reviewed-by: Guenter Roeck <linux@roeck-us.net>
	Reviewed-by: Jacob Keller <jacob.e.keller@intel.com>
	Reviewed-by: Anna-Maria Behnsen <anna-maria@linutronix.de>
Link: https://lkml.kernel.org/r/20221106212702.182883323@goodmis.org
Link: https://lore.kernel.org/all/20221105060155.592778858@goodmis.org/
Link: https://lore.kernel.org/r/20221110064147.158230501@goodmis.org
Link: https://lore.kernel.org/r/20221123201624.634354813@linutronix.de



(cherry picked from commit 6e1fc2591f116dfb20b65cf27356475461d61bd8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/clocksource/timer-sp804.c
diff --cc drivers/clocksource/timer-sp804.c
index e01222ea888f,cd1916c05325..000000000000
--- a/drivers/clocksource/timer-sp804.c
+++ b/drivers/clocksource/timer-sp804.c
@@@ -135,9 -155,9 +135,9 @@@ static irqreturn_t sp804_timer_interrup
  	return IRQ_HANDLED;
  }
  
- static inline void timer_shutdown(struct clock_event_device *evt)
+ static inline void evt_timer_shutdown(struct clock_event_device *evt)
  {
 -	writel(0, common_clkevt->ctrl);
 +	writel(0, clkevt_base + TIMER_CTRL);
  }
  
  static int sp804_shutdown(struct clock_event_device *evt)
@@@ -151,9 -171,9 +151,15 @@@ static int sp804_set_periodic(struct cl
  	unsigned long ctrl = TIMER_CTRL_32BIT | TIMER_CTRL_IE |
  			     TIMER_CTRL_PERIODIC | TIMER_CTRL_ENABLE;
  
++<<<<<<< HEAD
 +	timer_shutdown(evt);
 +	writel(clkevt_reload, clkevt_base + TIMER_LOAD);
 +	writel(ctrl, clkevt_base + TIMER_CTRL);
++=======
+ 	evt_timer_shutdown(evt);
+ 	writel(common_clkevt->reload, common_clkevt->load);
+ 	writel(ctrl, common_clkevt->ctrl);
++>>>>>>> 6e1fc2591f11 (clocksource/drivers/sp804: Do not use timer namespace for timer_shutdown() function)
  	return 0;
  }
  
* Unmerged path drivers/clocksource/timer-sp804.c
