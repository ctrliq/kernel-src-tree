ACPI: CPPC: Add ACPI disabled check to acpi_cpc_valid()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-506.el8
commit-author Perry Yuan <Perry.Yuan@amd.com>
commit a2a9d1850060e5d995136561d76e81d61414f076
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-506.el8/a2a9d185.failed

Make acpi_cpc_valid() check if ACPI is disabled, so that its callers
don't need to check that separately.  This will also cause the AMD
pstate driver to refuse to load right away when ACPI is disabled.

Also update the warning message in amd_pstate_init() to mention the
ACPI disabled case for completeness.

	Signed-off-by: Perry Yuan <Perry.Yuan@amd.com>
[ rjw: Subject edits, new changelog ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit a2a9d1850060e5d995136561d76e81d61414f076)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cppc_cpufreq.c
diff --cc drivers/cpufreq/cppc_cpufreq.c
index 2c0306582289,9adb7612993e..000000000000
--- a/drivers/cpufreq/cppc_cpufreq.c
+++ b/drivers/cpufreq/cppc_cpufreq.c
@@@ -546,7 -945,9 +546,13 @@@ static void cppc_check_hisi_workaround(
  
  static int __init cppc_cpufreq_init(void)
  {
++<<<<<<< HEAD
 +	if ((acpi_disabled) || !acpi_cpc_valid())
++=======
+ 	int ret;
+ 
+ 	if (!acpi_cpc_valid())
++>>>>>>> a2a9d1850060 (ACPI: CPPC: Add ACPI disabled check to acpi_cpc_valid())
  		return -ENODEV;
  
  	cppc_check_hisi_workaround();
diff --git a/drivers/acpi/cppc_acpi.c b/drivers/acpi/cppc_acpi.c
index 7444128353f0..87f5c0db8ad1 100644
--- a/drivers/acpi/cppc_acpi.c
+++ b/drivers/acpi/cppc_acpi.c
@@ -428,6 +428,9 @@ bool acpi_cpc_valid(void)
 	struct cpc_desc *cpc_ptr;
 	int cpu;
 
+	if (acpi_disabled)
+		return false;
+
 	for_each_present_cpu(cpu) {
 		cpc_ptr = per_cpu(cpc_desc_ptr, cpu);
 		if (!cpc_ptr)
diff --git a/drivers/base/arch_topology.c b/drivers/base/arch_topology.c
index cc373d260b6b..b29809111ee5 100644
--- a/drivers/base/arch_topology.c
+++ b/drivers/base/arch_topology.c
@@ -170,7 +170,7 @@ void topology_init_cpu_capacity_cppc(void)
 	struct cppc_perf_caps perf_caps;
 	int cpu;
 
-	if (likely(acpi_disabled || !acpi_cpc_valid()))
+	if (likely(!acpi_cpc_valid()))
 		return;
 
 	raw_capacity = kcalloc(num_possible_cpus(), sizeof(*raw_capacity),
diff --git a/drivers/cpufreq/amd-pstate.c b/drivers/cpufreq/amd-pstate.c
index 40f383483c5b..bcd9fe6ede27 100644
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@ -688,7 +688,7 @@ static int __init amd_pstate_init(void)
 	}
 
 	if (!acpi_cpc_valid()) {
-		pr_debug("the _CPC object is not present in SBIOS\n");
+		pr_warn_once("the _CPC object is not present in SBIOS or ACPI disabled\n");
 		return -ENODEV;
 	}
 
* Unmerged path drivers/cpufreq/cppc_cpufreq.c
