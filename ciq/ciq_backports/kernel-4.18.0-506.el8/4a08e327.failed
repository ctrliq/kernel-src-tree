cpufreq: Fix parameter in parse_perf_domain()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-506.el8
commit-author Hector.Yuan <hector.yuan@mediatek.com>
commit 4a08e3271c55f8b5d56906a8aa5bd041911cf897
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-506.el8/4a08e327.failed

Pass cpu to parse_perf_domain() instead of pcpu.

Fixes: 8486a32dd484 ("cpufreq: Add of_perf_domain_get_sharing_cpumask")
	Signed-off-by: Hector.Yuan <hector.yuan@mediatek.com>
[ Viresh: Massaged changelog ]
	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
(cherry picked from commit 4a08e3271c55f8b5d56906a8aa5bd041911cf897)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/cpufreq.h
diff --cc include/linux/cpufreq.h
index 9bf76b2cd807,66a1f495f01a..000000000000
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@@ -1023,6 -1002,55 +1023,58 @@@ static inline int cpufreq_table_count_v
  
  	return count;
  }
++<<<<<<< HEAD
++=======
+ 
+ static inline int parse_perf_domain(int cpu, const char *list_name,
+ 				    const char *cell_name)
+ {
+ 	struct device_node *cpu_np;
+ 	struct of_phandle_args args;
+ 	int ret;
+ 
+ 	cpu_np = of_cpu_device_node_get(cpu);
+ 	if (!cpu_np)
+ 		return -ENODEV;
+ 
+ 	ret = of_parse_phandle_with_args(cpu_np, list_name, cell_name, 0,
+ 					 &args);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	of_node_put(cpu_np);
+ 
+ 	return args.args[0];
+ }
+ 
+ static inline int of_perf_domain_get_sharing_cpumask(int pcpu, const char *list_name,
+ 						     const char *cell_name, struct cpumask *cpumask)
+ {
+ 	int target_idx;
+ 	int cpu, ret;
+ 
+ 	ret = parse_perf_domain(pcpu, list_name, cell_name);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	target_idx = ret;
+ 	cpumask_set_cpu(pcpu, cpumask);
+ 
+ 	for_each_possible_cpu(cpu) {
+ 		if (cpu == pcpu)
+ 			continue;
+ 
+ 		ret = parse_perf_domain(cpu, list_name, cell_name);
+ 		if (ret < 0)
+ 			continue;
+ 
+ 		if (target_idx == ret)
+ 			cpumask_set_cpu(cpu, cpumask);
+ 	}
+ 
+ 	return target_idx;
+ }
++>>>>>>> 4a08e3271c55 (cpufreq: Fix parameter in parse_perf_domain())
  #else
  static inline int cpufreq_boost_trigger_state(int state)
  {
* Unmerged path include/linux/cpufreq.h
