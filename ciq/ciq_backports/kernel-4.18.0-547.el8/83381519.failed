x86/decompressor: Factor out kernel decompression and relocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-547.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit 83381519352d6b5b3e429bf72aaab907480cb6b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-547.el8/83381519.failed

Factor out the decompressor sequence that invokes the decompressor,
parses the ELF and applies the relocations so that it can be called
directly from the EFI stub.

	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
Link: https://lore.kernel.org/r/20230807162720.545787-21-ardb@kernel.org
(cherry picked from commit 83381519352d6b5b3e429bf72aaab907480cb6b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/misc.c
diff --cc arch/x86/boot/compressed/misc.c
index 013afaeba37d,f711f2a85862..000000000000
--- a/arch/x86/boot/compressed/misc.c
+++ b/arch/x86/boot/compressed/misc.c
@@@ -323,8 -326,37 +323,38 @@@ static void parse_elf(void *output
  	}
  
  	free(phdrs);
 -
 -	return ehdr.e_entry - LOAD_PHYSICAL_ADDR;
  }
  
++<<<<<<< HEAD
++=======
+ const unsigned long kernel_total_size = VO__end - VO__text;
+ 
+ static u8 boot_heap[BOOT_HEAP_SIZE] __aligned(4);
+ 
+ extern unsigned char input_data[];
+ extern unsigned int input_len, output_len;
+ 
+ unsigned long decompress_kernel(unsigned char *outbuf, unsigned long virt_addr,
+ 				void (*error)(char *x))
+ {
+ 	unsigned long entry;
+ 
+ 	if (!free_mem_ptr) {
+ 		free_mem_ptr     = (unsigned long)boot_heap;
+ 		free_mem_end_ptr = (unsigned long)boot_heap + sizeof(boot_heap);
+ 	}
+ 
+ 	if (__decompress(input_data, input_len, NULL, NULL, outbuf, output_len,
+ 			 NULL, error) < 0)
+ 		return ULONG_MAX;
+ 
+ 	entry = parse_elf(outbuf);
+ 	handle_relocations(outbuf, output_len, virt_addr);
+ 
+ 	return entry;
+ }
+ 
++>>>>>>> 83381519352d (x86/decompressor: Factor out kernel decompression and relocation)
  /*
   * The compressed kernel image (ZO), has been moved so that its position
   * is against the end of the buffer used to hold the uncompressed kernel
@@@ -342,15 -374,12 +372,14 @@@
   *             |-------uncompressed kernel image---------|
   *
   */
 -asmlinkage __visible void *extract_kernel(void *rmode, unsigned char *output)
 +asmlinkage __visible void *extract_kernel(void *rmode, memptr heap,
 +				  unsigned char *input_data,
 +				  unsigned long input_len,
 +				  unsigned char *output,
 +				  unsigned long output_len)
  {
- 	const unsigned long kernel_total_size = VO__end - VO__text;
  	unsigned long virt_addr = LOAD_PHYSICAL_ADDR;
 -	memptr heap = (memptr)boot_heap;
  	unsigned long needed_size;
 -	size_t entry_offset;
  
  	/* Retain x86 boot parameters pointer passed from startup_32/64. */
  	boot_params = rmode;
@@@ -451,11 -478,17 +480,25 @@@
  #endif
  
  	debug_putstr("\nDecompressing Linux... ");
++<<<<<<< HEAD
 +	__decompress(input_data, input_len, NULL, NULL, output, output_len,
 +			NULL, error);
 +	parse_elf(output);
 +	handle_relocations(output, output_len, virt_addr);
 +	debug_putstr("done.\nBooting the kernel.\n");
++=======
+ 
+ 	if (init_unaccepted_memory()) {
+ 		debug_putstr("Accepting memory... ");
+ 		accept_memory(__pa(output), __pa(output) + needed_size);
+ 	}
+ 
+ 	entry_offset = decompress_kernel(output, virt_addr, error);
+ 
+ 	debug_putstr("done.\nBooting the kernel (entry_offset: 0x");
+ 	debug_puthex(entry_offset);
+ 	debug_putstr(").\n");
++>>>>>>> 83381519352d (x86/decompressor: Factor out kernel decompression and relocation)
  
  	/* Disable exception handling before booting the kernel */
  	cleanup_exception_handling();
* Unmerged path arch/x86/boot/compressed/misc.c
diff --git a/arch/x86/include/asm/boot.h b/arch/x86/include/asm/boot.h
index 680c320363db..b99fe63b8a31 100644
--- a/arch/x86/include/asm/boot.h
+++ b/arch/x86/include/asm/boot.h
@@ -55,4 +55,12 @@
 # define BOOT_STACK_SIZE	0x1000
 #endif
 
+#ifndef __ASSEMBLY__
+extern unsigned int output_len;
+extern const unsigned long kernel_total_size;
+
+unsigned long decompress_kernel(unsigned char *outbuf, unsigned long virt_addr,
+				void (*error)(char *x));
+#endif
+
 #endif /* _ASM_X86_BOOT_H */
