efi/libstub/x86: Avoid globals to store context during mixed mode calls

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-547.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit 0679715e714345d273c0e1eb78078535ffc4b2a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-547.el8/0679715e.failed

Instead of storing the return address in a global variable when calling
a 32-bit EFI service from the 64-bit stub, avoid the indirection via
efi_exit32, and take the return address from the stack.

	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
	Cc: Arvind Sankar <nivedita@alum.mit.edu>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: James Morse <james.morse@arm.com>
	Cc: Matt Fleming <matt@codeblueprint.co.uk>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: linux-efi@vger.kernel.org
Link: https://lkml.kernel.org/r/20191224151025.32482-26-ardb@kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 0679715e714345d273c0e1eb78078535ffc4b2a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/efi_thunk_64.S
diff --cc arch/x86/boot/compressed/efi_thunk_64.S
index 5af41b130925,6d95eb6b8912..000000000000
--- a/arch/x86/boot/compressed/efi_thunk_64.S
+++ b/arch/x86/boot/compressed/efi_thunk_64.S
@@@ -99,13 -97,6 +97,16 @@@ SYM_FUNC_START(efi64_thunk
  	ret
  SYM_FUNC_END(efi64_thunk)
  
++<<<<<<< HEAD
 +ENTRY(efi_exit32)
 +	movq	func_rt_ptr(%rip), %rax
 +	push	%rax
 +	mov	%rdi, %rax
 +	ret
 +ENDPROC(efi_exit32)
 +
++=======
++>>>>>>> 0679715e7143 (efi/libstub/x86: Avoid globals to store context during mixed mode calls)
  	.code32
  /*
   * EFI service pointer must be in %edi.
@@@ -176,16 -167,17 +177,20 @@@ ENDPROC(efi_enter32
  
  	.data
  	.balign	8
 -SYM_DATA_START(efi32_boot_gdt)
 -	.word	0
 -	.quad	0
 -SYM_DATA_END(efi32_boot_gdt)
 -
 -SYM_DATA_START_LOCAL(save_gdt)
 -	.word	0
 -	.quad	0
 -SYM_DATA_END(save_gdt)
 -
 +	.global	efi32_boot_gdt
 +efi32_boot_gdt:	.word	0
 +		.quad	0
 +
 +save_gdt:	.word	0
 +		.quad	0
 +func_rt_ptr:	.quad	0
 +
++<<<<<<< HEAD
 +	.global efi_gdt64
 +efi_gdt64:
++=======
+ SYM_DATA_START(efi_gdt64)
++>>>>>>> 0679715e7143 (efi/libstub/x86: Avoid globals to store context during mixed mode calls)
  	.word	efi_gdt64_end - efi_gdt64
  	.long	0			/* Filled out by user */
  	.word	0
* Unmerged path arch/x86/boot/compressed/efi_thunk_64.S
