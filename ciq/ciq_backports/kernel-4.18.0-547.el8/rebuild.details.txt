Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 94
Number of commits matched with upstream: 93 (98.94%)
Number of commits in upstream but not in rpm: 488032
Number of commits NOT found in upstream: 1 (1.06%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-547.el8 for kernel-4.18.0-547.el8
Clean Cherry Picks: 24 (25.81%)
Empty Cherry Picks: 69 (74.19%)
_______________________________

__EMPTY COMMITS__________________________
79d72c68c58784a3e1cd2378669d51bfd0cb7498 fs,hugetlb: fix NULL pointer dereference in hugetlbs_fill_super
449f328637e3ca62461da04d60ccb35aa5aa21dc x86/boot/compressed/64: Remove unused variable
8c5477e8046ca139bac250386c08453da37ec1ae x86, boot: Remove multiple copy of static function sanitize_boot_params()
30a2441cae7b149ff484a697bf9eb8de53240a4f x86/asm: Make more symbols local
deff8a24e1021fb39dddf5f6bc5832e0e3a632ea x86/boot: Annotate local functions
b8c3f9b554e8bd0edb434a54d0dc48e3d9eb6edd x86/boot: Annotate data appropriately
ef1e03152cb027d5925646d4d1772ced7595292f x86/asm: Make some functions local
0679715e714345d273c0e1eb78078535ffc4b2a1 efi/libstub/x86: Avoid globals to store context during mixed mode calls
ac3c76cc6d6deef573dd8c14232f20c6aa744f83 efi/libstub/x86: Use mandatory 16-byte stack alignment in mixed mode
67a6af7ad1d161dbc9c139e868d5549e632923f7 x86/boot: Remove KEEP_SEGMENTS support
90ff226281e1083988a42cfc51f89d91734cc55e efi/x86: Don't depend on firmware GDT layout
ef5a7b5eb13ed88ba9690ab27def3a085332cc8c efi/x86: Remove GDT setup from efi_main
b75e2b076d00751579c73cfbbc8a7eac7d2a0468 x86/boot: GDT limit value should be size - 1
8a3abe30de9fffec8b44adeb78f93ecb0f09b0c5 x86/boot: Micro-optimize GDT loading instructions
3f086189cd3641d212949ff044d8e4486c93d55e x86/boot: Remove run-time relocations from head_{32,64}.S
a3326a0d878c433d69981c504f8c8ade60cd2b51 efi/x86: Use symbolic constants in PE header instead of bare numbers
24b72bb12e84c75e297a5a81f24b921d7a011575 efi: x86: Set the NX-compatibility flag in the PE header
ca209f8b5f61b74782dd4275ebc7173d92cb4905 efi: x86: Fix config name for setting the NX-compatibility flag in the PE header
63bf28ceb3ebbe76048c3fb2987996ca1ae64f83 efi: x86: Wipe setup_data on pure EFI boot
3b8f44fc0810d51b58837cf7fdba3f72f8cffcdc efi/libstub/x86: Use Exit() boot service to exit the stub on errors
8acf63efa1712fa5495425a4224378bb3e1231e0 efi/x86: Avoid using code32_start
d2d7a54f69b67cd0a30e0ebb5307cb2de625baac x86/efistub: Branch straight to kernel entry point from C code
df9215f15206c2a81909ccf60f21d170801dce38 x86/efistub: Simplify and clean up handover entry code
7734a0f31e99c433df3063bbb7e8ee5a16a2cb82 x86/boot: Robustify calling startup_{32,64}() from the decompressor code
79729f26b074a5d2722c27fa76cc45ef721e65cd efi/libstub: Add memory attribute protocol definitions
a37f2699c36a7f6606ba3300f243227856c5ad6b x86/head/64: Switch to KERNEL_CS as soon as new GDT is installed
264b82fdb4989cf6a44a2bcd0c6ea05e8026b2ac x86/decompressor: Don't rely on upper 32 bits of GPRs being preserved
d7156b986d4cc0657fa6dc05c9fcf51c3d55a0fe x86/efistub: Clear BSS in EFI handover protocol entrypoint
8b63cba746f86a754d66e302c43209cc9b9b6e39 x86/decompressor: Store boot_params pointer in callee save register
a2c4fc4d4e2c40b07534094810d915c7354d84a7 x86/boot: Remove run-time relocations from .head.text code
e8972a76aa90c05a0078043413f806c02fcb3487 x86/decompressor: Call trampoline as a normal function
918a7a04e71745e99a0efc6753e587439b794b29 x86/decompressor: Use standard calling convention for trampoline
bd328aa01ff77a45aeffea5fc4521854291db11f x86/decompressor: Avoid the need for a stack in the 32-bit trampoline
64ef578b6b6866bec012544416946533444036c8 x86/decompressor: Call trampoline directly from C code
f97b67a773cd84bd8b55c0a0ec32448a87fc56bb x86/decompressor: Only call the trampoline when changing paging levels
cb83cece57e1889109dd73ea08ee338668c9d1b8 x86/decompressor: Pass pgtable address to trampoline directly
03dda95137d3247564854ad9032c0354273a159d x86/decompressor: Merge trampoline cleanup with switching code
cb1c9e02b0c13032c3aec325643453ba48e96e17 x86/efistub: Perform 4/5 level paging switch from the stub
11078876b7a6a1b7226344fecab968945c806832 x86/efistub: Prefer EFI memory attributes protocol over DXE services
24388292e2d7fae79a0d4183cc91716b851299cf x86/decompressor: Move global symbol references to C code
83381519352d6b5b3e429bf72aaab907480cb6b6 x86/decompressor: Factor out kernel decompression and relocation
c37c9162a2fae026dc8570ad7c5ade0422b0a267 efi/libstub/random: Increase random alloc granularity
4152433c397697acc4b02c4a10d17d5859c2730d arm64: efi: kaslr: Fix occasional random alloc (and boot) failure
9cf42bca30e98a1c6c9e8abf876940a551eaa3d1 efi: libstub: use EFI_LOADER_CODE region when moving the kernel in memory
a37dac5c5dcfe0f1fd58513c16cdbc280a47f628 arm64: efi: Limit allocations to 48-bit addressable physical region
bc5ddceff4c14494d83449ad45c985e6cd353fce efi/libstub: Add limit argument to efi_random_alloc()
31c77a50992e8dd136feed7b67073bb5f1f978cc x86/efistub: Perform SNP feature test while running in the firmware
a1b87d54f4e45ff5e0d081fb1d9db3bf1a8fb39a x86/efistub: Avoid legacy decompressor when doing EFI boot
d55d5bc5d937743aa8ebb7ca3af25111053b5d8c x86/boot: Rename conflicting 'boot_params' pointer to 'boot_params_ptr'
db7724134c26fdf16886a560646d02292563f5a4 x86/boot: efistub: Assign global boot_params variable
50d7cdf7a9b1ab6f4f74a69c84e974d5dc0c1bf1 efi/x86: Avoid physical KASLR on older Dell systems
01638431c465741e071ab34acf3bef3c2570f878 efi/x86: Fix the missing KASLR_FLAG bit in boot_params->hdr.loadflags
29636a5ce87bebab38c533175d72bb800a7581b8 efi: Put Linux specific magic number in the DOS header
bfab35f552ab3dd6d017165bf9de1d1d20f198cc x86/efi: Drop alignment flags from PE section headers
768171d7ebbce005210e1cf8456f043304805c15 x86/boot: Remove the 'bugger off' message
e78d334a5470ead861590ec83158f3b17bd6c807 x86/boot: Mark global variables as static
8eace5b3555606e684739bef5bcdfcfe68235257 x86/boot: Omit compression buffer from PE/COFF image memory footprint
b618d31f112bea3d2daea19190d63e567f32a4db x86/boot: Drop references to startup_64
eac956345f99dda3d68f4ae6cf7b494105e54780 x86/boot: Set EFI handover offset directly in header asm
093ab258e3fb1d1d3afdfd4a69403d44ce90e360 x86/boot: Define setup size in linker script
527afc212231ea9d585b7709c0ab73263ecf0c85 x86/boot: Check that there are no run-time relocations
d1c0272bc1c068f8c2cb3d1b395173602b0df6e7 x86/boot/compressed: Remove, discard, or assert for unwanted sections
aeb92067f6ae994b541d7f9752fe54ed3d108bcc x86/boot: Derive file size from _edata symbol
efa089e63b56bdc5eca754b995cb039dd7a5457e x86/boot: Construct PE/COFF .text section from assembler
fa5750521e0a4efbc1af05223da9c4bbd6c21c83 x86/boot: Drop PE/COFF .reloc section
34951f3c28bdf6481d949a20413b2ce7693687b2 x86/boot: Split off PE/COFF .data section
3e3eabe26dc88692d34cf76ca0e0dd331481cc15 x86/boot: Increase section and file alignment to 4k/512
a7a6a01f88e87dec4bf2365571dd2dc7403d52d0 x86/efistub: Give up if memory attribute protocol returns an error
2f77465b05b1270c832b5e2ee27037672ad2a10a x86/efistub: Avoid placing the kernel below LOAD_PHYSICAL_ADDR

__CHANGES NOT IN UPSTREAM________________
net/gve: update check for little-endianness in gve kconfig
