x86/boot: Split off PE/COFF .data section

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-547.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit 34951f3c28bdf6481d949a20413b2ce7693687b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-547.el8/34951f3c.failed

Describe the code and data of the decompressor binary using separate
.text and .data PE/COFF sections, so that we will be able to map them
using restricted permissions once we increase the section and file
alignment sufficiently. This avoids the need for memory mappings that
are writable and executable at the same time, which is something that
is best avoided for security reasons.

	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
Link: https://lore.kernel.org/r/20230915171623.655440-17-ardb@google.com
(cherry picked from commit 34951f3c28bdf6481d949a20413b2ce7693687b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/Makefile
#	arch/x86/boot/header.S
diff --cc arch/x86/boot/Makefile
index e47ccf98cfb0,3cece19b7473..000000000000
--- a/arch/x86/boot/Makefile
+++ b/arch/x86/boot/Makefile
@@@ -89,7 -89,7 +89,11 @@@ $(obj)/vmlinux.bin: $(obj)/compressed/v
  
  SETUP_OBJS = $(addprefix $(obj)/,$(setup-y))
  
++<<<<<<< HEAD
 +sed-zoffset := -e 's/^\([0-9a-fA-F]*\) [ABCDGRSTVW] \(startup_32\|startup_64\|efi32_stub_entry\|efi64_stub_entry\|efi_pe_entry\|input_data\|_end\|_ehead\|_text\|z_.*\)$$/\#define ZO_\2 0x\1/p'
++=======
+ sed-zoffset := -e 's/^\([0-9a-fA-F]*\) [a-zA-Z] \(startup_32\|efi.._stub_entry\|efi\(32\)\?_pe_entry\|input_data\|kernel_info\|_end\|_ehead\|_text\|_e\?data\|z_.*\)$$/\#define ZO_\2 0x\1/p'
++>>>>>>> 34951f3c28bd (x86/boot: Split off PE/COFF .data section)
  
  quiet_cmd_zoffset = ZOFFSET $@
        cmd_zoffset = $(NM) $< | sed -n $(sed-zoffset) > $@
diff --cc arch/x86/boot/header.S
index 941d1e9413b4,a1f986105f00..000000000000
--- a/arch/x86/boot/header.S
+++ b/arch/x86/boot/header.S
@@@ -133,14 -75,12 +133,18 @@@ optional_header
  	.byte	0x02				# MajorLinkerVersion
  	.byte	0x14				# MinorLinkerVersion
  
++<<<<<<< HEAD
 +	# Filled in by build.c
 +	.long	0				# SizeOfCode
++=======
+ 	.long	ZO__data			# SizeOfCode
++>>>>>>> 34951f3c28bd (x86/boot: Split off PE/COFF .data section)
  
- 	.long	0				# SizeOfInitializedData
+ 	.long	ZO__end - ZO__data		# SizeOfInitializedData
  	.long	0				# SizeOfUninitializedData
  
 -	.long	setup_size + ZO_efi_pe_entry	# AddressOfEntryPoint
 +	# Filled in by build.c
 +	.long	0x0000				# AddressOfEntryPoint
  
  	.long	0x0200				# BaseOfCode
  #ifdef CONFIG_X86_32
@@@ -239,17 -178,31 +243,38 @@@ section_table
  	.byte	0
  	.byte	0
  	.byte	0
++<<<<<<< HEAD
 +	.long	0
 +	.long	0x0				# startup_{32,64}
 +	.long	0				# Size of initialized data
++=======
+ 	.long	ZO__data
+ 	.long	setup_size
+ 	.long	ZO__data			# Size of initialized data
++>>>>>>> 34951f3c28bd (x86/boot: Split off PE/COFF .data section)
  						# on disk
 -	.long	setup_size
 +	.long	0x0				# startup_{32,64}
  	.long	0				# PointerToRelocations
  	.long	0				# PointerToLineNumbers
  	.word	0				# NumberOfRelocations
  	.word	0				# NumberOfLineNumbers
 -	.long	IMAGE_SCN_CNT_CODE		| \
 -		IMAGE_SCN_MEM_READ		| \
 -		IMAGE_SCN_MEM_EXECUTE		# Characteristics
 +	.long	0x60500020			# Characteristics (section flags)
  
++<<<<<<< HEAD
++=======
+ 	.ascii	".data\0\0\0"
+ 	.long	ZO__end - ZO__data		# VirtualSize
+ 	.long	setup_size + ZO__data		# VirtualAddress
+ 	.long	ZO__edata - ZO__data		# SizeOfRawData
+ 	.long	setup_size + ZO__data		# PointerToRawData
+ 
+ 	.long	0, 0, 0
+ 	.long	IMAGE_SCN_CNT_INITIALIZED_DATA	| \
+ 		IMAGE_SCN_MEM_READ		| \
+ 		IMAGE_SCN_MEM_WRITE		# Characteristics
+ 
+ 	.set	section_count, (. - section_table) / 40
++>>>>>>> 34951f3c28bd (x86/boot: Split off PE/COFF .data section)
  #endif /* CONFIG_EFI_STUB */
  
  	# Kernel attributes; used by setup.  This is part 1 of the
* Unmerged path arch/x86/boot/Makefile
* Unmerged path arch/x86/boot/header.S
