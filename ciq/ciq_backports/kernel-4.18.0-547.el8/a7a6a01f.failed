x86/efistub: Give up if memory attribute protocol returns an error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-547.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit a7a6a01f88e87dec4bf2365571dd2dc7403d52d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-547.el8/a7a6a01f.failed

The recently introduced EFI memory attributes protocol should be used
if it exists to ensure that the memory allocation created for the kernel
permits execution. This is needed for compatibility with tightened
requirements related to Windows logo certification for x86 PCs.

Currently, we simply strip the execute protect (XP) attribute from the
entire range, but this might be rejected under some firmware security
policies, and so in a subsequent patch, this will be changed to only
strip XP from the executable region that runs early, and make it
read-only (RO) as well.

In order to catch any issues early, ensure that the memory attribute
protocol works as intended, and give up if it produces spurious errors.

Note that the DXE services based fallback was always based on best
effort, so don't propagate any errors returned by that API.

Fixes: a1b87d54f4e4 ("x86/efistub: Avoid legacy decompressor when doing EFI boot")
	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
(cherry picked from commit a7a6a01f88e87dec4bf2365571dd2dc7403d52d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/firmware/efi/libstub/x86-stub.c
#	drivers/firmware/efi/libstub/x86-stub.h
* Unmerged path drivers/firmware/efi/libstub/x86-stub.c
* Unmerged path drivers/firmware/efi/libstub/x86-stub.h
* Unmerged path drivers/firmware/efi/libstub/x86-stub.c
* Unmerged path drivers/firmware/efi/libstub/x86-stub.h
