x86/boot: Remove KEEP_SEGMENTS support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-547.el8
commit-author Arvind Sankar <nivedita@alum.mit.edu>
commit 67a6af7ad1d161dbc9c139e868d5549e632923f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-547.el8/67a6af7a.failed

Commit a24e785111a3 ("i386: paravirt boot sequence") added this flag for
use by paravirtualized environments such as Xen. However, Xen never made
use of this flag [1], and it was only ever used by lguest [2].

Commit ecda85e70277 ("x86/lguest: Remove lguest support") removed
lguest, so KEEP_SEGMENTS has lost its last user.

[1] https://lore.kernel.org/lkml/4D4B097C.5050405@goop.org
[2] https://www.mail-archive.com/lguest@lists.ozlabs.org/msg00469.html

	Signed-off-by: Arvind Sankar <nivedita@alum.mit.edu>
Link: https://lore.kernel.org/r/20200202171353.3736319-2-nivedita@alum.mit.edu
	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
(cherry picked from commit 67a6af7ad1d161dbc9c139e868d5549e632923f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/x86/boot.txt
diff --cc Documentation/x86/boot.txt
index 5e9b826b5f62,fa7ddc0428c8..000000000000
--- a/Documentation/x86/boot.txt
+++ b/Documentation/x86/boot.txt
@@@ -419,14 -490,14 +419,22 @@@ Protocol:	2.00
  		kernel) to not write early messages that require
  		accessing the display hardware directly.
  
++<<<<<<< HEAD:Documentation/x86/boot.txt
 +  Bit 6 (write): KEEP_SEGMENTS
 +	Protocol: 2.07+
 +	- If 0, reload the segment registers in the 32bit entry point.
 +	- If 1, do not reload the segment registers in the 32bit entry point.
 +		Assume that %cs %ds %ss %es are all set to flat segments with
 +		a base of 0 (or the equivalent for their environment).
++=======
+   Bit 6 (obsolete): KEEP_SEGMENTS
+ 
+ 	Protocol: 2.07+
+ 
+         - This flag is obsolete.
++>>>>>>> 67a6af7ad1d1 (x86/boot: Remove KEEP_SEGMENTS support):Documentation/x86/boot.rst
  
    Bit 7 (write): CAN_USE_HEAP
 -
  	Set this bit to 1 to indicate that the value entered in the
  	heap_end_ptr is valid.  If this field is clear, some setup code
  	functionality will be disabled.
* Unmerged path Documentation/x86/boot.txt
diff --git a/arch/x86/boot/compressed/head_32.S b/arch/x86/boot/compressed/head_32.S
index cfd9c4fe1b7d..0ed0668c3680 100644
--- a/arch/x86/boot/compressed/head_32.S
+++ b/arch/x86/boot/compressed/head_32.S
@@ -61,13 +61,6 @@
 	__HEAD
 ENTRY(startup_32)
 	cld
-	/*
-	 * Test KEEP_SEGMENTS flag to see if the bootloader is asking
-	 * us to not reload segments
-	 */
-	testb	$KEEP_SEGMENTS, BP_loadflags(%esi)
-	jnz	1f
-
 	cli
 	movl	$__BOOT_DS, %eax
 	movl	%eax, %ds
@@ -75,7 +68,6 @@ ENTRY(startup_32)
 	movl	%eax, %fs
 	movl	%eax, %gs
 	movl	%eax, %ss
-1:
 
 /*
  * Calculate the delta between where we were compiled to run
diff --git a/arch/x86/boot/compressed/head_64.S b/arch/x86/boot/compressed/head_64.S
index 059f9dcdd2cc..282e6b18b6bc 100644
--- a/arch/x86/boot/compressed/head_64.S
+++ b/arch/x86/boot/compressed/head_64.S
@@ -53,19 +53,11 @@ SYM_FUNC_START(startup_32)
 	 * all need to be under the 4G limit.
 	 */
 	cld
-	/*
-	 * Test KEEP_SEGMENTS flag to see if the bootloader is asking
-	 * us to not reload segments
-	 */
-	testb $KEEP_SEGMENTS, BP_loadflags(%esi)
-	jnz 1f
-
 	cli
 	movl	$(__BOOT_DS), %eax
 	movl	%eax, %ds
 	movl	%eax, %es
 	movl	%eax, %ss
-1:
 
 /*
  * Calculate the delta between where we were compiled to run
diff --git a/arch/x86/kernel/head_32.S b/arch/x86/kernel/head_32.S
index 57c6666e2997..ba343ecad688 100644
--- a/arch/x86/kernel/head_32.S
+++ b/arch/x86/kernel/head_32.S
@@ -68,11 +68,6 @@ __HEAD
 ENTRY(startup_32)
 	movl pa(initial_stack),%ecx
 	
-	/* test KEEP_SEGMENTS flag to see if the bootloader is asking
-		us to not reload segments */
-	testb $KEEP_SEGMENTS, BP_loadflags(%esi)
-	jnz 2f
-
 /*
  * Set segments to known values.
  */
@@ -83,7 +78,6 @@ ENTRY(startup_32)
 	movl %eax,%fs
 	movl %eax,%gs
 	movl %eax,%ss
-2:
 	leal -__PAGE_OFFSET(%ecx),%esp
 
 /*
