x86: remove cruft from <asm/dma-mapping.h>

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 3cb4503a330159dc5cf2f8382181ccbabbbaa5b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/3cb4503a.failed

<asm/dma-mapping.h> gets pulled in by all drivers using the DMA API.
Remove x86 internal variables and unnecessary includes from it.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Tested-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
(cherry picked from commit 3cb4503a330159dc5cf2f8382181ccbabbbaa5b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/dma-mapping.h
diff --cc arch/x86/include/asm/dma-mapping.h
index ac01094d2e31,1c66708e3062..000000000000
--- a/arch/x86/include/asm/dma-mapping.h
+++ b/arch/x86/include/asm/dma-mapping.h
@@@ -2,19 -2,6 +2,22 @@@
  #ifndef _ASM_X86_DMA_MAPPING_H
  #define _ASM_X86_DMA_MAPPING_H
  
++<<<<<<< HEAD
 +/*
 + * IOMMU interface. See Documentation/core-api/dma-api-howto.rst and
 + * Documentation/core-api/dma-api.rst for documentation.
 + */
 +
 +#include <linux/scatterlist.h>
 +#include <asm/io.h>
 +#include <asm/swiotlb.h>
 +#include <linux/dma-contiguous.h>
 +
 +extern int iommu_merge;
 +extern int panic_on_overflow;
 +
++=======
++>>>>>>> 3cb4503a3301 (x86: remove cruft from <asm/dma-mapping.h>)
  extern const struct dma_map_ops *dma_ops;
  
  static inline const struct dma_map_ops *get_arch_dma_ops(struct bus_type *bus)
* Unmerged path arch/x86/include/asm/dma-mapping.h
diff --git a/arch/x86/include/asm/iommu.h b/arch/x86/include/asm/iommu.h
index bf1ed2ddc74b..9ebc4a51fddb 100644
--- a/arch/x86/include/asm/iommu.h
+++ b/arch/x86/include/asm/iommu.h
@@ -8,6 +8,8 @@
 
 extern int force_iommu, no_iommu;
 extern int iommu_detected;
+extern int iommu_merge;
+extern int panic_on_overflow;
 
 /* 10 seconds */
 #define DMAR_OPERATION_TIMEOUT ((cycles_t) tsc_khz*10*1000)
