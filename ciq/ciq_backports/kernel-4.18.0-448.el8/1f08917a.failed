net/mlx5e: Take packet_merge params directly from the RX res struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Tariq Toukan <tariqt@nvidia.com>
commit 1f08917ab929a6939cb0c95d47f928db43f6d3c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1f08917a.failed

As packet_merge params structure is saved on the RX resources structure, there
is no need to pass it separately.

	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Maxim Mikityanskiy <maximmi@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 1f08917ab929a6939cb0c95d47f928db43f6d3c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/rx_res.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/rx_res.c
index 13056cb9757d,24c32f73040a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/rx_res.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/rx_res.c
@@@ -34,7 -37,6 +34,10 @@@ struct mlx5e_rx_res 
  /* API for rx_res_rss_* */
  
  static int mlx5e_rx_res_rss_init_def(struct mlx5e_rx_res *res,
++<<<<<<< HEAD
 +				     const struct mlx5e_lro_param *init_lro_param,
++=======
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  				     unsigned int init_nch)
  {
  	bool inner_ft_support = res->features & MLX5E_RX_RES_FEATURE_INNER_FT;
@@@ -49,7 -51,7 +52,11 @@@
  		return -ENOMEM;
  
  	err = mlx5e_rss_init(rss, res->mdev, inner_ft_support, res->drop_rqn,
++<<<<<<< HEAD
 +			     init_lro_param);
++=======
+ 			     &res->pkt_merge_param);
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  	if (err)
  		goto err_rss_free;
  
@@@ -274,8 -276,7 +281,12 @@@ struct mlx5e_rx_res *mlx5e_rx_res_alloc
  	return kvzalloc(sizeof(struct mlx5e_rx_res), GFP_KERNEL);
  }
  
++<<<<<<< HEAD
 +static int mlx5e_rx_res_channels_init(struct mlx5e_rx_res *res,
 +				      const struct mlx5e_lro_param *init_lro_param)
++=======
+ static int mlx5e_rx_res_channels_init(struct mlx5e_rx_res *res)
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  {
  	bool inner_ft_support = res->features & MLX5E_RX_RES_FEATURE_INNER_FT;
  	struct mlx5e_tir_builder *builder;
@@@ -306,7 -307,7 +317,11 @@@
  		mlx5e_tir_builder_build_rqt(builder, res->mdev->mlx5e_res.hw_objs.td.tdn,
  					    mlx5e_rqt_get_rqtn(&res->channels[ix].direct_rqt),
  					    inner_ft_support);
++<<<<<<< HEAD
 +		mlx5e_tir_builder_build_lro(builder, init_lro_param);
++=======
+ 		mlx5e_tir_builder_build_packet_merge(builder, &res->pkt_merge_param);
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  		mlx5e_tir_builder_build_direct(builder);
  
  		err = mlx5e_tir_init(&res->channels[ix].direct_tir, builder, res->mdev, true);
@@@ -336,7 -337,7 +351,11 @@@
  		mlx5e_tir_builder_build_rqt(builder, res->mdev->mlx5e_res.hw_objs.td.tdn,
  					    mlx5e_rqt_get_rqtn(&res->channels[ix].xsk_rqt),
  					    inner_ft_support);
++<<<<<<< HEAD
 +		mlx5e_tir_builder_build_lro(builder, init_lro_param);
++=======
+ 		mlx5e_tir_builder_build_packet_merge(builder, &res->pkt_merge_param);
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  		mlx5e_tir_builder_build_direct(builder);
  
  		err = mlx5e_tir_init(&res->channels[ix].xsk_tir, builder, res->mdev, true);
@@@ -447,11 -449,14 +466,22 @@@ int mlx5e_rx_res_init(struct mlx5e_rx_r
  	res->max_nch = max_nch;
  	res->drop_rqn = drop_rqn;
  
++<<<<<<< HEAD
 +	err = mlx5e_rx_res_rss_init_def(res, init_lro_param, init_nch);
 +	if (err)
 +		goto err_out;
 +
 +	err = mlx5e_rx_res_channels_init(res, init_lro_param);
++=======
+ 	res->pkt_merge_param = *init_pkt_merge_param;
+ 	init_rwsem(&res->pkt_merge_param_sem);
+ 
+ 	err = mlx5e_rx_res_rss_init_def(res, init_nch);
+ 	if (err)
+ 		goto err_out;
+ 
+ 	err = mlx5e_rx_res_channels_init(res);
++>>>>>>> 1f08917ab929 (net/mlx5e: Take packet_merge params directly from the RX res struct)
  	if (err)
  		goto err_rss_destroy;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/rx_res.c
