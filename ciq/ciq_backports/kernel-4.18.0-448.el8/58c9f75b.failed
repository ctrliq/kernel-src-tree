selftests: cgroup: Simplify task self migration

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Michal Koutný <mkoutny@suse.com>
commit 58c9f75b86f76895b9dd44f21dc1e37d0f477cc7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/58c9f75b.failed

Simplify task migration by being oblivious about its PID during
migration. This allows to easily migrate individual threads as well.
This change brings no functional change and prepares grounds for thread
granularity migrating tests.

	Signed-off-by: Michal Koutný <mkoutny@suse.com>
	Signed-off-by: Tejun Heo <tj@kernel.org>
(cherry picked from commit 58c9f75b86f76895b9dd44f21dc1e37d0f477cc7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/cgroup/cgroup_util.c
#	tools/testing/selftests/cgroup/cgroup_util.h
#	tools/testing/selftests/cgroup/test_freezer.c
diff --cc tools/testing/selftests/cgroup/cgroup_util.c
index 4cb8e4717357,f6573eac1365..000000000000
--- a/tools/testing/selftests/cgroup/cgroup_util.c
+++ b/tools/testing/selftests/cgroup/cgroup_util.c
@@@ -237,6 -272,24 +237,27 @@@ retry
  	return ret;
  }
  
++<<<<<<< HEAD
++=======
+ int cg_enter(const char *cgroup, int pid)
+ {
+ 	char pidbuf[64];
+ 
+ 	snprintf(pidbuf, sizeof(pidbuf), "%d", pid);
+ 	return cg_write(cgroup, "cgroup.procs", pidbuf);
+ }
+ 
+ int cg_enter_current(const char *cgroup)
+ {
+ 	return cg_write(cgroup, "cgroup.procs", "0");
+ }
+ 
+ int cg_enter_current_thread(const char *cgroup)
+ {
+ 	return cg_write(cgroup, "cgroup.threads", "0");
+ }
+ 
++>>>>>>> 58c9f75b86f7 (selftests: cgroup: Simplify task self migration)
  int cg_run(const char *cgroup,
  	   int (*fn)(const char *cgroup, void *arg),
  	   void *arg)
@@@ -358,3 -411,16 +379,19 @@@ int set_oom_adj_score(int pid, int scor
  	close(fd);
  	return 0;
  }
++<<<<<<< HEAD
++=======
+ 
+ ssize_t proc_read_text(int pid, bool thread, const char *item, char *buf, size_t size)
+ {
+ 	char path[PATH_MAX];
+ 
+ 	if (!pid)
+ 		snprintf(path, sizeof(path), "/proc/%s/%s",
+ 			 thread ? "thread-self" : "self", item);
+ 	else
+ 		snprintf(path, sizeof(path), "/proc/%d/%s", pid, item);
+ 
+ 	return read_text(path, buf, size);
+ }
++>>>>>>> 58c9f75b86f7 (selftests: cgroup: Simplify task self migration)
diff --cc tools/testing/selftests/cgroup/cgroup_util.h
index cabd43fd137a,27ff21d82af1..000000000000
--- a/tools/testing/selftests/cgroup/cgroup_util.h
+++ b/tools/testing/selftests/cgroup/cgroup_util.h
@@@ -32,6 -34,9 +33,12 @@@ extern int cg_write(const char *cgroup
  extern int cg_run(const char *cgroup,
  		  int (*fn)(const char *cgroup, void *arg),
  		  void *arg);
++<<<<<<< HEAD
++=======
+ extern int cg_enter(const char *cgroup, int pid);
+ extern int cg_enter_current(const char *cgroup);
+ extern int cg_enter_current_thread(const char *cgroup);
++>>>>>>> 58c9f75b86f7 (selftests: cgroup: Simplify task self migration)
  extern int cg_run_nowait(const char *cgroup,
  			 int (*fn)(const char *cgroup, void *arg),
  			 void *arg);
@@@ -40,3 -45,6 +47,9 @@@ extern int alloc_pagecache(int fd, size
  extern int alloc_anon(const char *cgroup, void *arg);
  extern int is_swap_enabled(void);
  extern int set_oom_adj_score(int pid, int score);
++<<<<<<< HEAD
++=======
+ extern int cg_wait_for_proc_count(const char *cgroup, int count);
+ extern int cg_killall(const char *cgroup);
+ extern ssize_t proc_read_text(int pid, bool thread, const char *item, char *buf, size_t size);
++>>>>>>> 58c9f75b86f7 (selftests: cgroup: Simplify task self migration)
* Unmerged path tools/testing/selftests/cgroup/test_freezer.c
* Unmerged path tools/testing/selftests/cgroup/cgroup_util.c
* Unmerged path tools/testing/selftests/cgroup/cgroup_util.h
* Unmerged path tools/testing/selftests/cgroup/test_freezer.c
