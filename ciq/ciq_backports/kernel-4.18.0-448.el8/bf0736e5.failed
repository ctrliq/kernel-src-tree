ASoC: SOF: control: use pm_runtime_resume_and_get()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit bf0736e5d4644eb9238a1136625e09126721d2e3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/bf0736e5.failed

Use pm_runtime_resume_and_get() to replace the pm_runtime_get_sync() and
pm_runtime_put_noidle() pattern.

No functional changes.

	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
Link: https://lore.kernel.org/r/20220426184106.102636-2-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit bf0736e5d4644eb9238a1136625e09126721d2e3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/control.c
diff --cc sound/soc/sof/control.c
index ef61936dad59,e0e9efd25d34..000000000000
--- a/sound/soc/sof/control.c
+++ b/sound/soc/sof/control.c
@@@ -409,25 -183,13 +409,29 @@@ int snd_sof_bytes_ext_volatile_get(stru
  	struct soc_bytes_ext *be = (struct soc_bytes_ext *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = be->dobj.private;
  	struct snd_soc_component *scomp = scontrol->scomp;
 -	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
 -	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
 -	int ret, err;
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	struct snd_ctl_tlv header;
 +	struct snd_ctl_tlv __user *tlvd = (struct snd_ctl_tlv __user *)binary_data;
 +	size_t data_size;
 +	int ret;
 +	int err;
 +
 +	/*
 +	 * Decrement the limit by ext bytes header size to
 +	 * ensure the user space buffer is not exceeded.
 +	 */
 +	if (size < sizeof(struct snd_ctl_tlv))
 +		return -ENOSPC;
 +	size -= sizeof(struct snd_ctl_tlv);
  
- 	ret = pm_runtime_get_sync(scomp->dev);
+ 	ret = pm_runtime_resume_and_get(scomp->dev);
  	if (ret < 0 && ret != -EACCES) {
++<<<<<<< HEAD
 +		dev_err_ratelimited(scomp->dev, "error: bytes_ext get failed to resume %d\n", ret);
 +		pm_runtime_put_noidle(scomp->dev);
++=======
+ 		dev_err_ratelimited(scomp->dev, "%s: failed to resume %d\n", __func__, ret);
++>>>>>>> bf0736e5d464 (ASoC: SOF: control: use pm_runtime_resume_and_get())
  		return ret;
  	}
  
* Unmerged path sound/soc/sof/control.c
