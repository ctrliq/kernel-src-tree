swiotlb: fix use after free on error handling path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 4a97739474c402e0a14cf6a432f1920262f6811c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/4a977394.failed

Don't dereference "mem" after it has been freed.  Flip the
two kfree()s around to address this bug.

Fixes: 26ffb91fa5e0 ("swiotlb: split up the global swiotlb lock")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit 4a97739474c402e0a14cf6a432f1920262f6811c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/swiotlb.c
diff --cc kernel/dma/swiotlb.c
index 623d86fa3853,c50e6fe20f37..000000000000
--- a/kernel/dma/swiotlb.c
+++ b/kernel/dma/swiotlb.c
@@@ -831,10 -976,18 +831,21 @@@ static int rmem_swiotlb_device_init(str
  			return -ENOMEM;
  		}
  
++<<<<<<< HEAD
++=======
+ 		mem->areas = kcalloc(nareas, sizeof(*mem->areas),
+ 				GFP_KERNEL);
+ 		if (!mem->areas) {
+ 			kfree(mem->slots);
+ 			kfree(mem);
+ 			return -ENOMEM;
+ 		}
+ 
++>>>>>>> 4a97739474c4 (swiotlb: fix use after free on error handling path)
  		set_memory_decrypted((unsigned long)phys_to_virt(rmem->base),
  				     rmem->size >> PAGE_SHIFT);
 -		swiotlb_init_io_tlb_mem(mem, rmem->base, nslabs, SWIOTLB_FORCE,
 -					false, nareas);
 +		swiotlb_init_io_tlb_mem(mem, rmem->base, nslabs, false);
 +		mem->force_bounce = true;
  		mem->for_alloc = true;
  
  		rmem->priv = mem;
* Unmerged path kernel/dma/swiotlb.c
