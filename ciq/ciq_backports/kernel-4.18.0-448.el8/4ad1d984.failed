md/raid5: Refactor add_stripe_bio()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Logan Gunthorpe <logang@deltatee.com>
commit 4ad1d9849ffa8738b5e9b3f8bda5f17d3b31dfcd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/4ad1d984.failed

Factor out two helper functions from add_stripe_bio(): one to check for
overlap (stripe_bio_overlaps()), and one to actually add the bio to the
stripe (__add_stripe_bio()). The latter function will always succeed.

This will be useful in the next patch so that overlap can be checked for
multiple disks before adding any

	Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Song Liu <song@kernel.org>
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 4ad1d9849ffa8738b5e9b3f8bda5f17d3b31dfcd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid5.c
diff --cc drivers/md/raid5.c
index 7bfe9913dcfe,f243043274ea..000000000000
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@@ -3439,40 -3416,32 +3439,37 @@@ schedule_reconstruction(struct stripe_h
  		s->locked, s->ops_request);
  }
  
- /*
-  * Each stripe/dev can have one or more bion attached.
-  * toread/towrite point to the first in a chain.
-  * The bi_next chain must be in order.
-  */
- static int add_stripe_bio(struct stripe_head *sh, struct bio *bi, int dd_idx,
- 			  int forwrite, int previous)
+ static bool stripe_bio_overlaps(struct stripe_head *sh, struct bio *bi,
+ 				int dd_idx, int forwrite)
  {
- 	struct bio **bip;
  	struct r5conf *conf = sh->raid_conf;
- 	int firstwrite=0;
+ 	struct bio **bip;
  
- 	pr_debug("adding bi b#%llu to stripe s#%llu\n",
- 		(unsigned long long)bi->bi_iter.bi_sector,
- 		(unsigned long long)sh->sector);
+ 	pr_debug("checking bi b#%llu to stripe s#%llu\n",
+ 		 bi->bi_iter.bi_sector, sh->sector);
  
++<<<<<<< HEAD
 +	spin_lock_irq(&sh->stripe_lock);
 +	sh->dev[dd_idx].write_hint = bi->bi_write_hint;
++=======
++>>>>>>> 4ad1d9849ffa (md/raid5: Refactor add_stripe_bio())
  	/* Don't allow new IO added to stripes in batch list */
  	if (sh->batch_head)
- 		goto overlap;
- 	if (forwrite) {
+ 		return true;
+ 
+ 	if (forwrite)
  		bip = &sh->dev[dd_idx].towrite;
- 		if (*bip == NULL)
- 			firstwrite = 1;
- 	} else
+ 	else
  		bip = &sh->dev[dd_idx].toread;
+ 
  	while (*bip && (*bip)->bi_iter.bi_sector < bi->bi_iter.bi_sector) {
  		if (bio_end_sector(*bip) > bi->bi_iter.bi_sector)
- 			goto overlap;
- 		bip = & (*bip)->bi_next;
+ 			return true;
+ 		bip = &(*bip)->bi_next;
  	}
+ 
  	if (*bip && (*bip)->bi_iter.bi_sector < bio_end_sector(bi))
- 		goto overlap;
+ 		return true;
  
  	if (forwrite && raid5_has_ppl(conf)) {
  		/*
* Unmerged path drivers/md/raid5.c
