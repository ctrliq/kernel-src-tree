x86/ldt: Use tlb_gather_mmu_fullmm() when freeing LDT page-tables

jira LE-1907
cve CVE-2022-39188
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Will Deacon <will@kernel.org>
commit 8cf55f24ce6cf90eb8828421e15e9efcd508bd2c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/8cf55f24.failed

free_ldt_pgtables() uses the MMU gather API for batching TLB flushes
over the call to free_pgd_range(). However, tlb_gather_mmu() expects
to operate on user addresses and so passing LDT_{BASE,END}_ADDR will
confuse the range setting logic in __tlb_adjust_range(), causing the
gather to identify a range starting at TASK_SIZE. Such a large range
will be converted into a 'fullmm' flush by the low-level invalidation
code, so change the caller to invoke tlb_gather_mmu_fullmm() directly.

	Signed-off-by: Will Deacon <will@kernel.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Yu Zhao <yuzhao@google.com>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Linus Torvalds <torvalds@linux-foundation.org>
Link: https://lkml.kernel.org/r/20210127235347.1402-7-will@kernel.org
(cherry picked from commit 8cf55f24ce6cf90eb8828421e15e9efcd508bd2c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/ldt.c
diff --cc arch/x86/kernel/ldt.c
index 01b612e1e600,aa15132228da..000000000000
--- a/arch/x86/kernel/ldt.c
+++ b/arch/x86/kernel/ldt.c
@@@ -314,9 -398,15 +314,19 @@@ static void free_ldt_pgtables(struct mm
  	if (!boot_cpu_has(X86_FEATURE_PTI))
  		return;
  
++<<<<<<< HEAD
 +	tlb_gather_mmu(&tlb, mm, start, end);
++=======
+ 	/*
+ 	 * Although free_pgd_range() is intended for freeing user
+ 	 * page-tables, it also works out for kernel mappings on x86.
+ 	 * We use tlb_gather_mmu_fullmm() to avoid confusing the
+ 	 * range-tracking logic in __tlb_adjust_range().
+ 	 */
+ 	tlb_gather_mmu_fullmm(&tlb, mm);
++>>>>>>> 8cf55f24ce6c (x86/ldt: Use tlb_gather_mmu_fullmm() when freeing LDT page-tables)
  	free_pgd_range(&tlb, start, end, start, end);
 -	tlb_finish_mmu(&tlb);
 +	tlb_finish_mmu(&tlb, start, end);
  #endif
  }
  
* Unmerged path arch/x86/kernel/ldt.c
