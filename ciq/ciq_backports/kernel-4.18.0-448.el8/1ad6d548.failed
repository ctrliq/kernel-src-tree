net: icmp: introduce function icmpv6_param_prob_reason()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Menglong Dong <imagedong@tencent.com>
commit 1ad6d548e2a452f21bcee4606ee4ec7afcde5f37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1ad6d548.failed

In order to add the skb drop reasons support to icmpv6_param_prob(),
introduce the function icmpv6_param_prob_reason() and make
icmpv6_param_prob() an inline call to it. This new function will be
used in the following patches.

	Signed-off-by: Menglong Dong <imagedong@tencent.com>
	Reviewed-by: Jiang Biao <benbjiang@tencent.com>
	Reviewed-by: Hao Peng <flyingpeng@tencent.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1ad6d548e2a452f21bcee4606ee4ec7afcde5f37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/icmp.c
diff --cc net/ipv6/icmp.c
index 56cce2f40e72,61770220774e..000000000000
--- a/net/ipv6/icmp.c
+++ b/net/ipv6/icmp.c
@@@ -596,13 -627,15 +596,19 @@@ out
  out_bh_enable:
  	local_bh_enable();
  }
 -EXPORT_SYMBOL(icmp6_send);
  
- /* Slightly more convenient version of icmp6_send.
+ /* Slightly more convenient version of icmp6_send with drop reasons.
   */
- void icmpv6_param_prob(struct sk_buff *skb, u8 code, int pos)
+ void icmpv6_param_prob_reason(struct sk_buff *skb, u8 code, int pos,
+ 			      enum skb_drop_reason reason)
  {
++<<<<<<< HEAD
 +	icmp6_send(skb, ICMPV6_PARAMPROB, code, pos, NULL);
 +	kfree_skb(skb);
++=======
+ 	icmp6_send(skb, ICMPV6_PARAMPROB, code, pos, NULL, IP6CB(skb));
+ 	kfree_skb_reason(skb, reason);
++>>>>>>> 1ad6d548e2a4 (net: icmp: introduce function icmpv6_param_prob_reason())
  }
  
  /* Generate icmpv6 with type/code ICMPV6_DEST_UNREACH/ICMPV6_ADDR_UNREACH
diff --git a/include/linux/icmpv6.h b/include/linux/icmpv6.h
index ef1cbb5f454f..24d31d0bbb40 100644
--- a/include/linux/icmpv6.h
+++ b/include/linux/icmpv6.h
@@ -35,8 +35,9 @@ extern int				icmpv6_init(void);
 extern int				icmpv6_err_convert(u8 type, u8 code,
 							   int *err);
 extern void				icmpv6_cleanup(void);
-extern void				icmpv6_param_prob(struct sk_buff *skb,
-							  u8 code, int pos);
+extern void				icmpv6_param_prob_reason(struct sk_buff *skb,
+								 u8 code, int pos,
+								 enum skb_drop_reason reason);
 
 struct flowi6;
 struct in6_addr;
@@ -47,6 +48,12 @@ extern void				icmpv6_flow_init(struct sock *sk,
 							 const struct in6_addr *daddr,
 							 int oif);
 
+static inline void icmpv6_param_prob(struct sk_buff *skb, u8 code, int pos)
+{
+	icmpv6_param_prob_reason(skb, code, pos,
+				 SKB_DROP_REASON_NOT_SPECIFIED);
+}
+
 static inline bool icmpv6_is_err(int type)
 {
 	switch (type) {
* Unmerged path net/ipv6/icmp.c
