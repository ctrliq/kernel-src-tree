ASoC: SOF: Intel: hda-dai: use snd_soc_dai_get_widget() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit 5ef85c9e42e5fc549e934669fdca352b3da97ec4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/5ef85c9e.failed

Use helper instead of open-coding the same thing multiple times.

	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
Link: https://lore.kernel.org/r/20220421203201.1550328-6-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 5ef85c9e42e5fc549e934669fdca352b3da97ec4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dai.c
diff --cc sound/soc/sof/intel/hda-dai.c
index 97bf291cb5b8,245009809894..000000000000
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@@ -248,15 -203,10 +248,19 @@@ static int hda_link_hw_params(struct sn
  
  	stream_tag = hdac_stream(hext_stream)->stream_tag;
  
++<<<<<<< HEAD
 +	hda_stream = hstream_to_sof_hda_stream(hext_stream);
 +
 +	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
 +		w = dai->playback_widget;
 +	else
 +		w = dai->capture_widget;
++=======
+ 	w = snd_soc_dai_get_widget(dai, substream->stream);
++>>>>>>> 5ef85c9e42e5 (ASoC: SOF: Intel: hda-dai: use snd_soc_dai_get_widget() helper)
  
  	/* set up the DAI widget and send the DAI_CONFIG with the new tag */
 -	ret = hda_dai_widget_update(w, stream_tag - 1, true);
 +	ret = hda_link_dai_widget_update(hda_stream, w, stream_tag - 1, true);
  	if (ret < 0)
  		return ret;
  
@@@ -428,13 -356,10 +432,10 @@@ static int hda_link_hw_free(struct snd_
  
  	hda_stream = hstream_to_sof_hda_stream(hext_stream);
  
- 	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
- 		w = dai->playback_widget;
- 	else
- 		w = dai->capture_widget;
+ 	w = snd_soc_dai_get_widget(dai, substream->stream);
  
  	/* free the link DMA channel in the FW and the DAI widget */
 -	ret = hda_dai_widget_update(w, DMA_CHAN_INVALID, false);
 +	ret = hda_link_dai_widget_update(hda_stream, w, DMA_CHAN_INVALID, false);
  	if (ret < 0)
  		return ret;
  
@@@ -474,30 -399,14 +475,27 @@@ struct ssp_dai_dma_data 
  static int ssp_dai_setup_or_free(struct snd_pcm_substream *substream, struct snd_soc_dai *dai,
  				 bool setup)
  {
 +	struct snd_soc_component *component;
 +	struct snd_sof_widget *swidget;
  	struct snd_soc_dapm_widget *w;
 +	struct sof_ipc_fw_version *v;
 +	struct snd_sof_dev *sdev;
  
- 	if (substream->stream == SNDRV_PCM_STREAM_PLAYBACK)
- 		w = dai->playback_widget;
- 	else
- 		w = dai->capture_widget;
+ 	w = snd_soc_dai_get_widget(dai, substream->stream);
  
 +	swidget = w->dobj.private;
 +	component = swidget->scomp;
 +	sdev = snd_soc_component_get_drvdata(component);
 +	v = &sdev->fw_ready.version;
 +
 +	/* DAI_CONFIG IPC during hw_params is not supported in older firmware */
 +	if (v->abi_version < SOF_ABI_VER(3, 18, 0))
 +		return 0;
 +
  	if (setup)
 -		return hda_ctrl_dai_widget_setup(w, SOF_DAI_CONFIG_FLAGS_NONE, NULL);
 +		return hda_ctrl_dai_widget_setup(w);
  
 -	return hda_ctrl_dai_widget_free(w, SOF_DAI_CONFIG_FLAGS_NONE, NULL);
 +	return hda_ctrl_dai_widget_free(w);
  }
  
  static int ssp_dai_startup(struct snd_pcm_substream *substream,
* Unmerged path sound/soc/sof/intel/hda-dai.c
