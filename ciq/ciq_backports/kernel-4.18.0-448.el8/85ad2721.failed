s390/pci: read clp_list_pci_req only once

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre Morel <pmorel@linux.ibm.com>
commit 85ad27215ca57d02bb7c43d76f65a865dc863b59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/85ad2721.failed

We do not have to reset the fh_list in the loop.

	Signed-off-by: Pierre Morel <pmorel@linux.ibm.com>
	Reviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit 85ad27215ca57d02bb7c43d76f65a865dc863b59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci_clp.c
diff --cc arch/s390/pci/pci_clp.c
index 45c5438cc74b,be077b39da33..000000000000
--- a/arch/s390/pci/pci_clp.c
+++ b/arch/s390/pci/pci_clp.c
@@@ -364,6 -372,29 +364,32 @@@ out
  	return rc;
  }
  
++<<<<<<< HEAD
++=======
+ static int clp_find_pci(struct clp_req_rsp_list_pci *rrb, u32 fid,
+ 			struct clp_fh_list_entry *entry)
+ {
+ 	struct clp_fh_list_entry *fh_list;
+ 	u64 resume_token = 0;
+ 	int nentries, i, rc;
+ 
+ 	do {
+ 		rc = clp_list_pci_req(rrb, &resume_token, &nentries);
+ 		if (rc)
+ 			return rc;
+ 		fh_list = rrb->response.fh_list;
+ 		for (i = 0; i < nentries; i++) {
+ 			if (fh_list[i].fid == fid) {
+ 				*entry = fh_list[i];
+ 				return 0;
+ 			}
+ 		}
+ 	} while (resume_token);
+ 
+ 	return -ENODEV;
+ }
+ 
++>>>>>>> 85ad27215ca5 (s390/pci: read clp_list_pci_req only once)
  static void __clp_add(struct clp_fh_list_entry *entry, void *data)
  {
  	struct zpci_dev *zdev;
* Unmerged path arch/s390/pci/pci_clp.c
