fbcon: call fbcon_fb_bind directly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 0e0f3250d4402d60f4571d076ab27d5af049853e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0e0f3250.failed

Also remove the error return value. That's all errors for either
driver bugs (trying to unbind something that isn't bound), or errors
of the new driver that will take over.

There's nothing the outgoing driver can do about this anyway, so
switch over to void.

	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Cc: Peter Rosin <peda@axentia.se>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Konstantin Khorenko <khorenko@virtuozzo.com>
	Cc: Yisheng Xie <ysxie@foxmail.com>
	Cc: "Michał Mirosław" <mirq-linux@rere.qmqm.pl>
	Cc: Mikulas Patocka <mpatocka@redhat.com>
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: linux-fbdev@vger.kernel.org
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-18-daniel.vetter@ffwll.ch
(cherry picked from commit 0e0f3250d4402d60f4571d076ab27d5af049853e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fb.h
#	include/linux/fbcon.h
diff --cc include/linux/fb.h
index 5bd1a6c3d119,b6ce041d9e13..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -158,11 -158,11 +158,17 @@@ struct fb_cursor_user 
  #define FB_EVENT_CONBLANK               0x0C
  /*      Get drawing requirements        */
  #define FB_EVENT_GET_REQ                0x0D
++<<<<<<< HEAD
 +/*      Unbind from the console if possible */
 +#define FB_EVENT_FB_UNBIND              0x0E
 +/*      A hardware display blank early change occured */
++=======
+ /*      CONSOLE-SPECIFIC: remap all consoles to new fb - for vga_switcheroo */
+ #define FB_EVENT_REMAP_ALL_CONSOLE      0x0F
+ /*      A hardware display blank early change occurred */
++>>>>>>> 0e0f3250d440 (fbcon: call fbcon_fb_bind directly)
  #define FB_EARLY_EVENT_BLANK		0x10
 -/*      A hardware display blank revert early change occurred */
 +/*      A hardware display blank revert early change occured */
  #define FB_R_EARLY_EVENT_BLANK		0x11
  
  struct fb_event {
diff --cc include/linux/fbcon.h
index 34abc144f9f8,38d44fdb6d14..000000000000
--- a/include/linux/fbcon.h
+++ b/include/linux/fbcon.h
@@@ -6,13 -6,13 +6,21 @@@ void __init fb_console_init(void)
  void __exit fb_console_exit(void);
  int fbcon_fb_registered(struct fb_info *info);
  void fbcon_fb_unregistered(struct fb_info *info);
++<<<<<<< HEAD
 +void fbcon_remap_all(struct fb_info *info);
++=======
+ void fbcon_fb_unbind(struct fb_info *info);
++>>>>>>> 0e0f3250d440 (fbcon: call fbcon_fb_bind directly)
  #else
  static inline void fb_console_init(void) {}
  static inline void fb_console_exit(void) {}
  static inline int fbcon_fb_registered(struct fb_info *info) { return 0; }
  static inline void fbcon_fb_unregistered(struct fb_info *info) {}
++<<<<<<< HEAD
 +static inline void fbcon_remap_all(struct fb_info *info) {}
++=======
+ static inline void fbcon_fb_unbind(struct fb_info *info) {}
++>>>>>>> 0e0f3250d440 (fbcon: call fbcon_fb_bind directly)
  #endif
  
  #endif /* _LINUX_FBCON_H */
diff --git a/drivers/video/fbdev/core/fbcon.c b/drivers/video/fbdev/core/fbcon.c
index 689e13ab3084..3b9a963a41db 100644
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@ -3057,7 +3057,7 @@ static int fbcon_mode_deleted(struct fb_info *info,
 }
 
 #ifdef CONFIG_VT_HW_CONSOLE_BINDING
-static int fbcon_unbind(void)
+static void fbcon_unbind(void)
 {
 	int ret;
 
@@ -3066,25 +3066,21 @@ static int fbcon_unbind(void)
 
 	if (!ret)
 		fbcon_has_console_bind = 0;
-
-	return ret;
 }
 #else
-static inline int fbcon_unbind(void)
-{
-	return -EINVAL;
-}
+static inline void fbcon_unbind(void) {}
 #endif /* CONFIG_VT_HW_CONSOLE_BINDING */
 
 /* called with console_lock held */
-static int fbcon_fb_unbind(int idx)
+void fbcon_fb_unbind(struct fb_info *info)
 {
 	int i, new_idx = -1, ret = 0;
+	int idx = info->node;
 
 	WARN_CONSOLE_UNLOCKED();
 
 	if (!fbcon_has_console_bind)
-		return 0;
+		return;
 
 	for (i = first_fb_vc; i <= last_fb_vc; i++) {
 		if (con2fb_map[i] != idx &&
@@ -3117,15 +3113,13 @@ static int fbcon_fb_unbind(int idx)
 								     idx, 0);
 					if (ret) {
 						con2fb_map[i] = idx;
-						return ret;
+						return;
 					}
 				}
 			}
 		}
-		ret = fbcon_unbind();
+		fbcon_unbind();
 	}
-
-	return ret;
 }
 
 /* called with console_lock held */
@@ -3365,10 +3359,6 @@ static int fbcon_event_notify(struct notifier_block *self,
 		mode = event->data;
 		ret = fbcon_mode_deleted(info, mode);
 		break;
-	case FB_EVENT_FB_UNBIND:
-		idx = info->node;
-		ret = fbcon_fb_unbind(idx);
-		break;
 	case FB_EVENT_SET_CONSOLE_MAP:
 		/* called with console lock held */
 		con2fb = event->data;
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index e0a48e4a47a0..ecef17dc249c 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -1693,8 +1693,6 @@ static int do_register_framebuffer(struct fb_info *fb_info)
 
 static int unbind_console(struct fb_info *fb_info)
 {
-	struct fb_event event;
-	int ret;
 	int i = fb_info->node;
 
 	if (i < 0 || i >= FB_MAX || registered_fb[i] != fb_info)
@@ -1702,12 +1700,11 @@ static int unbind_console(struct fb_info *fb_info)
 
 	console_lock();
 	lock_fb_info(fb_info);
-	event.info = fb_info;
-	ret = fb_notifier_call_chain(FB_EVENT_FB_UNBIND, &event);
+	fbcon_fb_unbind(fb_info);
 	unlock_fb_info(fb_info);
 	console_unlock();
 
-	return ret;
+	return 0;
 }
 
 static int __unlink_framebuffer(struct fb_info *fb_info);
* Unmerged path include/linux/fb.h
* Unmerged path include/linux/fbcon.h
