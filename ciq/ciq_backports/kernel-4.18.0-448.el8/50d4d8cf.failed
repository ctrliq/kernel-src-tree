ASoC: SOF: sof-audio: Use the widget_kcontrol_setup ops for kcontrol set up

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
commit 50d4d8cf544dfbb9668dce87a21580fedb6e827f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/50d4d8cf.failed

Remove the local implementation and switch to the IPC neutral ops to
set up the kcontrols associated with the swidget.

The set up call uses snd_sof_ipc_set_get_comp_data() which is largely an
IPC3 parsing function.

	Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Daniel Baluta <daniel.baluta@nxp.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20220405172708.122168-15-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 50d4d8cf544dfbb9668dce87a21580fedb6e827f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/sof-audio.c
diff --cc sound/soc/sof/sof-audio.c
index 59867de987af,c0a442272ad6..000000000000
--- a/sound/soc/sof/sof-audio.c
+++ b/sound/soc/sof/sof-audio.c
@@@ -12,79 -12,6 +12,82 @@@
  #include "sof-audio.h"
  #include "ops.h"
  
++<<<<<<< HEAD
 +static int sof_kcontrol_setup(struct snd_sof_dev *sdev, struct snd_sof_control *scontrol)
 +{
 +	int ret;
 +
 +	/* reset readback offset for scontrol */
 +	scontrol->readback_offset = 0;
 +
 +	ret = snd_sof_ipc_set_get_comp_data(scontrol, true);
 +	if (ret < 0)
 +		dev_err(sdev->dev, "error: failed kcontrol value set for widget: %d\n",
 +			scontrol->comp_id);
 +
 +	return ret;
 +}
 +
 +static int sof_dai_config_setup(struct snd_sof_dev *sdev, struct snd_sof_dai *dai)
 +{
 +	struct sof_dai_private_data *private = dai->private;
 +	struct sof_ipc_dai_config *config;
 +	struct sof_ipc_reply reply;
 +	int ret;
 +
 +	config = &private->dai_config[dai->current_config];
 +	if (!config) {
 +		dev_err(sdev->dev, "error: no config for DAI %s\n", dai->name);
 +		return -EINVAL;
 +	}
 +
 +	/* set NONE flag to clear all previous settings */
 +	config->flags = FIELD_PREP(SOF_DAI_CONFIG_FLAGS_MASK, SOF_DAI_CONFIG_FLAGS_NONE);
 +
 +	ret = sof_ipc_tx_message(sdev->ipc, config->hdr.cmd, config, config->hdr.size,
 +				 &reply, sizeof(reply));
 +
 +	if (ret < 0)
 +		dev_err(sdev->dev, "error: failed to set dai config for %s\n", dai->name);
 +
 +	return ret;
 +}
 +
 +static int sof_widget_kcontrol_setup(struct snd_sof_dev *sdev, struct snd_sof_widget *swidget)
 +{
 +	struct snd_sof_control *scontrol;
 +	int ret;
 +
 +	/* set up all controls for the widget */
 +	list_for_each_entry(scontrol, &sdev->kcontrol_list, list)
 +		if (scontrol->comp_id == swidget->comp_id) {
 +			/* set kcontrol data in DSP */
 +			ret = sof_kcontrol_setup(sdev, scontrol);
 +			if (ret < 0) {
 +				dev_err(sdev->dev, "error: fail to set up kcontrols for widget %s\n",
 +					swidget->widget->name);
 +				return ret;
 +			}
 +
 +			/*
 +			 * Read back the data from the DSP for static widgets. This is particularly
 +			 * useful for binary kcontrols associated with static pipeline widgets to
 +			 * initialize the data size to match that in the DSP.
 +			 */
 +			if (swidget->dynamic_pipeline_widget)
 +				continue;
 +
 +			ret = snd_sof_ipc_set_get_comp_data(scontrol, false);
 +			if (ret < 0)
 +				dev_warn(sdev->dev, "Failed kcontrol get for control in widget %s\n",
 +					 swidget->widget->name);
 +		}
 +
 +	return 0;
 +}
 +
++=======
++>>>>>>> 50d4d8cf544d (ASoC: SOF: sof-audio: Use the widget_kcontrol_setup ops for kcontrol set up)
  static void sof_reset_route_setup_status(struct snd_sof_dev *sdev, struct snd_sof_widget *widget)
  {
  	struct snd_sof_route *sroute;
@@@ -269,16 -131,10 +272,23 @@@ int sof_widget_setup(struct snd_sof_de
  	}
  
  	/* restore kcontrols for widget */
++<<<<<<< HEAD
 +	ret = sof_widget_kcontrol_setup(sdev, swidget);
 +	if (ret < 0) {
 +		dev_err(sdev->dev, "error: failed to restore kcontrols for widget %s\n",
 +			swidget->widget->name);
 +		/*
 +		 * widget use_count and core ref_count will both be decremented by
 +		 * sof_widget_free()
 +		 */
 +		sof_widget_free(sdev, swidget);
 +		return ret;
++=======
+ 	if (tplg_ops->control->widget_kcontrol_setup) {
+ 		ret = tplg_ops->control->widget_kcontrol_setup(sdev, swidget);
+ 		if (ret < 0)
+ 			goto widget_free;
++>>>>>>> 50d4d8cf544d (ASoC: SOF: sof-audio: Use the widget_kcontrol_setup ops for kcontrol set up)
  	}
  
  	dev_dbg(sdev->dev, "widget %s setup complete\n", swidget->widget->name);
* Unmerged path sound/soc/sof/sof-audio.c
