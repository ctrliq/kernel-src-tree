sbitmap: add helper to clear a batch of tags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Jens Axboe <axboe@kernel.dk>
commit 1aec5e4a2962f7e0b3fb3e7308dd726be2472c26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1aec5e4a.failed

sbitmap currently only supports clearing tags one-by-one, add a helper
that allows the caller to pass in an array of tags to clear.

	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 1aec5e4a2962f7e0b3fb3e7308dd726be2472c26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/sbitmap.c
diff --cc lib/sbitmap.c
index 1e4e3438328f,c6e2f1f2c4d2..000000000000
--- a/lib/sbitmap.c
+++ b/lib/sbitmap.c
@@@ -625,9 -692,7 +665,13 @@@ void sbitmap_queue_clear(struct sbitmap
  	 */
  	smp_mb__after_atomic();
  	sbitmap_queue_wake_up(sbq);
++<<<<<<< HEAD
 +
 +	if (likely(!sbq->sb.round_robin && nr < sbq->sb.depth))
 +		*per_cpu_ptr(alloc_hint, cpu) = nr;
++=======
+ 	sbitmap_update_cpu_hint(&sbq->sb, cpu, nr);
++>>>>>>> 1aec5e4a2962 (sbitmap: add helper to clear a batch of tags)
  }
  EXPORT_SYMBOL_GPL(sbitmap_queue_clear);
  
diff --git a/include/linux/sbitmap.h b/include/linux/sbitmap.h
index 3a3d03813153..f9c11a068fbb 100644
--- a/include/linux/sbitmap.h
+++ b/include/linux/sbitmap.h
@@ -551,6 +551,17 @@ void sbitmap_queue_min_shallow_depth(struct sbitmap_queue *sbq,
 void sbitmap_queue_clear(struct sbitmap_queue *sbq, unsigned int nr,
 			 unsigned int cpu);
 
+/**
+ * sbitmap_queue_clear_batch() - Free a batch of allocated bits
+ * &struct sbitmap_queue.
+ * @sbq: Bitmap to free from.
+ * @offset: offset for each tag in array
+ * @tags: array of tags
+ * @nr_tags: number of tags in array
+ */
+void sbitmap_queue_clear_batch(struct sbitmap_queue *sbq, int offset,
+				int *tags, int nr_tags);
+
 static inline int sbq_index_inc(int index)
 {
 	return (index + 1) & (SBQ_WAIT_QUEUES - 1);
* Unmerged path lib/sbitmap.c
