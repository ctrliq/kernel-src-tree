gve: Recording rx queue before sending to napi

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Tao Liu <xliutaox@google.com>
commit 084cbb2ec3af2d23be9de65fcc9493e21e265859
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/084cbb2e.failed

This caused a significant performance degredation when using generic XDP
with multiple queues.

Fixes: f5cedc84a30d2 ("gve: Add transmit and receive support")
	Signed-off-by: Tao Liu <xliutaox@google.com>
Link: https://lore.kernel.org/r/20220207175901.2486596-1-jeroendb@google.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 084cbb2ec3af2d23be9de65fcc9493e21e265859)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/google/gve/gve_rx.c
diff --cc drivers/net/ethernet/google/gve/gve_rx.c
index 08ac1522c471,e4e98aa7745f..000000000000
--- a/drivers/net/ethernet/google/gve/gve_rx.c
+++ b/drivers/net/ethernet/google/gve/gve_rx.c
@@@ -463,10 -603,13 +463,16 @@@ static bool gve_rx(struct gve_rx_ring *
  
  	/* parse flags & pass relevant info up */
  	if (likely(feat & NETIF_F_RXHASH) &&
 -	    gve_needs_rss(first_desc->flags_seq))
 -		skb_set_hash(skb, be32_to_cpu(first_desc->rss_hash),
 -			     gve_rss_type(first_desc->flags_seq));
 +	    gve_needs_rss(rx_desc->flags_seq))
 +		skb_set_hash(skb, be32_to_cpu(rx_desc->rss_hash),
 +			     gve_rss_type(rx_desc->flags_seq));
  
++<<<<<<< HEAD
++=======
+ 	*packet_size_bytes = skb->len + (skb->protocol ? ETH_HLEN : 0);
+ 	*work_done = work_cnt;
+ 	skb_record_rx_queue(skb, rx->q_num);
++>>>>>>> 084cbb2ec3af (gve: Recording rx queue before sending to napi)
  	if (skb_is_nonlinear(skb))
  		napi_gro_frags(napi);
  	else
* Unmerged path drivers/net/ethernet/google/gve/gve_rx.c
