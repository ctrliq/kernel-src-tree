blk-mq: do not update io_ticks with passthrough requests

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Haisu Wang <haisuwang@tencent.com>
commit b81c14ca14b631aa1abae32fb5ae75b5e9251012
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/b81c14ca.failed

Flush or passthrough requests are not accounted as normal IO in completion.
To reflect iostat for slow IO, io_ticks is updated when stat show called
based on inflight numbers.
It may cause inconsistent io_ticks calculation result.

So do not account non-passthrough request when check inflight.

Fixes: 86d7331299fd ("block: update io_ticks when io hang")
	Signed-off-by: Haisu Wang <haisuwang@tencent.com>
	Reviewed-by: samuelliao <samuelliao@tencent.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20220530064059.1120058-1-haisuwang@tencent.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit b81c14ca14b631aa1abae32fb5ae75b5e9251012)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.c
diff --cc block/blk-mq.c
index b62f7d8c19fe,30f4565623a8..000000000000
--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@@ -105,7 -133,8 +105,12 @@@ static bool blk_mq_check_inflight(struc
  {
  	struct mq_inflight *mi = priv;
  
++<<<<<<< HEAD
 +	if ((!mi->part->partno || rq->part == mi->part) &&
++=======
+ 	if (rq->part && blk_do_io_stat(rq) &&
+ 	    (!mi->part->bd_partno || rq->part == mi->part) &&
++>>>>>>> b81c14ca14b6 (blk-mq: do not update io_ticks with passthrough requests)
  	    blk_mq_rq_state(rq) == MQ_RQ_IN_FLIGHT)
  		mi->inflight[rq_data_dir(rq)]++;
  
* Unmerged path block/blk-mq.c
