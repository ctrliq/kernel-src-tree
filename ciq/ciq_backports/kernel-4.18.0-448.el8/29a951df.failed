mm: fix clear_refs_write locking

jira LE-1907
cve CVE-2022-39188
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Linus Torvalds <torvalds@linux-foundation.org>
commit 29a951dfb3c3263c3a0f3bd9f7f2c2cfde4baedb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/29a951df.failed

Turning page table entries read-only requires the mmap_sem held for
writing.

So stop doing the odd games with turning things from read locks to write
locks and back.  Just get the write lock.

	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 29a951dfb3c3263c3a0f3bd9f7f2c2cfde4baedb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/proc/task_mmu.c
diff --cc fs/proc/task_mmu.c
index 3945b2d54401,ab7d700b2caa..000000000000
--- a/fs/proc/task_mmu.c
+++ b/fs/proc/task_mmu.c
@@@ -1156,35 -1233,8 +1150,40 @@@ static ssize_t clear_refs_write(struct 
  			for (vma = mm->mmap; vma; vma = vma->vm_next) {
  				if (!(vma->vm_flags & VM_SOFTDIRTY))
  					continue;
++<<<<<<< HEAD
 +				mmap_read_unlock(mm);
 +				if (mmap_write_lock_killable(mm)) {
 +					count = -EINTR;
 +					goto out_mm;
 +				}
 +				/*
 +				 * Avoid to modify vma->vm_flags
 +				 * without locked ops while the
 +				 * coredump reads the vm_flags.
 +				 */
 +				if (!mmget_still_valid(mm)) {
 +					/*
 +					 * Silently return "count"
 +					 * like if get_task_mm()
 +					 * failed. FIXME: should this
 +					 * function have returned
 +					 * -ESRCH if get_task_mm()
 +					 * failed like if
 +					 * get_proc_task() fails?
 +					 */
 +					mmap_write_unlock(mm);
 +					goto out_mm;
 +				}
 +				for (vma = mm->mmap; vma; vma = vma->vm_next) {
 +					vma->vm_flags &= ~VM_SOFTDIRTY;
 +					vma_set_page_prot(vma);
 +				}
 +				mmap_write_downgrade(mm);
 +				break;
++=======
+ 				vma->vm_flags &= ~VM_SOFTDIRTY;
+ 				vma_set_page_prot(vma);
++>>>>>>> 29a951dfb3c3 (mm: fix clear_refs_write locking)
  			}
  
  			mmu_notifier_range_init(&range, MMU_NOTIFY_SOFT_DIRTY,
* Unmerged path fs/proc/task_mmu.c
