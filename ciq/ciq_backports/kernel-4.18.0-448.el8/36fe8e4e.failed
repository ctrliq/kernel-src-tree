wifi: mac80211: always free sta in __sta_info_alloc in case of error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Lorenzo Bianconi <lorenzo@kernel.org>
commit 36fe8e4e5cb02131719612aea1e64379670d1846
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/36fe8e4e.failed

Free sta pointer in __sta_info_alloc routine if sta_info_alloc_link()
fails.

Fixes: 246b39e4a1ba5 ("wifi: mac80211: refactor some sta_info link handling")
	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
Link: https://lore.kernel.org/r/a3d079208684cddbc25289f7f7e0fed795b0cad4.1661260857.git.lorenzo@kernel.org
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 36fe8e4e5cb02131719612aea1e64379670d1846)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/sta_info.c
diff --cc net/mac80211/sta_info.c
index d25b297851c4,330dab41f2fe..000000000000
--- a/net/mac80211/sta_info.c
+++ b/net/mac80211/sta_info.c
@@@ -345,11 -490,18 +345,26 @@@ struct sta_info *sta_info_alloc(struct 
  	if (!sta)
  		return NULL;
  
++<<<<<<< HEAD
 +	if (ieee80211_hw_check(hw, USES_RSS)) {
 +		sta->pcpu_rx_stats =
 +			alloc_percpu_gfp(struct ieee80211_sta_rx_stats, gfp);
 +		if (!sta->pcpu_rx_stats)
 +			goto free;
++=======
+ 	sta->local = local;
+ 	sta->sdata = sdata;
+ 
+ 	if (sta_info_alloc_link(local, &sta->deflink, gfp))
+ 		goto free;
+ 
+ 	if (link_id >= 0) {
+ 		sta_info_add_link(sta, link_id, &sta->deflink,
+ 				  &sta->sta.deflink);
+ 		sta->sta.valid_links = BIT(link_id);
+ 	} else {
+ 		sta_info_add_link(sta, 0, &sta->deflink, &sta->sta.deflink);
++>>>>>>> 36fe8e4e5cb0 (wifi: mac80211: always free sta in __sta_info_alloc in case of error)
  	}
  
  	spin_lock_init(&sta->lock);
* Unmerged path net/mac80211/sta_info.c
