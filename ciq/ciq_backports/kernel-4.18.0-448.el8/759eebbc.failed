netfilter: flowtable: add function to invoke garbage collection immediately

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 759eebbcfafcefa23b59e912396306543764bd3c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/759eebbc.failed

Expose nf_flow_table_gc_run() to force a garbage collector run from the
offload infrastructure.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 759eebbcfafcefa23b59e912396306543764bd3c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_flow_table_core.c
diff --cc net/netfilter/nf_flow_table_core.c
index 45760c6a73eb,60fc1e1b7182..000000000000
--- a/net/netfilter/nf_flow_table_core.c
+++ b/net/netfilter/nf_flow_table_core.c
@@@ -398,7 -447,7 +403,11 @@@ static void nf_flow_offload_work_gc(str
  	struct nf_flowtable *flow_table;
  
  	flow_table = container_of(work, struct nf_flowtable, gc_work.work);
++<<<<<<< HEAD
 +	nf_flow_table_iterate(flow_table, nf_flow_offload_gc_step, flow_table);
++=======
+ 	nf_flow_table_gc_run(flow_table);
++>>>>>>> 759eebbcfafc (netfilter: flowtable: add function to invoke garbage collection immediately)
  	queue_delayed_work(system_power_efficient_wq, &flow_table->gc_work, HZ);
  }
  
@@@ -585,11 -606,11 +594,19 @@@ void nf_flow_table_free(struct nf_flowt
  
  	cancel_delayed_work_sync(&flow_table->gc_work);
  	nf_flow_table_iterate(flow_table, nf_flow_table_do_cleanup, NULL);
++<<<<<<< HEAD
 +	nf_flow_table_iterate(flow_table, nf_flow_offload_gc_step, flow_table);
 +	nf_flow_table_offload_flush(flow_table);
 +	if (nf_flowtable_hw_offload(flow_table))
 +		nf_flow_table_iterate(flow_table, nf_flow_offload_gc_step,
 +				      flow_table);
++=======
+ 	nf_flow_table_gc_run(flow_table);
+ 	nf_flow_table_offload_flush(flow_table);
+ 	if (nf_flowtable_hw_offload(flow_table))
+ 		nf_flow_table_gc_run(flow_table);
+ 
++>>>>>>> 759eebbcfafc (netfilter: flowtable: add function to invoke garbage collection immediately)
  	rhashtable_destroy(&flow_table->rhashtable);
  }
  EXPORT_SYMBOL_GPL(nf_flow_table_free);
diff --git a/include/net/netfilter/nf_flow_table.h b/include/net/netfilter/nf_flow_table.h
index 486d2dcb2ef7..caefce618fee 100644
--- a/include/net/netfilter/nf_flow_table.h
+++ b/include/net/netfilter/nf_flow_table.h
@@ -216,6 +216,7 @@ void flow_offload_refresh(struct nf_flowtable *flow_table,
 
 struct flow_offload_tuple_rhash *flow_offload_lookup(struct nf_flowtable *flow_table,
 						     struct flow_offload_tuple *tuple);
+void nf_flow_table_gc_run(struct nf_flowtable *flow_table);
 void nf_flow_table_gc_cleanup(struct nf_flowtable *flowtable,
 			      struct net_device *dev);
 void nf_flow_table_cleanup(struct net_device *dev);
* Unmerged path net/netfilter/nf_flow_table_core.c
