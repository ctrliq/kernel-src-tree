net/mlx5e: Use tc sample stubs instead of ifdefs in source file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Roi Dayan <roid@nvidia.com>
commit f3e02e479debb37777696c9f984f75152beeb56d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/f3e02e47.failed

Instead of having sparse ifdefs in source files use a single
ifdef in the tc sample header file and use stubs.

	Signed-off-by: Roi Dayan <roid@nvidia.com>
	Reviewed-by: Maor Dickman <maord@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit f3e02e479debb37777696c9f984f75152beeb56d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
index e9055fc0a779,9ee11715dd6b..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
@@@ -1199,6 -1177,16 +1195,19 @@@ void mlx5e_tc_unoffload_fdb_rules(struc
  	if (attr->flags & MLX5_ESW_ATTR_FLAG_SLOW_PATH)
  		goto offload_rule_0;
  
++<<<<<<< HEAD
++=======
+ 	if (flow_flag_test(flow, CT)) {
+ 		mlx5_tc_ct_delete_flow(get_ct_priv(flow->priv), flow, attr);
+ 		return;
+ 	}
+ 
+ 	if (flow_flag_test(flow, SAMPLE)) {
+ 		mlx5e_tc_sample_unoffload(get_sample_priv(flow->priv), flow->rule[0], attr);
+ 		return;
+ 	}
+ 
++>>>>>>> f3e02e479deb (net/mlx5e: Use tc sample stubs instead of ifdefs in source file)
  	if (attr->esw_attr->split_count)
  		mlx5_eswitch_del_fwd_rule(esw, flow->rule[1], attr);
  
@@@ -5195,11 -4987,7 +5204,13 @@@ int mlx5e_tc_esw_init(struct rhashtabl
  					       MLX5_FLOW_NAMESPACE_FDB,
  					       uplink_priv->post_act);
  
++<<<<<<< HEAD
 +	uplink_priv->int_port_priv = mlx5e_tc_int_port_init(netdev_priv(priv->netdev));
 +
 +#if IS_ENABLED(CONFIG_MLX5_TC_SAMPLE)
++=======
++>>>>>>> f3e02e479deb (net/mlx5e: Use tc sample stubs instead of ifdefs in source file)
  	uplink_priv->tc_psample = mlx5e_tc_sample_init(esw, uplink_priv->post_act);
- #endif
  
  	mapping_id = mlx5_query_nic_system_image_guid(esw->dev);
  
@@@ -5243,10 -5031,7 +5254,12 @@@ err_ht_init
  err_enc_opts_mapping:
  	mapping_destroy(uplink_priv->tunnel_mapping);
  err_tun_mapping:
- #if IS_ENABLED(CONFIG_MLX5_TC_SAMPLE)
  	mlx5e_tc_sample_cleanup(uplink_priv->tc_psample);
++<<<<<<< HEAD
 +#endif
 +	mlx5e_tc_int_port_cleanup(uplink_priv->int_port_priv);
++=======
++>>>>>>> f3e02e479deb (net/mlx5e: Use tc sample stubs instead of ifdefs in source file)
  	mlx5_tc_ct_clean(uplink_priv->ct_priv);
  	netdev_warn(priv->netdev,
  		    "Failed to initialize tc (eswitch), err: %d", err);
@@@ -5266,10 -5051,7 +5279,12 @@@ void mlx5e_tc_esw_cleanup(struct rhasht
  	mapping_destroy(uplink_priv->tunnel_enc_opts_mapping);
  	mapping_destroy(uplink_priv->tunnel_mapping);
  
- #if IS_ENABLED(CONFIG_MLX5_TC_SAMPLE)
  	mlx5e_tc_sample_cleanup(uplink_priv->tc_psample);
++<<<<<<< HEAD
 +#endif
 +	mlx5e_tc_int_port_cleanup(uplink_priv->int_port_priv);
++=======
++>>>>>>> f3e02e479deb (net/mlx5e: Use tc sample stubs instead of ifdefs in source file)
  	mlx5_tc_ct_clean(uplink_priv->ct_priv);
  	mlx5e_tc_post_act_destroy(uplink_priv->post_act);
  }
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/rep/tc.c b/drivers/net/ethernet/mellanox/mlx5/core/en/rep/tc.c
index b5f11b59d3f7..b2a5c939e569 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/rep/tc.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/rep/tc.c
@@ -673,9 +673,7 @@ static void mlx5e_restore_skb_sample(struct mlx5e_priv *priv, struct sk_buff *sk
 			   "Failed to restore tunnel info for sampled packet\n");
 		return;
 	}
-#if IS_ENABLED(CONFIG_MLX5_TC_SAMPLE)
 	mlx5e_tc_sample_skb(skb, mapped_obj);
-#endif /* CONFIG_MLX5_TC_SAMPLE */
 	mlx5_rep_tc_post_napi_receive(tc_priv);
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/tc/sample.h b/drivers/net/ethernet/mellanox/mlx5/core/en/tc/sample.h
index db0146df9b30..9ef8a49d7801 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc/sample.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc/sample.h
@@ -19,6 +19,8 @@ struct mlx5e_sample_attr {
 	struct mlx5e_sample_flow *sample_flow;
 };
 
+#if IS_ENABLED(CONFIG_MLX5_TC_SAMPLE)
+
 void mlx5e_tc_sample_skb(struct sk_buff *skb, struct mlx5_mapped_obj *mapped_obj);
 
 struct mlx5_flow_handle *
@@ -38,4 +40,29 @@ mlx5e_tc_sample_init(struct mlx5_eswitch *esw, struct mlx5e_post_act *post_act);
 void
 mlx5e_tc_sample_cleanup(struct mlx5e_tc_psample *tc_psample);
 
+#else /* CONFIG_MLX5_TC_SAMPLE */
+
+static inline struct mlx5_flow_handle *
+mlx5e_tc_sample_offload(struct mlx5e_tc_psample *tc_psample,
+			struct mlx5_flow_spec *spec,
+			struct mlx5_flow_attr *attr,
+			u32 tunnel_id)
+{ return ERR_PTR(-EOPNOTSUPP); }
+
+static inline void
+mlx5e_tc_sample_unoffload(struct mlx5e_tc_psample *tc_psample,
+			  struct mlx5_flow_handle *rule,
+			  struct mlx5_flow_attr *attr) {}
+
+static inline struct mlx5e_tc_psample *
+mlx5e_tc_sample_init(struct mlx5_eswitch *esw, struct mlx5e_post_act *post_act)
+{ return ERR_PTR(-EOPNOTSUPP); }
+
+static inline void
+mlx5e_tc_sample_cleanup(struct mlx5e_tc_psample *tc_psample) {}
+
+static inline void
+mlx5e_tc_sample_skb(struct sk_buff *skb, struct mlx5_mapped_obj *mapped_obj) {}
+
+#endif /* CONFIG_MLX5_TC_SAMPLE */
 #endif /* __MLX5_EN_TC_SAMPLE_H__ */
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_tc.c
