efi/x86: Avoid redundant cast of EFI firmware service pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Ard Biesheuvel <ardb@kernel.org>
commit 89ed486532c4d155565cc4b7984a918ee3c58f80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/89ed4865.failed

All EFI firmware call prototypes have been annotated as __efiapi,
permitting us to attach attributes regarding the calling convention
by overriding __efiapi to an architecture specific value.

On 32-bit x86, EFI firmware calls use the plain calling convention
where all arguments are passed via the stack, and cleaned up by the
caller. Let's add this to the __efiapi definition so we no longer
need to cast the function pointers before invoking them.

	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Arvind Sankar <nivedita@alum.mit.edu>
	Cc: Matthew Garrett <mjg59@google.com>
	Cc: linux-efi@vger.kernel.org
Link: https://lkml.kernel.org/r/20200103113953.9571-6-ardb@kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 89ed486532c4d155565cc4b7984a918ee3c58f80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/efi.h
diff --cc include/linux/efi.h
index 87f30fc4c480,952c1659dfd9..000000000000
--- a/include/linux/efi.h
+++ b/include/linux/efi.h
@@@ -48,6 -48,14 +48,17 @@@ typedef u16 efi_char16_t;		/* UNICODE c
  typedef u64 efi_physical_addr_t;
  typedef void *efi_handle_t;
  
++<<<<<<< HEAD
++=======
+ #if defined(CONFIG_X86_64)
+ #define __efiapi __attribute__((ms_abi))
+ #elif defined(CONFIG_X86_32)
+ #define __efiapi __attribute__((regparm(0)))
+ #else
+ #define __efiapi
+ #endif
+ 
++>>>>>>> 89ed486532c4 (efi/x86: Avoid redundant cast of EFI firmware service pointer)
  #define efi_get_handle_at(array, idx)					\
  	(efi_is_native() ? (array)[idx] 				\
  		: (efi_handle_t)(unsigned long)((u32 *)(array))[idx])
diff --git a/arch/x86/include/asm/efi.h b/arch/x86/include/asm/efi.h
index fad80fa08378..2ff4edb5625d 100644
--- a/arch/x86/include/asm/efi.h
+++ b/arch/x86/include/asm/efi.h
@@ -60,13 +60,7 @@ extern asmlinkage unsigned long efi_call_phys(void *, ...);
 })
 
 
-/*
- * Wrap all the virtual calls in a way that forces the parameters on the stack.
- */
-#define arch_efi_call_virt(p, f, args...)				\
-({									\
-	((efi_##f##_t __attribute__((regparm(0)))*) p->f)(args);	\
-})
+#define arch_efi_call_virt(p, f, args...)	p->f(args)
 
 #define efi_ioremap(addr, size, type, attr)	ioremap_cache(addr, size)
 
* Unmerged path include/linux/efi.h
