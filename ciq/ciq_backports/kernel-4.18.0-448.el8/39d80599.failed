wifi: mac80211: mlme: switch some things back to deflink

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 39d805998c590429f6665f72e7b54a36c3035fa0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/39d80599.failed

With MLO, when we'll disconnect from an AP MLD, we'll just
destroy all the links. Therefore, the only thing we (may)
need to reset is the deflink data, so switch back to that
and adjust the comments accordingly.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 39d805998c590429f6665f72e7b54a36c3035fa0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/mlme.c
diff --cc net/mac80211/mlme.c
index 446accddbebd,8a078d27c518..000000000000
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@@ -2384,7 -2438,7 +2384,11 @@@ static void ieee80211_set_disassoc(stru
  {
  	struct ieee80211_if_managed *ifmgd = &sdata->u.mgd;
  	struct ieee80211_local *local = sdata->local;
++<<<<<<< HEAD
 +	struct ieee80211_bss_conf *bss_conf = &sdata->vif.bss_conf;
++=======
+ 	struct ieee80211_link_data *link = &sdata->deflink;
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	u32 changed = 0;
  	struct ieee80211_prep_tx_info info = {
  		.subtype = stype,
@@@ -2401,7 -2455,10 +2405,14 @@@
  	ieee80211_stop_poll(sdata);
  
  	ifmgd->associated = false;
++<<<<<<< HEAD
 +	ifmgd->assoc_bss = NULL;
++=======
+ 
+ 	/* other links will be destroyed */
+ 	sdata->deflink.u.mgd.bss = NULL;
+ 
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	netif_carrier_off(sdata->dev);
  
  	/*
@@@ -2439,7 -2496,7 +2450,11 @@@
  		 * driver requested so.
  		 */
  		if (ieee80211_hw_check(&local->hw, DEAUTH_NEED_MGD_TX_PREP) &&
++<<<<<<< HEAD
 +		    !ifmgd->have_beacon) {
++=======
+ 		    !sdata->deflink.u.mgd.have_beacon) {
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  			drv_mgd_prepare_tx(sdata->local, sdata, &info);
  		}
  
@@@ -2467,9 -2525,9 +2482,13 @@@
  
  	ieee80211_led_assoc(local, 0);
  	changed |= BSS_CHANGED_ASSOC;
 -	sdata->vif.cfg.assoc = false;
 +	sdata->vif.bss_conf.assoc = false;
  
++<<<<<<< HEAD
 +	ifmgd->p2p_noa_index = -1;
++=======
+ 	sdata->deflink.u.mgd.p2p_noa_index = -1;
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	memset(&sdata->vif.bss_conf.p2p_noa_attr, 0,
  	       sizeof(sdata->vif.bss_conf.p2p_noa_attr));
  
@@@ -2479,15 -2537,19 +2498,30 @@@
  	memset(&ifmgd->vht_capa, 0, sizeof(ifmgd->vht_capa));
  	memset(&ifmgd->vht_capa_mask, 0, sizeof(ifmgd->vht_capa_mask));
  
++<<<<<<< HEAD
 +	/* reset MU-MIMO ownership and group data */
++=======
+ 	/*
+ 	 * reset MU-MIMO ownership and group data in default link,
+ 	 * if used, other links are destroyed
+ 	 */
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	memset(sdata->vif.bss_conf.mu_group.membership, 0,
  	       sizeof(sdata->vif.bss_conf.mu_group.membership));
  	memset(sdata->vif.bss_conf.mu_group.position, 0,
  	       sizeof(sdata->vif.bss_conf.mu_group.position));
++<<<<<<< HEAD
 +	changed |= BSS_CHANGED_MU_GROUPS;
 +	sdata->vif.bss_conf.mu_mimo_owner = false;
 +
 +	sdata->ap_power_level = IEEE80211_UNSET_POWER_LEVEL;
++=======
+ 	if (!sdata->vif.valid_links)
+ 		changed |= BSS_CHANGED_MU_GROUPS;
+ 	sdata->vif.bss_conf.mu_mimo_owner = false;
+ 
+ 	sdata->deflink.ap_power_level = IEEE80211_UNSET_POWER_LEVEL;
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  
  	del_timer_sync(&local->dynamic_ps_timer);
  	cancel_work_sync(&local->dynamic_ps_enable_work);
@@@ -2509,24 -2571,27 +2543,46 @@@
  	del_timer_sync(&sdata->u.mgd.conn_mon_timer);
  	del_timer_sync(&sdata->u.mgd.bcn_mon_timer);
  	del_timer_sync(&sdata->u.mgd.timer);
++<<<<<<< HEAD
 +	del_timer_sync(&sdata->u.mgd.chswitch_timer);
++=======
+ 	del_timer_sync(&sdata->deflink.u.mgd.chswitch_timer);
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  
  	sdata->vif.bss_conf.dtim_period = 0;
  	sdata->vif.bss_conf.beacon_rate = NULL;
  
++<<<<<<< HEAD
 +	ifmgd->have_beacon = false;
 +
 +	ifmgd->flags = 0;
++=======
+ 	sdata->deflink.u.mgd.have_beacon = false;
+ 	sdata->deflink.u.mgd.tracking_signal_avg = false;
+ 	sdata->deflink.u.mgd.disable_wmm_tracking = false;
+ 
+ 	ifmgd->flags = 0;
+ 	sdata->deflink.u.mgd.conn_flags = 0;
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	mutex_lock(&local->mtx);
 -	ieee80211_link_release_channel(link);
 +	ieee80211_vif_release_channel(sdata);
  
  	sdata->vif.bss_conf.csa_active = false;
++<<<<<<< HEAD
 +	ifmgd->csa_waiting_bcn = false;
 +	ifmgd->csa_ignored_same_chan = false;
 +	if (sdata->csa_block_tx) {
 +		ieee80211_wake_vif_queues(local, sdata,
 +					  IEEE80211_QUEUE_STOP_REASON_CSA);
 +		sdata->csa_block_tx = false;
++=======
+ 	sdata->deflink.u.mgd.csa_waiting_bcn = false;
+ 	sdata->deflink.u.mgd.csa_ignored_same_chan = false;
+ 	if (sdata->deflink.csa_block_tx) {
+ 		ieee80211_wake_vif_queues(local, sdata,
+ 					  IEEE80211_QUEUE_STOP_REASON_CSA);
+ 		sdata->deflink.csa_block_tx = false;
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	}
  	mutex_unlock(&local->mtx);
  
@@@ -2846,12 -2919,13 +2903,13 @@@ static void __ieee80211_disconnect(stru
  					WLAN_REASON_DISASSOC_DUE_TO_INACTIVITY,
  			       tx, frame_buf);
  	mutex_lock(&local->mtx);
+ 	/* the other links will be destroyed */
  	sdata->vif.bss_conf.csa_active = false;
 -	sdata->deflink.u.mgd.csa_waiting_bcn = false;
 -	if (sdata->deflink.csa_block_tx) {
 +	ifmgd->csa_waiting_bcn = false;
 +	if (sdata->csa_block_tx) {
  		ieee80211_wake_vif_queues(local, sdata,
  					  IEEE80211_QUEUE_STOP_REASON_CSA);
 -		sdata->deflink.csa_block_tx = false;
 +		sdata->csa_block_tx = false;
  	}
  	mutex_unlock(&local->mtx);
  
@@@ -2990,8 -3066,10 +3048,15 @@@ static void ieee80211_destroy_assoc_dat
  		del_timer_sync(&sdata->u.mgd.timer);
  		sta_info_destroy_addr(sdata, assoc_data->bss->bssid);
  
++<<<<<<< HEAD
 +		eth_zero_addr(sdata->u.mgd.bssid);
 +		ieee80211_bss_info_change_notify(sdata, BSS_CHANGED_BSSID);
++=======
+ 		sdata->deflink.u.mgd.conn_flags = 0;
+ 		eth_zero_addr(sdata->deflink.u.mgd.bssid);
+ 		ieee80211_link_info_change_notify(sdata, &sdata->deflink,
+ 						  BSS_CHANGED_BSSID);
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  		sdata->u.mgd.flags = 0;
  		sdata->vif.bss_conf.mu_mimo_owner = false;
  
@@@ -6236,8 -6415,9 +6301,14 @@@ int ieee80211_mgd_assoc(struct ieee8021
  
  	return 0;
   err_clear:
++<<<<<<< HEAD
 +	eth_zero_addr(ifmgd->bssid);
 +	ieee80211_bss_info_change_notify(sdata, BSS_CHANGED_BSSID);
++=======
+ 	eth_zero_addr(sdata->deflink.u.mgd.bssid);
+ 	ieee80211_link_info_change_notify(sdata, &sdata->deflink,
+ 					  BSS_CHANGED_BSSID);
++>>>>>>> 39d805998c59 (wifi: mac80211: mlme: switch some things back to deflink)
  	ifmgd->assoc_data = NULL;
   err_free:
  	kfree(assoc_data);
* Unmerged path net/mac80211/mlme.c
