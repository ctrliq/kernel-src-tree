net: skb: use kfree_skb_reason() in tcp_v4_rcv()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Menglong Dong <imagedong@tencent.com>
commit 85125597419aec3aa7b8f3b8713e415f997796f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/85125597.failed

Replace kfree_skb() with kfree_skb_reason() in tcp_v4_rcv(). Following
drop reasons are added:

SKB_DROP_REASON_NO_SOCKET
SKB_DROP_REASON_PKT_TOO_SMALL
SKB_DROP_REASON_TCP_CSUM
SKB_DROP_REASON_TCP_FILTER

After this patch, 'kfree_skb' event will print message like this:

$           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION
$              | |         |   |||||     |         |
          <idle>-0       [000] ..s1.    36.113438: kfree_skb: skbaddr=(____ptrval____) protocol=2048 location=(____ptrval____) reason: NO_SOCKET

The reason of skb drop is printed too.

	Signed-off-by: Menglong Dong <imagedong@tencent.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 85125597419aec3aa7b8f3b8713e415f997796f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/tcp_ipv4.c
diff --cc net/ipv4/tcp_ipv4.c
index 8979cf02b734,b3f34e366b27..000000000000
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@@ -1956,13 -2089,15 +1960,15 @@@ process
  	if (!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb))
  		goto discard_and_relse;
  
 -	if (tcp_v4_inbound_md5_hash(sk, skb, dif, sdif))
 +	if (tcp_v4_inbound_md5_hash(sk, skb))
  		goto discard_and_relse;
  
 -	nf_reset_ct(skb);
 +	nf_reset(skb);
  
- 	if (tcp_filter(sk, skb))
+ 	if (tcp_filter(sk, skb)) {
+ 		drop_reason = SKB_DROP_REASON_TCP_FILTER;
  		goto discard_and_relse;
+ 	}
  	th = (const struct tcphdr *)skb->data;
  	iph = ip_hdr(skb);
  	tcp_v4_fill_cb(skb, iph, th);
@@@ -2000,6 -2138,8 +2007,11 @@@ no_tcp_socket
  
  	if (tcp_checksum_complete(skb)) {
  csum_error:
++<<<<<<< HEAD
++=======
+ 		drop_reason = SKB_DROP_REASON_TCP_CSUM;
+ 		trace_tcp_bad_csum(skb);
++>>>>>>> 85125597419a (net: skb: use kfree_skb_reason() in tcp_v4_rcv())
  		__TCP_INC_STATS(net, TCP_MIB_CSUMERRORS);
  bad_packet:
  		__TCP_INC_STATS(net, TCP_MIB_INERRS);
diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index 6050fa383222..b345f64214b7 100644
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -319,6 +319,10 @@ struct sk_buff;
  */
 enum skb_drop_reason {
 	SKB_DROP_REASON_NOT_SPECIFIED,
+	SKB_DROP_REASON_NO_SOCKET,
+	SKB_DROP_REASON_PKT_TOO_SMALL,
+	SKB_DROP_REASON_TCP_CSUM,
+	SKB_DROP_REASON_TCP_FILTER,
 	SKB_DROP_REASON_MAX,
 };
 
diff --git a/include/trace/events/skb.h b/include/trace/events/skb.h
index 294c61bbe44b..faa7d068a7bc 100644
--- a/include/trace/events/skb.h
+++ b/include/trace/events/skb.h
@@ -11,6 +11,10 @@
 
 #define TRACE_SKB_DROP_REASON					\
 	EM(SKB_DROP_REASON_NOT_SPECIFIED, NOT_SPECIFIED)	\
+	EM(SKB_DROP_REASON_NO_SOCKET, NO_SOCKET)		\
+	EM(SKB_DROP_REASON_PKT_TOO_SMALL, PKT_TOO_SMALL)	\
+	EM(SKB_DROP_REASON_TCP_CSUM, TCP_CSUM)			\
+	EM(SKB_DROP_REASON_TCP_FILTER, TCP_FILTER)		\
 	EMe(SKB_DROP_REASON_MAX, MAX)
 
 #undef EM
* Unmerged path net/ipv4/tcp_ipv4.c
