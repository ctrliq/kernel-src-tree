x86/CPU/AMD: Don't force the CPB cap when running under a hypervisor

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Frank van der Linden <fllinden@amazon.com>
commit 2ac44ab608705948564791ce1d15d43ba81a1e38
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/2ac44ab6.failed

For F17h AMD CPUs, the CPB capability ('Core Performance Boost') is forcibly set,
because some versions of that chip incorrectly report that they do not have it.

However, a hypervisor may filter out the CPB capability, for good
reasons. For example, KVM currently does not emulate setting the CPB
bit in MSR_K7_HWCR, and unchecked MSR access errors will be thrown
when trying to set it as a guest:

	unchecked MSR access error: WRMSR to 0xc0010015 (tried to write 0x0000000001000011) at rIP: 0xffffffff890638f4 (native_write_msr+0x4/0x20)

	Call Trace:
	boost_set_msr+0x50/0x80 [acpi_cpufreq]
	cpuhp_invoke_callback+0x86/0x560
	sort_range+0x20/0x20
	cpuhp_thread_fun+0xb0/0x110
	smpboot_thread_fn+0xef/0x160
	kthread+0x113/0x130
	kthread_create_worker_on_cpu+0x70/0x70
	ret_from_fork+0x35/0x40

To avoid this issue, don't forcibly set the CPB capability for a CPU
when running under a hypervisor.

	Signed-off-by: Frank van der Linden <fllinden@amazon.com>
	Acked-by: Borislav Petkov <bp@suse.de>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: bp@alien8.de
	Cc: jiaxun.yang@flygoat.com
Fixes: 0237199186e7 ("x86/CPU/AMD: Set the CPB bit unconditionally on F17h")
Link: http://lkml.kernel.org/r/20190522221745.GA15789@dev-dsk-fllinden-2c-c1893d73.us-west-2.amazon.com
[ Minor edits to the changelog. ]
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 2ac44ab608705948564791ce1d15d43ba81a1e38)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
diff --cc arch/x86/kernel/cpu/amd.c
index 45b1a646fe2e,8d4e50428b68..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -852,15 -824,11 +852,23 @@@ static void init_amd_zn(struct cpuinfo_
  {
  	set_cpu_cap(c, X86_FEATURE_ZEN);
  
++<<<<<<< HEAD
 +#ifdef CONFIG_NUMA
 +	node_reclaim_distance = 32;
 +#endif
 +
 +	/*
 +	 * Fix erratum 1076: CPB feature bit not being set in CPUID. It affects
 +	 * all up to and including B1.
 +	 */
 +	if (c->x86_model <= 1 && c->x86_stepping <= 1)
++=======
+ 	/*
+ 	 * Fix erratum 1076: CPB feature bit not being set in CPUID.
+ 	 * Always set it, except when running under a hypervisor.
+ 	 */
+ 	if (!cpu_has(c, X86_FEATURE_HYPERVISOR) && !cpu_has(c, X86_FEATURE_CPB))
++>>>>>>> 2ac44ab60870 (x86/CPU/AMD: Don't force the CPB cap when running under a hypervisor)
  		set_cpu_cap(c, X86_FEATURE_CPB);
  }
  
* Unmerged path arch/x86/kernel/cpu/amd.c
