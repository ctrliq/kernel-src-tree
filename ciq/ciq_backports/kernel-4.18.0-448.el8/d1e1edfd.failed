ath11k: Add HW params for WCN6750

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Manikanta Pubbisetty <quic_mpubbise@quicinc.com>
commit d1e1edfde0352321af52599ad447b71c91bc6e76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d1e1edfd.failed

WCN6750 is a PCIe based solution that is attached to and enumerated
by the WPSS (Wireless Processor SubSystem) Q6 processor.

Though it is a PCIe device, since it is not attached to APSS processor
(Application Processor SubSystem), APSS will be unaware of such a decice
and hence it is registered to the APSS processor as a platform device(AHB).
Because of this hybrid nature, it is called as a hybrid bus device.

A new variable hybrid_bus_type is defined in hw_params to indicate the
hybrid nature of the device.

Add HW params for WCN6750.

Tested-on: WCN6750 hw1.0 AHB WLAN.MSL.1.0.1-00887-QCAMSLSWPLZ-1
Tested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-01720.1-QCAHSPSWPL_V1_V2_SILICONZ_LITE-1
Tested-on: QCN9074 hw1.0 PCI WLAN.HK.2.5.0.1-01100-QCAHKSWPL_SILICONZ-1
Tested-on: IPQ8074 hw2.0 AHB WLAN.HK.2.4.0.1-00192-QCAHKSWPL_SILICONZ-1

	Signed-off-by: Manikanta Pubbisetty <quic_mpubbise@quicinc.com>
	Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
Link: https://lore.kernel.org/r/20220429170502.20080-4-quic_mpubbise@quicinc.com
(cherry picked from commit d1e1edfde0352321af52599ad447b71c91bc6e76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ath/ath11k/core.c
#	drivers/net/wireless/ath/ath11k/hw.h
diff --cc drivers/net/wireless/ath/ath11k/core.c
index 241b5e0c8d3f,1220514e19bf..000000000000
--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@@ -102,6 -102,11 +102,14 @@@ static const struct ath11k_hw_params at
  		.dbr_debug_support = true,
  		.global_reset = false,
  		.bios_sar_capa = NULL,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = false,
+ 		.fixed_bdf_addr = true,
+ 		.fixed_mem_region = true,
+ 		.static_window_map = false,
+ 		.hybrid_bus_type = false,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  	{
  		.hw_rev = ATH11K_HW_IPQ6018_HW10,
@@@ -170,6 -174,11 +178,14 @@@
  		.dbr_debug_support = true,
  		.global_reset = false,
  		.bios_sar_capa = NULL,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = false,
+ 		.fixed_bdf_addr = true,
+ 		.fixed_mem_region = true,
+ 		.static_window_map = false,
+ 		.hybrid_bus_type = false,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  	{
  		.name = "qca6390 hw2.0",
@@@ -237,6 -245,11 +253,14 @@@
  		.dbr_debug_support = false,
  		.global_reset = true,
  		.bios_sar_capa = NULL,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = true,
+ 		.fixed_bdf_addr = false,
+ 		.fixed_mem_region = false,
+ 		.static_window_map = false,
+ 		.hybrid_bus_type = false,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  	{
  		.name = "qcn9074 hw1.0",
@@@ -304,6 -316,11 +328,14 @@@
  		.dbr_debug_support = true,
  		.global_reset = false,
  		.bios_sar_capa = NULL,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = true,
+ 		.fixed_bdf_addr = false,
+ 		.fixed_mem_region = false,
+ 		.static_window_map = true,
+ 		.hybrid_bus_type = false,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  	{
  		.name = "wcn6855 hw2.0",
@@@ -371,6 -387,11 +403,14 @@@
  		.dbr_debug_support = false,
  		.global_reset = true,
  		.bios_sar_capa = &ath11k_hw_sar_capa_wcn6855,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = true,
+ 		.fixed_bdf_addr = false,
+ 		.fixed_mem_region = false,
+ 		.static_window_map = false,
+ 		.hybrid_bus_type = false,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  	{
  		.name = "wcn6855 hw2.1",
@@@ -437,6 -457,78 +477,81 @@@
  		.dbr_debug_support = false,
  		.global_reset = true,
  		.bios_sar_capa = &ath11k_hw_sar_capa_wcn6855,
++<<<<<<< HEAD
++=======
+ 		.m3_fw_support = true,
+ 		.fixed_bdf_addr = false,
+ 		.fixed_mem_region = false,
+ 		.static_window_map = false,
+ 		.hybrid_bus_type = false,
+ 	},
+ 	{
+ 		.name = "wcn6750 hw1.0",
+ 		.hw_rev = ATH11K_HW_WCN6750_HW10,
+ 		.fw = {
+ 			.dir = "WCN6750/hw1.0",
+ 			.board_size = 256 * 1024,
+ 			.cal_offset = 128 * 1024,
+ 		},
+ 		.max_radios = 1,
+ 		.bdf_addr = 0x4B0C0000,
+ 		.ring_mask = &ath11k_hw_ring_mask_qca6390,
+ 		.internal_sleep_clock = false,
+ 		.qmi_service_ins_id = ATH11K_QMI_WLFW_SERVICE_INS_ID_V01_WCN6750,
+ 		.host_ce_config = ath11k_host_ce_config_qca6390,
+ 		.ce_count = 9,
+ 		.target_ce_config = ath11k_target_ce_config_wlan_qca6390,
+ 		.target_ce_count = 9,
+ 		.svc_to_ce_map = ath11k_target_service_to_ce_map_wlan_qca6390,
+ 		.svc_to_ce_map_len = 14,
+ 		.rfkill_pin = 0,
+ 		.rfkill_cfg = 0,
+ 		.rfkill_on_level = 0,
+ 		.single_pdev_only = true,
+ 		.rxdma1_enable = false,
+ 		.num_rxmda_per_pdev = 1,
+ 		.rx_mac_buf_ring = true,
+ 		.vdev_start_delay = true,
+ 		.htt_peer_map_v2 = false,
+ 
+ 		.spectral = {
+ 			.fft_sz = 0,
+ 			.fft_pad_sz = 0,
+ 			.summary_pad_sz = 0,
+ 			.fft_hdr_len = 0,
+ 			.max_fft_bins = 0,
+ 		},
+ 
+ 		.interface_modes = BIT(NL80211_IFTYPE_STATION) |
+ 					BIT(NL80211_IFTYPE_AP),
+ 		.supports_monitor = false,
+ 		.supports_shadow_regs = true,
+ 		.idle_ps = true,
+ 		.supports_sta_ps = true,
+ 		.cold_boot_calib = false,
+ 		.fw_mem_mode = 0,
+ 		.num_vdevs = 16 + 1,
+ 		.num_peers = 512,
+ 		.supports_suspend = false,
+ 		.supports_regdb = true,
+ 		.fix_l1ss = false,
+ 		.credit_flow = true,
+ 		.max_tx_ring = DP_TCL_NUM_RING_MAX_QCA6390,
+ 		.hal_params = &ath11k_hw_hal_params_qca6390,
+ 		.supports_dynamic_smps_6ghz = false,
+ 		.alloc_cacheable_memory = false,
+ 		.supports_rssi_stats = true,
+ 		.fw_wmi_diag_event = false,
+ 		.current_cc_support = true,
+ 		.dbr_debug_support = false,
+ 		.global_reset = false,
+ 		.bios_sar_capa = NULL,
+ 		.m3_fw_support = false,
+ 		.fixed_bdf_addr = false,
+ 		.fixed_mem_region = false,
+ 		.static_window_map = true,
+ 		.hybrid_bus_type = true,
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  	},
  };
  
diff --cc drivers/net/wireless/ath/ath11k/hw.h
index 29546d8de738,03eb5dfd4a5e..000000000000
--- a/drivers/net/wireless/ath/ath11k/hw.h
+++ b/drivers/net/wireless/ath/ath11k/hw.h
@@@ -196,6 -196,11 +196,14 @@@ struct ath11k_hw_params 
  	bool dbr_debug_support;
  	bool global_reset;
  	const struct cfg80211_sar_capa *bios_sar_capa;
++<<<<<<< HEAD
++=======
+ 	bool m3_fw_support;
+ 	bool fixed_bdf_addr;
+ 	bool fixed_mem_region;
+ 	bool static_window_map;
+ 	bool hybrid_bus_type;
++>>>>>>> d1e1edfde035 (ath11k: Add HW params for WCN6750)
  };
  
  struct ath11k_hw_ops {
* Unmerged path drivers/net/wireless/ath/ath11k/core.c
diff --git a/drivers/net/wireless/ath/ath11k/core.h b/drivers/net/wireless/ath/ath11k/core.h
index f3d02f55f8ea..41f5d2a70c90 100644
--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -127,6 +127,7 @@ enum ath11k_hw_rev {
 	ATH11K_HW_QCN9074_HW10,
 	ATH11K_HW_WCN6855_HW20,
 	ATH11K_HW_WCN6855_HW21,
+	ATH11K_HW_WCN6750_HW10,
 };
 
 enum ath11k_firmware_mode {
* Unmerged path drivers/net/wireless/ath/ath11k/hw.h
diff --git a/drivers/net/wireless/ath/ath11k/qmi.h b/drivers/net/wireless/ath/ath11k/qmi.h
index 61678de56ac7..e0201e184733 100644
--- a/drivers/net/wireless/ath/ath11k/qmi.h
+++ b/drivers/net/wireless/ath/ath11k/qmi.h
@@ -1,6 +1,7 @@
 /* SPDX-License-Identifier: BSD-3-Clause-Clear */
 /*
  * Copyright (c) 2018-2019 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2022, Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #ifndef ATH11K_QMI_H
@@ -20,6 +21,7 @@
 #define ATH11K_QMI_WLFW_SERVICE_INS_ID_V01_QCA6390	0x01
 #define ATH11K_QMI_WLFW_SERVICE_INS_ID_V01_IPQ8074	0x02
 #define ATH11K_QMI_WLFW_SERVICE_INS_ID_V01_QCN9074	0x07
+#define ATH11K_QMI_WLFW_SERVICE_INS_ID_V01_WCN6750	0x03
 #define ATH11K_QMI_WLANFW_MAX_TIMESTAMP_LEN_V01	32
 #define ATH11K_QMI_RESP_LEN_MAX			8192
 #define ATH11K_QMI_WLANFW_MAX_NUM_MEM_SEG_V01	52
