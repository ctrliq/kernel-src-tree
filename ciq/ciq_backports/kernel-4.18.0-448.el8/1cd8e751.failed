dmaengine: idxd: skip clearing device context when device is read-only

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Dave Jiang <dave.jiang@intel.com>
commit 1cd8e751d96c43ece3f6842ac2244a37d9332c3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1cd8e751.failed

If the device shows up as read-only configuration, skip the clearing of the
state as the context must be preserved for device re-enable after being
disabled.

Fixes: 0dcfe41e9a4c ("dmanegine: idxd: cleanup all device related bits after disabling device")
	Reported-by: Tony Zhu <tony.zhu@intel.com>
	Tested-by: Tony Zhu <tony.zhu@intel.com>
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
Link: https://lore.kernel.org/r/164971479479.2200566.13980022473526292759.stgit@djiang5-desk3.ch.intel.com
	Signed-off-by: Vinod Koul <vkoul@kernel.org>
(cherry picked from commit 1cd8e751d96c43ece3f6842ac2244a37d9332c3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/idxd/device.c
diff --cc drivers/dma/idxd/device.c
index 2251a382322d,f652da6ab47d..000000000000
--- a/drivers/dma/idxd/device.c
+++ b/drivers/dma/idxd/device.c
@@@ -727,12 -708,12 +727,18 @@@ static void idxd_device_wqs_clear_state
  
  void idxd_device_clear_state(struct idxd_device *idxd)
  {
++<<<<<<< HEAD
 +	idxd_device_wqs_clear_state(idxd);
 +	spin_lock(&idxd->dev_lock);
++=======
+ 	if (!test_bit(IDXD_FLAG_CONFIGURABLE, &idxd->flags))
+ 		return;
+ 
++>>>>>>> 1cd8e751d96c (dmaengine: idxd: skip clearing device context when device is read-only)
  	idxd_groups_clear_state(idxd);
  	idxd_engines_clear_state(idxd);
 -	idxd_device_wqs_clear_state(idxd);
 +	idxd->state = IDXD_DEV_DISABLED;
 +	spin_unlock(&idxd->dev_lock);
  }
  
  static void idxd_group_config_write(struct idxd_group *group)
* Unmerged path drivers/dma/idxd/device.c
