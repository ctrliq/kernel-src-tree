fbmem: pull fbcon_update_vcs() out of fb_set_var()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>
commit d88ca7e1a27eb2df056bbf37ddef62e1c73d37ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d88ca7e1.failed

syzbot is reporting OOB read bug in vc_do_resize() [1] caused by memcpy()
based on outdated old_{rows,row_size} values, for resize_screen() can
recurse into vc_do_resize() which changes vc->vc_{cols,rows} that outdates
old_{rows,row_size} values which were saved before calling resize_screen().

Daniel Vetter explained that resize_screen() should not recurse into
fbcon_update_vcs() path due to FBINFO_MISC_USEREVENT being still set
when calling resize_screen().

Instead of masking FBINFO_MISC_USEREVENT before calling fbcon_update_vcs(),
we can remove FBINFO_MISC_USEREVENT by calling fbcon_update_vcs() only if
fb_set_var() returned 0. This change assumes that it is harmless to call
fbcon_update_vcs() when fb_set_var() returned 0 without reaching
fb_notifier_call_chain().

[1] https://syzkaller.appspot.com/bug?id=c70c88cfd16dcf6e1d3c7f0ab8648b3144b5b25e

Reported-and-tested-by: syzbot <syzbot+c37a14770d51a085a520@syzkaller.appspotmail.com>
	Suggested-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Reported-by: kernel test robot <lkp@intel.com> for missing #include
	Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
Link: https://patchwork.freedesktop.org/patch/msgid/075b7e37-3278-cd7d-31ab-c5073cfa8e92@i-love.sakura.ne.jp
(cherry picked from commit d88ca7e1a27eb2df056bbf37ddef62e1c73d37ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbmem.c
diff --cc drivers/video/fbdev/core/fbmem.c
index 32dffdd5addd,da7c88ffaa6a..000000000000
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@@ -1019,19 -1044,14 +1018,23 @@@ fb_set_var(struct fb_info *info, struc
  	    !list_empty(&info->modelist))
  		ret = fb_add_videomode(&mode, &info->modelist);
  
 -	if (ret)
 -		return ret;
 -
 -	event.info = info;
 -	event.data = &mode;
 -	fb_notifier_call_chain(FB_EVENT_MODE_CHANGE, &event);
 +	if (!ret && (flags & FBINFO_MISC_USEREVENT)) {
 +		struct fb_event event;
 +		int evnt = (activate & FB_ACTIVATE_ALL) ?
 +			FB_EVENT_MODE_CHANGE_ALL :
 +			FB_EVENT_MODE_CHANGE;
 +
 +		info->flags &= ~FBINFO_MISC_USEREVENT;
 +		event.info = info;
 +		event.data = &mode;
 +		fb_notifier_call_chain(evnt, &event);
 +	}
  
++<<<<<<< HEAD
 +	return ret;
++=======
+ 	return 0;
++>>>>>>> d88ca7e1a27e (fbmem: pull fbcon_update_vcs() out of fb_set_var())
  }
  EXPORT_SYMBOL(fb_set_var);
  
* Unmerged path drivers/video/fbdev/core/fbmem.c
diff --git a/drivers/video/fbdev/core/fbsysfs.c b/drivers/video/fbdev/core/fbsysfs.c
index 882b471d619e..d888258bd56e 100644
--- a/drivers/video/fbdev/core/fbsysfs.c
+++ b/drivers/video/fbdev/core/fbsysfs.c
@@ -95,9 +95,9 @@ static int activate(struct fb_info *fb_info, struct fb_var_screeninfo *var)
 
 	var->activate |= FB_ACTIVATE_FORCE;
 	console_lock();
-	fb_info->flags |= FBINFO_MISC_USEREVENT;
 	err = fb_set_var(fb_info, var);
-	fb_info->flags &= ~FBINFO_MISC_USEREVENT;
+	if (!err)
+		fbcon_update_vcs(fb_info, var->activate & FB_ACTIVATE_ALL);
 	console_unlock();
 	if (err)
 		return err;
diff --git a/drivers/video/fbdev/ps3fb.c b/drivers/video/fbdev/ps3fb.c
index ba3c0da64464..692fb98935fe 100644
--- a/drivers/video/fbdev/ps3fb.c
+++ b/drivers/video/fbdev/ps3fb.c
@@ -29,6 +29,7 @@
 #include <linux/freezer.h>
 #include <linux/uaccess.h>
 #include <linux/fb.h>
+#include <linux/fbcon.h>
 #include <linux/init.h>
 
 #include <asm/cell-regs.h>
@@ -824,12 +825,12 @@ static int ps3fb_ioctl(struct fb_info *info, unsigned int cmd,
 				var = info->var;
 				fb_videomode_to_var(&var, vmode);
 				console_lock();
-				info->flags |= FBINFO_MISC_USEREVENT;
 				/* Force, in case only special bits changed */
 				var.activate |= FB_ACTIVATE_FORCE;
 				par->new_mode_id = val;
 				retval = fb_set_var(info, &var);
-				info->flags &= ~FBINFO_MISC_USEREVENT;
+				if (!retval)
+					fbcon_update_vcs(info, var.activate & FB_ACTIVATE_ALL);
 				console_unlock();
 			}
 			break;
diff --git a/include/linux/fb.h b/include/linux/fb.h
index 5bd1a6c3d119..d8aa96864a50 100644
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@ -430,8 +430,6 @@ struct fb_tile_ops {
 #define FBINFO_HWACCEL_YPAN		0x2000 /* optional */
 #define FBINFO_HWACCEL_YWRAP		0x4000 /* optional */
 
-#define FBINFO_MISC_USEREVENT          0x10000 /* event request
-						  from userspace */
 #define FBINFO_MISC_TILEBLITTING       0x20000 /* use tile blitting */
 
 /* A driver may set this flag to indicate that it does want a set_par to be
