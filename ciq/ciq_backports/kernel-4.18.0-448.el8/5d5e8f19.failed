mm, swap, get_swap_pages: use entry_size instead of cluster in parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Huang Ying <ying.huang@intel.com>
commit 5d5e8f19544a35ae1609bd96ae6b28c9fcd1baf6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/5d5e8f19.failed

As suggested by Matthew Wilcox, it is better to use "int entry_size"
instead of "bool cluster" as parameter to specify whether to operate for
huge or normal swap entries.  Because this improve the flexibility to
support other swap entry size.  And Dave Hansen thinks that this
improves code readability too.

So in this patch, the "bool cluster" parameter of get_swap_pages() is
replaced by "int entry_size".

And nr_swap_entries() trick is used to reduce the binary size when
!CONFIG_TRANSPARENT_HUGE_PAGE.

       text	   data	    bss	    dec	    hex	filename
base  24215	   2028	    340	  26583	   67d7	mm/swapfile.o
head  24123	   2004	    340	  26467	   6763	mm/swapfile.o

Link: http://lkml.kernel.org/r/20180720071845.17920-7-ying.huang@intel.com
	Signed-off-by: "Huang, Ying" <ying.huang@intel.com>
	Suggested-by: Matthew Wilcox <willy@infradead.org>
	Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: Daniel Jordan <daniel.m.jordan@oracle.com>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Johannes Weiner <hannes@cmpxchg.org>
	Cc: Shaohua Li <shli@kernel.org>
	Cc: Hugh Dickins <hughd@google.com>
	Cc: Minchan Kim <minchan@kernel.org>
	Cc: Rik van Riel <riel@redhat.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 5d5e8f19544a35ae1609bd96ae6b28c9fcd1baf6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/swapfile.c
diff --cc mm/swapfile.c
index eeb5474766d3,b30dd0642ccf..000000000000
--- a/mm/swapfile.c
+++ b/mm/swapfile.c
@@@ -1060,8 -988,8 +1060,13 @@@ start_over
  			spin_unlock(&si->lock);
  			goto nextsi;
  		}
++<<<<<<< HEAD
 +		if (cluster) {
 +			if (si->flags & SWP_BLKDEV)
++=======
+ 		if (size == SWAPFILE_CLUSTER) {
+ 			if (!(si->flags & SWP_FILE))
++>>>>>>> 5d5e8f19544a (mm, swap, get_swap_pages: use entry_size instead of cluster in parameter)
  				n_ret = swap_alloc_cluster(si, swp_entries);
  		} else
  			n_ret = scan_swap_map_slots(si, SWAP_HAS_CACHE,
diff --git a/include/linux/swap.h b/include/linux/swap.h
index 3d58c3319261..3f0f708f0ff7 100644
--- a/include/linux/swap.h
+++ b/include/linux/swap.h
@@ -452,7 +452,7 @@ extern void si_swapinfo(struct sysinfo *);
 extern swp_entry_t get_swap_page(struct page *page);
 extern void put_swap_page(struct page *page, swp_entry_t entry);
 extern swp_entry_t get_swap_page_of_type(int);
-extern int get_swap_pages(int n, bool cluster, swp_entry_t swp_entries[]);
+extern int get_swap_pages(int n, swp_entry_t swp_entries[], int entry_size);
 extern int add_swap_count_continuation(swp_entry_t, gfp_t);
 extern void swap_shmem_alloc(swp_entry_t);
 extern int swap_duplicate(swp_entry_t);
diff --git a/mm/swap_slots.c b/mm/swap_slots.c
index a791411fed71..636f55bf276c 100644
--- a/mm/swap_slots.c
+++ b/mm/swap_slots.c
@@ -269,8 +269,8 @@ static int refill_swap_slots_cache(struct swap_slots_cache *cache)
 
 	cache->cur = 0;
 	if (swap_slot_cache_active)
-		cache->nr = get_swap_pages(SWAP_SLOTS_CACHE_SIZE, false,
-					   cache->slots);
+		cache->nr = get_swap_pages(SWAP_SLOTS_CACHE_SIZE,
+					   cache->slots, 1);
 
 	return cache->nr;
 }
@@ -316,7 +316,7 @@ swp_entry_t get_swap_page(struct page *page)
 
 	if (PageTransHuge(page)) {
 		if (IS_ENABLED(CONFIG_THP_SWAP))
-			get_swap_pages(1, true, &entry);
+			get_swap_pages(1, &entry, HPAGE_PMD_NR);
 		goto out;
 	}
 
@@ -350,7 +350,7 @@ swp_entry_t get_swap_page(struct page *page)
 			goto out;
 	}
 
-	get_swap_pages(1, false, &entry);
+	get_swap_pages(1, &entry, 1);
 out:
 	if (mem_cgroup_try_charge_swap(page, entry)) {
 		put_swap_page(page, entry);
* Unmerged path mm/swapfile.c
