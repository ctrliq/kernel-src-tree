x86/kexec: Disable RET on kexec

jira LE-1907
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23825
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
commit 697977d8415d61f3acbc4ee6d564c9dcf0309507
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/697977d8.failed

All the invocations unroll to __x86_return_thunk and this file
must be PIC independent.

This fixes kexec on 64-bit AMD boxes.

  [ bp: Fix 32-bit build. ]

	Reported-by: Edward Tran <edward.tran@oracle.com>
	Reported-by: Awais Tanveer <awais.tanveer@oracle.com>
	Suggested-by: Ankur Arora <ankur.a.arora@oracle.com>
	Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
	Signed-off-by: Alexandre Chartre <alexandre.chartre@oracle.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 697977d8415d61f3acbc4ee6d564c9dcf0309507)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/relocate_kernel_32.S
#	arch/x86/kernel/relocate_kernel_64.S
diff --cc arch/x86/kernel/relocate_kernel_32.S
index 74d7891fc026,c7c4b1917336..000000000000
--- a/arch/x86/kernel/relocate_kernel_32.S
+++ b/arch/x86/kernel/relocate_kernel_32.S
@@@ -93,7 -93,9 +95,13 @@@ SYM_CODE_START_NOALIGN(relocate_kernel
  	movl    %edi, %eax
  	addl    $(identity_mapped - relocate_kernel), %eax
  	pushl   %eax
++<<<<<<< HEAD
 +	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
+ 	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(relocate_kernel)
  
  SYM_CODE_START_LOCAL_NOALIGN(identity_mapped)
@@@ -161,7 -163,9 +169,13 @@@
  	xorl    %edx, %edx
  	xorl    %esi, %esi
  	xorl    %ebp, %ebp
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  1:
  	popl	%edx
  	movl	CP_PA_SWAP_PAGE(%edi), %esp
@@@ -192,7 -197,9 +207,13 @@@
  	movl	%edi, %eax
  	addl	$(virtual_mapped - relocate_kernel), %eax
  	pushl	%eax
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(identity_mapped)
  
  SYM_CODE_START_LOCAL_NOALIGN(virtual_mapped)
@@@ -210,7 -217,9 +231,13 @@@
  	popl	%edi
  	popl	%esi
  	popl	%ebx
++<<<<<<< HEAD
 +	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
+ 	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(virtual_mapped)
  
  	/* Do the copies */
@@@ -273,7 -282,9 +300,13 @@@ SYM_CODE_START_LOCAL_NOALIGN(swap_pages
  	popl	%edi
  	popl	%ebx
  	popl	%ebp
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(swap_pages)
  
  	.globl kexec_control_code_size
diff --cc arch/x86/kernel/relocate_kernel_64.S
index 091efac43804,4809c0dc4eb0..000000000000
--- a/arch/x86/kernel/relocate_kernel_64.S
+++ b/arch/x86/kernel/relocate_kernel_64.S
@@@ -106,7 -106,9 +107,13 @@@ SYM_CODE_START_NOALIGN(relocate_kernel
  	/* jump to identity mapped page */
  	addq	$(identity_mapped - relocate_kernel), %r8
  	pushq	%r8
++<<<<<<< HEAD
 +	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
+ 	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(relocate_kernel)
  
  SYM_CODE_START_LOCAL_NOALIGN(identity_mapped)
@@@ -193,7 -203,9 +200,13 @@@
  	xorl	%r14d, %r14d
  	xorl	%r15d, %r15d
  
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  
  1:
  	popq	%rdx
@@@ -215,7 -224,9 +228,13 @@@
  	call	swap_pages
  	movq	$virtual_mapped, %rax
  	pushq	%rax
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(identity_mapped)
  
  SYM_CODE_START_LOCAL_NOALIGN(virtual_mapped)
@@@ -236,7 -248,9 +255,13 @@@
  	popq	%r12
  	popq	%rbp
  	popq	%rbx
++<<<<<<< HEAD
 +	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
+ 	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(virtual_mapped)
  
  	/* Do the copies */
@@@ -293,7 -307,9 +318,13 @@@ SYM_CODE_START_LOCAL_NOALIGN(swap_pages
  	lea	PAGE_SIZE(%rax), %rsi
  	jmp	0b
  3:
++<<<<<<< HEAD
++	ret
++=======
+ 	ANNOTATE_UNRET_SAFE
  	ret
+ 	int3
++>>>>>>> 697977d8415d (x86/kexec: Disable RET on kexec)
  SYM_CODE_END(swap_pages)
  
  	.globl kexec_control_code_size
* Unmerged path arch/x86/kernel/relocate_kernel_32.S
* Unmerged path arch/x86/kernel/relocate_kernel_64.S
