net/mlx5: Node-aware allocation for the EQs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Tariq Toukan <tariqt@nvidia.com>
commit 7f880719b953eba8c13b4e2ebe8c1f9d5fd44848
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7f880719.failed

Prefer the aware allocation, use the device NUMA node.

	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 7f880719b953eba8c13b4e2ebe8c1f9d5fd44848)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eq.c
index 42665079d101,229728c80233..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eq.c
@@@ -716,12 -728,10 +716,13 @@@ struct mlx5_eq 
  mlx5_eq_create_generic(struct mlx5_core_dev *dev,
  		       struct mlx5_eq_param *param)
  {
- 	struct mlx5_eq *eq = kvzalloc(sizeof(*eq), GFP_KERNEL);
+ 	struct mlx5_eq *eq = kvzalloc_node(sizeof(*eq), GFP_KERNEL,
+ 					   dev->priv.numa_node);
  	int err;
  
 +	if (!cpumask_available(param->affinity))
 +		return ERR_PTR(-EINVAL);
 +
  	if (!eq)
  		return ERR_PTR(-ENOMEM);
  
@@@ -809,14 -884,16 +810,19 @@@ static int create_comp_eqs(struct mlx5_
  	int err;
  	int i;
  
 -	ncomp_eqs = comp_irqs_request(dev);
 -	if (ncomp_eqs < 0)
 -		return ncomp_eqs;
  	INIT_LIST_HEAD(&table->comp_eqs_list);
++<<<<<<< HEAD
 +	ncomp_eqs = table->num_comp_eqs;
 +	nent = mlx5_devlink_res_size(dev, MLX5_DL_RES_COMP_EQ);
++=======
+ 	nent = comp_eq_depth_devlink_param_get(dev);
+ 
++>>>>>>> 7f880719b953 (net/mlx5: Node-aware allocation for the EQs)
  	for (i = 0; i < ncomp_eqs; i++) {
  		struct mlx5_eq_param param = {};
 +		int vecidx = i;
  
- 		eq = kzalloc(sizeof(*eq), GFP_KERNEL);
+ 		eq = kzalloc_node(sizeof(*eq), GFP_KERNEL, dev->priv.numa_node);
  		if (!eq) {
  			err = -ENOMEM;
  			goto clean;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eq.c
