x86/kvm: Add kexec support for SEV Live Migration.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Ashish Kalra <ashish.kalra@amd.com>
commit 73f1b4fece216c2e72be74c4d0d0f71a0b944bec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/73f1b4fe.failed

Reset the host's shared pages list related to kernel
specific page encryption status settings before we load a
new kernel by kexec. We cannot reset the complete
shared pages list here as we need to retain the
UEFI/OVMF firmware specific settings.

The host's shared pages list is maintained for the
guest to keep track of all unencrypted guest memory regions,
therefore we need to explicitly mark all shared pages as
encrypted again before rebooting into the new guest kernel.

	Signed-off-by: Ashish Kalra <ashish.kalra@amd.com>
	Reviewed-by: Steve Rutherford <srutherford@google.com>
Message-Id: <3e051424ab839ea470f88333273d7a185006754f.1629726117.git.ashish.kalra@amd.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 73f1b4fece216c2e72be74c4d0d0f71a0b944bec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/kvm.c
diff --cc arch/x86/kernel/kvm.c
index ae6426fd59d9,3910419fae6c..000000000000
--- a/arch/x86/kernel/kvm.c
+++ b/arch/x86/kernel/kvm.c
@@@ -806,8 -858,62 +806,59 @@@ static bool __init kvm_msi_ext_dest_id(
  	return kvm_para_has_feature(KVM_FEATURE_MSI_EXT_DEST_ID);
  }
  
 -static void kvm_sev_hc_page_enc_status(unsigned long pfn, int npages, bool enc)
 -{
 -	kvm_sev_hypercall3(KVM_HC_MAP_GPA_RANGE, pfn << PAGE_SHIFT, npages,
 -			   KVM_MAP_GPA_RANGE_ENC_STAT(enc) | KVM_MAP_GPA_RANGE_PAGE_SZ_4K);
 -}
 -
  static void __init kvm_init_platform(void)
  {
++<<<<<<< HEAD
++=======
+ 	if (sev_active() &&
+ 	    kvm_para_has_feature(KVM_FEATURE_MIGRATION_CONTROL)) {
+ 		unsigned long nr_pages;
+ 		int i;
+ 
+ 		pv_ops.mmu.notify_page_enc_status_changed =
+ 			kvm_sev_hc_page_enc_status;
+ 
+ 		/*
+ 		 * Reset the host's shared pages list related to kernel
+ 		 * specific page encryption status settings before we load a
+ 		 * new kernel by kexec. Reset the page encryption status
+ 		 * during early boot intead of just before kexec to avoid SMP
+ 		 * races during kvm_pv_guest_cpu_reboot().
+ 		 * NOTE: We cannot reset the complete shared pages list
+ 		 * here as we need to retain the UEFI/OVMF firmware
+ 		 * specific settings.
+ 		 */
+ 
+ 		for (i = 0; i < e820_table->nr_entries; i++) {
+ 			struct e820_entry *entry = &e820_table->entries[i];
+ 
+ 			if (entry->type != E820_TYPE_RAM)
+ 				continue;
+ 
+ 			nr_pages = DIV_ROUND_UP(entry->size, PAGE_SIZE);
+ 
+ 			kvm_sev_hypercall3(KVM_HC_MAP_GPA_RANGE, entry->addr,
+ 				       nr_pages,
+ 				       KVM_MAP_GPA_RANGE_ENCRYPTED | KVM_MAP_GPA_RANGE_PAGE_SZ_4K);
+ 		}
+ 
+ 		/*
+ 		 * Ensure that _bss_decrypted section is marked as decrypted in the
+ 		 * shared pages list.
+ 		 */
+ 		nr_pages = DIV_ROUND_UP(__end_bss_decrypted - __start_bss_decrypted,
+ 					PAGE_SIZE);
+ 		early_set_mem_enc_dec_hypercall((unsigned long)__start_bss_decrypted,
+ 						nr_pages, 0);
+ 
+ 		/*
+ 		 * If not booted using EFI, enable Live migration support.
+ 		 */
+ 		if (!efi_enabled(EFI_BOOT))
+ 			wrmsrl(MSR_KVM_MIGRATION_CONTROL,
+ 			       KVM_MIGRATION_READY);
+ 	}
++>>>>>>> 73f1b4fece21 (x86/kvm: Add kexec support for SEV Live Migration.)
  	kvmclock_init();
  	x86_platform.apic_post_init = kvm_apic_init;
  }
* Unmerged path arch/x86/kernel/kvm.c
