fuse: fix readdir cache race

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Miklos Szeredi <mszeredi@redhat.com>
commit 9fa248c65bdbf5af0a2f74dd38575acfc8dfd2bf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/9fa248c6.failed

There's a race in fuse's readdir cache that can result in an uninitilized
page being read.  The page lock is supposed to prevent this from happening
but in the following case it doesn't:

Two fuse_add_dirent_to_cache() start out and get the same parameters
(size=0,offset=0).  One of them wins the race to create and lock the page,
after which it fills in data, sets rdc.size and unlocks the page.

In the meantime the page gets evicted from the cache before the other
instance gets to run.  That one also creates the page, but finds the
size to be mismatched, bails out and leaves the uninitialized page in the
cache.

Fix by marking a filled page uptodate and ignoring non-uptodate pages.

	Reported-by: Frank Sorenson <fsorenso@redhat.com>
Fixes: 5d7bc7e8680c ("fuse: allow using readdir cache")
	Cc: <stable@vger.kernel.org> # v4.20
	Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
(cherry picked from commit 9fa248c65bdbf5af0a2f74dd38575acfc8dfd2bf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fuse/readdir.c
diff --cc fs/fuse/readdir.c
index 277f7041d55a,e8deaacf1832..000000000000
--- a/fs/fuse/readdir.c
+++ b/fs/fuse/readdir.c
@@@ -76,11 -76,13 +76,18 @@@ static void fuse_add_dirent_to_cache(st
  	    WARN_ON(fi->rdc.pos != pos))
  		goto unlock;
  
++<<<<<<< HEAD
 +	addr = kmap_atomic(page);
 +	if (!offset)
++=======
+ 	addr = kmap_local_page(page);
+ 	if (!offset) {
++>>>>>>> 9fa248c65bdb (fuse: fix readdir cache race)
  		clear_page(addr);
+ 		SetPageUptodate(page);
+ 	}
  	memcpy(addr + offset, dirent, reclen);
 -	kunmap_local(addr);
 +	kunmap_atomic(addr);
  	fi->rdc.size = (index << PAGE_SHIFT) + offset + reclen;
  	fi->rdc.pos = dirent->off;
  unlock:
* Unmerged path fs/fuse/readdir.c
