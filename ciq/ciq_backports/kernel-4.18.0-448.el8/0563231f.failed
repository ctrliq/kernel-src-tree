tracing/events: Add __vstring() and __assign_vstr() helper macros

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Steven Rostedt (Google) <rostedt@goodmis.org>
commit 0563231f93c6d1f582b168a47753b345c1e20d81
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0563231f.failed

There's several places that open code the following logic:

  TP_STRUCT__entry(__dynamic_array(char, msg, MSG_MAX)),
  TP_fast_assign(vsnprintf(__get_str(msg), MSG_MAX, vaf->fmt, *vaf->va);)

To load a string created by variable array va_list.

The main issue with this approach is that "MSG_MAX" usage in the
__dynamic_array() portion. That actually just reserves the MSG_MAX in the
event, and even wastes space because there's dynamic meta data also saved
in the event to denote the offset and size of the dynamic array. It would
have been better to just use a static __array() field.

Instead, create __vstring() and __assign_vstr() that work like __string
and __assign_str() but instead of taking a destination string to copy,
take a format string and a va_list pointer and fill in the values.

It uses the helper:

 #define __trace_event_vstr_len(fmt, va)		\
 ({							\
	va_list __ap;					\
	int __ret;					\
							\
	va_copy(__ap, *(va));				\
	__ret = vsnprintf(NULL, 0, fmt, __ap) + 1;	\
	va_end(__ap);					\
							\
	min(__ret, TRACE_EVENT_STR_MAX);		\
 })

To figure out the length to store the string. It may be slightly slower as
it needs to run the vsnprintf() twice, but it now saves space on the ring
buffer.

Link: https://lkml.kernel.org/r/20220705224749.053570613@goodmis.org

	Cc: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Cc: Jason Gunthorpe <jgg@ziepe.ca>
	Cc: Leon Romanovsky <leon@kernel.org>
	Cc: Kalle Valo <kvalo@kernel.org>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: Eric Dumazet <edumazet@google.com>
	Cc: Jakub Kicinski <kuba@kernel.org>
	Cc: Paolo Abeni <pabeni@redhat.com>
	Cc: Arend van Spriel <aspriel@gmail.com>
	Cc: Franky Lin <franky.lin@broadcom.com>
	Cc: Hante Meuleman <hante.meuleman@broadcom.com>
	Cc: Gregory Greenman <gregory.greenman@intel.com>
	Cc: Peter Chen <peter.chen@kernel.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Mathias Nyman <mathias.nyman@intel.com>
	Cc: Chunfeng Yun <chunfeng.yun@mediatek.com>
	Cc: Bin Liu <b-liu@ti.com>
	Cc: Marek Lindner <mareklindner@neomailbox.ch>
	Cc: Simon Wunderlich <sw@simonwunderlich.de>
	Cc: Antonio Quartulli <a@unstable.cc>
	Cc: Sven Eckelmann <sven@narfation.org>
	Cc: Johannes Berg <johannes@sipsolutions.net>
	Cc: Jim Cromie <jim.cromie@gmail.com>
	Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
(cherry picked from commit 0563231f93c6d1f582b168a47753b345c1e20d81)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/trace/stages/stage1_struct_define.h
#	include/trace/stages/stage2_data_offsets.h
#	include/trace/stages/stage4_event_fields.h
#	include/trace/stages/stage5_get_offsets.h
#	include/trace/stages/stage6_event_callback.h
* Unmerged path include/trace/stages/stage1_struct_define.h
* Unmerged path include/trace/stages/stage2_data_offsets.h
* Unmerged path include/trace/stages/stage4_event_fields.h
* Unmerged path include/trace/stages/stage5_get_offsets.h
* Unmerged path include/trace/stages/stage6_event_callback.h
diff --git a/include/linux/trace_events.h b/include/linux/trace_events.h
index e807a902d0a4..283855fd21c2 100644
--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -639,4 +639,22 @@ perf_trace_buf_submit(void *raw_data, int size, int rctx, u16 type,
 
 #endif
 
+#define TRACE_EVENT_STR_MAX	512
+
+/*
+ * gcc warns that you can not use a va_list in an inlined
+ * function. But lets me make it into a macro :-/
+ */
+#define __trace_event_vstr_len(fmt, va)			\
+({							\
+	va_list __ap;					\
+	int __ret;					\
+							\
+	va_copy(__ap, *(va));				\
+	__ret = vsnprintf(NULL, 0, fmt, __ap) + 1;	\
+	va_end(__ap);					\
+							\
+	min(__ret, TRACE_EVENT_STR_MAX);		\
+})
+
 #endif /* _LINUX_TRACE_EVENT_H */
* Unmerged path include/trace/stages/stage1_struct_define.h
* Unmerged path include/trace/stages/stage2_data_offsets.h
* Unmerged path include/trace/stages/stage4_event_fields.h
* Unmerged path include/trace/stages/stage5_get_offsets.h
* Unmerged path include/trace/stages/stage6_event_callback.h
