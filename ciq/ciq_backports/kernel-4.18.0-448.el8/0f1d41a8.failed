ASoC: wm_adsp: Make compressed buffers optional

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Charles Keepax <ckeepax@opensource.cirrus.com>
commit 0f1d41a85bda6f3502634fe15fa21bfee4c668a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0f1d41a8.failed

Newer firmwares will support compressed buffers that may or may not
exist, for example debugging streams. Update the driver to make a
compressed stream optional. A warning will still be generated at DSP
boot time and opening the stream will fail if the compressed buffer in
question does not exist, however the DSP can still be booted and other
features used.

	Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
Link: https://lore.kernel.org/r/20220210172053.22782-2-ckeepax@opensource.cirrus.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 0f1d41a85bda6f3502634fe15fa21bfee4c668a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/wm_adsp.c
diff --cc sound/soc/codecs/wm_adsp.c
index c1b5ea3b5718,8b9726f400a9..000000000000
--- a/sound/soc/codecs/wm_adsp.c
+++ b/sound/soc/codecs/wm_adsp.c
@@@ -3808,26 -1389,26 +3806,34 @@@ static int wm_adsp_buffer_parse_legacy(
  		return -EINVAL;
  	}
  
++<<<<<<< HEAD
 +	buf = wm_adsp_buffer_alloc(dsp);
 +	if (!buf)
 +		return -ENOMEM;
 +
 +	xmalg = dsp->ops->sys_config_size / sizeof(__be32);
++=======
+ 	xmalg = dsp->sys_config_size / sizeof(__be32);
++>>>>>>> 0f1d41a85bda (ASoC: wm_adsp: Make compressed buffers optional)
  
  	addr = alg_region->base + xmalg + ALG_XM_FIELD(magic);
 -	ret = cs_dsp_read_data_word(&dsp->cs_dsp, WMFW_ADSP2_XM, addr, &magic);
 +	ret = wm_adsp_read_data_word(dsp, WMFW_ADSP2_XM, addr, &magic);
  	if (ret < 0)
  		return ret;
  
  	if (magic != WM_ADSP_ALG_XM_STRUCT_MAGIC)
  		return -ENODEV;
  
+ 	buf = wm_adsp_buffer_alloc(dsp);
+ 	if (!buf)
+ 		return -ENOMEM;
+ 
  	addr = alg_region->base + xmalg + ALG_XM_FIELD(host_buf_ptr);
  	for (i = 0; i < 5; ++i) {
 -		ret = cs_dsp_read_data_word(&dsp->cs_dsp, WMFW_ADSP2_XM, addr,
 -					    &buf->host_buf_ptr);
 +		ret = wm_adsp_read_data_word(dsp, WMFW_ADSP2_XM, addr,
 +					     &buf->host_buf_ptr);
  		if (ret < 0)
- 			return ret;
+ 			goto err;
  
  		if (buf->host_buf_ptr)
  			break;
@@@ -3847,13 -1432,19 +3857,23 @@@
  	compr_dbg(buf, "legacy host_buf_ptr=%x\n", buf->host_buf_ptr);
  
  	return 0;
+ 
+ err:
+ 	kfree(buf);
+ 
+ 	return ret;
  }
  
 -static int wm_adsp_buffer_parse_coeff(struct cs_dsp_coeff_ctl *cs_ctl)
 +static int wm_adsp_buffer_parse_coeff(struct wm_coeff_ctl *ctl)
  {
  	struct wm_adsp_host_buf_coeff_v1 coeff_v1;
  	struct wm_adsp_compr_buf *buf;
++<<<<<<< HEAD
 +	unsigned int version;
++=======
+ 	struct wm_adsp *dsp = container_of(cs_ctl->dsp, struct wm_adsp, cs_dsp);
+ 	unsigned int version = 0;
++>>>>>>> 0f1d41a85bda (ASoC: wm_adsp: Make compressed buffers optional)
  	int ret, i;
  
  	for (i = 0; i < 5; ++i) {
@@@ -3887,26 -1478,28 +3907,35 @@@
  	 * v0 host_buffer coefficients didn't have versioning, so if the
  	 * control is one word, assume version 0.
  	 */
++<<<<<<< HEAD
 +	if (ctl->len == 4) {
 +		compr_dbg(buf, "host_buf_ptr=%x\n", buf->host_buf_ptr);
 +		return 0;
 +	}
++=======
+ 	if (cs_ctl->len == 4)
+ 		goto done;
++>>>>>>> 0f1d41a85bda (ASoC: wm_adsp: Make compressed buffers optional)
  
  	version = be32_to_cpu(coeff_v1.versions) & HOST_BUF_COEFF_COMPAT_VER_MASK;
  	version >>= HOST_BUF_COEFF_COMPAT_VER_SHIFT;
  
  	if (version > HOST_BUF_COEFF_SUPPORTED_COMPAT_VER) {
 -		adsp_err(dsp,
 +		adsp_err(ctl->dsp,
  			 "Host buffer coeff ver %u > supported version %u\n",
  			 version, HOST_BUF_COEFF_SUPPORTED_COMPAT_VER);
- 		return -EINVAL;
+ 		ret = -EINVAL;
+ 		goto err;
  	}
  
 -	cs_dsp_remove_padding((u32 *)&coeff_v1.name, ARRAY_SIZE(coeff_v1.name));
 +	wm_adsp_remove_padding((u32 *)&coeff_v1.name, ARRAY_SIZE(coeff_v1.name));
  
 -	buf->name = kasprintf(GFP_KERNEL, "%s-dsp-%s", dsp->part,
 +	buf->name = kasprintf(GFP_KERNEL, "%s-dsp-%s", ctl->dsp->part,
  			      (char *)&coeff_v1.name);
  
+ done:
+ 	list_add_tail(&buf->list, &dsp->buffer_list);
+ 
  	compr_dbg(buf, "host_buf_ptr=%x coeff version %u\n",
  		  buf->host_buf_ptr, version);
  
* Unmerged path sound/soc/codecs/wm_adsp.c
