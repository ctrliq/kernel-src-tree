ASoC: soc-pcm: fix BE transition for TRIGGER_START

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit f4d6aca0c80f09f4c780136a64ee039560a2c39b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/f4d6aca0.failed

A obvious editing mistake caught with a cppcheck warning

sound/soc/soc-pcm.c:2132:8: style: Variable 'ret' is reassigned a
value before the old one has been used. [redundantAssignment]
   ret = soc_pcm_trigger(be_substream, cmd);
       ^
sound/soc/soc-pcm.c:2126:9: note: ret is assigned
    ret = soc_pcm_trigger(be_substream,
        ^
sound/soc/soc-pcm.c:2129:9: note: ret is assigned
    ret = soc_pcm_trigger(be_substream,
        ^

Fixes: 374b50e234a3e ('ASoC: soc-pcm: improve BE transition for TRIGGER_START')
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
Link: https://lore.kernel.org/r/20220520210615.607229-1-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit f4d6aca0c80f09f4c780136a64ee039560a2c39b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/soc-pcm.c
diff --cc sound/soc/soc-pcm.c
index 29ca74b04e82,a827cc3c158a..000000000000
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@@ -2124,9 -2118,20 +2124,24 @@@ int dpcm_be_dai_trigger(struct snd_soc_
  			    (be->dpcm[stream].state != SND_SOC_DPCM_STATE_PAUSED))
  				goto next;
  
++<<<<<<< HEAD
 +			ret = soc_pcm_trigger(be_substream, cmd);
 +			if (ret)
++=======
+ 			be->dpcm[stream].be_start++;
+ 			if (be->dpcm[stream].be_start != 1)
+ 				goto next;
+ 
+ 			if (be->dpcm[stream].state == SND_SOC_DPCM_STATE_PAUSED)
+ 				ret = soc_pcm_trigger(be_substream,
+ 						      SNDRV_PCM_TRIGGER_PAUSE_RELEASE);
+ 			else
+ 				ret = soc_pcm_trigger(be_substream,
+ 						      SNDRV_PCM_TRIGGER_START);
+ 			if (ret) {
+ 				be->dpcm[stream].be_start--;
++>>>>>>> f4d6aca0c80f (ASoC: soc-pcm: fix BE transition for TRIGGER_START)
  				goto next;
 -			}
  
  			be->dpcm[stream].state = SND_SOC_DPCM_STATE_START;
  			break;
* Unmerged path sound/soc/soc-pcm.c
