drm/amdkfd: add SPM support for SVM

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
Rebuild_CHGLOG: - Revert "drm/amdkfd: add SPM support for SVM" (Jocelyn Falempe) [2115880]
Rebuild_FUZZ: 88.61%
commit-author Alex Sierra <alex.sierra@amd.com>
commit c83dee9b639469b6563a281f39deb99311f16bc4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/c83dee9b.failed

When CPU is connected throug XGMI, it has coherent access to VRAM
resource.  In this case that resource is taken from a table in the device
gmc aperture base.  This resource is used along with the device type,
which could be DEVICE_PRIVATE or DEVICE_COHERENT to create the device page
map region.

Also, MIGRATE_VMA_SELECT_DEVICE_COHERENT flag is selected for coherent
type case during migration to device.

Link: https://lkml.kernel.org/r/20220715150521.18165-8-alex.sierra@amd.com
	Signed-off-by: Alex Sierra <alex.sierra@amd.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Felix Kuehling <Felix.Kuehling@amd.com>
	Cc: Alistair Popple <apopple@nvidia.com>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Jason Gunthorpe <jgg@nvidia.com>
	Cc: Jerome Glisse <jglisse@redhat.com>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Ralph Campbell <rcampbell@nvidia.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit c83dee9b639469b6563a281f39deb99311f16bc4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdkfd/kfd_migrate.c
diff --cc drivers/gpu/drm/amd/amdkfd/kfd_migrate.c
index 4a16e3c257b9,f73e3e340413..000000000000
--- a/drivers/gpu/drm/amd/amdkfd/kfd_migrate.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_migrate.c
@@@ -616,12 -671,15 +616,21 @@@ svm_migrate_vma_to_ram(struct amdgpu_de
  	migrate.vma = vma;
  	migrate.start = start;
  	migrate.end = end;
- 	migrate.flags = MIGRATE_VMA_SELECT_DEVICE_PRIVATE;
  	migrate.pgmap_owner = SVM_ADEV_PGMAP_OWNER(adev);
+ 	if (adev->gmc.xgmi.connected_to_cpu)
+ 		migrate.flags = MIGRATE_VMA_SELECT_DEVICE_COHERENT;
+ 	else
+ 		migrate.flags = MIGRATE_VMA_SELECT_DEVICE_PRIVATE;
  
++<<<<<<< HEAD
 +	size = 2 * sizeof(*migrate.src) + sizeof(uint64_t) + sizeof(dma_addr_t);
 +	size *= npages;
 +	buf = kvmalloc(size, GFP_KERNEL | __GFP_ZERO);
++=======
+ 	buf = kvcalloc(npages,
+ 		       2 * sizeof(*migrate.src) + sizeof(uint64_t) + sizeof(dma_addr_t),
+ 		       GFP_KERNEL);
++>>>>>>> c83dee9b6394 (drm/amdkfd: add SPM support for SVM)
  	if (!buf)
  		goto out;
  
@@@ -898,11 -987,11 +912,16 @@@ int svm_migrate_init(struct amdgpu_devi
  	r = devm_memremap_pages(adev->dev, pgmap);
  	if (IS_ERR(r)) {
  		pr_err("failed to register HMM device memory\n");
- 
  		/* Disable SVM support capability */
  		pgmap->type = 0;
++<<<<<<< HEAD
 +		devm_release_mem_region(adev->dev, res->start,
 +					res->end - res->start + 1);
++=======
+ 		if (pgmap->type == MEMORY_DEVICE_PRIVATE)
+ 			devm_release_mem_region(adev->dev, res->start,
+ 						res->end - res->start + 1);
++>>>>>>> c83dee9b6394 (drm/amdkfd: add SPM support for SVM)
  		return PTR_ERR(r);
  	}
  
* Unmerged path drivers/gpu/drm/amd/amdkfd/kfd_migrate.c
