ipv4: Support multipath hashing on inner IP pkts for GRE tunnel

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Stephen Suryaputra <ssuryaextr@gmail.com>
commit 363887a2cdfeb6af52a9b78d84697662adf6f8d5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/363887a2.failed

Multipath hash policy value of 0 isn't distributing since the outer IP
dest and src aren't varied eventhough the inner ones are. Since the flow
is on the inner ones in the case of tunneled traffic, hashing on them is
desired.

This is done mainly for IP over GRE, hence only tested for that. But
anything else supported by flow dissection should work.

v2: Use skb_flow_dissect_flow_keys() directly so that other tunneling
    can be supported through flow dissection (per Nikolay Aleksandrov).
v3: Remove accidental inclusion of ports in the hash keys and clarify
    the documentation (Nikolay Alexandrov).
	Signed-off-by: Stephen Suryaputra <ssuryaextr@gmail.com>
	Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 363887a2cdfeb6af52a9b78d84697662adf6f8d5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/sysctl_net_ipv4.c
diff --cc net/ipv4/sysctl_net_ipv4.c
index 73ccfaaa3e67,0edfa810f9b9..000000000000
--- a/net/ipv4/sysctl_net_ipv4.c
+++ b/net/ipv4/sysctl_net_ipv4.c
@@@ -955,8 -1007,8 +955,13 @@@ static struct ctl_table ipv4_net_table[
  		.maxlen		= sizeof(int),
  		.mode		= 0644,
  		.proc_handler	= proc_fib_multipath_hash_policy,
++<<<<<<< HEAD
 +		.extra1		= SYSCTL_ZERO,
 +		.extra2		= SYSCTL_ONE,
++=======
+ 		.extra1		= &zero,
+ 		.extra2		= &two,
++>>>>>>> 363887a2cdfe (ipv4: Support multipath hashing on inner IP pkts for GRE tunnel)
  	},
  #endif
  	{
diff --git a/Documentation/networking/ip-sysctl.txt b/Documentation/networking/ip-sysctl.txt
index 0a48d78a187b..9a26338242f0 100644
--- a/Documentation/networking/ip-sysctl.txt
+++ b/Documentation/networking/ip-sysctl.txt
@@ -80,6 +80,7 @@ fib_multipath_hash_policy - INTEGER
 	Possible values:
 	0 - Layer 3
 	1 - Layer 4
+	2 - Layer 3 or inner Layer 3 if present
 
 ip_forward_update_priority - INTEGER
 	Whether to update SKB priority from "TOS" field in IPv4 header after it
diff --git a/net/ipv4/route.c b/net/ipv4/route.c
index 5ad19572d74a..e311ce3c4b84 100644
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@ -1945,6 +1945,23 @@ int fib_multipath_hash(const struct net *net, const struct flowi4 *fl4,
 			hash_keys.basic.ip_proto = fl4->flowi4_proto;
 		}
 		break;
+	case 2:
+		memset(&hash_keys, 0, sizeof(hash_keys));
+		hash_keys.control.addr_type = FLOW_DISSECTOR_KEY_IPV4_ADDRS;
+		/* skb is currently provided only when forwarding */
+		if (skb) {
+			struct flow_keys keys;
+
+			skb_flow_dissect_flow_keys(skb, &keys, 0);
+
+			hash_keys.addrs.v4addrs.src = keys.addrs.v4addrs.src;
+			hash_keys.addrs.v4addrs.dst = keys.addrs.v4addrs.dst;
+		} else {
+			/* Same as case 0 */
+			hash_keys.addrs.v4addrs.src = fl4->saddr;
+			hash_keys.addrs.v4addrs.dst = fl4->daddr;
+		}
+		break;
 	}
 	mhash = flow_hash_from_keys(&hash_keys);
 
* Unmerged path net/ipv4/sysctl_net_ipv4.c
