tcp_ipv6: set the drop_reason in the right place

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Jakub Kicinski <kuba@kernel.org>
commit dc7769244e03e932262a4f10eeab11657cb601c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/dc776924.failed

Looks like the IPv6 version of the patch under Fixes was
a copy/paste of the IPv4 but hit the wrong spot.
It is tcp_v6_rcv() which uses drop_reason as a boolean, and
needs to be protected against reason == 0 before calling free.
tcp_v6_do_rcv() has a pretty straightforward flow.

The resulting warning looks like this:
  WARNING: CPU: 1 PID: 0 at net/core/skbuff.c:775
  Call Trace:
    tcp_v6_rcv (net/ipv6/tcp_ipv6.c:1767)
    ip6_protocol_deliver_rcu (net/ipv6/ip6_input.c:438)
    ip6_input_finish (include/linux/rcupdate.h:726)
    ip6_input (include/linux/netfilter.h:307)

Fixes: f8319dfd1b3b ("net: tcp: reset 'drop_reason' to NOT_SPCIFIED in tcp_v{4,6}_rcv()")
	Tested-by: Matthieu Baerts <matthieu.baerts@tessares.net>
Link: https://lore.kernel.org/r/20220520021347.2270207-1-kuba@kernel.org
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit dc7769244e03e932262a4f10eeab11657cb601c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/tcp_ipv6.c
diff --cc net/ipv6/tcp_ipv6.c
index 8cdff0ded837,f37dd4aa91c6..000000000000
--- a/net/ipv6/tcp_ipv6.c
+++ b/net/ipv6/tcp_ipv6.c
@@@ -1441,9 -1509,11 +1441,13 @@@ reset
  discard:
  	if (opt_skb)
  		__kfree_skb(opt_skb);
++<<<<<<< HEAD
 +	kfree_skb(skb);
++=======
+ 	kfree_skb_reason(skb, reason);
++>>>>>>> dc7769244e03 (tcp_ipv6: set the drop_reason in the right place)
  	return 0;
  csum_err:
 -	reason = SKB_DROP_REASON_TCP_CSUM;
 -	trace_tcp_bad_csum(skb);
  	TCP_INC_STATS(sock_net(sk), TCP_MIB_CSUMERRORS);
  	TCP_INC_STATS(sock_net(sk), TCP_MIB_INERRS);
  	goto discard;
@@@ -1662,7 -1762,8 +1666,12 @@@ bad_packet
  	}
  
  discard_it:
++<<<<<<< HEAD
 +	kfree_skb(skb);
++=======
+ 	SKB_DR_OR(drop_reason, NOT_SPECIFIED);
+ 	kfree_skb_reason(skb, drop_reason);
++>>>>>>> dc7769244e03 (tcp_ipv6: set the drop_reason in the right place)
  	return 0;
  
  discard_and_relse:
* Unmerged path net/ipv6/tcp_ipv6.c
