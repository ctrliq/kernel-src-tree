s390/sclp: reserve memory occupied by sclp early buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Alexander Egorenkov <egorenar@linux.ibm.com>
commit 7c0eaa78b9cddf56a9b1ae45b6b12bcfb0f34cec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7c0eaa78.failed

The memory block occupied by the SCLP early buffer that is allocated
by the decompressor and then handed over to the decompressed kernel,
must be reserved to prevent it from being reused for other purposes.
This is necessary because the SCLP early buffer is still in use
during kernel initialization.

Fixes: f1d3c5323772 ("s390/boot: move sclp early buffer from fixed address in asm to C")
	Signed-off-by: Alexander Egorenkov <egorenar@linux.ibm.com>
	Reported-by: Alexander Gordeev <agordeev@linux.ibm.com>
	Reviewed-by: Alexander Gordeev <agordeev@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit 7c0eaa78b9cddf56a9b1ae45b6b12bcfb0f34cec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/sclp.h
#	arch/s390/kernel/setup.c
diff --cc arch/s390/include/asm/sclp.h
index c973a4bec320,e3ae937bef1c..000000000000
--- a/arch/s390/include/asm/sclp.h
+++ b/arch/s390/include/asm/sclp.h
@@@ -113,6 -115,9 +113,12 @@@ struct zpci_report_error_header 
  	u8 data[0];	/* Subsequent Data passed verbatim to SCLP ET 24 */
  } __packed;
  
++<<<<<<< HEAD
++=======
+ extern char *sclp_early_sccb;
+ 
+ void sclp_early_set_buffer(void *sccb);
++>>>>>>> 7c0eaa78b9cd (s390/sclp: reserve memory occupied by sclp early buffer)
  int sclp_early_read_info(void);
  int sclp_early_read_storage_info(void);
  int sclp_early_get_core_info(struct sclp_core_info *info);
diff --cc arch/s390/kernel/setup.c
index 1e3370db09d2,f46f12aebceb..000000000000
--- a/arch/s390/kernel/setup.c
+++ b/arch/s390/kernel/setup.c
@@@ -761,10 -792,10 +761,15 @@@ static void __init reserve_kernel(void
  {
  	unsigned long start_pfn = PFN_UP(__pa(_end));
  
++<<<<<<< HEAD
 +	memblock_reserve(0, HEAD_END);
++=======
+ 	memblock_reserve(0, STARTUP_NORMAL_OFFSET);
+ 	memblock_reserve((unsigned long)sclp_early_sccb, EXT_SCCB_READ_SCP);
++>>>>>>> 7c0eaa78b9cd (s390/sclp: reserve memory occupied by sclp early buffer)
  	memblock_reserve((unsigned long)_stext, PFN_PHYS(start_pfn)
  			 - (unsigned long)_stext);
 +	memblock_reserve(__sdma, __edma - __sdma);
  }
  
  static void __init setup_memory(void)
* Unmerged path arch/s390/include/asm/sclp.h
* Unmerged path arch/s390/kernel/setup.c
diff --git a/drivers/s390/char/sclp.h b/drivers/s390/char/sclp.h
index ecfc4f57adec..1ec94ee5fc6d 100644
--- a/drivers/s390/char/sclp.h
+++ b/drivers/s390/char/sclp.h
@@ -325,8 +325,6 @@ extern int sclp_console_drop;
 extern unsigned long sclp_console_full;
 extern bool sclp_mask_compat_mode;
 
-extern char *sclp_early_sccb;
-
 void sclp_early_wait_irq(void);
 int sclp_early_cmd(sclp_cmdw_t cmd, void *sccb);
 unsigned int sclp_early_con_check_linemode(struct init_sccb *sccb);
