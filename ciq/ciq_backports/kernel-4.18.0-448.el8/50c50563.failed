fbdev: directly call fbcon_suspended/resumed

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 50c5056356340c8b5be90440d2f32fec8c47a7c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/50c50563.failed

With the sh_mobile notifier removed we can just directly call the
fbcon code here.

v2: Remove now unused local variable.

v3: fixup !CONFIG_FRAMEBUFFER_CONSOLE, noticed by kbuild

	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Prarit Bhargava <prarit@redhat.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Konstantin Khorenko <khorenko@virtuozzo.com>
	Cc: Yisheng Xie <ysxie@foxmail.com>
	Cc: "Michał Mirosław" <mirq-linux@rere.qmqm.pl>
	Cc: Peter Rosin <peda@axentia.se>
	Cc: Mikulas Patocka <mpatocka@redhat.com>
	Cc: linux-fbdev@vger.kernel.org
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-22-daniel.vetter@ffwll.ch
(cherry picked from commit 50c5056356340c8b5be90440d2f32fec8c47a7c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fb.h
#	include/linux/fbcon.h
diff --cc include/linux/fb.h
index 5bd1a6c3d119,794b386415b7..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -126,14 -126,6 +126,17 @@@ struct fb_cursor_user 
  
  /*	The resolution of the passed in fb_info about to change */ 
  #define FB_EVENT_MODE_CHANGE		0x01
++<<<<<<< HEAD
 +/*	The display on this fb_info is beeing suspended, no access to the
 + *	framebuffer is allowed any more after that call returns
 + */
 +#define FB_EVENT_SUSPEND		0x02
 +/*	The display on this fb_info was resumed, you can restore the display
 + *	if you own it
 + */
 +#define FB_EVENT_RESUME			0x03
++=======
++>>>>>>> 50c505635634 (fbdev: directly call fbcon_suspended/resumed)
  /*      An entry from the modelist was removed */
  #define FB_EVENT_MODE_DELETE            0x04
  
diff --cc include/linux/fbcon.h
index 34abc144f9f8,790c42ec7b5d..000000000000
--- a/include/linux/fbcon.h
+++ b/include/linux/fbcon.h
@@@ -6,13 -6,17 +6,25 @@@ void __init fb_console_init(void)
  void __exit fb_console_exit(void);
  int fbcon_fb_registered(struct fb_info *info);
  void fbcon_fb_unregistered(struct fb_info *info);
++<<<<<<< HEAD
 +void fbcon_remap_all(struct fb_info *info);
++=======
+ void fbcon_fb_unbind(struct fb_info *info);
+ void fbcon_suspended(struct fb_info *info);
+ void fbcon_resumed(struct fb_info *info);
++>>>>>>> 50c505635634 (fbdev: directly call fbcon_suspended/resumed)
  #else
  static inline void fb_console_init(void) {}
  static inline void fb_console_exit(void) {}
  static inline int fbcon_fb_registered(struct fb_info *info) { return 0; }
  static inline void fbcon_fb_unregistered(struct fb_info *info) {}
++<<<<<<< HEAD
 +static inline void fbcon_remap_all(struct fb_info *info) {}
++=======
+ static inline void fbcon_fb_unbind(struct fb_info *info) {}
+ static inline void fbcon_suspended(struct fb_info *info) {}
+ static inline void fbcon_resumed(struct fb_info *info) {}
++>>>>>>> 50c505635634 (fbdev: directly call fbcon_suspended/resumed)
  #endif
  
  #endif /* _LINUX_FBCON_H */
diff --git a/drivers/video/fbdev/core/fbcon.c b/drivers/video/fbdev/core/fbcon.c
index 689e13ab3084..c90cf473cb4a 100644
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@ -2930,7 +2930,7 @@ static int fbcon_set_origin(struct vc_data *vc)
 	return 0;
 }
 
-static void fbcon_suspended(struct fb_info *info)
+void fbcon_suspended(struct fb_info *info)
 {
 	struct vc_data *vc = NULL;
 	struct fbcon_ops *ops = info->fbcon_par;
@@ -2943,7 +2943,7 @@ static void fbcon_suspended(struct fb_info *info)
 	fbcon_cursor(vc, CM_ERASE);
 }
 
-static void fbcon_resumed(struct fb_info *info)
+void fbcon_resumed(struct fb_info *info)
 {
 	struct vc_data *vc;
 	struct fbcon_ops *ops = info->fbcon_par;
@@ -3349,12 +3349,6 @@ static int fbcon_event_notify(struct notifier_block *self,
 	int idx, ret = 0;
 
 	switch(action) {
-	case FB_EVENT_SUSPEND:
-		fbcon_suspended(info);
-		break;
-	case FB_EVENT_RESUME:
-		fbcon_resumed(info);
-		break;
 	case FB_EVENT_MODE_CHANGE:
 		fbcon_modechanged(info);
 		break;
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index e0a48e4a47a0..182c71bd8d10 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -1925,17 +1925,14 @@ EXPORT_SYMBOL(unregister_framebuffer);
  */
 void fb_set_suspend(struct fb_info *info, int state)
 {
-	struct fb_event event;
-
 	WARN_CONSOLE_UNLOCKED();
 
-	event.info = info;
 	if (state) {
-		fb_notifier_call_chain(FB_EVENT_SUSPEND, &event);
+		fbcon_suspended(info);
 		info->state = FBINFO_STATE_SUSPENDED;
 	} else {
 		info->state = FBINFO_STATE_RUNNING;
-		fb_notifier_call_chain(FB_EVENT_RESUME, &event);
+		fbcon_resumed(info);
 	}
 }
 EXPORT_SYMBOL(fb_set_suspend);
* Unmerged path include/linux/fb.h
* Unmerged path include/linux/fbcon.h
