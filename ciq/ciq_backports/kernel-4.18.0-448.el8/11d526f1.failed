drm/amd/display: Fix new dmub notification enabling in DM

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Stylon Wang <stylon.wang@amd.com>
commit 11d526f1972f486aa222fdfba751d2f0249c002a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/11d526f1.failed

[Why]
Changes from "Fix for dmub outbox notification enable" need to land
in DM or DMUB outbox notification would be disabled.

[How]
Enable outbox notification only after interrupt are enabled and IRQ
handlers registered. Any pending notification will be sent by DMUB
once outbox notification is enabled.

Fixes: ed7208706448 ("drm/amd/display: Fix for dmub outbox notification enable")
	Reviewed-by: Nicholas Kazlauskas <Nicholas.Kazlauskas@amd.com>
	Acked-by: Solomon Chiu <solomon.chiu@amd.com>
	Signed-off-by: Stylon Wang <stylon.wang@amd.com>
	Acked-by: Harry Wentland <harry.wentland@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 11d526f1972f486aa222fdfba751d2f0249c002a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
diff --cc drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
index 085a5ad87ab0,a715fc7d53e8..000000000000
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
@@@ -2247,8 -2616,22 +2254,27 @@@ static int dm_resume(void *handle
  	if (amdgpu_in_reset(adev)) {
  		dc_state = dm->cached_dc_state;
  
++<<<<<<< HEAD
 +		if (dc_enable_dmub_notifications(adev->dm.dc))
 +			amdgpu_dm_outbox_init(adev);
++=======
+ 		/*
+ 		 * The dc->current_state is backed up into dm->cached_dc_state
+ 		 * before we commit 0 streams.
+ 		 *
+ 		 * DC will clear link encoder assignments on the real state
+ 		 * but the changes won't propagate over to the copy we made
+ 		 * before the 0 streams commit.
+ 		 *
+ 		 * DC expects that link encoder assignments are *not* valid
+ 		 * when committing a state, so as a workaround we can copy
+ 		 * off of the current state.
+ 		 *
+ 		 * We lose the previous assignments, but we had already
+ 		 * commit 0 streams anyway.
+ 		 */
+ 		link_enc_cfg_copy(adev->dm.dc->current_state, dc_state);
++>>>>>>> 11d526f1972f (drm/amd/display: Fix new dmub notification enabling in DM)
  
  		r = dm_dmub_hw_init(adev);
  		if (r)
@@@ -2266,16 -2649,12 +2292,21 @@@
  					= 0xffffffff;
  			}
  		}
 +#if defined(CONFIG_DRM_AMD_DC_DCN)
 +		/*
 +		 * Resource allocation happens for link encoders for newer ASIC in
 +		 * dc_validate_global_state, so we need to revalidate it.
 +		 *
 +		 * This shouldn't fail (it passed once before), so warn if it does.
 +		 */
 +		WARN_ON(dc_validate_global_state(dm->dc, dc_state, false) != DC_OK);
 +#endif
  
+ 		if (dc_is_dmub_outbox_supported(adev->dm.dc)) {
+ 			amdgpu_dm_outbox_init(adev);
+ 			dc_enable_dmub_outbox(adev->dm.dc);
+ 		}
+ 
  		WARN_ON(!dc_commit_state(dm->dc, dc_state));
  
  		dm_gpureset_commit_state(dm->cached_dc_state, dm);
* Unmerged path drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
