wifi: mac80211_hwsim: send a beacon per link

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Shaul Triebitz <shaul.triebitz@intel.com>
commit e57f8a489c294d83cc4e2c9cba1432f99fbf7fdd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e57f8a48.failed

Add to hwsim a link_data structure.
For now, move the beacon interval and beacon timer to
the link_data structure (making them per link).
Set a beacon timer for each link and transmit a per
link beacon (pass the link_id to ieee80211_beacon_get).

	Signed-off-by: Shaul Triebitz <shaul.triebitz@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit e57f8a489c294d83cc4e2c9cba1432f99fbf7fdd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mac80211_hwsim.c
diff --cc drivers/net/wireless/mac80211_hwsim.c
index bd7a5899132f,513e9297a6b5..000000000000
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@@ -1908,7 -1923,7 +1923,11 @@@ static void mac80211_hwsim_beacon_tx(vo
  	    vif->type != NL80211_IFTYPE_OCB)
  		return;
  
++<<<<<<< HEAD
 +	skb = ieee80211_beacon_get(hw, vif);
++=======
+ 	skb = ieee80211_beacon_get(hw, vif, link_data->link_id);
++>>>>>>> e57f8a489c29 (wifi: mac80211_hwsim: send a beacon per link)
  	if (skb == NULL)
  		return;
  	info = IEEE80211_SKB_CB(skb);
@@@ -2104,6 -2146,8 +2131,11 @@@ static void mac80211_hwsim_bss_info_cha
  {
  	struct hwsim_vif_priv *vp = (void *)vif->drv_priv;
  	struct mac80211_hwsim_data *data = hw->priv;
++<<<<<<< HEAD
++=======
+ 	struct ieee80211_bss_conf *info = vif->link_conf[link_id];
+ 	struct mac80211_hwsim_link_data *link_data = &data->link_data[link_id];
++>>>>>>> e57f8a489c29 (wifi: mac80211_hwsim: send a beacon per link)
  
  	hwsim_check_magic(vif);
  
* Unmerged path drivers/net/wireless/mac80211_hwsim.c
