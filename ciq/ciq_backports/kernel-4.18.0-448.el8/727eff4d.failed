wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Gregory Greenman <gregory.greenman@intel.com>
commit 727eff4dd198d79f9e81d3aafbab741a8374b5d0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/727eff4d.failed

Since mac80211 already has a protected pointer to link_conf,
pass it to the driver to avoid additional RCU locking.

	Signed-off-by: Gregory Greenman <gregory.greenman@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 727eff4dd198d79f9e81d3aafbab741a8374b5d0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ath/ath10k/mac.c
#	drivers/net/wireless/ath/ath11k/mac.c
#	drivers/net/wireless/ath/ath9k/main.c
#	drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
#	drivers/net/wireless/mac80211_hwsim.c
#	drivers/net/wireless/silabs/wfx/sta.c
#	drivers/net/wireless/silabs/wfx/sta.h
#	drivers/net/wireless/ti/wlcore/main.c
#	include/net/mac80211.h
#	net/mac80211/chan.c
#	net/mac80211/driver-ops.h
#	net/mac80211/trace.h
#	net/mac80211/util.c
diff --cc drivers/net/wireless/ath/ath10k/mac.c
index f0f1ea0cb75e,9dd3b8fba4b0..000000000000
--- a/drivers/net/wireless/ath/ath10k/mac.c
+++ b/drivers/net/wireless/ath/ath10k/mac.c
@@@ -8911,6 -8920,7 +8911,10 @@@ unlock
  static int
  ath10k_mac_op_assign_vif_chanctx(struct ieee80211_hw *hw,
  				 struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				 struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				 struct ieee80211_chanctx_conf *ctx)
  {
  	struct ath10k *ar = hw->priv;
@@@ -8990,6 -9000,7 +8994,10 @@@ err
  static void
  ath10k_mac_op_unassign_vif_chanctx(struct ieee80211_hw *hw,
  				   struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				   struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				   struct ieee80211_chanctx_conf *ctx)
  {
  	struct ath10k *ar = hw->priv;
diff --cc drivers/net/wireless/ath/ath11k/mac.c
index 5ba7709f4e71,92e17d3c634e..000000000000
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@@ -7061,6 -7073,7 +7061,10 @@@ static int ath11k_start_vdev_delay(stru
  static int
  ath11k_mac_op_assign_vif_chanctx(struct ieee80211_hw *hw,
  				 struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				 struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				 struct ieee80211_chanctx_conf *ctx)
  {
  	struct ath11k *ar = hw->priv;
@@@ -7150,6 -7163,7 +7154,10 @@@ out
  static void
  ath11k_mac_op_unassign_vif_chanctx(struct ieee80211_hw *hw,
  				   struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				   struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				   struct ieee80211_chanctx_conf *ctx)
  {
  	struct ath11k *ar = hw->priv;
diff --cc drivers/net/wireless/ath/ath9k/main.c
index 8bf9317fc2a8,a4197c14f0a9..000000000000
--- a/drivers/net/wireless/ath/ath9k/main.c
+++ b/drivers/net/wireless/ath/ath9k/main.c
@@@ -2596,6 -2597,7 +2596,10 @@@ static void ath9k_change_chanctx(struc
  
  static int ath9k_assign_vif_chanctx(struct ieee80211_hw *hw,
  				    struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				    struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				    struct ieee80211_chanctx_conf *conf)
  {
  	struct ath_softc *sc = hw->priv;
@@@ -2627,6 -2629,7 +2631,10 @@@
  
  static void ath9k_unassign_vif_chanctx(struct ieee80211_hw *hw,
  				       struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				       struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				       struct ieee80211_chanctx_conf *conf)
  {
  	struct ath_softc *sc = hw->priv;
diff --cc drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
index dd359df49b3f,5eb28f8ee87e..000000000000
--- a/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
@@@ -4236,6 -4264,7 +4236,10 @@@ out
  }
  static int iwl_mvm_assign_vif_chanctx(struct ieee80211_hw *hw,
  				      struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 				      struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				      struct ieee80211_chanctx_conf *ctx)
  {
  	struct iwl_mvm *mvm = IWL_MAC80211_GET_MVM(hw);
@@@ -4309,6 -4338,7 +4313,10 @@@ out
  
  static void iwl_mvm_unassign_vif_chanctx(struct ieee80211_hw *hw,
  					 struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 					 struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					 struct ieee80211_chanctx_conf *ctx)
  {
  	struct iwl_mvm *mvm = IWL_MAC80211_GET_MVM(hw);
diff --cc drivers/net/wireless/mac80211_hwsim.c
index ab8607faefb4,7d573e90ad81..000000000000
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@@ -2753,6 -2794,7 +2753,10 @@@ static void mac80211_hwsim_change_chanc
  
  static int mac80211_hwsim_assign_vif_chanctx(struct ieee80211_hw *hw,
  					     struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 					     struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					     struct ieee80211_chanctx_conf *ctx)
  {
  	hwsim_check_magic(vif);
@@@ -2763,6 -2805,7 +2767,10 @@@
  
  static void mac80211_hwsim_unassign_vif_chanctx(struct ieee80211_hw *hw,
  						struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 						struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  						struct ieee80211_chanctx_conf *ctx)
  {
  	hwsim_check_magic(vif);
diff --cc drivers/net/wireless/ti/wlcore/main.c
index f7f0a4367259,3e3922d4c788..000000000000
--- a/drivers/net/wireless/ti/wlcore/main.c
+++ b/drivers/net/wireless/ti/wlcore/main.c
@@@ -4696,6 -4701,7 +4696,10 @@@ out
  
  static int wlcore_op_assign_vif_chanctx(struct ieee80211_hw *hw,
  					struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 					struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					struct ieee80211_chanctx_conf *ctx)
  {
  	struct wl1271 *wl = hw->priv;
@@@ -4745,6 -4752,7 +4749,10 @@@ out
  
  static void wlcore_op_unassign_vif_chanctx(struct ieee80211_hw *hw,
  					   struct ieee80211_vif *vif,
++<<<<<<< HEAD
++=======
+ 					   struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					   struct ieee80211_chanctx_conf *ctx)
  {
  	struct wl1271 *wl = hw->priv;
diff --cc include/net/mac80211.h
index f38672457468,e4ead73c5c43..000000000000
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@@ -261,11 -261,13 +261,19 @@@ enum ieee80211_chanctx_switch_mode 
   * done.
   *
   * @vif: the vif that should be switched from old_ctx to new_ctx
++<<<<<<< HEAD
++=======
+  * @link_conf: the link conf that's switching
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
   * @old_ctx: the old context to which the vif was assigned
   * @new_ctx: the new context to which the vif must be assigned
   */
  struct ieee80211_vif_chanctx_switch {
  	struct ieee80211_vif *vif;
++<<<<<<< HEAD
++=======
+ 	struct ieee80211_bss_conf *link_conf;
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	struct ieee80211_chanctx_conf *old_ctx;
  	struct ieee80211_chanctx_conf *new_ctx;
  };
@@@ -4169,9 -4297,11 +4177,17 @@@ struct ieee80211_ops 
  			       u32 changed);
  	int (*assign_vif_chanctx)(struct ieee80211_hw *hw,
  				  struct ieee80211_vif *vif,
++<<<<<<< HEAD
 +				  struct ieee80211_chanctx_conf *ctx);
 +	void (*unassign_vif_chanctx)(struct ieee80211_hw *hw,
 +				     struct ieee80211_vif *vif,
++=======
+ 				  struct ieee80211_bss_conf *link_conf,
+ 				  struct ieee80211_chanctx_conf *ctx);
+ 	void (*unassign_vif_chanctx)(struct ieee80211_hw *hw,
+ 				     struct ieee80211_vif *vif,
+ 				     struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				     struct ieee80211_chanctx_conf *ctx);
  	int (*switch_vif_chanctx)(struct ieee80211_hw *hw,
  				  struct ieee80211_vif_chanctx_switch *vifs,
diff --cc net/mac80211/chan.c
index 37035c3e5f8a,f247daa41563..000000000000
--- a/net/mac80211/chan.c
+++ b/net/mac80211/chan.c
@@@ -748,9 -831,10 +748,13 @@@ static void ieee80211_recalc_radar_chan
  	drv_change_chanctx(local, chanctx, IEEE80211_CHANCTX_CHANGE_RADAR);
  }
  
 -static int ieee80211_assign_link_chanctx(struct ieee80211_link_data *link,
 -					 struct ieee80211_chanctx *new_ctx)
 +static int ieee80211_assign_vif_chanctx(struct ieee80211_sub_if_data *sdata,
 +					struct ieee80211_chanctx *new_ctx)
  {
++<<<<<<< HEAD
++=======
+ 	struct ieee80211_sub_if_data *sdata = link->sdata;
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	struct ieee80211_local *local = sdata->local;
  	struct ieee80211_chanctx_conf *conf;
  	struct ieee80211_chanctx *curr_ctx = NULL;
@@@ -765,13 -849,13 +769,21 @@@
  	if (conf) {
  		curr_ctx = container_of(conf, struct ieee80211_chanctx, conf);
  
++<<<<<<< HEAD
 +		drv_unassign_vif_chanctx(local, sdata, curr_ctx);
++=======
+ 		drv_unassign_vif_chanctx(local, sdata, link->conf, curr_ctx);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  		conf = NULL;
 -		list_del(&link->assigned_chanctx_list);
 +		list_del(&sdata->assigned_chanctx_list);
  	}
  
  	if (new_ctx) {
++<<<<<<< HEAD
 +		ret = drv_assign_vif_chanctx(local, sdata, new_ctx);
++=======
+ 		ret = drv_assign_vif_chanctx(local, sdata, link->conf, new_ctx);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  		if (ret)
  			goto out;
  
@@@ -1159,9 -1275,10 +1171,13 @@@ ieee80211_vif_use_reserved_reassign(str
  	vif_chsw[0].vif = &sdata->vif;
  	vif_chsw[0].old_ctx = &old_ctx->conf;
  	vif_chsw[0].new_ctx = &new_ctx->conf;
++<<<<<<< HEAD
++=======
+ 	vif_chsw[0].link_conf = link->conf;
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  
 -	list_del(&link->reserved_chanctx_list);
 -	link->reserved_chanctx = NULL;
 +	list_del(&sdata->reserved_chanctx_list);
 +	sdata->reserved_chanctx = NULL;
  
  	err = drv_switch_vif_chanctx(local, vif_chsw, 1,
  				     CHANCTX_SWMODE_REASSIGN_VIF);
@@@ -1311,16 -1430,16 +1327,20 @@@ static int ieee80211_chsw_switch_vifs(s
  			goto out;
  		}
  
 -		list_for_each_entry(link, &ctx->reserved_links,
 +		list_for_each_entry(sdata, &ctx->reserved_vifs,
  				    reserved_chanctx_list) {
 -			if (!ieee80211_link_has_in_place_reservation(link))
 +			if (!ieee80211_vif_has_in_place_reservation(
 +					sdata))
  				continue;
  
 -			old_ctx = ieee80211_link_get_chanctx(link);
 -			vif_chsw[i].vif = &link->sdata->vif;
 +			old_ctx = ieee80211_vif_get_chanctx(sdata);
 +			vif_chsw[i].vif = &sdata->vif;
  			vif_chsw[i].old_ctx = &old_ctx->conf;
  			vif_chsw[i].new_ctx = &ctx->conf;
++<<<<<<< HEAD
++=======
+ 			vif_chsw[i].link_conf = link->conf;
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  
  			i++;
  		}
diff --cc net/mac80211/driver-ops.h
index 173a201d5e6d,0f06081c68ca..000000000000
--- a/net/mac80211/driver-ops.h
+++ b/net/mac80211/driver-ops.h
@@@ -915,8 -937,17 +915,20 @@@ static inline void drv_change_chanctx(s
  	trace_drv_return_void(local);
  }
  
+ static inline void drv_verify_link_exists(struct ieee80211_sub_if_data *sdata,
+ 					  struct ieee80211_bss_conf *link_conf)
+ {
+ 	/* deflink always exists, so need to check only for other links */
+ 	if (sdata->deflink.conf != link_conf)
+ 		sdata_assert_lock(sdata);
+ }
+ 
  static inline int drv_assign_vif_chanctx(struct ieee80211_local *local,
  					 struct ieee80211_sub_if_data *sdata,
++<<<<<<< HEAD
++=======
+ 					 struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					 struct ieee80211_chanctx *ctx)
  {
  	int ret = 0;
@@@ -924,11 -956,12 +937,19 @@@
  	if (!check_sdata_in_driver(sdata))
  		return -EIO;
  
++<<<<<<< HEAD
 +	trace_drv_assign_vif_chanctx(local, sdata, ctx);
++=======
+ 	trace_drv_assign_vif_chanctx(local, sdata, link_conf, ctx);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	if (local->ops->assign_vif_chanctx) {
  		WARN_ON_ONCE(!ctx->driver_present);
  		ret = local->ops->assign_vif_chanctx(&local->hw,
  						     &sdata->vif,
++<<<<<<< HEAD
++=======
+ 						     link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  						     &ctx->conf);
  	}
  	trace_drv_return_int(local, ret);
@@@ -938,6 -971,7 +959,10 @@@
  
  static inline void drv_unassign_vif_chanctx(struct ieee80211_local *local,
  					    struct ieee80211_sub_if_data *sdata,
++<<<<<<< HEAD
++=======
+ 					    struct ieee80211_bss_conf *link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  					    struct ieee80211_chanctx *ctx)
  {
  	might_sleep();
@@@ -945,11 -980,12 +971,19 @@@
  	if (!check_sdata_in_driver(sdata))
  		return;
  
++<<<<<<< HEAD
 +	trace_drv_unassign_vif_chanctx(local, sdata, ctx);
++=======
+ 	trace_drv_unassign_vif_chanctx(local, sdata, link_conf, ctx);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	if (local->ops->unassign_vif_chanctx) {
  		WARN_ON_ONCE(!ctx->driver_present);
  		local->ops->unassign_vif_chanctx(&local->hw,
  						 &sdata->vif,
++<<<<<<< HEAD
++=======
+ 						 link_conf,
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  						 &ctx->conf);
  	}
  	trace_drv_return_void(local);
@@@ -964,6 -1001,9 +998,12 @@@ static inline int drv_start_ap(struct i
  {
  	int ret = 0;
  
++<<<<<<< HEAD
++=======
+ 	/* make sure link_conf is protected */
+ 	drv_verify_link_exists(sdata, link_conf);
+ 
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	might_sleep();
  
  	if (!check_sdata_in_driver(sdata))
@@@ -977,8 -1017,12 +1017,14 @@@
  }
  
  static inline void drv_stop_ap(struct ieee80211_local *local,
 -			       struct ieee80211_sub_if_data *sdata,
 -			       struct ieee80211_bss_conf *link_conf)
 +			       struct ieee80211_sub_if_data *sdata)
  {
++<<<<<<< HEAD
++=======
+ 	/* make sure link_conf is protected */
+ 	drv_verify_link_exists(sdata, link_conf);
+ 
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	if (!check_sdata_in_driver(sdata))
  		return;
  
diff --cc net/mac80211/trace.h
index 17e7760d8348,402110f439f8..000000000000
--- a/net/mac80211/trace.h
+++ b/net/mac80211/trace.h
@@@ -1631,6 -1669,7 +1631,10 @@@ TRACE_EVENT(drv_switch_vif_chanctx
  
  				SWITCH_ENTRY_ASSIGN(vif.vif_type, vif->type);
  				SWITCH_ENTRY_ASSIGN(vif.p2p, vif->p2p);
++<<<<<<< HEAD
++=======
+ 				SWITCH_ENTRY_ASSIGN(link_id, link_conf->link_id);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  				strncpy(local_vifs[i].vif.vif_name,
  					sdata->name,
  					sizeof(local_vifs[i].vif.vif_name));
@@@ -1671,9 -1710,10 +1675,16 @@@
  DECLARE_EVENT_CLASS(local_sdata_chanctx,
  	TP_PROTO(struct ieee80211_local *local,
  		 struct ieee80211_sub_if_data *sdata,
++<<<<<<< HEAD
 +		 struct ieee80211_chanctx *ctx),
 +
 +	TP_ARGS(local, sdata, ctx),
++=======
+ 		 struct ieee80211_bss_conf *link_conf,
+ 		 struct ieee80211_chanctx *ctx),
+ 
+ 	TP_ARGS(local, sdata, link_conf, ctx),
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  
  	TP_STRUCT__entry(
  		LOCAL_ENTRY
@@@ -1685,6 -1726,7 +1696,10 @@@
  		LOCAL_ASSIGN;
  		VIF_ASSIGN;
  		CHANCTX_ASSIGN;
++<<<<<<< HEAD
++=======
+ 		__entry->link_id = link_conf->link_id;
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	),
  
  	TP_printk(
@@@ -1696,15 -1738,17 +1711,27 @@@
  DEFINE_EVENT(local_sdata_chanctx, drv_assign_vif_chanctx,
  	TP_PROTO(struct ieee80211_local *local,
  		 struct ieee80211_sub_if_data *sdata,
++<<<<<<< HEAD
 +		 struct ieee80211_chanctx *ctx),
 +	TP_ARGS(local, sdata, ctx)
++=======
+ 		 struct ieee80211_bss_conf *link_conf,
+ 		 struct ieee80211_chanctx *ctx),
+ 	TP_ARGS(local, sdata, link_conf, ctx)
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  );
  
  DEFINE_EVENT(local_sdata_chanctx, drv_unassign_vif_chanctx,
  	TP_PROTO(struct ieee80211_local *local,
  		 struct ieee80211_sub_if_data *sdata,
++<<<<<<< HEAD
 +		 struct ieee80211_chanctx *ctx),
 +	TP_ARGS(local, sdata, ctx)
++=======
+ 		 struct ieee80211_bss_conf *link_conf,
+ 		 struct ieee80211_chanctx *ctx),
+ 	TP_ARGS(local, sdata, link_conf, ctx)
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  );
  
  TRACE_EVENT(drv_start_ap,
diff --cc net/mac80211/util.c
index b3a2e7d09e77,8cb93d65b80e..000000000000
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@@ -2267,7 -2270,7 +2267,11 @@@ static void ieee80211_assign_chanctx(st
  					 lockdep_is_held(&local->chanctx_mtx));
  	if (conf) {
  		ctx = container_of(conf, struct ieee80211_chanctx, conf);
++<<<<<<< HEAD
 +		drv_assign_vif_chanctx(local, sdata, ctx);
++=======
+ 		drv_assign_vif_chanctx(local, sdata, link->conf, ctx);
++>>>>>>> 727eff4dd198 (wifi: mac80211: replace link_id with link_conf in switch/(un)assign_vif_chanctx())
  	}
  	mutex_unlock(&local->chanctx_mtx);
  }
* Unmerged path drivers/net/wireless/silabs/wfx/sta.c
* Unmerged path drivers/net/wireless/silabs/wfx/sta.h
* Unmerged path drivers/net/wireless/ath/ath10k/mac.c
* Unmerged path drivers/net/wireless/ath/ath11k/mac.c
* Unmerged path drivers/net/wireless/ath/ath9k/main.c
* Unmerged path drivers/net/wireless/intel/iwlwifi/mvm/mac80211.c
* Unmerged path drivers/net/wireless/mac80211_hwsim.c
* Unmerged path drivers/net/wireless/silabs/wfx/sta.c
* Unmerged path drivers/net/wireless/silabs/wfx/sta.h
* Unmerged path drivers/net/wireless/ti/wlcore/main.c
* Unmerged path include/net/mac80211.h
* Unmerged path net/mac80211/chan.c
* Unmerged path net/mac80211/driver-ops.h
* Unmerged path net/mac80211/trace.h
* Unmerged path net/mac80211/util.c
