scsi: qla2xxx: edif: Fix dropped IKE message

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Quinn Tran <qutran@marvell.com>
commit c019cd656e717349ff22d0c41d6fbfc773f48c52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/c019cd65.failed

This patch fixes IKE message being dropped due to error in processing Purex
IOCB and Continuation IOCBs.

Link: https://lore.kernel.org/r/20220713052045.10683-6-njavali@marvell.com
Fixes: fac2807946c1 ("scsi: qla2xxx: edif: Add extraction of auth_els from the wire")
	Cc: stable@vger.kernel.org
	Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
	Signed-off-by: Quinn Tran <qutran@marvell.com>
	Signed-off-by: Nilesh Javali <njavali@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit c019cd656e717349ff22d0c41d6fbfc773f48c52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_isr.c
diff --cc drivers/scsi/qla2xxx/qla_isr.c
index 3da39235cd87,76e79f350a22..000000000000
--- a/drivers/scsi/qla2xxx/qla_isr.c
+++ b/drivers/scsi/qla2xxx/qla_isr.c
@@@ -3786,6 -3763,8 +3769,11 @@@ void qla24xx_process_response_queue(str
  	struct qla_hw_data *ha = vha->hw;
  	struct purex_entry_24xx *purex_entry;
  	struct purex_item *pure_item;
++<<<<<<< HEAD
++=======
+ 	u16 rsp_in = 0, cur_ring_index;
+ 	int follow_inptr, is_shadow_hba;
++>>>>>>> c019cd656e71 (scsi: qla2xxx: edif: Fix dropped IKE message)
  
  	if (!ha->flags.fw_started)
  		return;
@@@ -3795,8 -3774,27 +3783,9 @@@
  		qla_cpu_update(rsp->qpair, smp_processor_id());
  	}
  
 -#define __update_rsp_in(_update, _is_shadow_hba, _rsp, _rsp_in)		\
 -	do {								\
 -		if (_update) {						\
 -			_rsp_in = _is_shadow_hba ? *(_rsp)->in_ptr :	\
 -				rd_reg_dword_relaxed((_rsp)->rsp_q_in);	\
 -		}							\
 -	} while (0)
 -
 -	is_shadow_hba = IS_SHADOW_REG_CAPABLE(ha);
 -	follow_inptr = is_shadow_hba ? ql2xrspq_follow_inptr :
 -				ql2xrspq_follow_inptr_legacy;
 -
 -	__update_rsp_in(follow_inptr, is_shadow_hba, rsp, rsp_in);
 -
 -	while ((likely(follow_inptr &&
 -		       rsp->ring_index != rsp_in &&
 -		       rsp->ring_ptr->signature != RESPONSE_PROCESSED)) ||
 -		       (!follow_inptr &&
 -			rsp->ring_ptr->signature != RESPONSE_PROCESSED)) {
 +	while (rsp->ring_ptr->signature != RESPONSE_PROCESSED) {
  		pkt = (struct sts_entry_24xx *)rsp->ring_ptr;
+ 		cur_ring_index = rsp->ring_index;
  
  		rsp->ring_index++;
  		if (rsp->ring_index == rsp->length) {
* Unmerged path drivers/scsi/qla2xxx/qla_isr.c
