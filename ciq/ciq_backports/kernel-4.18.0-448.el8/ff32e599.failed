ACPI: bus: Introduce acpi_dev_for_each_child_reverse()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit ff32e59947c87b01dc25a8b5763d609c1a8f56eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/ff32e599.failed

Make it possible to walk the children of an ACPI device in the revese
order by defining acpi_dev_for_each_child_reverse() in analogy with
acpi_dev_for_each_child().

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
(cherry picked from commit ff32e59947c87b01dc25a8b5763d609c1a8f56eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/acpi/acpi_bus.h
diff --cc include/acpi/acpi_bus.h
index c5ed6c83bb83,76de1aa5d221..000000000000
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@@ -489,6 -480,13 +489,16 @@@ void acpi_initialize_hp_context(struct 
  /* acpi_device.dev.bus == &acpi_bus_type */
  extern struct bus_type acpi_bus_type;
  
++<<<<<<< HEAD
++=======
+ int acpi_bus_for_each_dev(int (*fn)(struct device *, void *), void *data);
+ int acpi_dev_for_each_child(struct acpi_device *adev,
+ 			    int (*fn)(struct acpi_device *, void *), void *data);
+ int acpi_dev_for_each_child_reverse(struct acpi_device *adev,
+ 				    int (*fn)(struct acpi_device *, void *),
+ 				    void *data);
+ 
++>>>>>>> ff32e59947c8 (ACPI: bus: Introduce acpi_dev_for_each_child_reverse())
  /*
   * Events
   * ------
diff --git a/drivers/acpi/bus.c b/drivers/acpi/bus.c
index b4d279cc20e0..902e0f241877 100644
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@ -1097,6 +1097,18 @@ struct bus_type acpi_bus_type = {
 };
 EXPORT_SYMBOL_GPL(acpi_bus_type);
 
+int acpi_dev_for_each_child_reverse(struct acpi_device *adev,
+				    int (*fn)(struct acpi_device *, void *),
+				    void *data)
+{
+	struct acpi_dev_walk_context adwc = {
+		.fn = fn,
+		.data = data,
+	};
+
+	return device_for_each_child_reverse(&adev->dev, &adwc, acpi_dev_for_one_check);
+}
+
 /* --------------------------------------------------------------------------
                              Initialization/Cleanup
    -------------------------------------------------------------------------- */
* Unmerged path include/acpi/acpi_bus.h
