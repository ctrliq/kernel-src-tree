cpufreq: Remove ->resolve_freq()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Viresh Kumar <viresh.kumar@linaro.org>
commit b3beca76181681fce9cf72f37d19c3030e3353c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/b3beca76.failed

Commit e3c062360870 ("cpufreq: add cpufreq_driver_resolve_freq()")
introduced this callback, back in 2016, for drivers that provide the
->target() callback.

The kernel hasn't seen a single user of it in the past 5 years and
it is not likely to be used any time soon.

Remove it for now.

	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
[ rjw: Changelog edits ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit b3beca76181681fce9cf72f37d19c3030e3353c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/translations/zh_CN/cpu-freq/cpu-drivers.rst
#	drivers/cpufreq/cpufreq.c
diff --cc drivers/cpufreq/cpufreq.c
index 75540eb0e9fa,45f3416988f1..000000000000
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@@ -519,6 -524,22 +519,25 @@@ void cpufreq_disable_fast_switch(struc
  }
  EXPORT_SYMBOL_GPL(cpufreq_disable_fast_switch);
  
++<<<<<<< HEAD
++=======
+ static unsigned int __resolve_freq(struct cpufreq_policy *policy,
+ 		unsigned int target_freq, unsigned int relation)
+ {
+ 	unsigned int idx;
+ 
+ 	target_freq = clamp_val(target_freq, policy->min, policy->max);
+ 
+ 	if (!cpufreq_driver->target_index)
+ 		return target_freq;
+ 
+ 	idx = cpufreq_frequency_table_target(policy, target_freq, relation);
+ 	policy->cached_resolved_idx = idx;
+ 	policy->cached_target_freq = target_freq;
+ 	return policy->freq_table[idx].frequency;
+ }
+ 
++>>>>>>> b3beca761816 (cpufreq: Remove ->resolve_freq())
  /**
   * cpufreq_driver_resolve_freq - Map a target frequency to a driver-supported
   * one.
* Unmerged path Documentation/translations/zh_CN/cpu-freq/cpu-drivers.rst
diff --git a/Documentation/cpu-freq/cpu-drivers.txt b/Documentation/cpu-freq/cpu-drivers.txt
index 6e353d00cdc6..1f5a4f96ef53 100644
--- a/Documentation/cpu-freq/cpu-drivers.txt
+++ b/Documentation/cpu-freq/cpu-drivers.txt
@@ -66,9 +66,6 @@ And optionally
 
  .driver_data - cpufreq driver specific data.
 
- .resolve_freq - Returns the most appropriate frequency for a target
- frequency. Doesn't change the frequency though.
-
  .get_intermediate and target_intermediate - Used to switch to stable
  frequency while changing CPU frequency.
 
* Unmerged path Documentation/translations/zh_CN/cpu-freq/cpu-drivers.rst
* Unmerged path drivers/cpufreq/cpufreq.c
diff --git a/include/linux/cpufreq.h b/include/linux/cpufreq.h
index dfff8dd5caff..7d92c6c6cdad 100644
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -336,15 +336,6 @@ struct cpufreq_driver {
 				       unsigned long target_perf,
 				       unsigned long capacity);
 
-	/*
-	 * Caches and returns the lowest driver-supported frequency greater than
-	 * or equal to the target frequency, subject to any driver limitations.
-	 * Does not set the frequency. Only to be implemented for drivers with
-	 * target().
-	 */
-	unsigned int	(*resolve_freq)(struct cpufreq_policy *policy,
-					unsigned int target_freq);
-
 	/*
 	 * Only for drivers with target_index() and CPUFREQ_ASYNC_NOTIFICATION
 	 * unset.
