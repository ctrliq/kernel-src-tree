linux/kconfig.h: replace IF_ENABLED() with PTR_IF() in <linux/kernel.h>

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Masahiro Yamada <masahiroy@kernel.org>
commit 0ab1438bad43d95877f848b7df551bd431680270
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0ab1438b.failed

<linux/kconfig.h> is included from all the kernel-space source files,
including C, assembly, linker scripts. It is intended to contain a
minimal set of macros to evaluate CONFIG options.

IF_ENABLED() is an intruder here because (x ? y : z) is C code, which
should not be included from assembly files or linker scripts.

Also, <linux/kconfig.h> is no longer self-contained because NULL is
defined in <linux/stddef.h>.

Move IF_ENABLED() out to <linux/kernel.h> as PTR_IF(). PTF_IF()
takes the general boolean expression instead of a CONFIG option
so that it fits better in <linux/kernel.h>.

	Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>
	Reviewed-by: Kees Cook <keescook@chromium.org>
(cherry picked from commit 0ab1438bad43d95877f848b7df551bd431680270)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pinctrl/pinctrl-ingenic.c
diff --cc drivers/pinctrl/pinctrl-ingenic.c
index 6a1b6058b991,983ba9865f77..000000000000
--- a/drivers/pinctrl/pinctrl-ingenic.c
+++ b/drivers/pinctrl/pinctrl-ingenic.c
@@@ -7,10 -8,12 +7,11 @@@
   */
  
  #include <linux/compiler.h>
 -#include <linux/gpio/driver.h>
 +#include <linux/gpio.h>
  #include <linux/interrupt.h>
  #include <linux/io.h>
+ #include <linux/kernel.h>
  #include <linux/of_device.h>
 -#include <linux/of_irq.h>
  #include <linux/of_platform.h>
  #include <linux/pinctrl/pinctrl.h>
  #include <linux/pinctrl/pinmux.h>
@@@ -826,11 -3855,74 +827,82 @@@ static int ingenic_pinctrl_probe(struc
  	return 0;
  }
  
++<<<<<<< HEAD
 +static const struct platform_device_id ingenic_pinctrl_ids[] = {
 +	{ "jz4740-pinctrl", ID_JZ4740 },
 +	{ "jz4770-pinctrl", ID_JZ4770 },
 +	{ "jz4780-pinctrl", ID_JZ4780 },
 +	{},
++=======
+ #define IF_ENABLED(cfg, ptr)	PTR_IF(IS_ENABLED(cfg), (ptr))
+ 
+ static const struct of_device_id ingenic_pinctrl_of_match[] = {
+ 	{
+ 		.compatible = "ingenic,jz4730-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4730, &jz4730_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4740-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4740, &jz4740_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4725b-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4725B, &jz4725b_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4750-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4750, &jz4750_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4755-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4755, &jz4755_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4760-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4760, &jz4760_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4760b-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4760, &jz4760_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4770-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4770, &jz4770_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4775-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4775, &jz4775_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,jz4780-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_JZ4780, &jz4780_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x1000-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X1000, &x1000_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x1000e-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X1000, &x1000_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x1500-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X1500, &x1500_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x1830-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X1830, &x1830_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x2000-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X2000, &x2000_chip_info)
+ 	},
+ 	{
+ 		.compatible = "ingenic,x2000e-pinctrl",
+ 		.data = IF_ENABLED(CONFIG_MACH_X2000, &x2000_chip_info)
+ 	},
+ 	{ /* sentinel */ },
++>>>>>>> 0ab1438bad43 (linux/kconfig.h: replace IF_ENABLED() with PTR_IF() in <linux/kernel.h>)
  };
  
  static struct platform_driver ingenic_pinctrl_driver = {
* Unmerged path drivers/pinctrl/pinctrl-ingenic.c
diff --git a/include/linux/kernel.h b/include/linux/kernel.h
index 789939329a6b..2aa358f38ae5 100644
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -47,6 +47,8 @@
  */
 #define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]) + __must_be_array(arr))
 
+#define PTR_IF(cond, ptr)	((cond) ? (ptr) : NULL)
+
 #define u64_to_user_ptr(x) (		\
 {					\
 	typecheck(u64, x);		\
