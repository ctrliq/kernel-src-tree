ASoC: Intel: bdw_rt286: Update file comments

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Cezary Rojewski <cezary.rojewski@intel.com>
commit 128bb6fb530841348ee4d9b4234b30006c44c803
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/128bb6fb.failed

Drop redundant and update valuable comments within the file to increase
readability. This patch also revisits module information and kconfig
help strings.

	Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
	Reviewed-by: Amadeusz Sławiński <amadeuszx.slawinski@linux.intel.com>
	Tested-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20220620101402.2684366-13-cezary.rojewski@intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 128bb6fb530841348ee4d9b4234b30006c44c803)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/intel/boards/bdw_rt286.c
diff --cc sound/soc/intel/boards/bdw_rt286.c
index fd0659f00447,9d815c31e1f4..000000000000
--- a/sound/soc/intel/boards/bdw_rt286.c
+++ b/sound/soc/intel/boards/bdw_rt286.c
@@@ -8,17 -8,16 +8,23 @@@
  #include <linux/module.h>
  #include <linux/platform_device.h>
  #include <sound/core.h>
 -#include <sound/jack.h>
  #include <sound/pcm.h>
 -#include <sound/pcm_params.h>
  #include <sound/soc.h>
 +#include <sound/jack.h>
 +#include <sound/pcm_params.h>
  #include <sound/soc-acpi.h>
 +
  #include "../../codecs/rt286.h"
  
++<<<<<<< HEAD
 +static struct snd_soc_jack broadwell_headset;
 +/* Headset jack detection DAPM pins */
 +static struct snd_soc_jack_pin broadwell_headset_pins[] = {
++=======
+ static struct snd_soc_jack card_headset;
+ 
+ static struct snd_soc_jack_pin card_headset_pins[] = {
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	{
  		.pin = "Mic Jack",
  		.mask = SND_JACK_MICROPHONE,
@@@ -43,9 -42,7 +49,13 @@@ static const struct snd_soc_dapm_widge
  	SND_SOC_DAPM_LINE("Line Jack", NULL),
  };
  
++<<<<<<< HEAD
 +static const struct snd_soc_dapm_route broadwell_rt286_map[] = {
 +
 +	/* speaker */
++=======
+ static const struct snd_soc_dapm_route card_routes[] = {
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	{"Speaker", NULL, "SPOR"},
  	{"Speaker", NULL, "SPOL"},
  
@@@ -79,21 -74,18 +86,26 @@@ static int broadwell_rt286_codec_init(s
  	return 0;
  }
  
 -static int codec_link_hw_params_fixup(struct snd_soc_pcm_runtime *rtd,
 -				      struct snd_pcm_hw_params *params)
 +
 +static int broadwell_ssp0_fixup(struct snd_soc_pcm_runtime *rtd,
 +			struct snd_pcm_hw_params *params)
  {
 -	struct snd_interval *channels = hw_param_interval(params, SNDRV_PCM_HW_PARAM_CHANNELS);
 -	struct snd_interval *rate = hw_param_interval(params, SNDRV_PCM_HW_PARAM_RATE);
 +	struct snd_interval *rate = hw_param_interval(params,
 +						      SNDRV_PCM_HW_PARAM_RATE);
 +	struct snd_interval *chan = hw_param_interval(params,
 +						      SNDRV_PCM_HW_PARAM_CHANNELS);
  
- 	/* The ADSP will covert the FE rate to 48k, stereo */
+ 	/* The ADSP will convert the FE rate to 48kHz, stereo. */
  	rate->min = rate->max = 48000;
++<<<<<<< HEAD
 +	chan->min = chan->max = 2;
 +
 +	/* set SSP0 to 16 bit */
++=======
+ 	channels->min = channels->max = 2;
+ 	/* Set SSP0 to 16 bit. */
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	params_set_format(params, SNDRV_PCM_FORMAT_S16_LE);
 -
  	return 0;
  }
  
@@@ -140,36 -129,21 +152,40 @@@ static int broadwell_fe_startup(struct 
  					  &constraints_channels);
  }
  
 -static const struct snd_soc_ops bdw_rt286_fe_ops = {
 -	.startup = bdw_rt286_fe_startup,
 +static const struct snd_soc_ops broadwell_fe_ops = {
 +	.startup = broadwell_fe_startup,
  };
  
 -SND_SOC_DAILINK_DEF(system, DAILINK_COMP_ARRAY(COMP_CPU("System Pin")));
 -SND_SOC_DAILINK_DEF(offload0, DAILINK_COMP_ARRAY(COMP_CPU("Offload0 Pin")));
 -SND_SOC_DAILINK_DEF(offload1, DAILINK_COMP_ARRAY(COMP_CPU("Offload1 Pin")));
 -SND_SOC_DAILINK_DEF(loopback, DAILINK_COMP_ARRAY(COMP_CPU("Loopback Pin")));
 +SND_SOC_DAILINK_DEF(system,
 +	DAILINK_COMP_ARRAY(COMP_CPU("System Pin")));
 +
 +SND_SOC_DAILINK_DEF(offload0,
 +	DAILINK_COMP_ARRAY(COMP_CPU("Offload0 Pin")));
  
 -SND_SOC_DAILINK_DEF(dummy, DAILINK_COMP_ARRAY(COMP_DUMMY()));
 -SND_SOC_DAILINK_DEF(platform, DAILINK_COMP_ARRAY(COMP_PLATFORM("haswell-pcm-audio")));
 -SND_SOC_DAILINK_DEF(codec, DAILINK_COMP_ARRAY(COMP_CODEC("i2c-INT343A:00", "rt286-aif1")));
 -SND_SOC_DAILINK_DEF(ssp0_port, DAILINK_COMP_ARRAY(COMP_CPU("ssp0-port")));
 +SND_SOC_DAILINK_DEF(offload1,
 +	DAILINK_COMP_ARRAY(COMP_CPU("Offload1 Pin")));
  
 +SND_SOC_DAILINK_DEF(loopback,
 +	DAILINK_COMP_ARRAY(COMP_CPU("Loopback Pin")));
 +
 +SND_SOC_DAILINK_DEF(dummy,
 +	DAILINK_COMP_ARRAY(COMP_DUMMY()));
 +
 +SND_SOC_DAILINK_DEF(platform,
 +	DAILINK_COMP_ARRAY(COMP_PLATFORM("haswell-pcm-audio")));
 +
 +SND_SOC_DAILINK_DEF(codec,
 +	DAILINK_COMP_ARRAY(COMP_CODEC("i2c-INT343A:00", "rt286-aif1")));
 +
 +SND_SOC_DAILINK_DEF(ssp0_port,
 +	    DAILINK_COMP_ARRAY(COMP_CPU("ssp0-port")));
 +
++<<<<<<< HEAD
 +/* broadwell digital audio interface glue - connects codec <--> CPU */
 +static struct snd_soc_dai_link broadwell_rt286_dais[] = {
++=======
+ static struct snd_soc_dai_link card_dai_links[] = {
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	/* Front End DAI links */
  	{
  		.name = "System PCM",
@@@ -269,49 -242,45 +285,56 @@@ static int broadwell_resume(struct snd_
  #define CARD_NAME "broadwell-rt286"
  #define DRIVER_NAME NULL /* card name will be used for driver name */
  
++<<<<<<< HEAD
 +/* broadwell audio machine driver for WPT + RT286S */
 +static struct snd_soc_card broadwell_rt286 = {
++=======
+ static struct snd_soc_card bdw_rt286_card = {
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	.owner = THIS_MODULE,
 -	.dai_link = card_dai_links,
 -	.num_links = ARRAY_SIZE(card_dai_links),
 -	.controls = card_controls,
 -	.num_controls = ARRAY_SIZE(card_controls),
 -	.dapm_widgets = card_widgets,
 -	.num_dapm_widgets = ARRAY_SIZE(card_widgets),
 -	.dapm_routes = card_routes,
 -	.num_dapm_routes = ARRAY_SIZE(card_routes),
 +	.dai_link = broadwell_rt286_dais,
 +	.num_links = ARRAY_SIZE(broadwell_rt286_dais),
 +	.controls = broadwell_controls,
 +	.num_controls = ARRAY_SIZE(broadwell_controls),
 +	.dapm_widgets = broadwell_widgets,
 +	.num_dapm_widgets = ARRAY_SIZE(broadwell_widgets),
 +	.dapm_routes = broadwell_rt286_map,
 +	.num_dapm_routes = ARRAY_SIZE(broadwell_rt286_map),
  	.fully_routed = true,
 -	.suspend_pre = bdw_rt286_suspend,
 -	.resume_post = bdw_rt286_resume,
 +	.suspend_pre = broadwell_suspend,
 +	.resume_post = broadwell_resume,
  };
  
 -static int bdw_rt286_probe(struct platform_device *pdev)
 +static int broadwell_audio_probe(struct platform_device *pdev)
  {
  	struct snd_soc_acpi_mach *mach;
  	int ret;
  
++<<<<<<< HEAD
 +	broadwell_rt286.dev = &pdev->dev;
 +
 +	/* override platform name, if required */
++=======
+ 	bdw_rt286_card.dev = &pdev->dev;
++>>>>>>> 128bb6fb5308 (ASoC: Intel: bdw_rt286: Update file comments)
  	mach = pdev->dev.platform_data;
 -
 -	ret = snd_soc_fixup_dai_links_platform_name(&bdw_rt286_card, mach->mach_params.platform);
 +	ret = snd_soc_fixup_dai_links_platform_name(&broadwell_rt286,
 +						    mach->mach_params.platform);
  	if (ret)
  		return ret;
  
- 	/* set card and driver name */
  	if (snd_soc_acpi_sof_parent(&pdev->dev)) {
 -		bdw_rt286_card.name = SOF_CARD_NAME;
 -		bdw_rt286_card.driver_name = SOF_DRIVER_NAME;
 +		broadwell_rt286.name = SOF_CARD_NAME;
 +		broadwell_rt286.driver_name = SOF_DRIVER_NAME;
  	} else {
 -		bdw_rt286_card.name = CARD_NAME;
 -		bdw_rt286_card.driver_name = DRIVER_NAME;
 +		broadwell_rt286.name = CARD_NAME;
 +		broadwell_rt286.driver_name = DRIVER_NAME;
  	}
  
 -	return devm_snd_soc_register_card(&pdev->dev, &bdw_rt286_card);
 +	return devm_snd_soc_register_card(&pdev->dev, &broadwell_rt286);
  }
  
 -static int bdw_rt286_remove(struct platform_device *pdev)
 +static int broadwell_audio_remove(struct platform_device *pdev)
  {
  	struct snd_soc_card *card = platform_get_drvdata(pdev);
  
@@@ -329,10 -298,9 +352,9 @@@ static struct platform_driver broadwell
  	},
  };
  
 -module_platform_driver(bdw_rt286_driver)
 +module_platform_driver(broadwell_audio)
  
- /* Module information */
  MODULE_AUTHOR("Liam Girdwood, Xingchao Wang");
- MODULE_DESCRIPTION("Intel SST Audio for WPT/Broadwell");
- MODULE_LICENSE("GPL v2");
+ MODULE_DESCRIPTION("Sound card driver for Intel Broadwell Wildcat Point with Realtek 286");
+ MODULE_LICENSE("GPL");
  MODULE_ALIAS("platform:bdw_rt286");
diff --git a/sound/soc/intel/boards/Kconfig b/sound/soc/intel/boards/Kconfig
index 2491d7c3497b..ea986879529e 100644
--- a/sound/soc/intel/boards/Kconfig
+++ b/sound/soc/intel/boards/Kconfig
@@ -79,7 +79,7 @@ config SND_SOC_INTEL_BDW_RT5677_MACH
 	  If unsure select "N".
 
 config SND_SOC_INTEL_BROADWELL_MACH
-	tristate "Broadwell Wildcatpoint"
+	tristate "Broadwell with RT286 I2S codec"
 	depends on I2C
 	depends on I2C_DESIGNWARE_PLATFORM || COMPILE_TEST
 	depends on X86_INTEL_LPSS || COMPILE_TEST
* Unmerged path sound/soc/intel/boards/bdw_rt286.c
