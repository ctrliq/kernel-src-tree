fbcon: Extract fbcon_open/release helpers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit bd6026a8c4e6b7edf4bafcb71da885b284b8f4fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/bd6026a8.failed

There's two minor behaviour changes in here:
- in error paths we now consistently call fb_ops->fb_release
- fb_release really can't fail (fbmem.c ignores it too) and there's no
  reasonable cleanup we can do anyway.

Note that everything in fbcon.c is protected by the big console_lock()
lock (especially all the global variables), so the minor changes in
ordering of setup/cleanup do not matter.

v2: Explain a bit better why this is all correct (Sam)

	Acked-by: Sam Ravnborg <sam@ravnborg.org>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Claudio Suarez <cssk@net-c.es>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Cc: Du Cheng <ducheng2@gmail.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20220405210335.3434130-10-daniel.vetter@ffwll.ch
(cherry picked from commit bd6026a8c4e6b7edf4bafcb71da885b284b8f4fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
diff --cc drivers/video/fbdev/core/fbcon.c
index 1a25ce50a9fd,d50154b62007..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -751,45 -744,34 +769,64 @@@ static int con2fb_release_oldinfo(struc
  				  int oldidx, int found)
  {
  	struct fbcon_ops *ops = oldinfo->fbcon_par;
- 	int err = 0, ret;
+ 	int ret;
  
- 	if (oldinfo->fbops->fb_release &&
- 	    oldinfo->fbops->fb_release(oldinfo, 0)) {
- 		con2fb_map[unit] = oldidx;
- 		if (!found && newinfo->fbops->fb_release)
- 			newinfo->fbops->fb_release(newinfo, 0);
- 		if (!found)
- 			module_put(newinfo->fbops->owner);
- 		err = -ENODEV;
+ 	fbcon_release(oldinfo);
+ 
+ 	fbcon_del_cursor_work(oldinfo);
+ 	kfree(ops->cursor_state.mask);
+ 	kfree(ops->cursor_data);
+ 	kfree(ops->cursor_src);
+ 	kfree(ops->fontbuffer);
+ 	kfree(oldinfo->fbcon_par);
+ 	oldinfo->fbcon_par = NULL;
+ 	/*
+ 	  If oldinfo and newinfo are driving the same hardware,
+ 	  the fb_release() method of oldinfo may attempt to
+ 	  restore the hardware state.  This will leave the
+ 	  newinfo in an undefined state. Thus, a call to
+ 	  fb_set_par() may be needed for the newinfo.
+ 	*/
+ 	if (newinfo && newinfo->fbops->fb_set_par) {
+ 		ret = newinfo->fbops->fb_set_par(newinfo);
+ 
+ 		if (ret)
+ 			printk(KERN_ERR "con2fb_release_oldinfo: "
+ 				"detected unhandled fb_set_par error, "
+ 				"error code %d\n", ret);
  	}
  
++<<<<<<< HEAD
 +	if (!err) {
 +		fbcon_del_cursor_timer(oldinfo);
 +		kfree(ops->cursor_state.mask);
 +		kfree(ops->cursor_data);
 +		kfree(ops->cursor_src);
 +		kfree(ops->fontbuffer);
 +		kfree(oldinfo->fbcon_par);
 +		oldinfo->fbcon_par = NULL;
 +		module_put(oldinfo->fbops->owner);
 +		/*
 +		  If oldinfo and newinfo are driving the same hardware,
 +		  the fb_release() method of oldinfo may attempt to
 +		  restore the hardware state.  This will leave the
 +		  newinfo in an undefined state. Thus, a call to
 +		  fb_set_par() may be needed for the newinfo.
 +		*/
 +		if (newinfo && newinfo->fbops->fb_set_par) {
 +			ret = newinfo->fbops->fb_set_par(newinfo);
 +
 +			if (ret)
 +				printk(KERN_ERR "con2fb_release_oldinfo: "
 +					"detected unhandled fb_set_par error, "
 +					"error code %d\n", ret);
 +		}
 +	}
 +
 +	return err;
++=======
+ 	return 0;
++>>>>>>> bd6026a8c4e6 (fbcon: Extract fbcon_open/release helpers)
  }
  
  static void con2fb_init_display(struct vc_data *vc, struct fb_info *info,
@@@ -3723,8 -3325,7 +3750,12 @@@ static void fbcon_exit(void
  				info->fbcon_par = NULL;
  			}
  
++<<<<<<< HEAD
 +			if (info->queue.func == fb_flashcursor)
 +				info->queue.func = NULL;
++=======
+ 			fbcon_release(info);
++>>>>>>> bd6026a8c4e6 (fbcon: Extract fbcon_open/release helpers)
  		}
  	}
  }
* Unmerged path drivers/video/fbdev/core/fbcon.c
