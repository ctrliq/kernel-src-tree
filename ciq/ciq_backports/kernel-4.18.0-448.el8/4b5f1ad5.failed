vsock/virtio: initialize vdev->priv before using VQs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Stefano Garzarella <sgarzare@redhat.com>
commit 4b5f1ad5566ada230aaa2ce861b28d1895f1ea68
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/4b5f1ad5.failed

When we fill VQs with empty buffers and kick the host, it may send
an interrupt. `vdev->priv` must be initialized before this since it
is used in the virtqueue callbacks.

Fixes: 0deab087b16a ("vsock/virtio: use RCU to avoid use-after-free on the_virtio_vsock")
	Suggested-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Stefano Garzarella <sgarzare@redhat.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 4b5f1ad5566ada230aaa2ce861b28d1895f1ea68)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/vmw_vsock/virtio_transport.c
diff --cc net/vmw_vsock/virtio_transport.c
index 8a7958e6e9ce,3e5513934c9f..000000000000
--- a/net/vmw_vsock/virtio_transport.c
+++ b/net/vmw_vsock/virtio_transport.c
@@@ -613,7 -638,9 +615,13 @@@ static int virtio_vsock_probe(struct vi
  	vsock->event_run = true;
  	mutex_unlock(&vsock->event_lock);
  
++<<<<<<< HEAD
 +	vdev->priv = vsock;
++=======
+ 	if (virtio_has_feature(vdev, VIRTIO_VSOCK_F_SEQPACKET))
+ 		vsock->seqpacket_allow = true;
+ 
++>>>>>>> 4b5f1ad5566a (vsock/virtio: initialize vdev->priv before using VQs)
  	rcu_assign_pointer(the_virtio_vsock, vsock);
  
  	mutex_unlock(&the_virtio_vsock_mutex);
* Unmerged path net/vmw_vsock/virtio_transport.c
