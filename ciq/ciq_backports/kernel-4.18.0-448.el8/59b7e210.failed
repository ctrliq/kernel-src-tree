scsi: lpfc: Fix null ndlp ptr dereference in abnormal exit path for GFT_ID

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author James Smart <jsmart2021@gmail.com>
commit 59b7e210a522b836a01516c71ee85d1d92c1f075
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/59b7e210.failed

An error case exit from lpfc_cmpl_ct_cmd_gft_id() results in a call to
lpfc_nlp_put() with a null pointer to a nodelist structure.

Changed lpfc_cmpl_ct_cmd_gft_id() to initialize nodelist pointer upon
entry.

Link: https://lore.kernel.org/r/20220819011736.14141-3-jsmart2021@gmail.com
Co-developed-by: Justin Tee <justin.tee@broadcom.com>
	Signed-off-by: Justin Tee <justin.tee@broadcom.com>
	Signed-off-by: James Smart <jsmart2021@gmail.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 59b7e210a522b836a01516c71ee85d1d92c1f075)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/lpfc/lpfc_ct.c
diff --cc drivers/scsi/lpfc/lpfc_ct.c
index 2535ef4a737a,b555ccb5ae34..000000000000
--- a/drivers/scsi/lpfc/lpfc_ct.c
+++ b/drivers/scsi/lpfc/lpfc_ct.c
@@@ -1534,27 -1509,26 +1534,31 @@@ lpfc_cmpl_ct_cmd_gft_id(struct lpfc_hb
  	struct lpfc_sli_ct_request *CTrsp;
  	int did;
  	struct lpfc_nodelist *ndlp = NULL;
- 	struct lpfc_nodelist *ns_ndlp = NULL;
+ 	struct lpfc_nodelist *ns_ndlp = cmdiocb->ndlp;
  	uint32_t fc4_data_0, fc4_data_1;
 -	u32 ulp_status = get_job_ulpstatus(phba, rspiocb);
 -	u32 ulp_word4 = get_job_word4(phba, rspiocb);
  
  	did = ((struct lpfc_sli_ct_request *)inp->virt)->un.gft.PortId;
  	did = be32_to_cpu(did);
  
  	lpfc_debugfs_disc_trc(vport, LPFC_DISC_TRC_CT,
  			      "GFT_ID cmpl: status:x%x/x%x did:x%x",
 -			      ulp_status, ulp_word4, did);
 +			      irsp->ulpStatus, irsp->un.ulpWord[4], did);
  
  	/* Ignore response if link flipped after this request was made */
- 	if ((uint32_t) cmdiocb->event_tag != phba->fc_eventTag) {
+ 	if ((uint32_t)cmdiocb->event_tag != phba->fc_eventTag) {
  		lpfc_printf_vlog(vport, KERN_INFO, LOG_DISCOVERY,
  				 "9046 Event tag mismatch. Ignoring NS rsp\n");
  		goto out;
  	}
  
++<<<<<<< HEAD
 +	/* Preserve the nameserver node to release the reference. */
 +	ns_ndlp = cmdiocb->context_un.ndlp;
 +
 +	if (irsp->ulpStatus == IOSTAT_SUCCESS) {
++=======
+ 	if (ulp_status == IOSTAT_SUCCESS) {
++>>>>>>> 59b7e210a522 (scsi: lpfc: Fix null ndlp ptr dereference in abnormal exit path for GFT_ID)
  		/* Good status, continue checking */
  		CTrsp = (struct lpfc_sli_ct_request *)outp->virt;
  		fc4_data_0 = be32_to_cpu(CTrsp->un.gft_acc.fc4_types[0]);
* Unmerged path drivers/scsi/lpfc/lpfc_ct.c
