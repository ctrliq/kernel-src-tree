Revert "drm/amdgpu: disable runpm if we are the primary adapter"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Alex Deucher <alexander.deucher@amd.com>
commit 5a90c24ad0283434f60ed2e1a628c9e6134d1fdc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/5a90c24a.failed

This reverts commit b95dc06af3e683d6b7ddbbae178b2b2a21ee8b2b.

This workaround is no longer necessary.  We have a better workaround
in commit f95af4a9236695 ("drm/amdgpu: don't runtime suspend if there are displays attached (v3)").

	Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
	Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 5a90c24ad0283434f60ed2e1a628c9e6134d1fdc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
#	drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index 052fe9d2430e,48b099990b83..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@@ -38,6 -37,7 +38,10 @@@
  #include <drm/drm_probe_helper.h>
  #include <linux/mmu_notifier.h>
  #include <linux/suspend.h>
++<<<<<<< HEAD
++=======
+ #include <linux/cc_platform.h>
++>>>>>>> 5a90c24ad028 (Revert "drm/amdgpu: disable runpm if we are the primary adapter")
  
  #include "amdgpu.h"
  #include "amdgpu_irq.h"
@@@ -1227,6 -1959,28 +1231,31 @@@ MODULE_DEVICE_TABLE(pci, pciidlist)
  
  static const struct drm_driver amdgpu_kms_driver;
  
++<<<<<<< HEAD
++=======
+ static void amdgpu_get_secondary_funcs(struct amdgpu_device *adev)
+ {
+ 	struct pci_dev *p = NULL;
+ 	int i;
+ 
+ 	/* 0 - GPU
+ 	 * 1 - audio
+ 	 * 2 - USB
+ 	 * 3 - UCSI
+ 	 */
+ 	for (i = 1; i < 4; i++) {
+ 		p = pci_get_domain_bus_and_slot(pci_domain_nr(adev->pdev->bus),
+ 						adev->pdev->bus->number, i);
+ 		if (p) {
+ 			pm_runtime_get_sync(&p->dev);
+ 			pm_runtime_mark_last_busy(&p->dev);
+ 			pm_runtime_put_autosuspend(&p->dev);
+ 			pci_dev_put(p);
+ 		}
+ 	}
+ }
+ 
++>>>>>>> 5a90c24ad028 (Revert "drm/amdgpu: disable runpm if we are the primary adapter")
  static int amdgpu_pci_probe(struct pci_dev *pdev,
  			    const struct pci_device_id *ent)
  {
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
index 96ef3f1051d8,497478f8a5d3..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
@@@ -206,6 -185,9 +206,12 @@@ int amdgpu_driver_load_kms(struct amdgp
  			adev->runpm = true;
  			break;
  		}
++<<<<<<< HEAD
++=======
+ 
+ 		amdgpu_runtime_pm_quirk(adev);
+ 
++>>>>>>> 5a90c24ad028 (Revert "drm/amdgpu: disable runpm if we are the primary adapter")
  		if (adev->runpm)
  			dev_info(adev->dev, "Using BACO for runtime pm\n");
  	}
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
