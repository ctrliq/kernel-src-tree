PCI: ACPI: PM: Power up devices in D3cold before scanning them

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 62d528712c1db609fd5afc319378ca053ac9247e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/62d52871.failed

The initial configuration of ACPI power resources on some systems
implies that some PCI devices on them are initially in D3cold.

In some cases, especially for PCIe Root Ports, this is a "logical"
D3cold, meaning that the configuration space of the device is
accessible, but some of its functionality may be missing, but it
very well may be real D3cold, in which case the device will not
be accessible at all.  However, the PCI bus type driver will need
to access its configuration space in order to enumerate it.

To prevent possible device enumeration failures that may ensue as
a result of ACPI power resources being initially in the "off"
state, power up all children of the host bridge ACPI device object
that hold valid _ADR objects (which indicates that they will be
enumerated by the PCI bus type driver) and do that to all children
of the ACPI device objects corresponding to PCI bridges (including
PCIe ports).

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
(cherry picked from commit 62d528712c1db609fd5afc319378ca053ac9247e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/pci-acpi.c
diff --cc drivers/pci/pci-acpi.c
index 360d178f3815,3787876ecb24..000000000000
--- a/drivers/pci/pci-acpi.c
+++ b/drivers/pci/pci-acpi.c
@@@ -1394,6 -1373,10 +1394,13 @@@ void pci_acpi_setup(struct device *dev
  		device_wakeup_enable(dev);
  
  	acpi_pci_wakeup(pci_dev, false);
++<<<<<<< HEAD
++=======
+ 	acpi_device_power_add_dependent(adev, dev);
+ 
+ 	if (pci_is_bridge(pci_dev))
+ 		acpi_dev_power_up_children_with_adr(adev);
++>>>>>>> 62d528712c1d (PCI: ACPI: PM: Power up devices in D3cold before scanning them)
  }
  
  void pci_acpi_cleanup(struct device *dev, struct acpi_device *adev)
diff --git a/drivers/acpi/pci_root.c b/drivers/acpi/pci_root.c
index a9d30b192fcf..667d58123116 100644
--- a/drivers/acpi/pci_root.c
+++ b/drivers/acpi/pci_root.c
@@ -942,6 +942,8 @@ struct pci_bus *acpi_pci_root_create(struct acpi_pci_root *root,
 		host_bridge->preserve_config = 1;
 	ACPI_FREE(obj);
 
+	acpi_dev_power_up_children_with_adr(device);
+
 	pci_scan_child_bus(bus);
 	pci_set_host_bridge_release(host_bridge, acpi_pci_root_release_info,
 				    info);
* Unmerged path drivers/pci/pci-acpi.c
