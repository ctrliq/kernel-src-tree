net/sched: act_pedit: Add extack message for offload failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit bf3b99e4f9ce52e8da6158894be5679d1217082b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/bf3b99e4.failed

For better error reporting to user space, add an extack message when
pedit action offload fails.

Currently, the failure cannot be triggered, but add a message in case
the action is extended in the future to support more than set/add
commands.

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Reviewed-by: Petr Machata <petrm@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bf3b99e4f9ce52e8da6158894be5679d1217082b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_pedit.c
diff --cc net/sched/act_pedit.c
index 22175eb1255f,e01ef7f109f4..000000000000
--- a/net/sched/act_pedit.c
+++ b/net/sched/act_pedit.c
@@@ -491,6 -487,41 +491,44 @@@ static int tcf_pedit_search(struct net 
  	return tcf_idr_search(tn, a, index);
  }
  
++<<<<<<< HEAD
++=======
+ static int tcf_pedit_offload_act_setup(struct tc_action *act, void *entry_data,
+ 				       u32 *index_inc, bool bind,
+ 				       struct netlink_ext_ack *extack)
+ {
+ 	if (bind) {
+ 		struct flow_action_entry *entry = entry_data;
+ 		int k;
+ 
+ 		for (k = 0; k < tcf_pedit_nkeys(act); k++) {
+ 			switch (tcf_pedit_cmd(act, k)) {
+ 			case TCA_PEDIT_KEY_EX_CMD_SET:
+ 				entry->id = FLOW_ACTION_MANGLE;
+ 				break;
+ 			case TCA_PEDIT_KEY_EX_CMD_ADD:
+ 				entry->id = FLOW_ACTION_ADD;
+ 				break;
+ 			default:
+ 				NL_SET_ERR_MSG_MOD(extack, "Unsupported pedit command offload");
+ 				return -EOPNOTSUPP;
+ 			}
+ 			entry->mangle.htype = tcf_pedit_htype(act, k);
+ 			entry->mangle.mask = tcf_pedit_mask(act, k);
+ 			entry->mangle.val = tcf_pedit_val(act, k);
+ 			entry->mangle.offset = tcf_pedit_offset(act, k);
+ 			entry->hw_stats = tc_act_hw_stats(act->hw_stats);
+ 			entry++;
+ 		}
+ 		*index_inc = k;
+ 	} else {
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> bf3b99e4f9ce (net/sched: act_pedit: Add extack message for offload failure)
  static struct tc_action_ops act_pedit_ops = {
  	.kind		=	"pedit",
  	.id		=	TCA_ID_PEDIT,
* Unmerged path net/sched/act_pedit.c
