arm64: entry: Free up another register on kpti's tramp_exit path

jira LE-1907
cve CVE-2022-23960
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author James Morse <james.morse@arm.com>
commit 03aff3a77a58b5b52a77e00537a42090ad57b80b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/03aff3a7.failed

Kpti stashes x30 in far_el1 while it uses x30 for all its work.

Making the vectors a per-cpu data structure will require a second
register.

Allow tramp_exit two registers before it unmaps the kernel, by
leaving x30 on the stack, and stashing x29 in far_el1.

	Reviewed-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
	Signed-off-by: James Morse <james.morse@arm.com>
(cherry picked from commit 03aff3a77a58b5b52a77e00537a42090ad57b80b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index f05302efd0c2,45e89135dc11..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -368,14 -419,16 +368,21 @@@ alternative_else_nop_endi
  	ldp	x24, x25, [sp, #16 * 12]
  	ldp	x26, x27, [sp, #16 * 13]
  	ldp	x28, x29, [sp, #16 * 14]
++<<<<<<< HEAD
 +	ldr	lr, [sp, #S_LR]
 +	add	sp, sp, #S_FRAME_SIZE		// restore sp
++=======
++>>>>>>> 03aff3a77a58 (arm64: entry: Free up another register on kpti's tramp_exit path)
  
  	.if	\el == 0
- alternative_insn eret, nop, ARM64_UNMAP_KERNEL_AT_EL0
+ alternative_if_not ARM64_UNMAP_KERNEL_AT_EL0
+ 	ldr	lr, [sp, #S_LR]
+ 	add	sp, sp, #PT_REGS_SIZE		// restore sp
+ 	eret
+ alternative_else_nop_endif
  #ifdef CONFIG_UNMAP_KERNEL_AT_EL0
  	bne	4f
- 	msr	far_el1, x30
+ 	msr	far_el1, x29
  	tramp_alias	x30, tramp_exit_native
  	br	x30
  4:
* Unmerged path arch/arm64/kernel/entry.S
