wifi: mac80211: correct link config data in tracing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 7ffc4b29d8b559764f763f32f6ae8f14c3919143
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7ffc4b29.failed

We need to no longer use bss_conf here, but the per-link data.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 7ffc4b29d8b559764f763f32f6ae8f14c3919143)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/trace.h
diff --cc net/mac80211/trace.h
index 17e7760d8348,f14baf64fda0..000000000000
--- a/net/mac80211/trace.h
+++ b/net/mac80211/trace.h
@@@ -442,41 -486,31 +444,69 @@@ TRACE_EVENT(drv_bss_info_changed
  		LOCAL_ASSIGN;
  		VIF_ASSIGN;
  		__entry->changed = changed;
++<<<<<<< HEAD
 +		__entry->aid = info->aid;
 +		__entry->assoc = info->assoc;
 +		__entry->ibss_joined = info->ibss_joined;
 +		__entry->ibss_creator = info->ibss_creator;
 +		__entry->shortpre = info->use_short_preamble;
 +		__entry->cts = info->use_cts_prot;
 +		__entry->shortslot = info->use_short_slot;
 +		__entry->enable_beacon = info->enable_beacon;
 +		__entry->dtimper = info->dtim_period;
 +		__entry->bcnint = info->beacon_int;
 +		__entry->assoc_cap = info->assoc_capability;
 +		__entry->sync_tsf = info->sync_tsf;
 +		__entry->sync_device_ts = info->sync_device_ts;
 +		__entry->sync_dtim_count = info->sync_dtim_count;
 +		__entry->basic_rates = info->basic_rates;
 +		memcpy(__entry->mcast_rate, info->mcast_rate,
 +		       sizeof(__entry->mcast_rate));
 +		__entry->ht_operation_mode = info->ht_operation_mode;
 +		__entry->cqm_rssi_thold = info->cqm_rssi_thold;
 +		__entry->cqm_rssi_hyst = info->cqm_rssi_hyst;
 +		__entry->channel_width = info->chandef.width;
 +		__entry->channel_cfreq1 = info->chandef.center_freq1;
 +		__entry->channel_cfreq1_offset = info->chandef.freq1_offset;
 +		__entry->arp_addr_cnt = info->arp_addr_cnt;
 +		memcpy(__get_dynamic_array(arp_addr_list), info->arp_addr_list,
 +		       sizeof(u32) * (info->arp_addr_cnt > IEEE80211_BSS_ARP_ADDR_LIST_LEN ?
 +					IEEE80211_BSS_ARP_ADDR_LIST_LEN :
 +					info->arp_addr_cnt));
 +		__entry->qos = info->qos;
 +		__entry->idle = info->idle;
 +		__entry->ps = info->ps;
 +		memcpy(__get_dynamic_array(ssid), info->ssid, info->ssid_len);
 +		__entry->hidden_ssid = info->hidden_ssid;
 +		__entry->txpower = info->txpower;
 +		__entry->p2p_oppps_ctwindow = info->p2p_noa_attr.oppps_ctwindow;
++=======
+ 		__entry->link_id = link_id;
+ 		__entry->shortpre = link_conf->use_short_preamble;
+ 		__entry->cts = link_conf->use_cts_prot;
+ 		__entry->shortslot = link_conf->use_short_slot;
+ 		__entry->enable_beacon = link_conf->enable_beacon;
+ 		__entry->dtimper = link_conf->dtim_period;
+ 		__entry->bcnint = link_conf->beacon_int;
+ 		__entry->assoc_cap = link_conf->assoc_capability;
+ 		__entry->sync_tsf = link_conf->sync_tsf;
+ 		__entry->sync_device_ts = link_conf->sync_device_ts;
+ 		__entry->sync_dtim_count = link_conf->sync_dtim_count;
+ 		__entry->basic_rates = link_conf->basic_rates;
+ 		memcpy(__entry->mcast_rate, link_conf->mcast_rate,
+ 		       sizeof(__entry->mcast_rate));
+ 		__entry->ht_operation_mode = link_conf->ht_operation_mode;
+ 		__entry->cqm_rssi_thold = link_conf->cqm_rssi_thold;
+ 		__entry->cqm_rssi_hyst = link_conf->cqm_rssi_hyst;
+ 		__entry->channel_width = link_conf->chandef.width;
+ 		__entry->channel_cfreq1 = link_conf->chandef.center_freq1;
+ 		__entry->channel_cfreq1_offset = link_conf->chandef.freq1_offset;
+ 		__entry->qos = link_conf->qos;
+ 		__entry->ps = link_conf->ps;
+ 		__entry->hidden_ssid = link_conf->hidden_ssid;
+ 		__entry->txpower = link_conf->txpower;
+ 		__entry->p2p_oppps_ctwindow = link_conf->p2p_noa_attr.oppps_ctwindow;
++>>>>>>> 7ffc4b29d8b5 (wifi: mac80211: correct link config data in tracing)
  	),
  
  	TP_printk(
* Unmerged path net/mac80211/trace.h
