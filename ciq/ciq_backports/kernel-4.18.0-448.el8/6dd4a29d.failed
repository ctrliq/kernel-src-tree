ACPI: PM: Always print final debug message in acpi_device_set_power()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 6dd4a29d26200d303d354ee8fc806113b5fcc882
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/6dd4a29d.failed

acpi_device_set_power() prints debug messages regarding its outcome
(whether or not the power state has been changed and how) in all
cases except when the device whose power state is being changed to D0
is in that power state already.

Make acpi_device_set_power() print a final debug message in that case
too and while at it, fix the indentation of the "end" label in this
function.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 6dd4a29d26200d303d354ee8fc806113b5fcc882)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/device_pm.c
diff --cc drivers/acpi/device_pm.c
index 18fa99c3ea69,f9ac7682d362..000000000000
--- a/drivers/acpi/device_pm.c
+++ b/drivers/acpi/device_pm.c
@@@ -182,12 -173,8 +182,17 @@@ int acpi_device_set_power(struct acpi_d
  	/* Make sure this is a valid target state */
  
  	/* There is a special case for D0 addressed below. */
++<<<<<<< HEAD
 +	if (state > ACPI_STATE_D0 && state == device->power.state) {
 +		ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Device [%s] already in %s\n",
 +				  device->pnp.bus_id,
 +				  acpi_power_state_string(state)));
 +		return 0;
 +	}
++=======
+ 	if (state > ACPI_STATE_D0 && state == device->power.state)
+ 		goto no_change;
++>>>>>>> 6dd4a29d2620 (ACPI: PM: Always print final debug message in acpi_device_set_power())
  
  	if (state == ACPI_STATE_D3_COLD) {
  		/*
@@@ -279,16 -267,15 +284,16 @@@
  		result = acpi_dev_pm_explicit_set(device, ACPI_STATE_D0);
  	}
  
-  end:
+ end:
  	if (result) {
 -		acpi_handle_debug(device->handle,
 -				  "Failed to change power state to %s\n",
 -				  acpi_power_state_string(target_state));
 +		dev_warn(&device->dev, "Failed to change power state to %s\n",
 +			 acpi_power_state_string(target_state));
  	} else {
  		device->power.state = target_state;
 -		acpi_handle_debug(device->handle, "Power state changed to %s\n",
 -				  acpi_power_state_string(target_state));
 +		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 +				  "Device [%s] transitioned to %s\n",
 +				  device->pnp.bus_id,
 +				  acpi_power_state_string(target_state)));
  	}
  
  	return result;
* Unmerged path drivers/acpi/device_pm.c
