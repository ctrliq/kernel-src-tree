ASoC: SOF: Intel: hda-dai: simplify hda_dai_widget_update() prototype

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit b44c99f11de2c9f01b5526e668c476de976fd14d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/b44c99f1.failed

the argument "struct sof_intel_hda_stream *hda_stream" is not used, remove.

	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
Link: https://lore.kernel.org/r/20220421203201.1550328-5-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit b44c99f11de2c9f01b5526e668c476de976fd14d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dai.c
diff --cc sound/soc/sof/intel/hda-dai.c
index 97bf291cb5b8,3113f61ae737..000000000000
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@@ -166,52 -162,12 +166,57 @@@ static int hda_link_dma_params(struct h
  	return 0;
  }
  
++<<<<<<< HEAD
 +/* Update config for the DAI widget */
 +static struct sof_ipc_dai_config *hda_dai_update_config(struct snd_soc_dapm_widget *w,
 +							int channel)
++=======
+ static int hda_dai_widget_update(struct snd_soc_dapm_widget *w,
+ 				 int channel, bool widget_setup)
++>>>>>>> b44c99f11de2 (ASoC: SOF: Intel: hda-dai: simplify hda_dai_widget_update() prototype)
 +{
 +	struct snd_sof_widget *swidget = w->dobj.private;
 +	struct sof_dai_private_data *private;
 +	struct sof_ipc_dai_config *config;
 +	struct snd_sof_dai *sof_dai;
 +
 +	if (!swidget)
 +		return NULL;
 +
 +	sof_dai = swidget->private;
 +
 +	if (!sof_dai || !sof_dai->private) {
 +		dev_err(swidget->scomp->dev, "%s: No private data for DAI %s\n", __func__,
 +			w->name);
 +		return NULL;
 +	}
 +
 +	private = sof_dai->private;
 +	if (!private->dai_config) {
 +		dev_err(swidget->scomp->dev, "%s: No config for DAI %s\n", __func__, w->name);
 +		return NULL;
 +	}
 +
 +	config = &private->dai_config[sof_dai->current_config];
 +
 +	/* update config with stream tag */
 +	config->hda.link_dma_ch = channel;
 +
 +	return config;
 +}
 +
 +static int hda_link_dai_widget_update(struct sof_intel_hda_stream *hda_stream,
 +				      struct snd_soc_dapm_widget *w,
 +				      int channel, bool widget_setup)
  {
 -	struct snd_sof_dai_config_data data;
 +	struct snd_sof_dev *sdev = hda_stream->sdev;
 +	struct sof_ipc_dai_config *config;
  
 -	data.dai_data = channel;
 +	config = hda_dai_update_config(w, channel);
 +	if (!config) {
 +		dev_err(sdev->dev, "error: no config for DAI %s\n", w->name);
 +		return -ENOENT;
 +	}
  
  	/* set up/free DAI widget and send DAI_CONFIG IPC */
  	if (widget_setup)
@@@ -256,7 -209,7 +258,11 @@@ static int hda_link_hw_params(struct sn
  		w = dai->capture_widget;
  
  	/* set up the DAI widget and send the DAI_CONFIG with the new tag */
++<<<<<<< HEAD
 +	ret = hda_link_dai_widget_update(hda_stream, w, stream_tag - 1, true);
++=======
+ 	ret = hda_dai_widget_update(w, stream_tag - 1, true);
++>>>>>>> b44c99f11de2 (ASoC: SOF: Intel: hda-dai: simplify hda_dai_widget_update() prototype)
  	if (ret < 0)
  		return ret;
  
@@@ -378,7 -309,7 +381,11 @@@ static int hda_link_pcm_trigger(struct 
  		/*
  		 * free DAI widget during stop/suspend to keep widget use_count's balanced.
  		 */
++<<<<<<< HEAD
 +		ret = hda_link_dai_widget_update(hda_stream, w, DMA_CHAN_INVALID, false);
++=======
+ 		ret = hda_dai_widget_update(w, DMA_CHAN_INVALID, false);
++>>>>>>> b44c99f11de2 (ASoC: SOF: Intel: hda-dai: simplify hda_dai_widget_update() prototype)
  		if (ret < 0)
  			return ret;
  
@@@ -434,7 -365,7 +441,11 @@@ static int hda_link_hw_free(struct snd_
  		w = dai->capture_widget;
  
  	/* free the link DMA channel in the FW and the DAI widget */
++<<<<<<< HEAD
 +	ret = hda_link_dai_widget_update(hda_stream, w, DMA_CHAN_INVALID, false);
++=======
+ 	ret = hda_dai_widget_update(w, DMA_CHAN_INVALID, false);
++>>>>>>> b44c99f11de2 (ASoC: SOF: Intel: hda-dai: simplify hda_dai_widget_update() prototype)
  	if (ret < 0)
  		return ret;
  
* Unmerged path sound/soc/sof/intel/hda-dai.c
