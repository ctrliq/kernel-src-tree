Documentation: kvm: extend KVM_S390_ZPCI_OP subheading underline

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Bagas Sanjaya <bagasdotme@gmail.com>
commit 5efab5cdf06b932ba7a53264b60f7d5c6ec87edf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/5efab5cd.failed

Stephen Rothwell reported the htmldocs warning:

Documentation/virt/kvm/api.rst:5959: WARNING: Title underline too short.

4.137 KVM_S390_ZPCI_OP
--------------------

The warning is due to subheading underline on KVM_S390_ZPCI_OP section is
short of 2 dashes.

Extend the underline to fix the warning.

Link: https://lore.kernel.org/linux-next/20220711205557.183c3b14@canb.auug.org.au/
Fixes: a0c4d1109d6cc5 ("KVM: s390: add KVM_S390_ZPCI_OP to manage guest zPCI devices")
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Pierre Morel <pmorel@linux.ibm.com>
	Cc: Thomas Huth <thuth@redhat.com>
	Cc: Matthew Rosato <mjrosato@linux.ibm.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Janosch Frank <frankja@linux.ibm.com>
	Cc: kvm@vger.kernel.org
	Cc: linux-s390@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
Link: https://lore.kernel.org/r/20220712092954.142027-4-bagasdotme@gmail.com
	Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
(cherry picked from commit 5efab5cdf06b932ba7a53264b60f7d5c6ec87edf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virt/kvm/api.rst
diff --cc Documentation/virt/kvm/api.rst
index 30da84ac28c5,5be5cc59869d..000000000000
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@@ -5386,6 -5910,97 +5386,100 @@@ enabled with ``arch_prctl()``, but thi
  The offsets of the state save areas in struct kvm_xsave follow the contents
  of CPUID leaf 0xD on the host.
  
++<<<<<<< HEAD
++=======
+ 4.135 KVM_XEN_HVM_EVTCHN_SEND
+ -----------------------------
+ 
+ :Capability: KVM_CAP_XEN_HVM / KVM_XEN_HVM_CONFIG_EVTCHN_SEND
+ :Architectures: x86
+ :Type: vm ioctl
+ :Parameters: struct kvm_irq_routing_xen_evtchn
+ :Returns: 0 on success, < 0 on error
+ 
+ 
+ ::
+ 
+    struct kvm_irq_routing_xen_evtchn {
+ 	__u32 port;
+ 	__u32 vcpu;
+ 	__u32 priority;
+    };
+ 
+ This ioctl injects an event channel interrupt directly to the guest vCPU.
+ 
+ 4.136 KVM_S390_PV_CPU_COMMAND
+ -----------------------------
+ 
+ :Capability: KVM_CAP_S390_PROTECTED_DUMP
+ :Architectures: s390
+ :Type: vcpu ioctl
+ :Parameters: none
+ :Returns: 0 on success, < 0 on error
+ 
+ This ioctl closely mirrors `KVM_S390_PV_COMMAND` but handles requests
+ for vcpus. It re-uses the kvm_s390_pv_dmp struct and hence also shares
+ the command ids.
+ 
+ **command:**
+ 
+ KVM_PV_DUMP
+   Presents an API that provides calls which facilitate dumping a vcpu
+   of a protected VM.
+ 
+ **subcommand:**
+ 
+ KVM_PV_DUMP_CPU
+   Provides encrypted dump data like register values.
+   The length of the returned data is provided by uv_info.guest_cpu_stor_len.
+ 
+ 4.137 KVM_S390_ZPCI_OP
+ ----------------------
+ 
+ :Capability: KVM_CAP_S390_ZPCI_OP
+ :Architectures: s390
+ :Type: vm ioctl
+ :Parameters: struct kvm_s390_zpci_op (in)
+ :Returns: 0 on success, <0 on error
+ 
+ Used to manage hardware-assisted virtualization features for zPCI devices.
+ 
+ Parameters are specified via the following structure::
+ 
+   struct kvm_s390_zpci_op {
+ 	/* in */
+ 	__u32 fh;		/* target device */
+ 	__u8  op;		/* operation to perform */
+ 	__u8  pad[3];
+ 	union {
+ 		/* for KVM_S390_ZPCIOP_REG_AEN */
+ 		struct {
+ 			__u64 ibv;	/* Guest addr of interrupt bit vector */
+ 			__u64 sb;	/* Guest addr of summary bit */
+ 			__u32 flags;
+ 			__u32 noi;	/* Number of interrupts */
+ 			__u8 isc;	/* Guest interrupt subclass */
+ 			__u8 sbo;	/* Offset of guest summary bit vector */
+ 			__u16 pad;
+ 		} reg_aen;
+ 		__u64 reserved[8];
+ 	} u;
+   };
+ 
+ The type of operation is specified in the "op" field.
+ KVM_S390_ZPCIOP_REG_AEN is used to register the VM for adapter event
+ notification interpretation, which will allow firmware delivery of adapter
+ events directly to the vm, with KVM providing a backup delivery mechanism;
+ KVM_S390_ZPCIOP_DEREG_AEN is used to subsequently disable interpretation of
+ adapter event notifications.
+ 
+ The target zPCI function must also be specified via the "fh" field.  For the
+ KVM_S390_ZPCIOP_REG_AEN operation, additional information to establish firmware
+ delivery must be provided via the "reg_aen" struct.
+ 
+ The "pad" and "reserved" fields may be used for future extensions and should be
+ set to 0s by userspace.
++>>>>>>> 5efab5cdf06b (Documentation: kvm: extend KVM_S390_ZPCI_OP subheading underline)
  
  5. The kvm_run structure
  ========================
* Unmerged path Documentation/virt/kvm/api.rst
