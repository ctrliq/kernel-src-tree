powerpc/pseries: Move vas_migration_handler early during migration

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Haren Myneni <haren@linux.ibm.com>
commit 465dda9d320d1cb9424f1015b0520ec4c4f0d279
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/465dda9d.failed

When the migration is initiated, the hypervisor changes VAS
mappings as part of pre-migration event. Then the OS gets the
migration event which closes all VAS windows before the migration
starts. NX generates continuous faults until windows are closed
and the user space can not differentiate these NX faults coming
from the actual migration. So to reduce this time window, close
VAS windows first in pseries_migrate_partition().

	Signed-off-by: Haren Myneni <haren@linux.ibm.com>
	Reviewed-by: Nathan Lynch <nathanl@linux.ibm.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/d8efade91dda831c9ed4abb226dab627da594c5f.camel@linux.ibm.com

(cherry picked from commit 465dda9d320d1cb9424f1015b0520ec4c4f0d279)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/mobility.c
diff --cc arch/powerpc/platforms/pseries/mobility.c
index 8774d3d8a0d9,634fac5db3f9..000000000000
--- a/arch/powerpc/platforms/pseries/mobility.c
+++ b/arch/powerpc/platforms/pseries/mobility.c
@@@ -662,19 -735,45 +662,40 @@@ static int pseries_suspend(u64 handle
  static int pseries_migrate_partition(u64 handle)
  {
  	int ret;
 -	unsigned int factor = 0;
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_PPC_WATCHDOG
+ 	factor = nmi_wd_lpm_factor;
+ #endif
+ 	/*
+ 	 * When the migration is initiated, the hypervisor changes VAS
+ 	 * mappings to prepare before OS gets the notification and
+ 	 * closes all VAS windows. NX generates continuous faults during
+ 	 * this time and the user space can not differentiate these
+ 	 * faults from the migration event. So reduce this time window
+ 	 * by closing VAS windows at the beginning of this function.
+ 	 */
+ 	vas_migration_handler(VAS_SUSPEND);
+ 
++>>>>>>> 465dda9d320d (powerpc/pseries: Move vas_migration_handler early during migration)
  	ret = wait_for_vasi_session_suspending(handle);
  	if (ret)
- 		return ret;
- 
- 	vas_migration_handler(VAS_SUSPEND);
+ 		goto out;
  
 -	if (factor)
 -		watchdog_nmi_set_timeout_pct(factor);
 -
  	ret = pseries_suspend(handle);
 -	if (ret == 0) {
 +	if (ret == 0)
  		post_mobility_fixup();
 -		/*
 -		 * Wait until the memory transfer is complete, so that the user
 -		 * space process returns from the syscall after the transfer is
 -		 * complete. This allows the user hooks to be executed at the
 -		 * right time.
 -		 */
 -		wait_for_vasi_session_completed(handle);
 -	} else
 +	else
  		pseries_cancel_migration(handle, ret);
  
++<<<<<<< HEAD
++=======
+ 	if (factor)
+ 		watchdog_nmi_set_timeout_pct(0);
+ 
+ out:
++>>>>>>> 465dda9d320d (powerpc/pseries: Move vas_migration_handler early during migration)
  	vas_migration_handler(VAS_RESUME);
  
  	return ret;
* Unmerged path arch/powerpc/platforms/pseries/mobility.c
