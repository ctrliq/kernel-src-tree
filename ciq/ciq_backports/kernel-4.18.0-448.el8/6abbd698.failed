irqchip/gic, gic-v3: Make SGIs use handle_percpu_devid_irq()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Valentin Schneider <valentin.schneider@arm.com>
commit 6abbd6988971aaa607b026eaa0ffd2301352f2ea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/6abbd698.failed

handle_percpu_devid_fasteoi_ipi() states:

 * The biggest difference with the IRQ version is that the interrupt is
 * EOIed early, as the IPI could result in a context switch, and we need to
 * make sure the IPI can fire again

All that can actually happen scheduler-wise within the handling of an IPI
is the raising of TIF_NEED_RESCHED (and / or folding thereof into
preempt_count); see scheduler_ipi() or sched_ttwu_pending() for instance.

Said flag / preempt_count is evaluated some time later before returning to
whatever context was interrupted, and this gates a call to
preempt_schedule_irq() (arm64_preempt_schedule_irq() in arm64).

Per the above, SGI's do not need a different handler than PPI's, so make
them use the same (handle_percpu_devid_irq).

	Signed-off-by: Valentin Schneider <valentin.schneider@arm.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20201109094121.29975-2-valentin.schneider@arm.com
(cherry picked from commit 6abbd6988971aaa607b026eaa0ffd2301352f2ea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/irqchip/irq-gic.c
diff --cc drivers/irqchip/irq-gic.c
index 28a271f8e993,b1d9c22caf2e..000000000000
--- a/drivers/irqchip/irq-gic.c
+++ b/drivers/irqchip/irq-gic.c
@@@ -964,7 -1004,8 +964,12 @@@ static int gic_irq_domain_map(struct ir
  	struct gic_chip_data *gic = d->host_data;
  	struct irq_data *irqd = irq_desc_get_irq_data(irq_to_desc(irq));
  
++<<<<<<< HEAD
 +	if (hw < 32) {
++=======
+ 	switch (hw) {
+ 	case 0 ... 31:
++>>>>>>> 6abbd6988971 (irqchip/gic, gic-v3: Make SGIs use handle_percpu_devid_irq())
  		irq_set_percpu_devid(irq);
  		irq_domain_set_info(d, irq, hw, &gic->chip, d->host_data,
  				    handle_percpu_devid_irq, NULL, NULL);
* Unmerged path drivers/irqchip/irq-gic.c
