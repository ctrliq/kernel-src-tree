drm: Move nomodeset kernel parameter to the DRM subsystem

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Javier Martinez Canillas <javierm@redhat.com>
commit 6a2d2ddf2c345e0149bfbffdddc4768a9ab0a741
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/6a2d2ddf.failed

The "nomodeset" kernel cmdline parameter is handled by the vgacon driver
but the exported vgacon_text_force() symbol is only used by DRM drivers.

It makes much more sense for the parameter logic to be in the subsystem
of the drivers that are making use of it.

Let's move the vgacon_text_force() function and related logic to the DRM
subsystem. While doing that, rename it to drm_firmware_drivers_only() and
make it return true if "nomodeset" was used and false otherwise. This is
a better description of the condition that the drivers are testing for.

	Suggested-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Signed-off-by: Javier Martinez Canillas <javierm@redhat.com>
	Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
	Acked-by: Jani Nikula <jani.nikula@intel.com>
	Acked-by: Pekka Paalanen <pekka.paalanen@collabora.com>
	Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20211112133230.1595307-4-javierm@redhat.com
(cherry picked from commit 6a2d2ddf2c345e0149bfbffdddc4768a9ab0a741)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/Makefile
#	drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
#	drivers/gpu/drm/i915/i915_module.c
#	drivers/gpu/drm/radeon/radeon_drv.c
#	drivers/gpu/drm/tiny/bochs.c
#	drivers/gpu/drm/vboxvideo/vbox_drv.c
diff --cc drivers/gpu/drm/Makefile
index cb33b2ea61e4,c74810c285af..000000000000
--- a/drivers/gpu/drm/Makefile
+++ b/drivers/gpu/drm/Makefile
@@@ -32,6 -29,17 +32,20 @@@ drm-$(CONFIG_OF) += drm_of.
  drm-$(CONFIG_PCI) += drm_pci.o
  drm-$(CONFIG_DEBUG_FS) += drm_debugfs.o drm_debugfs_crc.o
  drm-$(CONFIG_DRM_LOAD_EDID_FIRMWARE) += drm_edid_load.o
++<<<<<<< HEAD
++=======
+ drm-$(CONFIG_DRM_PRIVACY_SCREEN) += drm_privacy_screen.o drm_privacy_screen_x86.o
+ 
+ obj-$(CONFIG_DRM_DP_AUX_BUS) += drm_dp_aux_bus.o
+ 
+ obj-$(CONFIG_VGA_CONSOLE) += drm_nomodeset.o
+ 
+ drm_cma_helper-y := drm_gem_cma_helper.o
+ obj-$(CONFIG_DRM_GEM_CMA_HELPER) += drm_cma_helper.o
+ 
+ drm_shmem_helper-y := drm_gem_shmem_helper.o
+ obj-$(CONFIG_DRM_GEM_SHMEM_HELPER) += drm_shmem_helper.o
++>>>>>>> 6a2d2ddf2c34 (drm: Move nomodeset kernel parameter to the DRM subsystem)
  
  drm_vram_helper-y := drm_gem_vram_helper.o
  obj-$(CONFIG_DRM_VRAM_HELPER) += drm_vram_helper.o
diff --cc drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
index 390afed486aa,438468b82eb6..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
@@@ -1854,10 -2515,8 +1853,14 @@@ static int __init amdgpu_init(void
  {
  	int r;
  
++<<<<<<< HEAD
 +	if (vgacon_text_force()) {
 +		DRM_ERROR("VGACON disables amdgpu kernel modesetting.\n");
++=======
+ 	if (drm_firmware_drivers_only())
++>>>>>>> 6a2d2ddf2c34 (drm: Move nomodeset kernel parameter to the DRM subsystem)
  		return -EINVAL;
 +	}
  
  	r = amdgpu_sync_init();
  	if (r)
diff --cc drivers/gpu/drm/radeon/radeon_drv.c
index 5c23b77cb81a,956c72b5aa33..000000000000
--- a/drivers/gpu/drm/radeon/radeon_drv.c
+++ b/drivers/gpu/drm/radeon/radeon_drv.c
@@@ -641,15 -636,11 +640,19 @@@ static struct pci_driver radeon_kms_pci
  
  static int __init radeon_module_init(void)
  {
++<<<<<<< HEAD
 +	if (vgacon_text_force() && radeon_modeset == -1) {
 +		DRM_INFO("VGACON disable radeon kernel modesetting.\n");
++=======
+ 	if (drm_firmware_drivers_only() && radeon_modeset == -1)
++>>>>>>> 6a2d2ddf2c34 (drm: Move nomodeset kernel parameter to the DRM subsystem)
  		radeon_modeset = 0;
 +	}
  
 -	if (radeon_modeset == 0)
 +	if (radeon_modeset == 0) {
 +		DRM_ERROR("No UMS support in radeon module!\n");
  		return -EINVAL;
 +	}
  
  	DRM_INFO("radeon kernel modesetting enabled.\n");
  	radeon_register_atpx_handler();
diff --cc drivers/gpu/drm/vboxvideo/vbox_drv.c
index 6d4b32da9866,f35d9e44c6b7..000000000000
--- a/drivers/gpu/drm/vboxvideo/vbox_drv.c
+++ b/drivers/gpu/drm/vboxvideo/vbox_drv.c
@@@ -197,10 -192,8 +196,14 @@@ static const struct drm_driver driver 
  
  static int __init vbox_init(void)
  {
++<<<<<<< HEAD
 +#ifdef CONFIG_VGA_CONSOLE
 +	if (vgacon_text_force() && vbox_modeset == -1)
++=======
+ 	if (drm_firmware_drivers_only() && vbox_modeset == -1)
++>>>>>>> 6a2d2ddf2c34 (drm: Move nomodeset kernel parameter to the DRM subsystem)
  		return -EINVAL;
 +#endif
  
  	if (vbox_modeset == 0)
  		return -EINVAL;
* Unmerged path drivers/gpu/drm/i915/i915_module.c
* Unmerged path drivers/gpu/drm/tiny/bochs.c
* Unmerged path drivers/gpu/drm/Makefile
* Unmerged path drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c
diff --git a/drivers/gpu/drm/ast/ast_drv.c b/drivers/gpu/drm/ast/ast_drv.c
index 5aa452b4efe6..521c8b2d154a 100644
--- a/drivers/gpu/drm/ast/ast_drv.c
+++ b/drivers/gpu/drm/ast/ast_drv.c
@@ -26,7 +26,6 @@
  * Authors: Dave Airlie <airlied@redhat.com>
  */
 
-#include <linux/console.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 
@@ -233,7 +232,7 @@ static struct pci_driver ast_pci_driver = {
 
 static int __init ast_init(void)
 {
-	if (vgacon_text_force() && ast_modeset == -1)
+	if (drm_firmware_drivers_only() && ast_modeset == -1)
 		return -EINVAL;
 
 	if (ast_modeset == 0)
* Unmerged path drivers/gpu/drm/i915/i915_module.c
diff --git a/drivers/gpu/drm/mgag200/mgag200_drv.c b/drivers/gpu/drm/mgag200/mgag200_drv.c
index a701d9563257..87d7684b070b 100644
--- a/drivers/gpu/drm/mgag200/mgag200_drv.c
+++ b/drivers/gpu/drm/mgag200/mgag200_drv.c
@@ -6,7 +6,6 @@
  *          Dave Airlie
  */
 
-#include <linux/console.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/vmalloc.h>
@@ -380,7 +379,7 @@ static struct pci_driver mgag200_pci_driver = {
 
 static int __init mgag200_init(void)
 {
-	if (vgacon_text_force() && mgag200_modeset == -1)
+	if (drm_firmware_drivers_only() && mgag200_modeset == -1)
 		return -EINVAL;
 
 	if (mgag200_modeset == 0)
diff --git a/drivers/gpu/drm/nouveau/nouveau_drm.c b/drivers/gpu/drm/nouveau/nouveau_drm.c
index 78ac2255099c..c1e0c659d416 100644
--- a/drivers/gpu/drm/nouveau/nouveau_drm.c
+++ b/drivers/gpu/drm/nouveau/nouveau_drm.c
@@ -22,7 +22,6 @@
  * Authors: Ben Skeggs
  */
 
-#include <linux/console.h>
 #include <linux/delay.h>
 #include <linux/module.h>
 #include <linux/pci.h>
@@ -32,6 +31,7 @@
 
 #include <drm/drm_aperture.h>
 #include <drm/drm_crtc_helper.h>
+#include <drm/drm_drv.h>
 #include <drm/drm_gem_ttm_helper.h>
 #include <drm/drm_ioctl.h>
 #include <drm/drm_vblank.h>
@@ -1361,7 +1361,7 @@ nouveau_drm_init(void)
 	nouveau_display_options();
 
 	if (nouveau_modeset == -1) {
-		if (vgacon_text_force())
+		if (drm_firmware_drivers_only())
 			nouveau_modeset = 0;
 	}
 
diff --git a/drivers/gpu/drm/qxl/qxl_drv.c b/drivers/gpu/drm/qxl/qxl_drv.c
index 854e6c5a563f..ce827b2d6884 100644
--- a/drivers/gpu/drm/qxl/qxl_drv.c
+++ b/drivers/gpu/drm/qxl/qxl_drv.c
@@ -29,7 +29,6 @@
 
 #include "qxl_drv.h"
 
-#include <linux/console.h>
 #include <linux/module.h>
 #include <linux/pci.h>
 #include <linux/vgaarb.h>
@@ -297,7 +296,7 @@ static struct drm_driver qxl_driver = {
 
 static int __init qxl_init(void)
 {
-	if (vgacon_text_force() && qxl_modeset == -1)
+	if (drm_firmware_drivers_only() && qxl_modeset == -1)
 		return -EINVAL;
 
 	if (qxl_modeset == 0)
* Unmerged path drivers/gpu/drm/radeon/radeon_drv.c
* Unmerged path drivers/gpu/drm/tiny/bochs.c
diff --git a/drivers/gpu/drm/tiny/cirrus.c b/drivers/gpu/drm/tiny/cirrus.c
index 42611dacde88..ba4617b08e3c 100644
--- a/drivers/gpu/drm/tiny/cirrus.c
+++ b/drivers/gpu/drm/tiny/cirrus.c
@@ -16,7 +16,6 @@
  * Copyright 1999-2001 Jeff Garzik <jgarzik@pobox.com>
  */
 
-#include <linux/console.h>
 #include <linux/dma-buf-map.h>
 #include <linux/module.h>
 #include <linux/pci.h>
@@ -636,8 +635,9 @@ static struct pci_driver cirrus_pci_driver = {
 
 static int __init cirrus_init(void)
 {
-	if (vgacon_text_force())
+	if (drm_firmware_drivers_only())
 		return -EINVAL;
+
 	return pci_register_driver(&cirrus_pci_driver);
 }
 
* Unmerged path drivers/gpu/drm/vboxvideo/vbox_drv.c
diff --git a/drivers/gpu/drm/virtio/virtgpu_drv.c b/drivers/gpu/drm/virtio/virtgpu_drv.c
index ca77edbc5ea0..7b1ee4260ecd 100644
--- a/drivers/gpu/drm/virtio/virtgpu_drv.c
+++ b/drivers/gpu/drm/virtio/virtgpu_drv.c
@@ -27,7 +27,6 @@
  */
 
 #include <linux/module.h>
-#include <linux/console.h>
 #include <linux/pci.h>
 
 #include <drm/drm.h>
@@ -102,7 +101,7 @@ static int virtio_gpu_probe(struct virtio_device *vdev)
 	struct drm_device *dev;
 	int ret;
 
-	if (vgacon_text_force() && virtio_gpu_modeset == -1)
+	if (drm_firmware_drivers_only() && virtio_gpu_modeset == -1)
 		return -EINVAL;
 
 	if (virtio_gpu_modeset == 0)
diff --git a/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c b/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
index 6d9aeb9ac1ed..de26b6ea3158 100644
--- a/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
+++ b/drivers/gpu/drm/vmwgfx/vmwgfx_drv.c
@@ -25,7 +25,6 @@
  *
  **************************************************************************/
 
-#include <linux/console.h>
 #include <linux/dma-mapping.h>
 #include <linux/module.h>
 #include <linux/pci.h>
@@ -1604,7 +1603,7 @@ static int __init vmwgfx_init(void)
 {
 	int ret;
 
-	if (vgacon_text_force())
+	if (drm_firmware_drivers_only())
 		return -EINVAL;
 
 	ret = pci_register_driver(&vmw_pci_driver);
diff --git a/drivers/video/console/vgacon.c b/drivers/video/console/vgacon.c
index 6d0418e88ad7..1eff8a841bfb 100644
--- a/drivers/video/console/vgacon.c
+++ b/drivers/video/console/vgacon.c
@@ -99,30 +99,9 @@ static int 		vga_video_font_height;
 static int 		vga_scan_lines		__read_mostly;
 static unsigned int 	vga_rolled_over;
 
-static bool vgacon_text_mode_force;
 static bool vga_hardscroll_enabled;
 static bool vga_hardscroll_user_enable = true;
 
-bool vgacon_text_force(void)
-{
-	return vgacon_text_mode_force;
-}
-EXPORT_SYMBOL(vgacon_text_force);
-
-static int __init text_mode(char *str)
-{
-	vgacon_text_mode_force = true;
-
-	pr_warn("You have booted with nomodeset. This means your GPU drivers are DISABLED\n");
-	pr_warn("Any video related functionality will be severely degraded, and you may not even be able to suspend the system properly\n");
-	pr_warn("Unless you actually understand what nomodeset does, you should reboot without enabling it\n");
-
-	return 1;
-}
-
-/* force text mode - used by kernel modesetting */
-__setup("nomodeset", text_mode);
-
 static int __init no_scroll(char *str)
 {
 	/*
diff --git a/gpu/drm/drm_nomodeset.c b/gpu/drm/drm_nomodeset.c
new file mode 100644
index 000000000000..287edfb18b5d
--- /dev/null
+++ b/gpu/drm/drm_nomodeset.c
@@ -0,0 +1,26 @@
+// SPDX-License-Identifier: GPL-2.0
+
+#include <linux/module.h>
+#include <linux/types.h>
+
+static bool drm_nomodeset;
+
+bool drm_firmware_drivers_only(void)
+{
+	return drm_nomodeset;
+}
+EXPORT_SYMBOL(drm_firmware_drivers_only);
+
+static int __init disable_modeset(char *str)
+{
+	drm_nomodeset = true;
+
+	pr_warn("You have booted with nomodeset. This means your GPU drivers are DISABLED\n");
+	pr_warn("Any video related functionality will be severely degraded, and you may not even be able to suspend the system properly\n");
+	pr_warn("Unless you actually understand what nomodeset does, you should reboot without enabling it\n");
+
+	return 1;
+}
+
+/* Disable kernel modesetting */
+__setup("nomodeset", disable_modeset);
diff --git a/include/drm/drm_drv.h b/include/drm/drm_drv.h
index b439ae1921b8..92c903146487 100644
--- a/include/drm/drm_drv.h
+++ b/include/drm/drm_drv.h
@@ -634,5 +634,10 @@ static inline bool drm_drv_uses_atomic_modeset(struct drm_device *dev)
 
 int drm_dev_set_unique(struct drm_device *dev, const char *name);
 
+#ifdef CONFIG_VGA_CONSOLE
+extern bool drm_firmware_drivers_only(void);
+#else
+static inline bool drm_firmware_drivers_only(void) { return false; }
+#endif
 
 #endif
diff --git a/include/linux/console.h b/include/linux/console.h
index 613323cae094..4d44a1cf5f67 100644
--- a/include/linux/console.h
+++ b/include/linux/console.h
@@ -223,12 +223,6 @@ extern atomic_t ignore_console_lock_warning;
 #define VESA_HSYNC_SUSPEND      2
 #define VESA_POWERDOWN          3
 
-#ifdef CONFIG_VGA_CONSOLE
-extern bool vgacon_text_force(void);
-#else
-static inline bool vgacon_text_force(void) { return false; }
-#endif
-
 extern void console_init(void);
 
 /* For deferred console takeover */
