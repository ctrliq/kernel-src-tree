ASoC: SOF: compress: Dynamically allocate pcm params struct

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Baluta <daniel.baluta@nxp.com>
commit d5770daef62d2e4d33015089bab392ef867fd35a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d5770dae.failed

We need to extend sof_ipc_pcm_parmas with additional data in order
to send compress_params to SOF FW.

The extensions will be done at runtime so we need to dynamically
allocate pcm object of type struct sof_ipc_pcm_params.

	Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
Link: https://lore.kernel.org/r/20220712141531.14599-2-daniel.baluta@oss.nxp.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit d5770daef62d2e4d33015089bab392ef867fd35a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/compress.c
diff --cc sound/soc/sof/compress.c
index a8e908e50101,45c2ff61ee4d..000000000000
--- a/sound/soc/sof/compress.c
+++ b/sound/soc/sof/compress.c
@@@ -188,28 -191,26 +192,30 @@@ static int sof_compr_set_params(struct 
  
  	ret = create_page_table(component, cstream, crtd->dma_area, crtd->dma_bytes);
  	if (ret < 0)
- 		return ret;
- 
- 	memset(&pcm, 0, sizeof(pcm));
- 
- 	pcm.params.buffer.pages = PFN_UP(crtd->dma_bytes);
- 	pcm.hdr.size = sizeof(pcm);
- 	pcm.hdr.cmd = SOF_IPC_GLB_STREAM_MSG | SOF_IPC_STREAM_PCM_PARAMS;
- 
- 	pcm.comp_id = spcm->stream[cstream->direction].comp_id;
- 	pcm.params.hdr.size = sizeof(pcm.params);
- 	pcm.params.buffer.phy_addr = spcm->stream[cstream->direction].page_table.addr;
- 	pcm.params.buffer.size = crtd->dma_bytes;
- 	pcm.params.direction = cstream->direction;
- 	pcm.params.channels = params->codec.ch_out;
- 	pcm.params.rate = params->codec.sample_rate;
- 	pcm.params.buffer_fmt = SOF_IPC_BUFFER_INTERLEAVED;
- 	pcm.params.frame_fmt = SOF_IPC_FRAME_S32_LE;
- 	pcm.params.sample_container_bytes =
+ 		goto out;
+ 
+ 	pcm->params.buffer.pages = PFN_UP(crtd->dma_bytes);
+ 	pcm->hdr.size = sizeof(*pcm);
+ 	pcm->hdr.cmd = SOF_IPC_GLB_STREAM_MSG | SOF_IPC_STREAM_PCM_PARAMS;
+ 
+ 	pcm->comp_id = spcm->stream[cstream->direction].comp_id;
+ 	pcm->params.hdr.size = sizeof(pcm->params);
+ 	pcm->params.buffer.phy_addr = spcm->stream[cstream->direction].page_table.addr;
+ 	pcm->params.buffer.size = crtd->dma_bytes;
+ 	pcm->params.direction = cstream->direction;
+ 	pcm->params.channels = params->codec.ch_out;
+ 	pcm->params.rate = params->codec.sample_rate;
+ 	pcm->params.buffer_fmt = SOF_IPC_BUFFER_INTERLEAVED;
+ 	pcm->params.frame_fmt = SOF_IPC_FRAME_S32_LE;
+ 	pcm->params.sample_container_bytes =
  		snd_pcm_format_physical_width(SNDRV_PCM_FORMAT_S32) >> 3;
- 	pcm.params.host_period_bytes = params->buffer.fragment_size;
+ 	pcm->params.host_period_bytes = params->buffer.fragment_size;
  
++<<<<<<< HEAD
 +	ret = sof_ipc_tx_message(sdev->ipc, pcm.hdr.cmd, &pcm, sizeof(pcm),
++=======
+ 	ret = sof_ipc_tx_message(sdev->ipc, pcm, sizeof(*pcm),
++>>>>>>> d5770daef62d (ASoC: SOF: compress: Dynamically allocate pcm params struct)
  				 &ipc_params_reply, sizeof(ipc_params_reply));
  	if (ret < 0) {
  		dev_err(component->dev, "error ipc failed\n");
* Unmerged path sound/soc/sof/compress.c
