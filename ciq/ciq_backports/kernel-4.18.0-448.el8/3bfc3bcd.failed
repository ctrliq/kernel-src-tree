md: Remove extra mddev_get() in md_seq_start()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Logan Gunthorpe <logang@deltatee.com>
commit 3bfc3bcd787c48aa31e4fde4a6dfcef4cd7ee2c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/3bfc3bcd.failed

A regression is seen where mddev devices stay permanently after they
are stopped due to an elevated reference count.

This was tracked down to an extra mddev_get() in md_seq_start().

It only happened rarely because most of the time the md_seq_start()
is called with a zero offset. The path with an extra mddev_get() only
happens when it starts with a non-zero offset.

The commit noted below changed an mddev_get() to check its success
but inadvertently left the original call in. Remove the extra call.

Fixes: 12a6caf27324 ("md: only delete entries from all_mddevs when the disk is freed")
	Signed-off-by: Logan Gunthorpe <logang@deltatee.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Acked-by: Guoqing Jiang <Guoqing.jiang@linux.dev>
	Signed-off-by: Song Liu <song@kernel.org>
(cherry picked from commit 3bfc3bcd787c48aa31e4fde4a6dfcef4cd7ee2c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/md.c
diff --cc drivers/md/md.c
index 5b38eca590e0,9dc0175280b4..000000000000
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@@ -8270,7 -8154,8 +8270,12 @@@ static void *md_seq_start(struct seq_fi
  	list_for_each(tmp,&all_mddevs)
  		if (!l--) {
  			mddev = list_entry(tmp, struct mddev, all_mddevs);
++<<<<<<< HEAD
 +			mddev_get(mddev);
++=======
+ 			if (!mddev_get(mddev))
+ 				continue;
++>>>>>>> 3bfc3bcd787c (md: Remove extra mddev_get() in md_seq_start())
  			spin_unlock(&all_mddevs_lock);
  			return mddev;
  		}
* Unmerged path drivers/md/md.c
