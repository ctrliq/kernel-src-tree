NFS: Simplify nfs_readdir_xdr_to_array()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 9ff89c25d8addeee8eea84fa828f1d2ad659cc54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/9ff89c25.failed

Recent changes to readdir mean that we can cope with partially filled
page cache entries, so we no longer need to rely on looping in
nfs_readdir_xdr_to_array().

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 9ff89c25d8addeee8eea84fa828f1d2ad659cc54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index ccab13eab969,9d086ab4f889..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -859,7 -888,8 +859,12 @@@ static int nfs_readdir_xdr_to_array(str
  	struct nfs_entry *entry;
  	size_t array_size;
  	struct inode *inode = file_inode(desc->file);
++<<<<<<< HEAD
 +	size_t dtsize = NFS_SERVER(inode)->dtsize;
++=======
+ 	unsigned int dtsize = desc->dtsize;
+ 	unsigned int pglen;
++>>>>>>> 9ff89c25d8ad (NFS: Simplify nfs_readdir_xdr_to_array())
  	int status = -ENOMEM;
  
  	entry = kzalloc(sizeof(*entry), GFP_KERNEL);
@@@ -877,27 -907,20 +882,25 @@@
  	if (!pages)
  		goto out;
  
- 	do {
- 		unsigned int pglen;
- 		status = nfs_readdir_xdr_filler(desc, verf_arg, entry->cookie,
- 						pages, dtsize,
- 						verf_res);
- 		if (status < 0)
- 			break;
- 
- 		pglen = status;
- 		if (pglen == 0) {
- 			nfs_readdir_page_set_eof(page);
- 			break;
- 		}
- 
- 		verf_arg = verf_res;
+ 	status = nfs_readdir_xdr_filler(desc, verf_arg, entry->cookie, pages,
+ 					dtsize, verf_res);
+ 	if (status < 0)
+ 		goto free_pages;
  
+ 	pglen = status;
+ 	if (pglen != 0)
  		status = nfs_readdir_page_filler(desc, entry, pages, pglen,
  						 arrays, narrays);
++<<<<<<< HEAD
 +	} while (!status && nfs_readdir_page_needs_filling(page) &&
 +		page_mapping(page));
++=======
+ 	else
+ 		nfs_readdir_page_set_eof(page);
+ 	desc->buffer_fills++;
++>>>>>>> 9ff89c25d8ad (NFS: Simplify nfs_readdir_xdr_to_array())
  
+ free_pages:
  	nfs_readdir_free_pages(pages, array_size);
  out:
  	nfs_free_fattr(entry->fattr);
* Unmerged path fs/nfs/dir.c
