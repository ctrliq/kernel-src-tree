net/mlx5: CT: Create smfs dr matchers dynamically

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Paul Blakey <paulb@nvidia.com>
commit fbf6836db42d013056e0a423599d8afeb5b838ac
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/fbf6836d.failed

SMFS dr matchers are processed sequentially in hardware according to
their priorities, and not skipped if empty.

Currently, smfs ct fs creates four predefined dr matchers per ct
table (ct/ct nat) with hardcoded priority. Compared to dmfs ct fs
using autogroups, this might cause additional hops in fastpath for
traffic patterns that match later priorties, even if previous
priorites are empty, e.g user only using ipv6 UDP traffic will
have additional 3 hops.

Create the matchers dynamically, using the highest priority available,
on first rule usage, and remove them on last usage.

	Signed-off-by: Paul Blakey <paulb@nvidia.com>
	Reviewed-by: Oz Shlomo <ozsh@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit fbf6836db42d013056e0a423599d8afeb5b838ac)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/tc/ct_fs_smfs.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tc/ct_fs_smfs.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tc/ct_fs_smfs.c
