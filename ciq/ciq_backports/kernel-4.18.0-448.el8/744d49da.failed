net: move netif_set_gso_max helpers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Jakub Kicinski <kuba@kernel.org>
commit 744d49daf8bd3b17b345c836f2e6f97d49fa6ae8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/744d49da.failed

These are now internal to the core, no need to expose them.

	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 744d49daf8bd3b17b345c836f2e6f97d49fa6ae8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/netdevice.h
#	net/core/dev.h
diff --cc include/linux/netdevice.h
index 379d8bad852d,8cf0ac616cb9..000000000000
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@@ -5033,19 -4881,10 +5033,26 @@@ static inline bool netif_needs_gso(stru
  			 (skb->ip_summed != CHECKSUM_UNNECESSARY)));
  }
  
++<<<<<<< HEAD
 +static inline void netif_set_gso_max_size(struct net_device *dev,
 +					  unsigned int size)
 +{
 +	/* dev->gso_max_size is read locklessly from sk_setup_caps() */
 +	WRITE_ONCE(dev->gso_max_size, size);
 +}
 +
 +static inline void netif_set_gso_max_segs(struct net_device *dev,
 +					  unsigned int segs)
 +{
 +	/* dev->gso_max_segs is read locklessly from sk_setup_caps() */
 +	WRITE_ONCE(dev->gso_max_segs, segs);
 +}
++=======
+ void netif_set_tso_max_size(struct net_device *dev, unsigned int size);
+ void netif_set_tso_max_segs(struct net_device *dev, unsigned int segs);
+ void netif_inherit_tso_max(struct net_device *to,
+ 			   const struct net_device *from);
++>>>>>>> 744d49daf8bd (net: move netif_set_gso_max helpers)
  
  static inline void skb_gso_error_unwind(struct sk_buff *skb, __be16 protocol,
  					int pulled_hlen, u16 mac_offset,
* Unmerged path net/core/dev.h
* Unmerged path include/linux/netdevice.h
* Unmerged path net/core/dev.h
