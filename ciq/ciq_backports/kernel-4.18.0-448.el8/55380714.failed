Bluetooth: btintel: Add combined set_diag functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Tedd Ho-Jeong An <tedd.an@intel.com>
commit 553807141a1e4088e657e57ece890d9263d8070c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/55380714.failed

This patch adds a combined set_diag functions.
It also changes the btintel_set_diag_mfg() to static since it is no
longer used by others.

	Signed-off-by: Tedd Ho-Jeong An <tedd.an@intel.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 553807141a1e4088e657e57ece890d9263d8070c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btintel.c
#	drivers/bluetooth/btintel.h
diff --cc drivers/bluetooth/btintel.c
index 949020fa0142,9e9fd2222294..000000000000
--- a/drivers/bluetooth/btintel.c
+++ b/drivers/bluetooth/btintel.c
@@@ -1732,6 -1754,14 +1749,17 @@@ static int btintel_setup_combined(struc
  		case 0x07:	/* WP */
  		case 0x08:	/* StP */
  			/* Legacy ROM product */
++<<<<<<< HEAD
++=======
+ 			btintel_set_flag(hdev, INTEL_ROM_LEGACY);
+ 
+ 			/* These devices have an issue with LED which doesn't
+ 			 * go off immediately during shutdown. Set the flag
+ 			 * here to send the LED OFF command during shutdown.
+ 			 */
+ 			btintel_set_flag(hdev, INTEL_BROKEN_LED);
+ 
++>>>>>>> 553807141a1e (Bluetooth: btintel: Add combined set_diag functions)
  			err = btintel_legacy_rom_setup(hdev, &ver);
  			break;
  		case 0x0b:      /* SfP */
diff --cc drivers/bluetooth/btintel.h
index 773241e9644f,17cb62ac33f6..000000000000
--- a/drivers/bluetooth/btintel.h
+++ b/drivers/bluetooth/btintel.h
@@@ -153,6 -138,49 +153,52 @@@ struct intel_debug_features 
  #define INTEL_CNVX_TOP_STEP(cnvx_top)	(((cnvx_top) & 0x0f000000) >> 24)
  #define INTEL_CNVX_TOP_PACK_SWAB(t, s)	__swab16(((__u16)(((t) << 4) | (s))))
  
++<<<<<<< HEAD
++=======
+ enum {
+ 	INTEL_BOOTLOADER,
+ 	INTEL_DOWNLOADING,
+ 	INTEL_FIRMWARE_LOADED,
+ 	INTEL_FIRMWARE_FAILED,
+ 	INTEL_BOOTING,
+ 	INTEL_BROKEN_INITIAL_NCMD,
+ 	INTEL_BROKEN_LED,
+ 	INTEL_ROM_LEGACY,
+ 
+ 	__INTEL_NUM_FLAGS,
+ };
+ 
+ struct btintel_data {
+ 	DECLARE_BITMAP(flags, __INTEL_NUM_FLAGS);
+ };
+ 
+ #define btintel_set_flag(hdev, nr)					\
+ 	do {								\
+ 		struct btintel_data *intel = hci_get_priv((hdev));	\
+ 		set_bit((nr), intel->flags);				\
+ 	} while (0)
+ 
+ #define btintel_clear_flag(hdev, nr)					\
+ 	do {								\
+ 		struct btintel_data *intel = hci_get_priv((hdev));	\
+ 		clear_bit((nr), intel->flags);				\
+ 	} while (0)
+ 
+ #define btintel_wake_up_flag(hdev, nr)					\
+ 	do {								\
+ 		struct btintel_data *intel = hci_get_priv((hdev));	\
+ 		wake_up_bit(intel->flags, (nr));			\
+ 	} while (0)
+ 
+ #define btintel_get_flag(hdev)						\
+ 	(((struct btintel_data *)hci_get_priv(hdev))->flags)
+ 
+ #define btintel_test_flag(hdev, nr)	test_bit((nr), btintel_get_flag(hdev))
+ #define btintel_test_and_clear_flag(hdev, nr) test_and_clear_bit((nr), btintel_get_flag(hdev))
+ #define btintel_wait_on_flag_timeout(hdev, nr, m, to)			\
+ 		wait_on_bit_timeout(btintel_get_flag(hdev), (nr), m, to)
+ 
++>>>>>>> 553807141a1e (Bluetooth: btintel: Add combined set_diag functions)
  #if IS_ENABLED(CONFIG_BT_INTEL)
  
  int btintel_check_bdaddr(struct hci_dev *hdev);
* Unmerged path drivers/bluetooth/btintel.c
* Unmerged path drivers/bluetooth/btintel.h
