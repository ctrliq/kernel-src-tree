net: udp: use kfree_skb_reason() in udp_queue_rcv_one_skb()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Menglong Dong <imagedong@tencent.com>
commit 1379a92d38e31132e87d9b653e9343c7841a7348
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1379a92d.failed

Replace kfree_skb() with kfree_skb_reason() in udp_queue_rcv_one_skb().

	Signed-off-by: Menglong Dong <imagedong@tencent.com>
	Reviewed-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 1379a92d38e31132e87d9b653e9343c7841a7348)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv4/udp.c
diff --cc net/ipv4/udp.c
index ebd01fc43fef,952f5bf108a5..000000000000
--- a/net/ipv4/udp.c
+++ b/net/ipv4/udp.c
@@@ -2115,9 -2127,11 +2116,15 @@@ static int udp_queue_rcv_one_skb(struc
  	/*
  	 *	Charge it to the socket, dropping if the queue is full.
  	 */
- 	if (!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb))
+ 	if (!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb)) {
+ 		drop_reason = SKB_DROP_REASON_XFRM_POLICY;
  		goto drop;
++<<<<<<< HEAD
 +	nf_reset(skb);
++=======
+ 	}
+ 	nf_reset_ct(skb);
++>>>>>>> 1379a92d38e3 (net: udp: use kfree_skb_reason() in udp_queue_rcv_one_skb())
  
  	if (static_branch_unlikely(&udp_encap_needed_key) && up->encap_type) {
  		int (*encap_rcv)(struct sock *sk, struct sk_buff *skb);
* Unmerged path net/ipv4/udp.c
