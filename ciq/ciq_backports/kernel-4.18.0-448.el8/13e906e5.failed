component: Replace most references to 'master' with 'aggregate device'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Stephen Boyd <swboyd@chromium.org>
commit 13e906e50a8cf6033f22c03c4d772e36a9e02c6b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/13e906e5.failed

Remove most references to 'master' in the code and replace them with
some form of 'aggregate device'. This better reflects the reality of
what this code does, i.e. an aggregate device that represents a
device like a GPU card once some set of devices that make up the
aggregate device probe and register with the component framework.

	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Cc: Rob Clark <robdclark@gmail.com>
	Cc: Russell King <rmk+kernel@arm.linux.org.uk>
	Cc: Saravana Kannan <saravanak@google.com>
	Signed-off-by: Stephen Boyd <swboyd@chromium.org>
Link: https://lore.kernel.org/r/20220127200141.1295328-2-swboyd@chromium.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 13e906e50a8cf6033f22c03c4d772e36a9e02c6b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/component.c
#	include/linux/component.h
diff --cc drivers/base/component.c
index adb877577b0c,34f9e0802719..000000000000
--- a/drivers/base/component.c
+++ b/drivers/base/component.c
@@@ -244,11 -228,10 +240,16 @@@ static int try_to_bring_up_aggregate_de
  {
  	int ret;
  
- 	dev_dbg(master->parent, "trying to bring up master\n");
+ 	dev_dbg(adev->parent, "trying to bring up adev\n");
  
++<<<<<<< HEAD
 +
 +	if (find_components(master)) {
 +		dev_dbg(master->parent, "master has incomplete components\n");
++=======
+ 	if (find_components(adev)) {
+ 		dev_dbg(adev->parent, "master has incomplete components\n");
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
  		return 0;
  	}
  
@@@ -262,10 -245,11 +263,16 @@@
  		return -ENOMEM;
  
  	/* Found all components */
- 	ret = master->ops->bind(master->parent);
+ 	ret = adev->ops->bind(adev->parent);
  	if (ret < 0) {
++<<<<<<< HEAD
 +		devres_release_group(master->parent, NULL);
 +		dev_info(master->parent, "master bind failed: %d\n", ret);
++=======
+ 		devres_release_group(adev->parent, NULL);
+ 		if (ret != -EPROBE_DEFER)
+ 			dev_info(adev->parent, "adev bind failed: %d\n", ret);
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
  		return ret;
  	}
  
@@@ -438,8 -365,8 +445,13 @@@ static void __component_match_add(struc
  }
  
  /**
++<<<<<<< HEAD
 + * component_match_add_release - add a component match with release callback
 + * @master: device with the aggregate driver
++=======
+  * component_match_add_release - add a component match entry with release callback
+  * @parent: parent device of the aggregate driver
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
   * @matchptr: pointer to the list of component matches
   * @release: release function for @compare_data
   * @compare: compare function to match against all components
@@@ -468,8 -395,8 +480,13 @@@ void component_match_add_release(struc
  EXPORT_SYMBOL(component_match_add_release);
  
  /**
++<<<<<<< HEAD
 + * component_match_add_typed - add a compent match for a typed component
 + * @master: device with the aggregate driver
++=======
+  * component_match_add_typed - add a component match entry for a typed component
+  * @parent: parent device of the aggregate driver
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
   * @matchptr: pointer to the list of component matches
   * @compare_typed: compare function to match against all typed components
   * @compare_data: opaque pointer passed to the @compare function
@@@ -589,7 -516,8 +606,12 @@@ static void component_unbind(struct com
  {
  	WARN_ON(!component->bound);
  
++<<<<<<< HEAD
 +	component->ops->unbind(component->dev, master->parent, data);
++=======
+ 	if (component->ops && component->ops->unbind)
+ 		component->ops->unbind(component->dev, adev->parent, data);
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
  	component->bound = false;
  
  	/* Release all resources claimed in the binding of this component */
@@@ -669,10 -597,11 +691,16 @@@ static int component_bind(struct compon
  			 dev_name(component->dev), component->ops);
  	} else {
  		devres_release_group(component->dev, NULL);
- 		devres_release_group(master->parent, NULL);
+ 		devres_release_group(adev->parent, NULL);
  
++<<<<<<< HEAD
 +		dev_err(master->parent, "failed to bind %s (ops %ps): %d\n",
 +			dev_name(component->dev), component->ops, ret);
++=======
+ 		if (ret != -EPROBE_DEFER)
+ 			dev_err(adev->parent, "failed to bind %s (ops %ps): %d\n",
+ 				dev_name(component->dev), component->ops, ret);
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
  	}
  
  	return ret;
@@@ -710,10 -639,10 +738,17 @@@ int component_bind_all(struct device *p
  		}
  
  	if (ret != 0) {
++<<<<<<< HEAD
 +		for (; i--; )
 +			if (!master->match->compare[i].duplicate) {
 +				c = master->match->compare[i].component;
 +				component_unbind(c, master, data);
++=======
+ 		for (; i > 0; i--)
+ 			if (!adev->match->compare[i - 1].duplicate) {
+ 				c = adev->match->compare[i - 1].component;
+ 				component_unbind(c, adev, data);
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
  			}
  	}
  
diff --cc include/linux/component.h
index 2e9055e6e29c,7012569c6546..000000000000
--- a/include/linux/component.h
+++ b/include/linux/component.h
@@@ -104,8 -98,8 +104,13 @@@ void component_match_add_typed(struct d
  	int (*compare_typed)(struct device *, int, void *), void *compare_data);
  
  /**
++<<<<<<< HEAD
 + * component_match_add - add a compent match
 + * @master: device with the aggregate driver
++=======
+  * component_match_add - add a component match entry
+  * @parent: device with the aggregate driver
++>>>>>>> 13e906e50a8c (component: Replace most references to 'master' with 'aggregate device')
   * @matchptr: pointer to the list of component matches
   * @compare: compare function to match against all components
   * @compare_data: opaque pointer passed to the @compare function
* Unmerged path drivers/base/component.c
* Unmerged path include/linux/component.h
