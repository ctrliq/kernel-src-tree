ice: Fix interface being down after reset with link-down-on-close flag on

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mateusz Palczewski <mateusz.palczewski@intel.com>
commit 8ac7132704f3fbd2095abb9459e5303ce8c9e559
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/8ac71327.failed

When performing a reset on ice driver with link-down-on-close flag on
interface would always stay down. Fix this by moving a check of this
flag to ice_stop() that is called only when user wants to bring
interface down.

Fixes: ab4ab73fc1ec ("ice: Add ethtool private flag to make forcing link down optional")
	Signed-off-by: Mateusz Palczewski <mateusz.palczewski@intel.com>
	Tested-by: Petr Oros <poros@redhat.com>
	Tested-by: Gurucharan <gurucharanx.g@intel.com> (A Contingent worker at Intel)
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 8ac7132704f3fbd2095abb9459e5303ce8c9e559)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_main.c
diff --cc drivers/net/ethernet/intel/ice/ice_main.c
index b1d480010225,e109cb93886b..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_main.c
+++ b/drivers/net/ethernet/intel/ice/ice_main.c
@@@ -6379,7 -6649,7 +6379,11 @@@ static void ice_napi_disable_all(struc
   */
  int ice_down(struct ice_vsi *vsi)
  {
++<<<<<<< HEAD
 +	int i, tx_err, rx_err, link_err = 0;
++=======
+ 	int i, tx_err, rx_err, vlan_err = 0;
++>>>>>>> 8ac7132704f3 (ice: Fix interface being down after reset with link-down-on-close flag on)
  
  	WARN_ON(!test_bit(ICE_VSI_DOWN, vsi->state));
  
@@@ -6425,7 -6689,7 +6422,11 @@@
  	ice_for_each_rxq(vsi, i)
  		ice_clean_rx_ring(vsi->rx_rings[i]);
  
++<<<<<<< HEAD
 +	if (tx_err || rx_err || link_err) {
++=======
+ 	if (tx_err || rx_err || vlan_err) {
++>>>>>>> 8ac7132704f3 (ice: Fix interface being down after reset with link-down-on-close flag on)
  		netdev_err(vsi->netdev, "Failed to close VSI 0x%04X on switch 0x%04X\n",
  			   vsi->vsi_num, vsi->vsw->sw_id);
  		return -EIO;
* Unmerged path drivers/net/ethernet/intel/ice/ice_main.c
