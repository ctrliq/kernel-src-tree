fbcon: introduce for_each_registered_fb() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Yisheng Xie <ysxie@foxmail.com>
commit 10ac86884b4d7642a235f9da61367c3f8d2ab2ff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/10ac8688.failed

Following pattern is often used:

 for (i = 0; i < FB_MAX; i++) {
        if (registered_fb[i]) {
                ...
        }
 }

Therefore, as Andy's suggestion, for_each_registered_fb() helper can
be introduced to make the code easier to read and write by reducing
indentation level. It also saves few lines of code in each occurrence.

This patch convert all part here at the same time.

	Suggested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Yisheng Xie <ysxie@foxmail.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: David Lechner <david@lechnology.com>
	Signed-off-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
(cherry picked from commit 10ac86884b4d7642a235f9da61367c3f8d2ab2ff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
#	include/linux/fb.h
diff --cc drivers/video/fbdev/core/fbcon.c
index ff6e864fa9a7,e30d3a138c97..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -3609,8 -3607,8 +3607,13 @@@ static int fbcon_output_notifier(struc
  	deferred_takeover = false;
  	logo_shown = FBCON_LOGO_DONTSHOW;
  
++<<<<<<< HEAD
 +	/* We may get called in atomic context */
 +	schedule_work(&fbcon_deferred_takeover_work);
++=======
+ 	for_each_registered_fb(i)
+ 		fbcon_fb_registered(registered_fb[i]);
++>>>>>>> 10ac86884b4d (fbcon: introduce for_each_registered_fb() helper)
  
  	return NOTIFY_OK;
  }
@@@ -3634,11 -3632,11 +3637,19 @@@ static void fbcon_start(void
  	if (num_registered_fb) {
  		int i;
  
++<<<<<<< HEAD
 +		for (i = 0; i < FB_MAX; i++) {
 +			if (registered_fb[i] != NULL) {
 +				info_idx = i;
 +				break;
 +			}
++=======
+ 		console_lock();
+ 
+ 		for_each_registered_fb(i) {
+ 			info_idx = i;
+ 			break;
++>>>>>>> 10ac86884b4d (fbcon: introduce for_each_registered_fb() helper)
  		}
  
  		do_fbcon_takeover(0);
diff --cc include/linux/fb.h
index 5bd1a6c3d119,fd31e6f24b8d..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -657,10 -650,11 +657,18 @@@ extern struct fb_info *registered_fb[FB
  extern int num_registered_fb;
  extern struct class *fb_class;
  
++<<<<<<< HEAD
 +static inline void lock_fb_info(struct fb_info *info)
 +{
 +	mutex_lock(&info->lock);
 +}
++=======
+ #define for_each_registered_fb(i)		\
+ 	for (i = 0; i < FB_MAX; i++)		\
+ 		if (!registered_fb[i]) {} else
+ 
+ extern int lock_fb_info(struct fb_info *info);
++>>>>>>> 10ac86884b4d (fbcon: introduce for_each_registered_fb() helper)
  
  static inline void unlock_fb_info(struct fb_info *info)
  {
* Unmerged path drivers/video/fbdev/core/fbcon.c
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index 6fbe2ec3f4f5..35b0819b4220 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -1576,10 +1576,8 @@ static int do_remove_conflicting_framebuffers(struct apertures_struct *a,
 	int i, ret;
 
 	/* check all firmware fbs and kick off if the base addr overlaps */
-	for (i = 0 ; i < FB_MAX; i++) {
+	for_each_registered_fb(i) {
 		struct apertures_struct *gen_aper;
-		if (!registered_fb[i])
-			continue;
 
 		if (!(registered_fb[i]->flags & FBINFO_MISC_FIRMWARE))
 			continue;
* Unmerged path include/linux/fb.h
