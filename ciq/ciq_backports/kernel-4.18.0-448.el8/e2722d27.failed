wifi: mac80211: fix key lookup

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit e2722d278ee3dbc589e4fdf1e7970f4d2b62c7dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e2722d27.failed

With the split into keys[]/deflink.gtk[] arrays, WEP keys are
still installed into the keys[] array, but we didn't look them
up there. This meant they weren't deleted correctly.

Fix this by looking up the key there even if it's not pairwise
so we can be sure we don't have it.

Fixes: bfd8403adddd ("wifi: mac80211: reorg some iface data structs for MLD")
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit e2722d278ee3dbc589e4fdf1e7970f4d2b62c7dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/cfg.c
diff --cc net/mac80211/cfg.c
index f176465a1e43,aa3a1568c7fc..000000000000
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@@ -533,6 -535,48 +533,51 @@@ static int ieee80211_add_key(struct wip
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static struct ieee80211_key *
+ ieee80211_lookup_key(struct ieee80211_sub_if_data *sdata,
+ 		     u8 key_idx, bool pairwise, const u8 *mac_addr)
+ {
+ 	struct ieee80211_local *local = sdata->local;
+ 	struct ieee80211_key *key;
+ 	struct sta_info *sta;
+ 
+ 	if (mac_addr) {
+ 		sta = sta_info_get_bss(sdata, mac_addr);
+ 		if (!sta)
+ 			return NULL;
+ 
+ 		if (pairwise && key_idx < NUM_DEFAULT_KEYS)
+ 			return rcu_dereference_check_key_mtx(local,
+ 							     sta->ptk[key_idx]);
+ 
+ 		if (!pairwise &&
+ 		    key_idx < NUM_DEFAULT_KEYS +
+ 			      NUM_DEFAULT_MGMT_KEYS +
+ 			      NUM_DEFAULT_BEACON_KEYS)
+ 			return rcu_dereference_check_key_mtx(local,
+ 							     sta->deflink.gtk[key_idx]);
+ 
+ 		return NULL;
+ 	}
+ 
+ 	if (pairwise && key_idx < NUM_DEFAULT_KEYS)
+ 		return rcu_dereference_check_key_mtx(local,
+ 						     sdata->keys[key_idx]);
+ 
+ 	key = rcu_dereference_check_key_mtx(local, sdata->deflink.gtk[key_idx]);
+ 	if (key)
+ 		return key;
+ 
+ 	/* or maybe it was a WEP key */
+ 	if (key_idx < NUM_DEFAULT_KEYS)
+ 		return rcu_dereference_check_key_mtx(local, sdata->keys[key_idx]);
+ 
+ 	return NULL;
+ }
+ 
++>>>>>>> e2722d278ee3 (wifi: mac80211: fix key lookup)
  static int ieee80211_del_key(struct wiphy *wiphy, struct net_device *dev,
  			     u8 key_idx, bool pairwise, const u8 *mac_addr)
  {
* Unmerged path net/mac80211/cfg.c
