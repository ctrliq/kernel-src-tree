x86: Use -mindirect-branch-cs-prefix for RETPOLINE builds

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 68cf4f2a72ef8786e6b7af6fd9a89f27ac0f520d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/68cf4f2a.failed

In order to further enable commit:

  bbe2df3f6b6d ("x86/alternative: Try inline spectre_v2=retpoline,amd")

add the new GCC flag -mindirect-branch-cs-prefix:

  https://gcc.gnu.org/g:2196a681d7810ad8b227bf983f38ba716620545e
  https://gcc.gnu.org/bugzilla/show_bug.cgi?id=102952
  https://bugs.llvm.org/show_bug.cgi?id=52323

to RETPOLINE=y builds. This should allow fully inlining retpoline,amd
for GCC builds.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Acked-by: Nick Desaulniers <ndesaulniers@google.com>
Link: https://lkml.kernel.org/r/20211119165630.276205624@infradead.org
(cherry picked from commit 68cf4f2a72ef8786e6b7af6fd9a89f27ac0f520d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Makefile
diff --cc arch/x86/Makefile
index 7621048daf34,c38b6577c103..000000000000
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@@ -12,6 -12,18 +12,21 @@@ els
          KBUILD_DEFCONFIG := $(ARCH)_defconfig
  endif
  
++<<<<<<< HEAD
++=======
+ ifdef CONFIG_CC_IS_GCC
+ RETPOLINE_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-extern -mindirect-branch-register)
+ RETPOLINE_CFLAGS	+= $(call cc-option,-mindirect-branch-cs-prefix)
+ RETPOLINE_VDSO_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-inline -mindirect-branch-register)
+ endif
+ ifdef CONFIG_CC_IS_CLANG
+ RETPOLINE_CFLAGS	:= -mretpoline-external-thunk
+ RETPOLINE_VDSO_CFLAGS	:= -mretpoline
+ endif
+ export RETPOLINE_CFLAGS
+ export RETPOLINE_VDSO_CFLAGS
+ 
++>>>>>>> 68cf4f2a72ef (x86: Use -mindirect-branch-cs-prefix for RETPOLINE builds)
  # For gcc stack alignment is specified with -mpreferred-stack-boundary,
  # clang has the option -mstack-alignment for that purpose.
  ifneq ($(call cc-option, -mpreferred-stack-boundary=4),)
* Unmerged path arch/x86/Makefile
