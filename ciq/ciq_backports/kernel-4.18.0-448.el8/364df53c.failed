net: socket: rename SKB_DROP_REASON_SOCKET_FILTER

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Menglong Dong <imagedong@tencent.com>
commit 364df53c081d93fcfd6b91085ff2650c7f17b3c7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/364df53c.failed

Rename SKB_DROP_REASON_SOCKET_FILTER, which is used
as the reason of skb drop out of socket filter before
it's part of a released kernel. It will be used for
more protocols than just TCP in future series.

	Signed-off-by: Menglong Dong <imagedong@tencent.com>
	Reviewed-by: David Ahern <dsahern@kernel.org>
Link: https://lore.kernel.org/all/20220127091308.91401-2-imagedong@tencent.com/
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 364df53c081d93fcfd6b91085ff2650c7f17b3c7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
#	include/trace/events/skb.h
#	net/ipv4/tcp_ipv4.c
diff --cc include/linux/skbuff.h
index 6050fa383222,8a636e678902..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -319,6 -315,11 +319,14 @@@ struct sk_buff
   */
  enum skb_drop_reason {
  	SKB_DROP_REASON_NOT_SPECIFIED,
++<<<<<<< HEAD
++=======
+ 	SKB_DROP_REASON_NO_SOCKET,
+ 	SKB_DROP_REASON_PKT_TOO_SMALL,
+ 	SKB_DROP_REASON_TCP_CSUM,
+ 	SKB_DROP_REASON_SOCKET_FILTER,
+ 	SKB_DROP_REASON_UDP_CSUM,
++>>>>>>> 364df53c081d (net: socket: rename SKB_DROP_REASON_SOCKET_FILTER)
  	SKB_DROP_REASON_MAX,
  };
  
diff --cc include/trace/events/skb.h
index 294c61bbe44b,a8a64b97504d..000000000000
--- a/include/trace/events/skb.h
+++ b/include/trace/events/skb.h
@@@ -11,6 -11,11 +11,14 @@@
  
  #define TRACE_SKB_DROP_REASON					\
  	EM(SKB_DROP_REASON_NOT_SPECIFIED, NOT_SPECIFIED)	\
++<<<<<<< HEAD
++=======
+ 	EM(SKB_DROP_REASON_NO_SOCKET, NO_SOCKET)		\
+ 	EM(SKB_DROP_REASON_PKT_TOO_SMALL, PKT_TOO_SMALL)	\
+ 	EM(SKB_DROP_REASON_TCP_CSUM, TCP_CSUM)			\
+ 	EM(SKB_DROP_REASON_SOCKET_FILTER, SOCKET_FILTER)	\
+ 	EM(SKB_DROP_REASON_UDP_CSUM, UDP_CSUM)			\
++>>>>>>> 364df53c081d (net: socket: rename SKB_DROP_REASON_SOCKET_FILTER)
  	EMe(SKB_DROP_REASON_MAX, MAX)
  
  #undef EM
diff --cc net/ipv4/tcp_ipv4.c
index 8979cf02b734,938b59636578..000000000000
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@@ -1956,13 -2089,15 +1956,18 @@@ process
  	if (!xfrm4_policy_check(sk, XFRM_POLICY_IN, skb))
  		goto discard_and_relse;
  
 -	if (tcp_v4_inbound_md5_hash(sk, skb, dif, sdif))
 +	if (tcp_v4_inbound_md5_hash(sk, skb))
  		goto discard_and_relse;
  
 -	nf_reset_ct(skb);
 +	nf_reset(skb);
  
++<<<<<<< HEAD
 +	if (tcp_filter(sk, skb))
++=======
+ 	if (tcp_filter(sk, skb)) {
+ 		drop_reason = SKB_DROP_REASON_SOCKET_FILTER;
++>>>>>>> 364df53c081d (net: socket: rename SKB_DROP_REASON_SOCKET_FILTER)
  		goto discard_and_relse;
 -	}
  	th = (const struct tcphdr *)skb->data;
  	iph = ip_hdr(skb);
  	tcp_v4_fill_cb(skb, iph, th);
* Unmerged path include/linux/skbuff.h
* Unmerged path include/trace/events/skb.h
* Unmerged path net/ipv4/tcp_ipv4.c
