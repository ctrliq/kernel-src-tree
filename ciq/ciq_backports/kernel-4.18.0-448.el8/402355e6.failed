ASoC: SOF: Intel: hda-dai: Drop misleading comment regarding dma_data

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
commit 402355e6cdbebf15f2c40cd9469b924c97b94b32
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/402355e6.failed

The comment in hda_link_dma_hw_params() is no longer valid as the dma_data
is set to NULL at system suspend as well.

Instead of rewording the comment to state the obvious: try to take the
hext_stream from the dma_data and if it is not set then assign a new one
and store it as dma_data.

	Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20220712131620.13365-2-peter.ujfalusi@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 402355e6cdbebf15f2c40cd9469b924c97b94b32)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dai.c
diff --cc sound/soc/sof/intel/hda-dai.c
index ef0ce71ed6e9,9015ca2024bc..000000000000
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@@ -161,78 -209,19 +161,82 @@@ static int hda_link_dma_params(struct h
  	return 0;
  }
  
 -static int hda_link_dma_hw_params(struct snd_pcm_substream *substream,
 -				  struct snd_pcm_hw_params *params)
 +/* Update config for the DAI widget */
 +static struct sof_ipc_dai_config *hda_dai_update_config(struct snd_soc_dapm_widget *w,
 +							int channel)
 +{
 +	struct snd_sof_widget *swidget = w->dobj.private;
 +	struct sof_dai_private_data *private;
 +	struct sof_ipc_dai_config *config;
 +	struct snd_sof_dai *sof_dai;
 +
 +	if (!swidget)
 +		return NULL;
 +
 +	sof_dai = swidget->private;
 +
 +	if (!sof_dai || !sof_dai->private) {
 +		dev_err(swidget->scomp->dev, "%s: No private data for DAI %s\n", __func__,
 +			w->name);
 +		return NULL;
 +	}
 +
 +	private = sof_dai->private;
 +	if (!private->dai_config) {
 +		dev_err(swidget->scomp->dev, "%s: No config for DAI %s\n", __func__, w->name);
 +		return NULL;
 +	}
 +
 +	config = &private->dai_config[sof_dai->current_config];
 +
 +	/* update config with stream tag */
 +	config->hda.link_dma_ch = channel;
 +
 +	return config;
 +}
 +
 +static int hda_link_dai_widget_update(struct sof_intel_hda_stream *hda_stream,
 +				      struct snd_soc_dapm_widget *w,
 +				      int channel, bool widget_setup)
 +{
 +	struct snd_sof_dev *sdev = hda_stream->sdev;
 +	struct sof_ipc_dai_config *config;
 +
 +	config = hda_dai_update_config(w, channel);
 +	if (!config) {
 +		dev_err(sdev->dev, "error: no config for DAI %s\n", w->name);
 +		return -ENOENT;
 +	}
 +
 +	/* set up/free DAI widget and send DAI_CONFIG IPC */
 +	if (widget_setup)
 +		return hda_ctrl_dai_widget_setup(w);
 +
 +	return hda_ctrl_dai_widget_free(w);
 +}
 +
 +static int hda_link_hw_params(struct snd_pcm_substream *substream,
 +			      struct snd_pcm_hw_params *params,
 +			      struct snd_soc_dai *dai)
  {
  	struct hdac_stream *hstream = substream->runtime->private_data;
 +	struct hdac_bus *bus = hstream->bus;
  	struct hdac_ext_stream *hext_stream;
  	struct snd_soc_pcm_runtime *rtd = asoc_substream_to_rtd(substream);
 -	struct snd_soc_dai *cpu_dai = asoc_rtd_to_cpu(rtd, 0);
  	struct snd_soc_dai *codec_dai = asoc_rtd_to_codec(rtd, 0);
 +	struct sof_intel_hda_stream *hda_stream;
  	struct hda_pipe_params p_params = {0};
 -	struct hdac_bus *bus = hstream->bus;
 +	struct snd_soc_dapm_widget *w;
  	struct hdac_ext_link *link;
 +	int stream_tag;
 +	int ret;
  
++<<<<<<< HEAD
 +	/* get stored dma data if resuming from system suspend */
 +	hext_stream = snd_soc_dai_get_dma_data(dai, substream);
++=======
+ 	hext_stream = snd_soc_dai_get_dma_data(cpu_dai, substream);
++>>>>>>> 402355e6cdbe (ASoC: SOF: Intel: hda-dai: Drop misleading comment regarding dma_data)
  	if (!hext_stream) {
  		hext_stream = hda_link_stream_assign(bus, substream);
  		if (!hext_stream)
* Unmerged path sound/soc/sof/intel/hda-dai.c
