dm verity: fix verity_parse_opt_args parsing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit f876df9f12cda68e68995b33b36491d78fd3ecce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/f876df9f.failed

Commit df326e7a0699 ("dm verity: allow optional args to alter primary
args handling") introduced a bug where verity_parse_opt_args() wouldn't
properly shift past an optional argument's additional params (by
ignoring them).

Fix this by avoiding returning with error if an unknown argument is
encountered when @only_modifier_opts=true is passed to
verity_parse_opt_args().

In practice this regressed the cryptsetup testsuite's FEC testing
because unknown optional arguments were encountered, wherey
short-circuiting ever testing FEC mode. With this fix all of the
cryptsetup testsuite's verity FEC tests pass.

Fixes: df326e7a0699 ("dm verity: allow optional args to alter primary args handling")
	Reported-by: Milan Broz <gmazyland@gmail.com>>
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit f876df9f12cda68e68995b33b36491d78fd3ecce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-verity-target.c
diff --cc drivers/md/dm-verity-target.c
index ad282253a054,0d70c9c60d46..000000000000
--- a/drivers/md/dm-verity-target.c
+++ b/drivers/md/dm-verity-target.c
@@@ -925,9 -1049,10 +925,9 @@@ static int verity_parse_verity_mode(str
  }
  
  static int verity_parse_opt_args(struct dm_arg_set *as, struct dm_verity *v,
 -				 struct dm_verity_sig_opts *verify_args,
 -				 bool only_modifier_opts)
 +				 struct dm_verity_sig_opts *verify_args)
  {
- 	int r;
+ 	int r = 0;
  	unsigned argc;
  	struct dm_target *ti = v->ti;
  	const char *arg_name;
@@@ -982,8 -1123,17 +982,20 @@@
  				return r;
  			continue;
  
++<<<<<<< HEAD
++=======
+ 		} else if (only_modifier_opts) {
+ 			/*
+ 			 * Ignore unrecognized opt, could easily be an extra
+ 			 * argument to an option whose parsing was skipped.
+ 			 * Normal parsing (@only_modifier_opts=false) will
+ 			 * properly parse all options (and their extra args).
+ 			 */
+ 			continue;
++>>>>>>> f876df9f12cd (dm verity: fix verity_parse_opt_args parsing)
  		}
  
+ 		DMERR("Unrecognized verity feature request: %s", arg_name);
  		ti->error = "Unrecognized verity feature request";
  		return -EINVAL;
  	} while (argc && !r);
* Unmerged path drivers/md/dm-verity-target.c
