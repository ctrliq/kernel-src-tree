gve: fix for null pointer dereference.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Ameer Hamza <amhamza.mgc@gmail.com>
commit e6f60c51f0435862020bcd2d1e3257caaafe5650
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e6f60c51.failed

Avoid passing NULL skb to __skb_put() function call if
napi_alloc_skb() returns NULL.

Fixes: 37149e9374bf ("gve: Implement packet continuation for RX.")
	Signed-off-by: Ameer Hamza <amhamza.mgc@gmail.com>
Link: https://lore.kernel.org/r/20211205183810.8299-1-amhamza.mgc@gmail.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit e6f60c51f0435862020bcd2d1e3257caaafe5650)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/google/gve/gve_utils.c
diff --cc drivers/net/ethernet/google/gve/gve_utils.c
index aef57c448a98,d57508bc4307..000000000000
--- a/drivers/net/ethernet/google/gve/gve_utils.c
+++ b/drivers/net/ethernet/google/gve/gve_utils.c
@@@ -50,20 -50,34 +50,35 @@@ void gve_rx_add_to_block(struct gve_pri
  
  struct sk_buff *gve_rx_copy(struct net_device *dev, struct napi_struct *napi,
  			    struct gve_rx_slot_page_info *page_info, u16 len,
 -			    u16 padding, struct gve_rx_ctx *ctx)
 +			    u16 pad)
  {
 -	void *va = page_info->page_address + padding + page_info->page_offset;
 -	int skb_linear_offset = 0;
 -	bool set_protocol = false;
 -	struct sk_buff *skb;
 +	struct sk_buff *skb = napi_alloc_skb(napi, len);
 +	void *va = page_info->page_address + pad +
 +		   page_info->page_offset;
  
 -	if (ctx) {
 -		if (!ctx->skb_head)
 -			ctx->skb_head = napi_alloc_skb(napi, ctx->total_expected_size);
 +	if (unlikely(!skb))
 +		return NULL;
  
++<<<<<<< HEAD
++=======
+ 		if (unlikely(!ctx->skb_head))
+ 			return NULL;
+ 		skb = ctx->skb_head;
+ 		skb_linear_offset = skb->len;
+ 		set_protocol = ctx->curr_frag_cnt == ctx->expected_frag_cnt - 1;
+ 	} else {
+ 		skb = napi_alloc_skb(napi, len);
+ 
+ 		if (unlikely(!skb))
+ 			return NULL;
+ 		set_protocol = true;
+ 	}
++>>>>>>> e6f60c51f043 (gve: fix for null pointer dereference.)
  	__skb_put(skb, len);
 -	skb_copy_to_linear_data_offset(skb, skb_linear_offset, va, len);
  
 -	if (set_protocol)
 -		skb->protocol = eth_type_trans(skb, dev);
 +	skb_copy_to_linear_data(skb, va, len);
 +
 +	skb->protocol = eth_type_trans(skb, dev);
  
  	return skb;
  }
* Unmerged path drivers/net/ethernet/google/gve/gve_utils.c
