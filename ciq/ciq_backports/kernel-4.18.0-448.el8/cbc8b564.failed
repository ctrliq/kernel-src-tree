ice: Add support for 802.1ad port VLANs VF

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Brett Creeley <brett.creeley@intel.com>
commit cbc8b5645a4b5e8da02aaa30b2a2611f194b0b8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/cbc8b564.failed

Currently there is only support for 802.1Q port VLANs on SR-IOV VFs. Add
support to also allow 802.1ad port VLANs when double VLAN mode is
enabled.

	Signed-off-by: Brett Creeley <brett.creeley@intel.com>
	Tested-by: Konrad Jankowski <konrad0.jankowski@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit cbc8b5645a4b5e8da02aaa30b2a2611f194b0b8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
diff --cc drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
index e5875fdaaf40,9c43a7c8a45f..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
+++ b/drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
@@@ -801,6 -753,26 +801,29 @@@ static int ice_vf_rebuild_host_tx_rate_
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static u16 ice_vf_get_port_vlan_id(struct ice_vf *vf)
+ {
+ 	return vf->port_vlan_info.vid;
+ }
+ 
+ static u8 ice_vf_get_port_vlan_prio(struct ice_vf *vf)
+ {
+ 	return vf->port_vlan_info.prio;
+ }
+ 
+ bool ice_vf_is_port_vlan_ena(struct ice_vf *vf)
+ {
+ 	return (ice_vf_get_port_vlan_id(vf) || ice_vf_get_port_vlan_prio(vf));
+ }
+ 
+ static u16 ice_vf_get_port_vlan_tpid(struct ice_vf *vf)
+ {
+ 	return vf->port_vlan_info.tpid;
+ }
+ 
++>>>>>>> cbc8b5645a4b (ice: Add support for 802.1ad port VLANs VF)
  /**
   * ice_vf_rebuild_host_vlan_cfg - add VLAN 0 filter or rebuild the Port VLAN
   * @vf: VF to add MAC filters for
@@@ -4101,9 -4177,9 +4151,10 @@@ ice_set_vf_port_vlan(struct net_device 
  		     __be16 vlan_proto)
  {
  	struct ice_pf *pf = ice_netdev_to_pf(netdev);
+ 	u16 local_vlan_proto = ntohs(vlan_proto);
  	struct device *dev;
  	struct ice_vf *vf;
 +	u16 vlanprio;
  	int ret;
  
  	dev = ice_pf_to_dev(pf);
@@@ -4126,21 -4203,21 +4178,37 @@@
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
 +	vlanprio = vlan_id | (qos << VLAN_PRIO_SHIFT);
 +
 +	if (vf->port_vlan_info == vlanprio) {
 +		/* duplicate request, so just return success */
 +		dev_dbg(dev, "Duplicate pvid %d request\n", vlanprio);
++=======
+ 	if (ice_vf_get_port_vlan_prio(vf) == qos &&
+ 	    ice_vf_get_port_vlan_tpid(vf) == local_vlan_proto &&
+ 	    ice_vf_get_port_vlan_id(vf) == vlan_id) {
+ 		/* duplicate request, so just return success */
+ 		dev_dbg(dev, "Duplicate port VLAN %u, QoS %u, TPID 0x%04x request\n",
+ 			vlan_id, qos, local_vlan_proto);
++>>>>>>> cbc8b5645a4b (ice: Add support for 802.1ad port VLANs VF)
  		return 0;
  	}
  
  	mutex_lock(&vf->cfg_lock);
  
++<<<<<<< HEAD
 +	vf->port_vlan_info = vlanprio;
 +
 +	if (vf->port_vlan_info)
 +		dev_info(dev, "Setting VLAN %d, QoS 0x%x on VF %d\n",
 +			 vlan_id, qos, vf_id);
++=======
+ 	vf->port_vlan_info = ICE_VLAN(local_vlan_proto, vlan_id, qos);
+ 	if (ice_vf_is_port_vlan_ena(vf))
+ 		dev_info(dev, "Setting VLAN %u, QoS %u, TPID 0x%04x on VF %d\n",
+ 			 vlan_id, qos, local_vlan_proto, vf_id);
++>>>>>>> cbc8b5645a4b (ice: Add support for 802.1ad port VLANs VF)
  	else
  		dev_info(dev, "Clearing port VLAN on VF %d\n", vf_id);
  
@@@ -4811,8 -5938,10 +4879,15 @@@ ice_get_vf_cfg(struct net_device *netde
  	ether_addr_copy(ivi->mac, vf->hw_lan_addr.addr);
  
  	/* VF configuration for VLAN and applicable QoS */
++<<<<<<< HEAD
 +	ivi->vlan = vf->port_vlan_info & VLAN_VID_MASK;
 +	ivi->qos = (vf->port_vlan_info & VLAN_PRIO_MASK) >> VLAN_PRIO_SHIFT;
++=======
+ 	ivi->vlan = ice_vf_get_port_vlan_id(vf);
+ 	ivi->qos = ice_vf_get_port_vlan_prio(vf);
+ 	if (ice_vf_is_port_vlan_ena(vf))
+ 		ivi->vlan_proto = cpu_to_be16(ice_vf_get_port_vlan_tpid(vf));
++>>>>>>> cbc8b5645a4b (ice: Add support for 802.1ad port VLANs VF)
  
  	ivi->trusted = vf->trusted;
  	ivi->spoofchk = vf->spoofchk;
* Unmerged path drivers/net/ethernet/intel/ice/ice_virtchnl_pf.c
