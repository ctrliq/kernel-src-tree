Drivers: hv: Rename 'alloced' to 'allocated'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Vitaly Kuznetsov <vkuznets@redhat.com>
commit de96e8a09889b35dd8d1cb6d19ef2bb123b05be1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/de96e8a0.failed

'Alloced' is not a real word and only saves us two letters, let's
use 'allocated' instead.

No functional change intended.

	Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
	Reviewed-by: Michael Kelley <mikelley@microsoft.com>
Link: https://lore.kernel.org/r/20220128103412.3033736-2-vkuznets@redhat.com
	Signed-off-by: Wei Liu <wei.liu@kernel.org>
(cherry picked from commit de96e8a09889b35dd8d1cb6d19ef2bb123b05be1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/hv/channel_mgmt.c
diff --cc drivers/hv/channel_mgmt.c
index 661a53058a95,52cf6ae525e9..000000000000
--- a/drivers/hv/channel_mgmt.c
+++ b/drivers/hv/channel_mgmt.c
@@@ -740,8 -728,8 +740,13 @@@ static void init_vp_index(struct vmbus_
  	bool perf_chn = hv_is_perf_channel(channel);
  	u32 i, ncpu = num_online_cpus();
  	cpumask_var_t available_mask;
++<<<<<<< HEAD
 +	struct cpumask *alloced_mask;
 +	u32 target_cpu = 0;
++=======
+ 	struct cpumask *allocated_mask;
+ 	u32 target_cpu;
++>>>>>>> de96e8a09889 (Drivers: hv: Rename 'alloced' to 'allocated')
  	int numa_node;
  
  	if ((vmbus_proto_version == VERSION_WS2008) ||
* Unmerged path drivers/hv/channel_mgmt.c
diff --git a/drivers/hv/hyperv_vmbus.h b/drivers/hv/hyperv_vmbus.h
index d01a6b935204..f80366d74a32 100644
--- a/drivers/hv/hyperv_vmbus.h
+++ b/drivers/hv/hyperv_vmbus.h
@@ -418,7 +418,7 @@ static inline bool hv_is_perf_channel(struct vmbus_channel *channel)
 	return vmbus_devs[channel->device_id].perf_device;
 }
 
-static inline bool hv_is_alloced_cpu(unsigned int cpu)
+static inline bool hv_is_allocated_cpu(unsigned int cpu)
 {
 	struct vmbus_channel *channel, *sc;
 
@@ -440,23 +440,23 @@ static inline bool hv_is_alloced_cpu(unsigned int cpu)
 	return false;
 }
 
-static inline void hv_set_alloced_cpu(unsigned int cpu)
+static inline void hv_set_allocated_cpu(unsigned int cpu)
 {
 	cpumask_set_cpu(cpu, &hv_context.hv_numa_map[cpu_to_node(cpu)]);
 }
 
-static inline void hv_clear_alloced_cpu(unsigned int cpu)
+static inline void hv_clear_allocated_cpu(unsigned int cpu)
 {
-	if (hv_is_alloced_cpu(cpu))
+	if (hv_is_allocated_cpu(cpu))
 		return;
 	cpumask_clear_cpu(cpu, &hv_context.hv_numa_map[cpu_to_node(cpu)]);
 }
 
-static inline void hv_update_alloced_cpus(unsigned int old_cpu,
+static inline void hv_update_allocated_cpus(unsigned int old_cpu,
 					  unsigned int new_cpu)
 {
-	hv_set_alloced_cpu(new_cpu);
-	hv_clear_alloced_cpu(old_cpu);
+	hv_set_allocated_cpu(new_cpu);
+	hv_clear_allocated_cpu(old_cpu);
 }
 
 #ifdef CONFIG_HYPERV_TESTING
diff --git a/drivers/hv/vmbus_drv.c b/drivers/hv/vmbus_drv.c
index 98e4b3461cb0..4e0e4b3683a1 100644
--- a/drivers/hv/vmbus_drv.c
+++ b/drivers/hv/vmbus_drv.c
@@ -1905,7 +1905,7 @@ static ssize_t target_cpu_store(struct vmbus_channel *channel,
 
 	/* See init_vp_index(). */
 	if (hv_is_perf_channel(channel))
-		hv_update_alloced_cpus(origin_cpu, target_cpu);
+		hv_update_allocated_cpus(origin_cpu, target_cpu);
 
 	/* Currently set only for storvsc channels. */
 	if (channel->change_target_cpu_callback) {
