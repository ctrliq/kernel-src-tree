ASoC: SOF: Intel: hda-dai: remove use of __func__ in dev_dbg

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit 18701bb1370cb6b34a8f3ad820045930138083dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/18701bb1.failed

The module and function information can be added with
'modprobe foo dyndbg=+pmf'

	Suggested-by: Greg KH <gregkh@linuxfoundation.org>
	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
Link: https://lore.kernel.org/r/20220616215351.135643-4-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 18701bb1370cb6b34a8f3ad820045930138083dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-dai.c
diff --cc sound/soc/sof/intel/hda-dai.c
index ef0ce71ed6e9,ed74a1f264e8..000000000000
--- a/sound/soc/sof/intel/hda-dai.c
+++ b/sound/soc/sof/intel/hda-dai.c
@@@ -338,28 -385,99 +338,112 @@@ static int hda_link_pcm_trigger(struct 
  {
  	struct hdac_ext_stream *hext_stream =
  				snd_soc_dai_get_dma_data(dai, substream);
++<<<<<<< HEAD
 +	struct sof_intel_hda_stream *hda_stream;
++=======
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(dai->component);
+ 	struct snd_soc_pcm_runtime *rtd = asoc_substream_to_rtd(substream);
+ 	int stream = substream->stream;
+ 	int ret;
+ 
+ 	if (hext_stream && hext_stream->link_prepared)
+ 		return 0;
+ 
+ 	dev_dbg(sdev->dev, "prepare stream dir %d\n", substream->stream);
+ 
+ 	ret = hda_link_dma_prepare(substream);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	return hda_dai_hw_params_update(substream, &rtd->dpcm[stream].hw_params, dai);
+ }
+ 
+ static int hda_dai_hw_free_ipc(int stream, /* direction */
+ 			       struct snd_soc_dai *dai)
+ {
+ 	struct snd_soc_dapm_widget *w;
+ 
+ 	w = snd_soc_dai_get_widget(dai, stream);
+ 
+ 	/* free the link DMA channel in the FW and the DAI widget */
+ 	return hda_dai_widget_update(w, DMA_CHAN_INVALID, false);
+ }
+ 
+ static int ipc3_hda_dai_trigger(struct snd_pcm_substream *substream,
+ 				int cmd, struct snd_soc_dai *dai)
+ {
+ 	struct snd_soc_dapm_widget *w;
+ 	int ret;
+ 
+ 	dev_dbg(dai->dev, "cmd=%d dai %s direction %d\n", cmd,
+ 		dai->name, substream->stream);
+ 
+ 	ret = hda_link_dma_trigger(substream, cmd);
+ 	if (ret < 0)
+ 		return ret;
+ 
+ 	w = snd_soc_dai_get_widget(dai, substream->stream);
+ 
+ 	switch (cmd) {
+ 	case SNDRV_PCM_TRIGGER_SUSPEND:
+ 	case SNDRV_PCM_TRIGGER_STOP:
+ 		/*
+ 		 * free DAI widget during stop/suspend to keep widget use_count's balanced.
+ 		 */
+ 		ret = hda_dai_hw_free_ipc(substream->stream, dai);
+ 		if (ret < 0)
+ 			return ret;
+ 
+ 		break;
+ 	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
+ 		ret = hda_dai_config_pause_push_ipc(w);
+ 		if (ret < 0)
+ 			return ret;
+ 		break;
+ 
+ 	default:
+ 		break;
+ 	}
+ 	return 0;
+ }
+ 
+ /*
+  * In contrast to IPC3, the dai trigger in IPC4 mixes pipeline state changes
+  * (over IPC channel) and DMA state change (direct host register changes).
+  */
+ static int ipc4_hda_dai_trigger(struct snd_pcm_substream *substream,
+ 				int cmd, struct snd_soc_dai *dai)
+ {
+ 	struct hdac_ext_stream *hext_stream = snd_soc_dai_get_dma_data(dai, substream);
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(dai->component);
++>>>>>>> 18701bb1370c (ASoC: SOF: Intel: hda-dai: remove use of __func__ in dev_dbg)
  	struct snd_soc_pcm_runtime *rtd;
 -	struct snd_sof_widget *swidget;
  	struct snd_soc_dapm_widget *w;
 -	struct snd_soc_dai *codec_dai;
 +	struct hdac_ext_link *link;
  	struct hdac_stream *hstream;
 -	struct snd_soc_dai *cpu_dai;
 +	struct hdac_bus *bus;
 +	int stream_tag;
  	int ret;
  
++<<<<<<< HEAD
++=======
+ 	dev_dbg(dai->dev, "cmd=%d dai %s direction %d\n", cmd,
+ 		dai->name, substream->stream);
+ 
++>>>>>>> 18701bb1370c (ASoC: SOF: Intel: hda-dai: remove use of __func__ in dev_dbg)
  	hstream = substream->runtime->private_data;
 +	bus = hstream->bus;
  	rtd = asoc_substream_to_rtd(substream);
 -	cpu_dai = asoc_rtd_to_cpu(rtd, 0);
 -	codec_dai = asoc_rtd_to_codec(rtd, 0);
 +
 +	link = snd_hdac_ext_bus_get_link(bus, asoc_rtd_to_codec(rtd, 0)->component->name);
 +	if (!link)
 +		return -EINVAL;
 +
 +	hda_stream = hstream_to_sof_hda_stream(hext_stream);
 +
 +	dev_dbg(dai->dev, "In %s cmd=%d\n", __func__, cmd);
  
  	w = snd_soc_dai_get_widget(dai, substream->stream);
 -	swidget = w->dobj.private;
  
  	switch (cmd) {
  	case SNDRV_PCM_TRIGGER_START:
* Unmerged path sound/soc/sof/intel/hda-dai.c
