wifi: mac80211: mlme: use correct link_sta

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 98b0b467466c6afe8f2863158383444fbbc5f322
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/98b0b467.failed

For station capabilities, e.g. TWT, we need to use the correct
link station instead of deflink. Switch the code to do that.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 98b0b467466c6afe8f2863158383444fbbc5f322)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/mlme.c
diff --cc net/mac80211/mlme.c
index fc4128b322c2,b71de89d9734..000000000000
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@@ -3369,18 -3405,18 +3369,27 @@@ static bool ieee80211_twt_req_supported
  	if (!(elems->ext_capab[9] & WLAN_EXT_CAPA10_TWT_RESPONDER_SUPPORT))
  		return false;
  
++<<<<<<< HEAD
 +	return sta->sta.he_cap.he_cap_elem.mac_cap_info[0] &
 +		IEEE80211_HE_MAC_CAP0_TWT_RES;
 +}
 +
 +static int ieee80211_recalc_twt_req(struct ieee80211_sub_if_data *sdata,
 +				    struct sta_info *sta,
++=======
+ 	return link_sta->pub->he_cap.he_cap_elem.mac_cap_info[0] &
+ 		IEEE80211_HE_MAC_CAP0_TWT_RES;
+ }
+ 
+ static int ieee80211_recalc_twt_req(struct ieee80211_link_data *link,
+ 				    struct link_sta_info *link_sta,
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  				    struct ieee802_11_elems *elems)
  {
- 	bool twt = ieee80211_twt_req_supported(sta, elems);
+ 	bool twt = ieee80211_twt_req_supported(link_sta, elems);
  
 -	if (link->conf->twt_requester != twt) {
 -		link->conf->twt_requester = twt;
 +	if (sdata->vif.bss_conf.twt_requester != twt) {
 +		sdata->vif.bss_conf.twt_requester = twt;
  		return BSS_CHANGED_TWT;
  	}
  	return 0;
@@@ -3396,7 -3432,7 +3405,11 @@@ static bool ieee80211_twt_bcast_support
  					    ieee80211_vif_type_p2p(&sdata->vif));
  
  	return bss_conf->he_support &&
++<<<<<<< HEAD
 +		(sta->sta.he_cap.he_cap_elem.mac_cap_info[2] &
++=======
+ 		(link_sta->pub->he_cap.he_cap_elem.mac_cap_info[2] &
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  			IEEE80211_HE_MAC_CAP2_BCAST_TWT) &&
  		own_he_cap &&
  		(own_he_cap->he_cap_elem.mac_cap_info[2] &
@@@ -3598,23 -3644,25 +3620,39 @@@ static bool ieee80211_assoc_success(str
  	}
  
  	/* Set up internal HT/VHT capabilities */
 -	if (elems->ht_cap_elem && !(link->u.mgd.conn_flags & IEEE80211_CONN_DISABLE_HT))
 +	if (elems->ht_cap_elem && !(ifmgd->flags & IEEE80211_STA_DISABLE_HT))
  		ieee80211_ht_cap_ie_to_sta_ht_cap(sdata, sband,
++<<<<<<< HEAD
 +						  elems->ht_cap_elem, sta);
++=======
+ 						  elems->ht_cap_elem,
+ 						  link_sta);
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  
 -	if (elems->vht_cap_elem && !(link->u.mgd.conn_flags & IEEE80211_CONN_DISABLE_VHT))
 +	if (elems->vht_cap_elem && !(ifmgd->flags & IEEE80211_STA_DISABLE_VHT))
  		ieee80211_vht_cap_ie_to_sta_vht_cap(sdata, sband,
++<<<<<<< HEAD
 +						    elems->vht_cap_elem, sta);
++=======
+ 						    elems->vht_cap_elem,
+ 						    link_sta);
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  
 -	if (elems->he_operation && !(link->u.mgd.conn_flags & IEEE80211_CONN_DISABLE_HE) &&
 +	if (elems->he_operation && !(ifmgd->flags & IEEE80211_STA_DISABLE_HE) &&
  	    elems->he_cap) {
  		ieee80211_he_cap_ie_to_sta_he_cap(sdata, sband,
  						  elems->he_cap,
  						  elems->he_cap_len,
  						  elems->he_6ghz_capa,
++<<<<<<< HEAD
 +						  sta);
 +
 +		bss_conf->he_support = sta->sta.he_cap.has_he;
++=======
+ 						  link_sta);
+ 
+ 		bss_conf->he_support = link_sta->pub->he_cap.has_he;
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  		if (elems->rsnx && elems->rsnx_len &&
  		    (elems->rsnx[0] & WLAN_RSNX_CAPA_PROTECTED_TWT) &&
  		    wiphy_ext_feature_isset(local->hw.wiphy,
@@@ -3623,18 -3671,18 +3661,28 @@@
  		else
  			bss_conf->twt_protected = false;
  
++<<<<<<< HEAD
 +		changed |= ieee80211_recalc_twt_req(sdata, sta, elems);
++=======
+ 		changed |= ieee80211_recalc_twt_req(link, link_sta, elems);
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  
  		if (elems->eht_operation && elems->eht_cap &&
 -		    !(link->u.mgd.conn_flags & IEEE80211_CONN_DISABLE_EHT)) {
 +		    !(ifmgd->flags & IEEE80211_STA_DISABLE_EHT)) {
  			ieee80211_eht_cap_ie_to_sta_eht_cap(sdata, sband,
  							    elems->he_cap,
  							    elems->he_cap_len,
  							    elems->eht_cap,
  							    elems->eht_cap_len,
++<<<<<<< HEAD
 +							    sta);
 +
 +			bss_conf->eht_support = sta->sta.eht_cap.has_eht;
++=======
+ 							    link_sta);
+ 
+ 			bss_conf->eht_support = link_sta->pub->eht_cap.has_eht;
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  		} else {
  			bss_conf->eht_support = false;
  		}
@@@ -3711,7 -3759,7 +3759,11 @@@
  		nss = *elems->opmode_notif & IEEE80211_OPMODE_NOTIF_RX_NSS_MASK;
  		nss >>= IEEE80211_OPMODE_NOTIF_RX_NSS_SHIFT;
  		nss += 1;
++<<<<<<< HEAD
 +		sta->sta.rx_nss = nss;
++=======
+ 		link_sta->pub->rx_nss = nss;
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  	}
  
  	rate_control_rate_init(sta);
@@@ -4385,11 -4441,17 +4438,23 @@@ static void ieee80211_rx_mgmt_beacon(st
  				erp_valid, erp_value);
  
  	mutex_lock(&local->sta_mtx);
++<<<<<<< HEAD
 +	sta = sta_info_get(sdata, bssid);
 +
 +	changed |= ieee80211_recalc_twt_req(sdata, sta, elems);
++=======
+ 	sta = sta_info_get(sdata, sdata->vif.cfg.ap_addr);
+ 	if (WARN_ON(!sta))
+ 		goto free;
+ 	link_sta = rcu_dereference_protected(sta->link[link->link_id],
+ 					     lockdep_is_held(&local->sta_mtx));
+ 	if (WARN_ON(!link_sta))
+ 		goto free;
+ 
+ 	changed |= ieee80211_recalc_twt_req(link, link_sta, elems);
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  
 -	if (ieee80211_config_bw(link, elems->ht_cap_elem,
 +	if (ieee80211_config_bw(sdata, sta, elems->ht_cap_elem,
  				elems->vht_cap_elem, elems->ht_operation,
  				elems->vht_operation, elems->he_operation,
  				elems->eht_operation,
@@@ -4409,7 -4471,8 +4474,12 @@@
  	}
  
  	if (sta && elems->opmode_notif)
++<<<<<<< HEAD
 +		ieee80211_vht_handle_opmode(sdata, sta, *elems->opmode_notif,
++=======
+ 		ieee80211_vht_handle_opmode(sdata, link_sta,
+ 					    *elems->opmode_notif,
++>>>>>>> 98b0b467466c (wifi: mac80211: mlme: use correct link_sta)
  					    rx_status->band);
  	mutex_unlock(&local->sta_mtx);
  
* Unmerged path net/mac80211/mlme.c
