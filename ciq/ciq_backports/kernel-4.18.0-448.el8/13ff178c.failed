fbcon: Call fbcon_mode_deleted/new_modelist directly

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 13ff178ccd6d3b8074c542a911300b79c4eec255
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/13ff178c.failed

I'm not entirely clear on what new_modelist actually does, it seems
exclusively for a sysfs interface. Which in the end does amount to a
normal fb_set_par to check the mode, but then takes a different path
in both fbmem.c and fbcon.c.

I have no idea why these 2 paths are different, but then I also don't
really want to find out. So just do the simple conversion to a direct
function call.

v2: static inline for the dummy versions, I forgot.

	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Mikulas Patocka <mpatocka@redhat.com>
	Cc: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Peter Rosin <peda@axentia.se>
	Cc: Yisheng Xie <ysxie@foxmail.com>
	Cc: "Michał Mirosław" <mirq-linux@rere.qmqm.pl>
	Cc: linux-fbdev@vger.kernel.org
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-23-daniel.vetter@ffwll.ch
(cherry picked from commit 13ff178ccd6d3b8074c542a911300b79c4eec255)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
#	include/linux/fb.h
#	include/linux/fbcon.h
diff --cc drivers/video/fbdev/core/fbcon.c
index 689e13ab3084,24bd6cd270d5..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -3361,14 -3335,6 +3360,17 @@@ static int fbcon_event_notify(struct no
  	case FB_EVENT_MODE_CHANGE_ALL:
  		fbcon_set_all_vcs(info);
  		break;
++<<<<<<< HEAD
 +	case FB_EVENT_MODE_DELETE:
 +		mode = event->data;
 +		ret = fbcon_mode_deleted(info, mode);
 +		break;
 +	case FB_EVENT_FB_UNBIND:
 +		idx = info->node;
 +		ret = fbcon_fb_unbind(idx);
 +		break;
++=======
++>>>>>>> 13ff178ccd6d (fbcon: Call fbcon_mode_deleted/new_modelist directly)
  	case FB_EVENT_SET_CONSOLE_MAP:
  		/* called with console lock held */
  		con2fb = event->data;
diff --cc include/linux/fb.h
index 5bd1a6c3d119,7a788ed8c7b5..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -126,16 -126,6 +126,19 @@@ struct fb_cursor_user 
  
  /*	The resolution of the passed in fb_info about to change */ 
  #define FB_EVENT_MODE_CHANGE		0x01
++<<<<<<< HEAD
 +/*	The display on this fb_info is beeing suspended, no access to the
 + *	framebuffer is allowed any more after that call returns
 + */
 +#define FB_EVENT_SUSPEND		0x02
 +/*	The display on this fb_info was resumed, you can restore the display
 + *	if you own it
 + */
 +#define FB_EVENT_RESUME			0x03
 +/*      An entry from the modelist was removed */
 +#define FB_EVENT_MODE_DELETE            0x04
++=======
++>>>>>>> 13ff178ccd6d (fbcon: Call fbcon_mode_deleted/new_modelist directly)
  
  #ifdef CONFIG_GUMSTIX_AM200EPD
  /* only used by mach-pxa/am200epd.c */
diff --cc include/linux/fbcon.h
index 34abc144f9f8,c139834342f5..000000000000
--- a/include/linux/fbcon.h
+++ b/include/linux/fbcon.h
@@@ -6,13 -6,23 +6,31 @@@ void __init fb_console_init(void)
  void __exit fb_console_exit(void);
  int fbcon_fb_registered(struct fb_info *info);
  void fbcon_fb_unregistered(struct fb_info *info);
++<<<<<<< HEAD
 +void fbcon_remap_all(struct fb_info *info);
++=======
+ void fbcon_fb_unbind(struct fb_info *info);
+ void fbcon_suspended(struct fb_info *info);
+ void fbcon_resumed(struct fb_info *info);
+ int fbcon_mode_deleted(struct fb_info *info,
+ 		       struct fb_videomode *mode);
+ void fbcon_new_modelist(struct fb_info *info);
++>>>>>>> 13ff178ccd6d (fbcon: Call fbcon_mode_deleted/new_modelist directly)
  #else
  static inline void fb_console_init(void) {}
  static inline void fb_console_exit(void) {}
  static inline int fbcon_fb_registered(struct fb_info *info) { return 0; }
  static inline void fbcon_fb_unregistered(struct fb_info *info) {}
++<<<<<<< HEAD
 +static inline void fbcon_remap_all(struct fb_info *info) {}
++=======
+ static inline void fbcon_fb_unbind(struct fb_info *info) {}
+ static inline void fbcon_suspended(struct fb_info *info) {}
+ static inline void fbcon_resumed(struct fb_info *info) {}
+ static inline int fbcon_mode_deleted(struct fb_info *info,
+ 				     struct fb_videomode *mode) { return 0; }
+ static inline void fbcon_new_modelist(struct fb_info *info) {}
++>>>>>>> 13ff178ccd6d (fbcon: Call fbcon_mode_deleted/new_modelist directly)
  #endif
  
  #endif /* _LINUX_FBCON_H */
* Unmerged path drivers/video/fbdev/core/fbcon.c
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index e0a48e4a47a0..a7638451ac1c 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -938,16 +938,11 @@ fb_set_var(struct fb_info *info, struct fb_var_screeninfo *var)
 		/* make sure we don't delete the videomode of current var */
 		ret = fb_mode_is_equal(&mode1, &mode2);
 
-		if (!ret) {
-		    struct fb_event event;
-
-		    event.info = info;
-		    event.data = &mode1;
-		    ret = fb_notifier_call_chain(FB_EVENT_MODE_DELETE, &event);
-		}
+		if (!ret)
+			fbcon_mode_deleted(info, &mode1);
 
 		if (!ret)
-		    fb_delete_videomode(&mode1, &info->modelist);
+			fb_delete_videomode(&mode1, &info->modelist);
 
 
 		ret = (ret) ? -EINVAL : 0;
@@ -2003,7 +1998,6 @@ subsys_initcall(fbmem_init);
 
 int fb_new_modelist(struct fb_info *info)
 {
-	struct fb_event event;
 	struct fb_var_screeninfo var = info->var;
 	struct list_head *pos, *n;
 	struct fb_modelist *modelist;
@@ -2023,14 +2017,12 @@ int fb_new_modelist(struct fb_info *info)
 		}
 	}
 
-	err = 1;
+	if (list_empty(&info->modelist))
+		return 1;
 
-	if (!list_empty(&info->modelist)) {
-		event.info = info;
-		err = fb_notifier_call_chain(FB_EVENT_NEW_MODELIST, &event);
-	}
+	fbcon_new_modelist(info);
 
-	return err;
+	return 0;
 }
 
 MODULE_LICENSE("GPL");
* Unmerged path include/linux/fb.h
* Unmerged path include/linux/fbcon.h
