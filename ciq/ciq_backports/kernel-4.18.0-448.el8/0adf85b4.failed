NFS: Optimise away the previous cookie field

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 0adf85b445c7fbc5d2df1f8c1bc54d62c4340237
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0adf85b4.failed

Replace the 'previous cookie' field in struct nfs_entry with the
array->last_cookie.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 0adf85b445c7fbc5d2df1f8c1bc54d62c4340237)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/dir.c
diff --cc fs/nfs/dir.c
index ce0607cf0a27,033249a72e92..000000000000
--- a/fs/nfs/dir.c
+++ b/fs/nfs/dir.c
@@@ -791,16 -835,16 +793,26 @@@ static int nfs_readdir_page_filler(stru
  			arrays++;
  			*arrays = page = new;
  		} else {
++<<<<<<< HEAD
 +			new = nfs_readdir_page_get_next(mapping,
 +							page->index + 1,
 +							entry->prev_cookie);
++=======
+ 			new = nfs_readdir_page_get_next(mapping, cookie,
+ 							change_attr);
++>>>>>>> 0adf85b445c7 (NFS: Optimise away the previous cookie field)
  			if (!new)
  				break;
  			if (page != *arrays)
  				nfs_readdir_page_unlock_and_put(page);
  			page = new;
  		}
++<<<<<<< HEAD
 +		status = nfs_readdir_add_to_array(entry, page);
++=======
+ 		desc->page_index_max++;
+ 		status = nfs_readdir_page_array_append(page, entry, &cookie);
++>>>>>>> 0adf85b445c7 (NFS: Optimise away the previous cookie field)
  	} while (!status && !entry->eof);
  
  	switch (status) {
* Unmerged path fs/nfs/dir.c
diff --git a/fs/nfs/nfs2xdr.c b/fs/nfs/nfs2xdr.c
index 3d5ba43f44bb..05c3b4b2b3dd 100644
--- a/fs/nfs/nfs2xdr.c
+++ b/fs/nfs/nfs2xdr.c
@@ -955,7 +955,6 @@ int nfs2_decode_dirent(struct xdr_stream *xdr, struct nfs_entry *entry,
 	 * The type (size and byte order) of nfscookie isn't defined in
 	 * RFC 1094.  This implementation assumes that it's an XDR uint32.
 	 */
-	entry->prev_cookie = entry->cookie;
 	p = xdr_inline_decode(xdr, 4);
 	if (unlikely(!p))
 		return -EAGAIN;
diff --git a/fs/nfs/nfs3xdr.c b/fs/nfs/nfs3xdr.c
index 37f033fc4115..3f2a902c599d 100644
--- a/fs/nfs/nfs3xdr.c
+++ b/fs/nfs/nfs3xdr.c
@@ -2024,7 +2024,6 @@ int nfs3_decode_dirent(struct xdr_stream *xdr, struct nfs_entry *entry,
 			zero_nfs_fh3(entry->fh);
 	}
 
-	entry->prev_cookie = entry->cookie;
 	entry->cookie = new_cookie;
 
 	return 0;
diff --git a/fs/nfs/nfs4xdr.c b/fs/nfs/nfs4xdr.c
index 4cab0415d59d..ca8c30c4fd2f 100644
--- a/fs/nfs/nfs4xdr.c
+++ b/fs/nfs/nfs4xdr.c
@@ -7468,7 +7468,6 @@ int nfs4_decode_dirent(struct xdr_stream *xdr, struct nfs_entry *entry,
 	if (entry->fattr->valid & NFS_ATTR_FATTR_TYPE)
 		entry->d_type = nfs_umode_to_dtype(entry->fattr->mode);
 
-	entry->prev_cookie = entry->cookie;
 	entry->cookie = new_cookie;
 
 	return 0;
diff --git a/include/linux/nfs_xdr.h b/include/linux/nfs_xdr.h
index a1ae729b441f..ca453ef4777c 100644
--- a/include/linux/nfs_xdr.h
+++ b/include/linux/nfs_xdr.h
@@ -745,8 +745,7 @@ struct nfs_auth_info {
  */
 struct nfs_entry {
 	__u64			ino;
-	__u64			cookie,
-				prev_cookie;
+	__u64			cookie;
 	const char *		name;
 	unsigned int		len;
 	int			eof;
