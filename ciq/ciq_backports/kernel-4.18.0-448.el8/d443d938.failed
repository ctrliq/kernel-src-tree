fbcon: move more common code into fb_open()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit d443d93864726ad68c0a741d1e7b03934a9af143
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d443d938.failed

No idea why con2fb_acquire_newinfo() initializes much less than
fbcon_startup(), but so be it. From a quick look most of the
un-initialized stuff should be fairly harmless, but who knows.

Note that the error handling for the con2fb_acquire_newinfo() failure
case was very strange: Callers updated con2fb_map to the new value
before calling this function, but upon error con2fb_acquire_newinfo
reset it to the old value. Since I removed the call to fbcon_release
anyway that strange error path was sticking out like a sore thumb,
hence I removed it. Which also allows us to remove the oldidx
parameter from that function.

v2: Explain what's going on with oldidx and error paths (Sam)

v3: Drop unused variable (0day)

v4: Rebased over bisect fix in previous patch, unchagend end result.

	Acked-by: Sam Ravnborg <sam@ravnborg.org> (v2)
	Acked-by: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: kernel test robot <lkp@intel.com>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: Claudio Suarez <cssk@net-c.es>
	Cc: Du Cheng <ducheng2@gmail.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20220405210335.3434130-12-daniel.vetter@ffwll.ch
(cherry picked from commit d443d93864726ad68c0a741d1e7b03934a9af143)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
diff --cc drivers/video/fbdev/core/fbcon.c
index 1a25ce50a9fd,f0213a0e3870..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -709,39 -682,52 +709,85 @@@ static int fbcon_invalid_charcount(stru
  
  #endif /* CONFIG_MISC_TILEBLITTING */
  
++<<<<<<< HEAD
++=======
+ static void fbcon_release(struct fb_info *info)
+ {
+ 	if (info->fbops->fb_release)
+ 		info->fbops->fb_release(info, 0);
+ 
+ 	module_put(info->fbops->owner);
+ }
+ 
+ static int fbcon_open(struct fb_info *info)
+ {
+ 	struct fbcon_ops *ops;
+ 
+ 	if (!try_module_get(info->fbops->owner))
+ 		return -ENODEV;
+ 
+ 	if (info->fbops->fb_open &&
+ 	    info->fbops->fb_open(info, 0)) {
+ 		module_put(info->fbops->owner);
+ 		return -ENODEV;
+ 	}
+ 
+ 	ops = kzalloc(sizeof(struct fbcon_ops), GFP_KERNEL);
+ 	if (!ops) {
+ 		fbcon_release(info);
+ 		return -ENOMEM;
+ 	}
+ 
+ 	INIT_DELAYED_WORK(&ops->cursor_work, fb_flashcursor);
+ 	ops->info = info;
+ 	info->fbcon_par = ops;
+ 	ops->cur_blink_jiffies = HZ / 5;
+ 
+ 	return 0;
+ }
++>>>>>>> d443d9386472 (fbcon: move more common code into fb_open())
  
  static int con2fb_acquire_newinfo(struct vc_data *vc, struct fb_info *info,
- 				  int unit, int oldidx)
+ 				  int unit)
  {
++<<<<<<< HEAD
 +	struct fbcon_ops *ops = NULL;
 +	int err = 0;
++=======
+ 	int err;
++>>>>>>> d443d9386472 (fbcon: move more common code into fb_open())
  
 -	err = fbcon_open(info);
 -	if (err)
 -		return err;
 +	if (!try_module_get(info->fbops->owner))
 +		err = -ENODEV;
 +
 +	if (!err && info->fbops->fb_open &&
 +	    info->fbops->fb_open(info, 0))
 +		err = -ENODEV;
 +
++<<<<<<< HEAD
 +	if (!err) {
 +		ops = kzalloc(sizeof(struct fbcon_ops), GFP_KERNEL);
 +		if (!ops)
 +			err = -ENOMEM;
 +	}
  
 +	if (!err) {
 +		ops->cur_blink_jiffies = HZ / 5;
 +		ops->info = info;
 +		info->fbcon_par = ops;
 +
 +		if (vc)
 +			set_blitting_type(vc, info);
 +	}
 +
 +	if (err) {
 +		con2fb_map[unit] = oldidx;
 +		module_put(info->fbops->owner);
 +	}
++=======
+ 	if (vc)
+ 		set_blitting_type(vc, info);
++>>>>>>> d443d9386472 (fbcon: move more common code into fb_open())
  
  	return err;
  }
@@@ -963,20 -933,10 +1011,25 @@@ static const char *fbcon_startup(void
  	if (!info)
  		return NULL;
  	
 -	if (fbcon_open(info))
 +	owner = info->fbops->owner;
 +	if (!try_module_get(owner))
  		return NULL;
++<<<<<<< HEAD
 +	if (info->fbops->fb_open && info->fbops->fb_open(info, 0)) {
 +		module_put(owner);
 +		return NULL;
 +	}
 +
 +	ops = kzalloc(sizeof(struct fbcon_ops), GFP_KERNEL);
 +	if (!ops) {
 +		module_put(owner);
 +		return NULL;
 +	}
 +
++=======
+ 
+ 	ops = info->fbcon_par;
++>>>>>>> d443d9386472 (fbcon: move more common code into fb_open())
  	ops->currcon = -1;
  	ops->graphics = 1;
  	ops->cur_rotate = -1;
* Unmerged path drivers/video/fbdev/core/fbcon.c
