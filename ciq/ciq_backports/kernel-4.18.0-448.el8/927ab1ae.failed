fbdev: unify unlink_framebuffer paths

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 927ab1aed13d6a5188b764d830197d79b8c0e1ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/927ab1ae.failed

For some reasons the pm_vt_switch_unregister call was missing from the
direct unregister_framebuffer path. Fix this.

v2: fbinfo->dev is used to decided whether unlink_framebuffer has been
called already. I botched that in v1. Make this all clearer by
inlining __unlink_framebuffer.

v3: Fix typoe in subject (Maarten).

	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: "Michał Mirosław" <mirq-linux@rere.qmqm.pl>
	Cc: Peter Rosin <peda@axentia.se>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Mikulas Patocka <mpatocka@redhat.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-20-daniel.vetter@ffwll.ch
(cherry picked from commit 927ab1aed13d6a5188b764d830197d79b8c0e1ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbmem.c
diff --cc drivers/video/fbdev/core/fbmem.c
index e0a48e4a47a0,bee45e9405b8..000000000000
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@@ -1702,25 -1717,23 +1702,40 @@@ static int unbind_console(struct fb_inf
  
  	console_lock();
  	lock_fb_info(fb_info);
 -	fbcon_fb_unbind(fb_info);
 +	event.info = fb_info;
 +	ret = fb_notifier_call_chain(FB_EVENT_FB_UNBIND, &event);
  	unlock_fb_info(fb_info);
  	console_unlock();
 +
 +	return ret;
  }
  
++<<<<<<< HEAD
 +static int __unlink_framebuffer(struct fb_info *fb_info);
 +
 +static int do_unregister_framebuffer(struct fb_info *fb_info)
 +{
 +	struct fb_event event;
 +	int ret;
 +
 +	ret = unbind_console(fb_info);
 +
 +	if (ret)
 +		return -EINVAL;
++=======
+ void unlink_framebuffer(struct fb_info *fb_info)
+ {
+ 	int i;
+ 
+ 	i = fb_info->node;
+ 	if (WARN_ON(i < 0 || i >= FB_MAX || registered_fb[i] != fb_info))
+ 		return;
+ 
+ 	if (!fb_info->dev)
+ 		return;
+ 
+ 	device_destroy(fb_class, MKDEV(FB_MAJOR, i));
++>>>>>>> 927ab1aed13d (fbdev: unify unlink_framebuffer paths)
  
  	pm_vt_switch_unregister(fb_info->dev);
  
@@@ -1745,39 -1766,8 +1768,42 @@@ static void do_unregister_framebuffer(s
  
  	/* this may free fb info */
  	put_fb_info(fb_info);
 +	return 0;
 +}
 +
++<<<<<<< HEAD
 +static int __unlink_framebuffer(struct fb_info *fb_info)
 +{
 +	int i;
 +
 +	i = fb_info->node;
 +	if (i < 0 || i >= FB_MAX || registered_fb[i] != fb_info)
 +		return -EINVAL;
 +
 +	if (fb_info->dev) {
 +		device_destroy(fb_class, MKDEV(FB_MAJOR, i));
 +		fb_info->dev = NULL;
 +	}
 +
 +	return 0;
  }
  
 +int unlink_framebuffer(struct fb_info *fb_info)
 +{
 +	int ret;
 +
 +	ret = __unlink_framebuffer(fb_info);
 +	if (ret)
 +		return ret;
 +
 +	unbind_console(fb_info);
 +
 +	return 0;
 +}
 +EXPORT_SYMBOL(unlink_framebuffer);
 +
++=======
++>>>>>>> 927ab1aed13d (fbdev: unify unlink_framebuffer paths)
  /**
   * remove_conflicting_framebuffers - remove firmware-configured framebuffers
   * @a: memory range, users of which are to be removed
* Unmerged path drivers/video/fbdev/core/fbmem.c
