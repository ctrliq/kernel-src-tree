dm verity: optimize verity_verify_io if FEC not configured

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit 0a36463f4ca287e4d4ac15580c0aae5b23619212
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/0a36463f.failed

Only declare and copy bvec_iter if CONFIG_DM_VERITY_FEC is defined and
FEC enabled for the verity device.

	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit 0a36463f4ca287e4d4ac15580c0aae5b23619212)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-verity-target.c
diff --cc drivers/md/dm-verity-target.c
index 8f0dc33763bb,5a4ee3292853..000000000000
--- a/drivers/md/dm-verity-target.c
+++ b/drivers/md/dm-verity-target.c
@@@ -473,10 -498,17 +473,20 @@@ static int verity_verify_io(struct dm_v
  {
  	bool is_zero;
  	struct dm_verity *v = io->v;
+ #if defined(CONFIG_DM_VERITY_FEC)
  	struct bvec_iter start;
++<<<<<<< HEAD
 +	unsigned b;
++=======
+ #endif
+ 	/*
+ 	 * Copy the iterator in case we need to restart verification in a
+ 	 * work-queue.
+ 	 */
+ 	struct bvec_iter iter_copy = io->iter;
++>>>>>>> 0a36463f4ca2 (dm verity: optimize verity_verify_io if FEC not configured)
  	struct crypto_wait wait;
  	struct bio *bio = dm_bio_from_per_bio_data(io, v->ti->per_io_data_size);
 -	unsigned int b;
  
  	for (b = 0; b < io->n_blocks; b++) {
  		int r;
@@@ -512,8 -544,11 +522,16 @@@
  		if (unlikely(r < 0))
  			return r;
  
++<<<<<<< HEAD
 +		start = io->iter;
 +		r = verity_for_io_block(v, io, &io->iter, &wait);
++=======
+ #if defined(CONFIG_DM_VERITY_FEC)
+ 		if (verity_fec_is_enabled(v))
+ 			start = iter_copy;
+ #endif
+ 		r = verity_for_io_block(v, io, &iter_copy, &wait);
++>>>>>>> 0a36463f4ca2 (dm verity: optimize verity_verify_io if FEC not configured)
  		if (unlikely(r < 0))
  			return r;
  
@@@ -527,9 -562,18 +545,21 @@@
  			if (v->validated_blocks)
  				set_bit(cur_block, v->validated_blocks);
  			continue;
++<<<<<<< HEAD
++=======
+ 		} else if (static_branch_unlikely(&use_tasklet_enabled) &&
+ 			   io->in_tasklet) {
+ 			/*
+ 			 * Error handling code (FEC included) cannot be run in a
+ 			 * tasklet since it may sleep, so fallback to work-queue.
+ 			 */
+ 			return -EAGAIN;
+ #if defined(CONFIG_DM_VERITY_FEC)
++>>>>>>> 0a36463f4ca2 (dm verity: optimize verity_verify_io if FEC not configured)
  		} else if (verity_fec_decode(v, io, DM_VERITY_BLOCK_TYPE_DATA,
 -					     cur_block, NULL, &start) == 0) {
 +					   cur_block, NULL, &start) == 0) {
  			continue;
+ #endif
  		} else {
  			if (bio->bi_status) {
  				/*
* Unmerged path drivers/md/dm-verity-target.c
