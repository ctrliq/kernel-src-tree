wifi: mac80211: Allow EAPOL frames from link addresses

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Andrei Otcheretianski <andrei.otcheretianski@intel.com>
commit d06faef148837e39c320ed0b20a325165c6ba8d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d06faef1.failed

Allow transmitting EAPOL frames not only from the interface
address (which is the MLD address) but also any link addresses,
in order to support non-MLO stations on AP interfaces.

	Signed-off-by: Andrei Otcheretianski <andrei.otcheretianski@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit d06faef148837e39c320ed0b20a325165c6ba8d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/rx.c
diff --cc net/mac80211/rx.c
index d7c490a8a620,1c798c11648e..000000000000
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@@ -4135,31 -4172,6 +4164,34 @@@ static inline int ieee80211_bssid_match
  	       is_broadcast_ether_addr(raddr);
  }
  
++<<<<<<< HEAD
 +static bool ieee80211_is_our_addr(struct ieee80211_sub_if_data *sdata,
 +				  const u8 *addr, int *out_link_id)
 +{
 +	unsigned int link_id;
 +
 +	/* non-MLO, or MLD address replaced by hardware */
 +	if (ether_addr_equal(sdata->vif.addr, addr))
 +		return true;
 +
 +	if (!sdata->vif.valid_links)
 +		return false;
 +
 +	for (link_id = 0; link_id < ARRAY_SIZE(sdata->vif.link_conf); link_id++) {
 +		if (!sdata->vif.link_conf[link_id])
 +			continue;
 +		if (ether_addr_equal(sdata->vif.link_conf[link_id]->addr, addr)) {
 +			if (out_link_id)
 +				*out_link_id = link_id;
 +			return true;
 +		}
 +	}
 +
 +	return false;
 +}
 +
++=======
++>>>>>>> d06faef14883 (wifi: mac80211: Allow EAPOL frames from link addresses)
  static bool ieee80211_accept_frame(struct ieee80211_rx_data *rx)
  {
  	struct ieee80211_sub_if_data *sdata = rx->sdata;
* Unmerged path net/mac80211/rx.c
