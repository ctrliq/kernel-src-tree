x86/msi: Consolidate HPET allocation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit 2bf1e7bcedb8802cb4fc65757b229edfe112a4bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/2bf1e7bc.failed

None of the magic HPET fields are required in any way.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Acked-by: Joerg Roedel <jroedel@suse.de>
Link: https://lore.kernel.org/r/20200826112331.943993771@linutronix.de
(cherry picked from commit 2bf1e7bcedb8802cb4fc65757b229edfe112a4bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/apic/msi.c
diff --cc arch/x86/kernel/apic/msi.c
index 17d24aa5c9f0,da68d0828496..000000000000
--- a/arch/x86/kernel/apic/msi.c
+++ b/arch/x86/kernel/apic/msi.c
@@@ -496,9 -502,9 +496,15 @@@ int hpet_assign_irq(struct irq_domain *
  
  	init_irq_alloc_info(&info, NULL);
  	info.type = X86_IRQ_ALLOC_TYPE_HPET;
++<<<<<<< HEAD
 +	info.hpet_data = dev;
 +	info.hpet_id = hpet_dev_id(domain);
 +	info.hpet_index = dev_num;
++=======
+ 	info.data = hc;
+ 	info.devid = hpet_dev_id(domain);
+ 	info.hwirq = dev_num;
++>>>>>>> 2bf1e7bcedb8 (x86/msi: Consolidate HPET allocation)
  
  	return irq_domain_alloc_irqs(domain, 1, NUMA_NO_NODE, &info);
  }
diff --git a/arch/x86/include/asm/hw_irq.h b/arch/x86/include/asm/hw_irq.h
index 3c8884f140a3..0442e80a5c82 100644
--- a/arch/x86/include/asm/hw_irq.h
+++ b/arch/x86/include/asm/hw_irq.h
@@ -88,13 +88,6 @@ struct irq_alloc_info {
 
 	union {
 		int		unused;
-#ifdef	CONFIG_HPET_TIMER
-		struct {
-			int		hpet_id;
-			int		hpet_index;
-			void		*hpet_data;
-		};
-#endif
 #ifdef	CONFIG_PCI_MSI
 		struct {
 			struct pci_dev	*msi_dev;
* Unmerged path arch/x86/kernel/apic/msi.c
diff --git a/drivers/iommu/amd/iommu.c b/drivers/iommu/amd/iommu.c
index e74dcf606999..5b79ad004273 100644
--- a/drivers/iommu/amd/iommu.c
+++ b/drivers/iommu/amd/iommu.c
@@ -3049,7 +3049,7 @@ static int get_devid(struct irq_alloc_info *info)
 		return get_ioapic_devid(info->ioapic_id);
 	case X86_IRQ_ALLOC_TYPE_HPET:
 	case X86_IRQ_ALLOC_TYPE_HPET_GET_PARENT:
-		return get_hpet_devid(info->hpet_id);
+		return get_hpet_devid(info->devid);
 	case X86_IRQ_ALLOC_TYPE_PCI_MSI:
 	case X86_IRQ_ALLOC_TYPE_PCI_MSIX:
 		return get_device_id(&info->msi_dev->dev);
diff --git a/drivers/iommu/intel/irq_remapping.c b/drivers/iommu/intel/irq_remapping.c
index 86db5b35716f..2a29ef6acba6 100644
--- a/drivers/iommu/intel/irq_remapping.c
+++ b/drivers/iommu/intel/irq_remapping.c
@@ -1131,7 +1131,7 @@ static struct irq_domain *intel_get_irq_domain(struct irq_alloc_info *info)
 	case X86_IRQ_ALLOC_TYPE_IOAPIC_GET_PARENT:
 		return map_ioapic_to_ir(info->ioapic_id);
 	case X86_IRQ_ALLOC_TYPE_HPET_GET_PARENT:
-		return map_hpet_to_ir(info->hpet_id);
+		return map_hpet_to_ir(info->devid);
 	case X86_IRQ_ALLOC_TYPE_PCI_MSI:
 	case X86_IRQ_ALLOC_TYPE_PCI_MSIX:
 		return map_dev_to_ir(info->msi_dev);
@@ -1301,7 +1301,7 @@ static void intel_irq_remapping_prepare_irte(struct intel_ir_data *data,
 	case X86_IRQ_ALLOC_TYPE_PCI_MSI:
 	case X86_IRQ_ALLOC_TYPE_PCI_MSIX:
 		if (info->type == X86_IRQ_ALLOC_TYPE_HPET)
-			set_hpet_sid(irte, info->hpet_id);
+			set_hpet_sid(irte, info->devid);
 		else
 			set_msi_sid(irte, pci_real_dma_dev(info->msi_dev));
 
