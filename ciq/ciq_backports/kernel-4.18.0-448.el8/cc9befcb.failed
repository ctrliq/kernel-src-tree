scsi: smartpqi: Correct device removal for multi-actuator devices

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Kumar Meiyappan <Kumar.Meiyappan@microchip.com>
commit cc9befcbbb5ebce77726f938508700d913530035
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/cc9befcb.failed

Correct device count for multi-actuator drives which can cause kernel
panics.

	Reviewed-by: Scott Benesh <scott.benesh@microchip.com>
	Reviewed-by: Scott Teel <scott.teel@microchip.com>
	Reviewed-by: Mike Mcgowan <mike.mcgowan@microchip.com>
	Reviewed-by: Kevin Barnett <kevin.barnett@microchip.com>
	Signed-off-by: Kumar Meiyappan <Kumar.Meiyappan@microchip.com>
	Signed-off-by: Don Brace <don.brace@microchip.com>
Link: https://lore.kernel.org/r/166793531872.322537.9003385780343419275.stgit@brunhilda
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit cc9befcbbb5ebce77726f938508700d913530035)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/smartpqi/smartpqi_init.c
diff --cc drivers/scsi/smartpqi/smartpqi_init.c
index 5694a14d68a9,e82f4de46ea7..000000000000
--- a/drivers/scsi/smartpqi/smartpqi_init.c
+++ b/drivers/scsi/smartpqi/smartpqi_init.c
@@@ -6493,8 -6492,42 +6502,47 @@@ static int pqi_slave_configure(struct s
  	return rc;
  }
  
++<<<<<<< HEAD
 +static int pqi_getpciinfo_ioctl(struct pqi_ctrl_info *ctrl_info,
 +	void __user *arg)
++=======
+ static void pqi_slave_destroy(struct scsi_device *sdev)
+ {
+ 	struct pqi_ctrl_info *ctrl_info;
+ 	struct pqi_scsi_dev *device;
+ 	int mutex_acquired;
+ 	unsigned long flags;
+ 
+ 	ctrl_info = shost_to_hba(sdev->host);
+ 
+ 	mutex_acquired = mutex_trylock(&ctrl_info->scan_mutex);
+ 	if (!mutex_acquired)
+ 		return;
+ 
+ 	device = sdev->hostdata;
+ 	if (!device) {
+ 		mutex_unlock(&ctrl_info->scan_mutex);
+ 		return;
+ 	}
+ 
+ 	device->lun_count--;
+ 	if (device->lun_count > 0) {
+ 		mutex_unlock(&ctrl_info->scan_mutex);
+ 		return;
+ 	}
+ 
+ 	spin_lock_irqsave(&ctrl_info->scsi_device_list_lock, flags);
+ 	list_del(&device->scsi_device_list_entry);
+ 	spin_unlock_irqrestore(&ctrl_info->scsi_device_list_lock, flags);
+ 
+ 	mutex_unlock(&ctrl_info->scan_mutex);
+ 
+ 	pqi_dev_info(ctrl_info, "removed", device);
+ 	pqi_free_device(device);
+ }
+ 
+ static int pqi_getpciinfo_ioctl(struct pqi_ctrl_info *ctrl_info, void __user *arg)
++>>>>>>> cc9befcbbb5e (scsi: smartpqi: Correct device removal for multi-actuator devices)
  {
  	struct pci_dev *pci_dev;
  	u32 subsystem_vendor;
diff --git a/drivers/scsi/smartpqi/smartpqi.h b/drivers/scsi/smartpqi/smartpqi.h
index 8cdf4d2476dd..af27bb0f3133 100644
--- a/drivers/scsi/smartpqi/smartpqi.h
+++ b/drivers/scsi/smartpqi/smartpqi.h
@@ -1130,7 +1130,7 @@ struct pqi_scsi_dev {
 	u8	phy_id;
 	u8	ncq_prio_enable;
 	u8	ncq_prio_support;
-	u8	multi_lun_device_lun_count;
+	u8	lun_count;
 	bool	raid_bypass_configured;	/* RAID bypass configured */
 	bool	raid_bypass_enabled;	/* RAID bypass enabled */
 	u32	next_bypass_group[RAID_MAP_MAX_DATA_DISKS_PER_ROW];
* Unmerged path drivers/scsi/smartpqi/smartpqi_init.c
