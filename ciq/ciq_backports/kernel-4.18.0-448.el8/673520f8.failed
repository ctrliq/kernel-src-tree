mm: memcontrol: add {pgscan,pgsteal}_{kswapd,direct} items in memory.stat of cgroup v2

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Qi Zheng <zhengqi.arch@bytedance.com>
commit 673520f8da64f16077c1ecb190cbb38aa939fb41
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/673520f8.failed

There are already statistics of {pgscan,pgsteal}_kswapd and
{pgscan,pgsteal}_direct of memcg event here, but now only the sum of the
two is displayed in memory.stat of cgroup v2.

In order to obtain more accurate information during monitoring and
debugging, and to align with the display in /proc/vmstat, it better to
display {pgscan,pgsteal}_kswapd and {pgscan,pgsteal}_direct separately.

Also, for forward compatibility, we still display pgscan and pgsteal items
so that it won't break existing applications.

[zhengqi.arch@bytedance.com: add comment for memcg_vm_event_stat (suggested by Michal)]
  Link: https://lkml.kernel.org/r/20220606154028.55030-1-zhengqi.arch@bytedance.com
[zhengqi.arch@bytedance.com: fix the doc, thanks to Johannes]
  Link: https://lkml.kernel.org/r/20220607064803.79363-1-zhengqi.arch@bytedance.com
Link: https://lkml.kernel.org/r/20220604082209.55174-1-zhengqi.arch@bytedance.com
	Signed-off-by: Qi Zheng <zhengqi.arch@bytedance.com>
	Acked-by: Johannes Weiner <hannes@cmpxchg.org>
	Acked-by: Roman Gushchin <roman.gushchin@linux.dev>
	Acked-by: Muchun Song <songmuchun@bytedance.com>
	Acked-by: Shakeel Butt <shakeelb@google.com>
	Acked-by: Michal Hocko <mhocko@suse.com>
	Cc: Muchun Song <songmuchun@bytedance.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 673520f8da64f16077c1ecb190cbb38aa939fb41)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memcontrol.c
diff --cc mm/memcontrol.c
index 413502fb22c9,28c1532cc91f..000000000000
--- a/mm/memcontrol.c
+++ b/mm/memcontrol.c
@@@ -1490,21 -1524,11 +1506,20 @@@ static char *memory_stat_format(struct 
  	seq_buf_printf(&s, "pgsteal %lu\n",
  		       memcg_events(memcg, PGSTEAL_KSWAPD) +
  		       memcg_events(memcg, PGSTEAL_DIRECT));
- 	seq_buf_printf(&s, "%s %lu\n", vm_event_name(PGACTIVATE),
- 		       memcg_events(memcg, PGACTIVATE));
- 	seq_buf_printf(&s, "%s %lu\n", vm_event_name(PGDEACTIVATE),
- 		       memcg_events(memcg, PGDEACTIVATE));
- 	seq_buf_printf(&s, "%s %lu\n", vm_event_name(PGLAZYFREE),
- 		       memcg_events(memcg, PGLAZYFREE));
- 	seq_buf_printf(&s, "%s %lu\n", vm_event_name(PGLAZYFREED),
- 		       memcg_events(memcg, PGLAZYFREED));
  
++<<<<<<< HEAD
 +#ifdef CONFIG_TRANSPARENT_HUGEPAGE
 +	seq_buf_printf(&s, "%s %lu\n", vm_event_name(THP_FAULT_ALLOC),
 +		       memcg_events(memcg, THP_FAULT_ALLOC));
 +	seq_buf_printf(&s, "%s %lu\n", vm_event_name(THP_COLLAPSE_ALLOC),
 +		       memcg_events(memcg, THP_COLLAPSE_ALLOC));
 +#endif /* CONFIG_TRANSPARENT_HUGEPAGE */
++=======
+ 	for (i = 0; i < ARRAY_SIZE(memcg_vm_event_stat); i++)
+ 		seq_buf_printf(&s, "%s %lu\n",
+ 			       vm_event_name(memcg_vm_event_stat[i]),
+ 			       memcg_events(memcg, memcg_vm_event_stat[i]));
++>>>>>>> 673520f8da64 (mm: memcontrol: add {pgscan,pgsteal}_{kswapd,direct} items in memory.stat of cgroup v2)
  
  	/* The above should easily fit into one page */
  	WARN_ON_ONCE(seq_buf_has_overflowed(&s));
diff --git a/Documentation/admin-guide/cgroup-v2.rst b/Documentation/admin-guide/cgroup-v2.rst
index f11bff7fb351..8087cd2c1c2c 100644
--- a/Documentation/admin-guide/cgroup-v2.rst
+++ b/Documentation/admin-guide/cgroup-v2.rst
@@ -1343,6 +1343,24 @@ PAGE_SIZE multiple when read back.
 	  workingset_nodereclaim
 		Number of times a shadow node has been reclaimed
 
+	  pgscan (npn)
+		Amount of scanned pages (in an inactive LRU list)
+
+	  pgsteal (npn)
+		Amount of reclaimed pages
+
+	  pgscan_kswapd (npn)
+		Amount of scanned pages by kswapd (in an inactive LRU list)
+
+	  pgscan_direct (npn)
+		Amount of scanned pages directly  (in an inactive LRU list)
+
+	  pgsteal_kswapd (npn)
+		Amount of reclaimed pages by kswapd
+
+	  pgsteal_direct (npn)
+		Amount of reclaimed pages directly
+
 	  pgfault (npn)
 		Total number of page faults incurred
 
@@ -1352,12 +1370,6 @@ PAGE_SIZE multiple when read back.
 	  pgrefill (npn)
 		Amount of scanned pages (in an active LRU list)
 
-	  pgscan (npn)
-		Amount of scanned pages (in an inactive LRU list)
-
-	  pgsteal (npn)
-		Amount of reclaimed pages
-
 	  pgactivate (npn)
 		Amount of pages moved to the active LRU list
 
* Unmerged path mm/memcontrol.c
