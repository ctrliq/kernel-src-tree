wifi: mac80211: remove link_id parameter from link_info_changed()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Gregory Greenman <gregory.greenman@intel.com>
commit 7840bd468a99edac26492afa828b8fcbbbb2384e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7840bd46.failed

Since struct ieee80211_bss_conf already contains link_id,
passing link_id is not necessary.

	Signed-off-by: Gregory Greenman <gregory.greenman@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 7840bd468a99edac26492afa828b8fcbbbb2384e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mac80211_hwsim.c
#	include/net/mac80211.h
#	net/mac80211/driver-ops.h
#	net/mac80211/main.c
#	net/mac80211/trace.h
diff --cc drivers/net/wireless/mac80211_hwsim.c
index ab8607faefb4,5418c4973501..000000000000
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@@ -2128,13 -2156,34 +2128,42 @@@ static void mac80211_hwsim_bcn_en_iter(
  		(*count)++;
  }
  
 -static void mac80211_hwsim_vif_info_changed(struct ieee80211_hw *hw,
 +static void mac80211_hwsim_bss_info_changed(struct ieee80211_hw *hw,
  					    struct ieee80211_vif *vif,
++<<<<<<< HEAD
 +					    struct ieee80211_bss_conf *info,
 +					    u32 changed)
 +{
 +	struct hwsim_vif_priv *vp = (void *)vif->drv_priv;
 +	struct mac80211_hwsim_data *data = hw->priv;
++=======
+ 					    u64 changed)
+ {
+ 	struct hwsim_vif_priv *vp = (void *)vif->drv_priv;
+ 
+ 	hwsim_check_magic(vif);
+ 
+ 	wiphy_dbg(hw->wiphy, "%s(changed=0x%llx vif->addr=%pM)\n",
+ 		  __func__, changed, vif->addr);
+ 
+ 	if (changed & BSS_CHANGED_ASSOC) {
+ 		wiphy_dbg(hw->wiphy, "  ASSOC: assoc=%d aid=%d\n",
+ 			  vif->cfg.assoc, vif->cfg.aid);
+ 		vp->assoc = vif->cfg.assoc;
+ 		vp->aid = vif->cfg.aid;
+ 	}
+ }
+ 
+ static void mac80211_hwsim_link_info_changed(struct ieee80211_hw *hw,
+ 					     struct ieee80211_vif *vif,
+ 					     struct ieee80211_bss_conf *info,
+ 					     u64 changed)
+ {
+ 	struct hwsim_vif_priv *vp = (void *)vif->drv_priv;
+ 	struct mac80211_hwsim_data *data = hw->priv;
+ 	unsigned int link_id = info->link_id;
+ 	struct mac80211_hwsim_link_data *link_data = &data->link_data[link_id];
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  
  	hwsim_check_magic(vif);
  
diff --cc include/net/mac80211.h
index f38672457468,6fc4253b5644..000000000000
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@@ -3964,10 -4081,19 +3964,21 @@@ struct ieee80211_ops 
  	void (*bss_info_changed)(struct ieee80211_hw *hw,
  				 struct ieee80211_vif *vif,
  				 struct ieee80211_bss_conf *info,
++<<<<<<< HEAD
 +				 u32 changed);
++=======
+ 				 u64 changed);
+ 	void (*vif_cfg_changed)(struct ieee80211_hw *hw,
+ 				struct ieee80211_vif *vif,
+ 				u64 changed);
+ 	void (*link_info_changed)(struct ieee80211_hw *hw,
+ 				  struct ieee80211_vif *vif,
+ 				  struct ieee80211_bss_conf *info,
+ 				  u64 changed);
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  
 -	int (*start_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 -			struct ieee80211_bss_conf *link_conf);
 -	void (*stop_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 -			struct ieee80211_bss_conf *link_conf);
 +	int (*start_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
 +	void (*stop_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
  
  	u64 (*prepare_multicast)(struct ieee80211_hw *hw,
  				 struct netdev_hw_addr_list *mc_list);
diff --cc net/mac80211/driver-ops.h
index 173a201d5e6d,482f5c97a72b..000000000000
--- a/net/mac80211/driver-ops.h
+++ b/net/mac80211/driver-ops.h
@@@ -172,9 -190,13 +172,19 @@@ static inline void drv_bss_info_changed
  	if (!check_sdata_in_driver(sdata))
  		return;
  
++<<<<<<< HEAD
 +	trace_drv_bss_info_changed(local, sdata, info, changed);
 +	if (local->ops->bss_info_changed)
 +		local->ops->bss_info_changed(&local->hw, &sdata->vif, info, changed);
++=======
+ 	trace_drv_link_info_changed(local, sdata, info, changed);
+ 	if (local->ops->link_info_changed)
+ 		local->ops->link_info_changed(&local->hw, &sdata->vif,
+ 					      info, changed);
+ 	else if (local->ops->bss_info_changed)
+ 		local->ops->bss_info_changed(&local->hw, &sdata->vif,
+ 					     info, changed);
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  	trace_drv_return_void(local);
  }
  
diff --cc net/mac80211/main.c
index ae06e4025b16,26bb30606282..000000000000
--- a/net/mac80211/main.c
+++ b/net/mac80211/main.c
@@@ -208,7 -215,79 +208,81 @@@ void ieee80211_bss_info_change_notify(s
  	if (!changed || sdata->vif.type == NL80211_IFTYPE_AP_VLAN)
  		return;
  
++<<<<<<< HEAD
 +	drv_bss_info_changed(local, sdata, &sdata->vif.bss_conf, changed);
++=======
+ 	if (WARN_ON_ONCE(changed & (BSS_CHANGED_BEACON |
+ 				    BSS_CHANGED_BEACON_ENABLED) &&
+ 			 sdata->vif.type != NL80211_IFTYPE_AP &&
+ 			 sdata->vif.type != NL80211_IFTYPE_ADHOC &&
+ 			 sdata->vif.type != NL80211_IFTYPE_MESH_POINT &&
+ 			 sdata->vif.type != NL80211_IFTYPE_OCB))
+ 		return;
+ 
+ 	if (WARN_ON_ONCE(sdata->vif.type == NL80211_IFTYPE_P2P_DEVICE ||
+ 			 sdata->vif.type == NL80211_IFTYPE_NAN ||
+ 			 (sdata->vif.type == NL80211_IFTYPE_MONITOR &&
+ 			  !sdata->vif.bss_conf.mu_mimo_owner &&
+ 			  !(changed & BSS_CHANGED_TXPOWER))))
+ 		return;
+ 
+ 	if (!check_sdata_in_driver(sdata))
+ 		return;
+ 
+ 	if (changed & BSS_CHANGED_VIF_CFG_FLAGS) {
+ 		u64 ch = changed & BSS_CHANGED_VIF_CFG_FLAGS;
+ 
+ 		trace_drv_vif_cfg_changed(local, sdata, changed);
+ 		if (local->ops->vif_cfg_changed)
+ 			local->ops->vif_cfg_changed(&local->hw, &sdata->vif, ch);
+ 	}
+ 
+ 	if (changed & ~BSS_CHANGED_VIF_CFG_FLAGS) {
+ 		u64 ch = changed & ~BSS_CHANGED_VIF_CFG_FLAGS;
+ 
+ 		/* FIXME: should be for each link */
+ 		trace_drv_link_info_changed(local, sdata, &sdata->vif.bss_conf,
+ 					    changed);
+ 		if (local->ops->link_info_changed)
+ 			local->ops->link_info_changed(&local->hw, &sdata->vif,
+ 						      &sdata->vif.bss_conf, ch);
+ 	}
+ 
+ 	if (local->ops->bss_info_changed)
+ 		local->ops->bss_info_changed(&local->hw, &sdata->vif,
+ 					     &sdata->vif.bss_conf, changed);
+ 	trace_drv_return_void(local);
+ }
+ 
+ void ieee80211_vif_cfg_change_notify(struct ieee80211_sub_if_data *sdata,
+ 				     u64 changed)
+ {
+ 	struct ieee80211_local *local = sdata->local;
+ 
+ 	WARN_ON_ONCE(changed & ~BSS_CHANGED_VIF_CFG_FLAGS);
+ 
+ 	if (!changed || sdata->vif.type == NL80211_IFTYPE_AP_VLAN)
+ 		return;
+ 
+ 	drv_vif_cfg_changed(local, sdata, changed);
+ }
+ 
+ void ieee80211_link_info_change_notify(struct ieee80211_sub_if_data *sdata,
+ 				       struct ieee80211_link_data *link,
+ 				       u64 changed)
+ {
+ 	struct ieee80211_local *local = sdata->local;
+ 
+ 	WARN_ON_ONCE(changed & BSS_CHANGED_VIF_CFG_FLAGS);
+ 
+ 	if (!changed || sdata->vif.type == NL80211_IFTYPE_AP_VLAN)
+ 		return;
+ 
+ 	if (!check_sdata_in_driver(sdata))
+ 		return;
+ 
+ 	drv_link_info_changed(local, sdata, link->conf, link->link_id, changed);
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  }
  
  u32 ieee80211_reset_erp_info(struct ieee80211_sub_if_data *sdata)
diff --cc net/mac80211/trace.h
index 17e7760d8348,9f4377566c42..000000000000
--- a/net/mac80211/trace.h
+++ b/net/mac80211/trace.h
@@@ -406,6 -405,59 +406,62 @@@ TRACE_EVENT(drv_bss_info_changed
  		__field(bool, ibss_joined)
  		__field(bool, ibss_creator)
  		__field(u16, aid)
++<<<<<<< HEAD
++=======
+ 		__dynamic_array(u32, arp_addr_list,
+ 				sdata->vif.cfg.arp_addr_cnt > IEEE80211_BSS_ARP_ADDR_LIST_LEN ?
+ 					IEEE80211_BSS_ARP_ADDR_LIST_LEN :
+ 					sdata->vif.cfg.arp_addr_cnt)
+ 		__field(int, arp_addr_cnt)
+ 		__dynamic_array(u8, ssid, sdata->vif.cfg.ssid_len)
+ 		__field(int, s1g)
+ 		__field(bool, idle)
+ 		__field(bool, ps)
+ 	),
+ 
+ 	TP_fast_assign(
+ 		LOCAL_ASSIGN;
+ 		VIF_ASSIGN;
+ 		__entry->changed = changed;
+ 		__entry->aid = sdata->vif.cfg.aid;
+ 		__entry->assoc = sdata->vif.cfg.assoc;
+ 		__entry->ibss_joined = sdata->vif.cfg.ibss_joined;
+ 		__entry->ibss_creator = sdata->vif.cfg.ibss_creator;
+ 		__entry->ps = sdata->vif.cfg.ps;
+ 
+ 		__entry->arp_addr_cnt = sdata->vif.cfg.arp_addr_cnt;
+ 		memcpy(__get_dynamic_array(arp_addr_list),
+ 		       sdata->vif.cfg.arp_addr_list,
+ 		       sizeof(u32) * (sdata->vif.cfg.arp_addr_cnt > IEEE80211_BSS_ARP_ADDR_LIST_LEN ?
+ 					IEEE80211_BSS_ARP_ADDR_LIST_LEN :
+ 					sdata->vif.cfg.arp_addr_cnt));
+ 		memcpy(__get_dynamic_array(ssid),
+ 		       sdata->vif.cfg.ssid,
+ 		       sdata->vif.cfg.ssid_len);
+ 		__entry->s1g = sdata->vif.cfg.s1g;
+ 		__entry->idle = sdata->vif.cfg.idle;
+ 	),
+ 
+ 	TP_printk(
+ 		LOCAL_PR_FMT  VIF_PR_FMT " changed:%#llx",
+ 		LOCAL_PR_ARG, VIF_PR_ARG, __entry->changed
+ 	)
+ );
+ 
+ TRACE_EVENT(drv_link_info_changed,
+ 	TP_PROTO(struct ieee80211_local *local,
+ 		 struct ieee80211_sub_if_data *sdata,
+ 		 struct ieee80211_bss_conf *link_conf,
+ 		 u64 changed),
+ 
+ 	TP_ARGS(local, sdata, link_conf, changed),
+ 
+ 	TP_STRUCT__entry(
+ 		LOCAL_ENTRY
+ 		VIF_ENTRY
+ 		__field(u64, changed)
+ 		__field(int, link_id)
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  		__field(bool, cts)
  		__field(bool, shortpre)
  		__field(bool, shortslot)
@@@ -442,41 -486,30 +498,57 @@@
  		LOCAL_ASSIGN;
  		VIF_ASSIGN;
  		__entry->changed = changed;
++<<<<<<< HEAD
 +		__entry->aid = info->aid;
 +		__entry->assoc = info->assoc;
 +		__entry->ibss_joined = info->ibss_joined;
 +		__entry->ibss_creator = info->ibss_creator;
 +		__entry->shortpre = info->use_short_preamble;
 +		__entry->cts = info->use_cts_prot;
 +		__entry->shortslot = info->use_short_slot;
 +		__entry->enable_beacon = info->enable_beacon;
 +		__entry->dtimper = info->dtim_period;
 +		__entry->bcnint = info->beacon_int;
 +		__entry->assoc_cap = info->assoc_capability;
 +		__entry->sync_tsf = info->sync_tsf;
 +		__entry->sync_device_ts = info->sync_device_ts;
 +		__entry->sync_dtim_count = info->sync_dtim_count;
 +		__entry->basic_rates = info->basic_rates;
 +		memcpy(__entry->mcast_rate, info->mcast_rate,
++=======
+ 		__entry->link_id = link_conf->link_id;
+ 		__entry->shortpre = link_conf->use_short_preamble;
+ 		__entry->cts = link_conf->use_cts_prot;
+ 		__entry->shortslot = link_conf->use_short_slot;
+ 		__entry->enable_beacon = link_conf->enable_beacon;
+ 		__entry->dtimper = link_conf->dtim_period;
+ 		__entry->bcnint = link_conf->beacon_int;
+ 		__entry->assoc_cap = link_conf->assoc_capability;
+ 		__entry->sync_tsf = link_conf->sync_tsf;
+ 		__entry->sync_device_ts = link_conf->sync_device_ts;
+ 		__entry->sync_dtim_count = link_conf->sync_dtim_count;
+ 		__entry->basic_rates = link_conf->basic_rates;
+ 		memcpy(__entry->mcast_rate, link_conf->mcast_rate,
++>>>>>>> 7840bd468a99 (wifi: mac80211: remove link_id parameter from link_info_changed())
  		       sizeof(__entry->mcast_rate));
 -		__entry->ht_operation_mode = link_conf->ht_operation_mode;
 -		__entry->cqm_rssi_thold = link_conf->cqm_rssi_thold;
 -		__entry->cqm_rssi_hyst = link_conf->cqm_rssi_hyst;
 -		__entry->channel_width = link_conf->chandef.width;
 -		__entry->channel_cfreq1 = link_conf->chandef.center_freq1;
 -		__entry->channel_cfreq1_offset = link_conf->chandef.freq1_offset;
 -		__entry->qos = link_conf->qos;
 -		__entry->hidden_ssid = link_conf->hidden_ssid;
 -		__entry->txpower = link_conf->txpower;
 -		__entry->p2p_oppps_ctwindow = link_conf->p2p_noa_attr.oppps_ctwindow;
 +		__entry->ht_operation_mode = info->ht_operation_mode;
 +		__entry->cqm_rssi_thold = info->cqm_rssi_thold;
 +		__entry->cqm_rssi_hyst = info->cqm_rssi_hyst;
 +		__entry->channel_width = info->chandef.width;
 +		__entry->channel_cfreq1 = info->chandef.center_freq1;
 +		__entry->channel_cfreq1_offset = info->chandef.freq1_offset;
 +		__entry->arp_addr_cnt = info->arp_addr_cnt;
 +		memcpy(__get_dynamic_array(arp_addr_list), info->arp_addr_list,
 +		       sizeof(u32) * (info->arp_addr_cnt > IEEE80211_BSS_ARP_ADDR_LIST_LEN ?
 +					IEEE80211_BSS_ARP_ADDR_LIST_LEN :
 +					info->arp_addr_cnt));
 +		__entry->qos = info->qos;
 +		__entry->idle = info->idle;
 +		__entry->ps = info->ps;
 +		memcpy(__get_dynamic_array(ssid), info->ssid, info->ssid_len);
 +		__entry->hidden_ssid = info->hidden_ssid;
 +		__entry->txpower = info->txpower;
 +		__entry->p2p_oppps_ctwindow = info->p2p_noa_attr.oppps_ctwindow;
  	),
  
  	TP_printk(
* Unmerged path drivers/net/wireless/mac80211_hwsim.c
* Unmerged path include/net/mac80211.h
* Unmerged path net/mac80211/driver-ops.h
* Unmerged path net/mac80211/main.c
* Unmerged path net/mac80211/trace.h
