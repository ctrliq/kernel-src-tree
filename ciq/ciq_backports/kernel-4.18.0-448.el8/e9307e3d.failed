dm verity: only copy bvec_iter in verity_verify_io if in_tasklet

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit e9307e3deb52603c4f742624fa4799c7996422d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e9307e3d.failed

Avoid extra bvec_iter copy unless it is needed to allow retrying
verification, that failed from a tasklet, from a workqueue.

	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit e9307e3deb52603c4f742624fa4799c7996422d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-verity-target.c
diff --cc drivers/md/dm-verity-target.c
index 8f0dc33763bb,a56e254214fa..000000000000
--- a/drivers/md/dm-verity-target.c
+++ b/drivers/md/dm-verity-target.c
@@@ -473,11 -498,25 +473,27 @@@ static int verity_verify_io(struct dm_v
  {
  	bool is_zero;
  	struct dm_verity *v = io->v;
 -#if defined(CONFIG_DM_VERITY_FEC)
  	struct bvec_iter start;
++<<<<<<< HEAD
 +	unsigned b;
++=======
+ #endif
+ 	struct bvec_iter iter_copy;
+ 	struct bvec_iter *iter;
++>>>>>>> e9307e3deb52 (dm verity: only copy bvec_iter in verity_verify_io if in_tasklet)
  	struct crypto_wait wait;
  	struct bio *bio = dm_bio_from_per_bio_data(io, v->ti->per_io_data_size);
 -	unsigned int b;
  
+ 	if (static_branch_unlikely(&use_tasklet_enabled) && io->in_tasklet) {
+ 		/*
+ 		 * Copy the iterator in case we need to restart
+ 		 * verification in a work-queue.
+ 		 */
+ 		iter_copy = io->iter;
+ 		iter = &iter_copy;
+ 	} else
+ 		iter = &io->iter;
+ 
  	for (b = 0; b < io->n_blocks; b++) {
  		int r;
  		sector_t cur_block = io->block + b;
@@@ -485,7 -524,7 +501,11 @@@
  
  		if (v->validated_blocks &&
  		    likely(test_bit(cur_block, v->validated_blocks))) {
++<<<<<<< HEAD
 +			verity_bv_skip_block(v, io, &io->iter);
++=======
+ 			verity_bv_skip_block(v, io, iter);
++>>>>>>> e9307e3deb52 (dm verity: only copy bvec_iter in verity_verify_io if in_tasklet)
  			continue;
  		}
  
@@@ -500,7 -539,7 +520,11 @@@
  			 * If we expect a zero block, don't validate, just
  			 * return zeros.
  			 */
++<<<<<<< HEAD
 +			r = verity_for_bv_block(v, io, &io->iter,
++=======
+ 			r = verity_for_bv_block(v, io, iter,
++>>>>>>> e9307e3deb52 (dm verity: only copy bvec_iter in verity_verify_io if in_tasklet)
  						verity_bv_zero);
  			if (unlikely(r < 0))
  				return r;
@@@ -512,8 -551,11 +536,16 @@@
  		if (unlikely(r < 0))
  			return r;
  
++<<<<<<< HEAD
 +		start = io->iter;
 +		r = verity_for_io_block(v, io, &io->iter, &wait);
++=======
+ #if defined(CONFIG_DM_VERITY_FEC)
+ 		if (verity_fec_is_enabled(v))
+ 			start = *iter;
+ #endif
+ 		r = verity_for_io_block(v, io, iter, &wait);
++>>>>>>> e9307e3deb52 (dm verity: only copy bvec_iter in verity_verify_io if in_tasklet)
  		if (unlikely(r < 0))
  			return r;
  
* Unmerged path drivers/md/dm-verity-target.c
