RDMA/rxe: Limit the number of calls to each tasklet

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Bob Pearson <rpearsonhpe@gmail.com>
commit eff6d998ca297cb0b2e53b032a56cf8e04dd8b17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/eff6d998.failed

Limit the maximum number of calls to each tasklet from rxe_do_task()
before yielding the cpu. When the limit is reached reschedule the tasklet
and exit the calling loop. This patch prevents one tasklet from consuming
100% of a cpu core and causing a deadlock or soft lockup.

Link: https://lore.kernel.org/r/20220630190425.2251-9-rpearsonhpe@gmail.com
	Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit eff6d998ca297cb0b2e53b032a56cf8e04dd8b17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_task.c
diff --cc drivers/infiniband/sw/rxe/rxe_task.c
index bdc14583b530,2248cf33d776..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_task.c
+++ b/drivers/infiniband/sw/rxe/rxe_task.c
@@@ -32,7 -32,8 +32,12 @@@ void rxe_do_task(unsigned long data
  {
  	int cont;
  	int ret;
++<<<<<<< HEAD
 +	struct rxe_task *task = (struct rxe_task *)data;
++=======
+ 	struct rxe_task *task = from_tasklet(task, t, tasklet);
+ 	unsigned int iterations = RXE_MAX_ITERATIONS;
++>>>>>>> eff6d998ca29 (RDMA/rxe: Limit the number of calls to each tasklet)
  
  	spin_lock_bh(&task->state_lock);
  	switch (task->state) {
diff --git a/drivers/infiniband/sw/rxe/rxe_param.h b/drivers/infiniband/sw/rxe/rxe_param.h
index 07cdde3faedc..f4e808c10e84 100644
--- a/drivers/infiniband/sw/rxe/rxe_param.h
+++ b/drivers/infiniband/sw/rxe/rxe_param.h
@@ -106,6 +106,12 @@ enum rxe_device_param {
 	RXE_INFLIGHT_SKBS_PER_QP_HIGH	= 64,
 	RXE_INFLIGHT_SKBS_PER_QP_LOW	= 16,
 
+	/* Max number of interations of each tasklet
+	 * before yielding the cpu to let other
+	 * work make progress
+	 */
+	RXE_MAX_ITERATIONS		= 1024,
+
 	/* Delay before calling arbiter timer */
 	RXE_NSEC_ARB_TIMER_DELAY	= 200,
 
* Unmerged path drivers/infiniband/sw/rxe/rxe_task.c
