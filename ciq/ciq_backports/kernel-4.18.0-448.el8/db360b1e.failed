PCI: Move jailhouse's isolated function handling to pci_scan_slot()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit db360b1ea7faef290471bc1b2a7463b96fd20a07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/db360b1e.failed

The special case of the jailhouse hypervisor passing through individual PCI
functions handles scanning for PCI functions even if function 0 does not
exist. Previously this was done with an extra loop duplicating the one in
pci_scan_slot(). By incorporating the check for jailhouse_paravirt() into
pci_scan_slot() we can instead do this as part of the normal slot scan.
Note that with the assignment of dev->multifunction gated by fn > 0 we set
dev->multifunction unconditionally for all functions if function 0 is
missing just as in the existing jailhouse loop.

The only functional change is that we now call pcie_aspm_init_link_state()
for these functions, but this already happened if function 0 was passed
through and should not be a problem.

Link: https://lore.kernel.org/linux-pci/20220408224514.GA353445@bhelgaas/
	Suggested-by: Bjorn Helgaas <bhelgaas@google.com>
Link: https://lore.kernel.org/r/20220628143100.3228092-4-schnelle@linux.ibm.com
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
	Reviewed-by: Pierre Morel <pmorel@linux.ibm.com>
	Cc: Jan Kiszka <jan.kiszka@siemens.com>
(cherry picked from commit db360b1ea7faef290471bc1b2a7463b96fd20a07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/probe.c
diff --cc drivers/pci/probe.c
index 29fcfa96d49b,1f91ed67b5c5..000000000000
--- a/drivers/pci/probe.c
+++ b/drivers/pci/probe.c
@@@ -2599,9 -2660,19 +2599,22 @@@ int pci_scan_slot(struct pci_bus *bus, 
  		if (dev) {
  			if (!pci_dev_is_added(dev))
  				nr++;
++<<<<<<< HEAD
 +			dev->multifunction = 1;
++=======
+ 			if (fn > 0)
+ 				dev->multifunction = 1;
+ 		} else if (fn == 0) {
+ 			/*
+ 			 * Function 0 is required unless we are running on
+ 			 * a hypervisor that passes through individual PCI
+ 			 * functions.
+ 			 */
+ 			if (!jailhouse_paravirt())
+ 				break;
++>>>>>>> db360b1ea7fa (PCI: Move jailhouse's isolated function handling to pci_scan_slot())
  		}
 -		fn = next_fn(bus, dev, fn);
 -	} while (fn >= 0);
 +	}
  
  	/* Only one slot has PCIe device */
  	if (bus->self && nr)
* Unmerged path drivers/pci/probe.c
