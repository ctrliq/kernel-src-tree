selftests: mptcp: add fullmesh testcases

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Geliang Tang <geliangtang@xiaomi.com>
commit 4f49d63352da98aba910d0181effddf6262e5c76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/4f49d633.failed

This patch added the testcases for the fullmesh address flag of the path
manager.

Co-developed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Signed-off-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Signed-off-by: Geliang Tang <geliangtang@xiaomi.com>
	Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4f49d63352da98aba910d0181effddf6262e5c76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/mptcp/mptcp_join.sh
diff --cc tools/testing/selftests/net/mptcp/mptcp_join.sh
index e683ba817a00,b8311f325fac..000000000000
--- a/tools/testing/selftests/net/mptcp/mptcp_join.sh
+++ b/tools/testing/selftests/net/mptcp/mptcp_join.sh
@@@ -1531,6 -1604,143 +1537,146 @@@ syncookies_tests(
  	chk_add_nr 1 1
  }
  
++<<<<<<< HEAD
++=======
+ checksum_tests()
+ {
+ 	# checksum test 0 0
+ 	reset_with_checksum 0 0
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 0 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 0 1
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_csum_nr "checksum test 0 0"
+ 
+ 	# checksum test 1 1
+ 	reset_with_checksum 1 1
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 0 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 0 1
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_csum_nr "checksum test 1 1"
+ 
+ 	# checksum test 0 1
+ 	reset_with_checksum 0 1
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 0 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 0 1
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_csum_nr "checksum test 0 1"
+ 
+ 	# checksum test 1 0
+ 	reset_with_checksum 1 0
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 0 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 0 1
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_csum_nr "checksum test 1 0"
+ }
+ 
+ deny_join_id0_tests()
+ {
+ 	# subflow allow join id0 ns1
+ 	reset_with_allow_join_id0 1 0
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags subflow
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "single subflow allow join id0 ns1" 1 1 1
+ 
+ 	# subflow allow join id0 ns2
+ 	reset_with_allow_join_id0 0 1
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags subflow
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "single subflow allow join id0 ns2" 0 0 0
+ 
+ 	# signal address allow join id0 ns1
+ 	# ADD_ADDRs are not affected by allow_join_id0 value.
+ 	reset_with_allow_join_id0 1 0
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "signal address allow join id0 ns1" 1 1 1
+ 	chk_add_nr 1 1
+ 
+ 	# signal address allow join id0 ns2
+ 	# ADD_ADDRs are not affected by allow_join_id0 value.
+ 	reset_with_allow_join_id0 0 1
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 1
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "signal address allow join id0 ns2" 1 1 1
+ 	chk_add_nr 1 1
+ 
+ 	# subflow and address allow join id0 ns1
+ 	reset_with_allow_join_id0 1 0
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 2 2
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 2 2
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags subflow
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "subflow and address allow join id0 1" 2 2 2
+ 
+ 	# subflow and address allow join id0 ns2
+ 	reset_with_allow_join_id0 0 1
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 2 2
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 2 2
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags subflow
+ 	run_tests $ns1 $ns2 10.0.1.1
+ 	chk_join_nr "subflow and address allow join id0 2" 1 1 1
+ }
+ 
+ fullmesh_tests()
+ {
+ 	# fullmesh 1
+ 	# 2 fullmesh addrs in ns2, added before the connection,
+ 	# 1 non-fullmesh addr in ns1, added during the connection.
+ 	reset
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 0 4
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 4
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.2.2 flags subflow,fullmesh
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags subflow,fullmesh
+ 	run_tests $ns1 $ns2 10.0.1.1 0 1 0 slow
+ 	chk_join_nr "fullmesh test 2x1" 4 4 4
+ 	chk_add_nr 1 1
+ 
+ 	# fullmesh 2
+ 	# 1 non-fullmesh addr in ns1, added before the connection,
+ 	# 1 fullmesh addr in ns2, added during the connection.
+ 	reset
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 1 3
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 3
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	run_tests $ns1 $ns2 10.0.1.1 0 0 fullmesh_1 slow
+ 	chk_join_nr "fullmesh test 1x1" 3 3 3
+ 	chk_add_nr 1 1
+ 
+ 	# fullmesh 3
+ 	# 1 non-fullmesh addr in ns1, added before the connection,
+ 	# 2 fullmesh addrs in ns2, added during the connection.
+ 	reset
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 2 5
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 5
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	run_tests $ns1 $ns2 10.0.1.1 0 0 fullmesh_2 slow
+ 	chk_join_nr "fullmesh test 1x2" 5 5 5
+ 	chk_add_nr 1 1
+ 
+ 	# fullmesh 4
+ 	# 1 non-fullmesh addr in ns1, added before the connection,
+ 	# 2 fullmesh addrs in ns2, added during the connection,
+ 	# limit max_subflows to 4.
+ 	reset
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 2 4
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 1 4
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	run_tests $ns1 $ns2 10.0.1.1 0 0 fullmesh_2 slow
+ 	chk_join_nr "fullmesh test 1x2, limited" 4 4 4
+ 	chk_add_nr 1 1
+ }
+ 
++>>>>>>> 4f49d63352da (selftests: mptcp: add fullmesh testcases)
  all_tests()
  {
  	subflows_tests
@@@ -1544,6 -1754,9 +1690,12 @@@
  	backup_tests
  	add_addr_ports_tests
  	syncookies_tests
++<<<<<<< HEAD
++=======
+ 	checksum_tests
+ 	deny_join_id0_tests
+ 	fullmesh_tests
++>>>>>>> 4f49d63352da (selftests: mptcp: add fullmesh testcases)
  }
  
  usage()
@@@ -1560,7 -1773,11 +1712,13 @@@
  	echo "  -b backup_tests"
  	echo "  -p add_addr_ports_tests"
  	echo "  -k syncookies_tests"
++<<<<<<< HEAD
++=======
+ 	echo "  -S checksum_tests"
+ 	echo "  -d deny_join_id0_tests"
+ 	echo "  -m fullmesh_tests"
++>>>>>>> 4f49d63352da (selftests: mptcp: add fullmesh testcases)
  	echo "  -c capture pcap files"
 -	echo "  -C enable data checksum"
  	echo "  -h help"
  }
  
@@@ -1591,7 -1811,7 +1749,11 @@@ if [ $do_all_tests -eq 1 ]; the
  	exit $ret
  fi
  
++<<<<<<< HEAD
 +while getopts 'fsltra64bpkch' opt; do
++=======
+ while getopts 'fsltra64bpkdmchCS' opt; do
++>>>>>>> 4f49d63352da (selftests: mptcp: add fullmesh testcases)
  	case $opt in
  		f)
  			subflows_tests
@@@ -1626,8 -1846,19 +1788,20 @@@
  		k)
  			syncookies_tests
  			;;
++<<<<<<< HEAD
++=======
+ 		S)
+ 			checksum_tests
+ 			;;
+ 		d)
+ 			deny_join_id0_tests
+ 			;;
+ 		m)
+ 			fullmesh_tests
+ 			;;
++>>>>>>> 4f49d63352da (selftests: mptcp: add fullmesh testcases)
  		c)
  			;;
 -		C)
 -			;;
  		h | *)
  			usage
  			;;
* Unmerged path tools/testing/selftests/net/mptcp/mptcp_join.sh
