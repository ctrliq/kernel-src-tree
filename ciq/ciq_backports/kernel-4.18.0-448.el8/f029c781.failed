net: ethernet: move from strlcpy with unused retval to strscpy

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Wolfram Sang <wsa+renesas@sang-engineering.com>
commit f029c781dd6d8e2f13593c927c66db7e8826ed28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/f029c781.failed

Follow the advice of the below link and prefer 'strscpy' in this
subsystem. Conversion is 1:1 because the return value is not used.
Generated by a coccinelle script.

Link: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
	Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Reviewed-by: Petr Machata <petrm@nvidia.com> # For drivers/net/ethernet/mellanox/mlxsw
	Acked-by: Geoff Levand <geoff@infradead.org> # For ps3_gelic_net and spider_net_ethtool
	Acked-by: Tom Lendacky <thomas.lendacky@amd.com> # For drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
	Acked-by: Marcin Wojtas <mw@semihalf.com> # For drivers/net/ethernet/marvell/mvpp2
	Reviewed-by: Leon Romanovsky <leonro@nvidia.com> # For drivers/net/ethernet/mellanox/mlx{4|5}
	Reviewed-by: Shay Agroskin <shayagr@amazon.com> # For drivers/net/ethernet/amazon/ena
	Acked-by: Krzysztof Ha≈Çasa <khalasa@piap.pl> # For IXP4xx Ethernet
Link: https://lore.kernel.org/r/20220830201457.7984-3-wsa+renesas@sang-engineering.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit f029c781dd6d8e2f13593c927c66db7e8826ed28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/chelsio/chtls/chtls_main.c
#	drivers/net/ethernet/3com/3c509.c
#	drivers/net/ethernet/3com/3c515.c
#	drivers/net/ethernet/3com/3c589_cs.c
#	drivers/net/ethernet/3com/typhoon.c
#	drivers/net/ethernet/adaptec/starfire.c
#	drivers/net/ethernet/aeroflex/greth.c
#	drivers/net/ethernet/agere/et131x.c
#	drivers/net/ethernet/alacritech/slicoss.c
#	drivers/net/ethernet/allwinner/sun4i-emac.c
#	drivers/net/ethernet/alteon/acenic.c
#	drivers/net/ethernet/amd/amd8111e.c
#	drivers/net/ethernet/amd/au1000_eth.c
#	drivers/net/ethernet/amd/nmclan_cs.c
#	drivers/net/ethernet/amd/pcnet32.c
#	drivers/net/ethernet/amd/sunlance.c
#	drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
#	drivers/net/ethernet/arc/emac_main.c
#	drivers/net/ethernet/atheros/ag71xx.c
#	drivers/net/ethernet/atheros/atl1c/atl1c_ethtool.c
#	drivers/net/ethernet/atheros/atl1e/atl1e_ethtool.c
#	drivers/net/ethernet/atheros/atlx/atl1.c
#	drivers/net/ethernet/atheros/atlx/atl2.c
#	drivers/net/ethernet/broadcom/bcm63xx_enet.c
#	drivers/net/ethernet/broadcom/bnx2x/bnx2x_ethtool.c
#	drivers/net/ethernet/brocade/bna/bnad_ethtool.c
#	drivers/net/ethernet/cavium/octeon/octeon_mgmt.c
#	drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
#	drivers/net/ethernet/cirrus/ep93xx_eth.c
#	drivers/net/ethernet/cisco/enic/enic_ethtool.c
#	drivers/net/ethernet/davicom/dm9000.c
#	drivers/net/ethernet/dec/tulip/de2104x.c
#	drivers/net/ethernet/dec/tulip/dmfe.c
#	drivers/net/ethernet/dec/tulip/tulip_core.c
#	drivers/net/ethernet/dec/tulip/uli526x.c
#	drivers/net/ethernet/dec/tulip/winbond-840.c
#	drivers/net/ethernet/dlink/dl2k.c
#	drivers/net/ethernet/dlink/sundance.c
#	drivers/net/ethernet/dnet.c
#	drivers/net/ethernet/emulex/benet/be_ethtool.c
#	drivers/net/ethernet/faraday/ftgmac100.c
#	drivers/net/ethernet/faraday/ftmac100.c
#	drivers/net/ethernet/fealnx.c
#	drivers/net/ethernet/freescale/dpaa/dpaa_ethtool.c
#	drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c
#	drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
#	drivers/net/ethernet/freescale/fec_main.c
#	drivers/net/ethernet/freescale/fec_ptp.c
#	drivers/net/ethernet/freescale/fs_enet/fs_enet-main.c
#	drivers/net/ethernet/freescale/gianfar_ethtool.c
#	drivers/net/ethernet/freescale/ucc_geth_ethtool.c
#	drivers/net/ethernet/intel/e100.c
#	drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
#	drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
#	drivers/net/ethernet/marvell/prestera/prestera_ethtool.c
#	drivers/net/ethernet/mediatek/mtk_star_emac.c
#	drivers/net/ethernet/microchip/lan743x_ethtool.c
#	drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
#	drivers/net/ethernet/ni/nixge.c
#	drivers/net/ethernet/qlogic/qede/qede_main.c
#	drivers/net/ethernet/sfc/siena/efx.c
#	drivers/net/ethernet/sfc/siena/efx_common.c
#	drivers/net/ethernet/sfc/siena/ethtool_common.c
#	drivers/net/ethernet/sfc/siena/mcdi_mon.c
#	drivers/net/ethernet/sfc/siena/nic.c
#	drivers/net/ethernet/sgi/ioc3-eth.c
#	drivers/net/ethernet/ti/am65-cpsw-ethtool.c
#	drivers/net/ethernet/ti/cpsw_new.c
#	drivers/net/ethernet/via/via-rhine.c
#	drivers/net/ethernet/xilinx/xilinx_emaclite.c
diff --cc drivers/crypto/chelsio/chtls/chtls_main.c
index f63294c8a97a,1e55b12fee51..000000000000
--- a/drivers/crypto/chelsio/chtls/chtls_main.c
+++ b/drivers/crypto/chelsio/chtls/chtls_main.c
@@@ -160,13 -158,44 +160,17 @@@ static void chtls_destroy_hash(struct t
  		chtls_stop_listen(cdev, sk);
  }
  
 -static void chtls_free_uld(struct chtls_dev *cdev)
 -{
 -	int i;
 -
 -	tls_toe_unregister_device(&cdev->tlsdev);
 -	kvfree(cdev->kmap.addr);
 -	idr_destroy(&cdev->hwtid_idr);
 -	for (i = 0; i < (1 << RSPQ_HASH_BITS); i++)
 -		kfree_skb(cdev->rspq_skb_cache[i]);
 -	kfree(cdev->lldi);
 -	kfree_skb(cdev->askb);
 -	kfree(cdev);
 -}
 -
 -static inline void chtls_dev_release(struct kref *kref)
 -{
 -	struct tls_toe_device *dev;
 -	struct chtls_dev *cdev;
 -	struct adapter *adap;
 -
 -	dev = container_of(kref, struct tls_toe_device, kref);
 -	cdev = to_chtls_dev(dev);
 -
 -	/* Reset tls rx/tx stats */
 -	adap = pci_get_drvdata(cdev->pdev);
 -	atomic_set(&adap->chcr_stats.tls_pdu_tx, 0);
 -	atomic_set(&adap->chcr_stats.tls_pdu_rx, 0);
 -
 -	chtls_free_uld(cdev);
 -}
 -
  static void chtls_register_dev(struct chtls_dev *cdev)
  {
 -	struct tls_toe_device *tlsdev = &cdev->tlsdev;
 +	struct tls_device *tlsdev = &cdev->tlsdev;
  
++<<<<<<< HEAD:drivers/crypto/chelsio/chtls/chtls_main.c
 +	strlcpy(tlsdev->name, "chtls", TLS_DEVICE_NAME_MAX);
++=======
+ 	strscpy(tlsdev->name, "chtls", TLS_TOE_DEVICE_NAME_MAX);
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy):drivers/net/ethernet/chelsio/inline_crypto/chtls/chtls_main.c
  	strlcat(tlsdev->name, cdev->lldi->ports[0]->name,
 -		TLS_TOE_DEVICE_NAME_MAX);
 +		TLS_DEVICE_NAME_MAX);
  	tlsdev->feature = chtls_inline_feature;
  	tlsdev->hash = chtls_create_hash;
  	tlsdev->unhash = chtls_destroy_hash;
diff --cc drivers/net/ethernet/3com/3c509.c
index 2563e54fc58d,fb68339e1511..000000000000
--- a/drivers/net/ethernet/3com/3c509.c
+++ b/drivers/net/ethernet/3com/3c509.c
@@@ -1142,8 -1135,7 +1142,12 @@@ el3_netdev_set_ecmd(struct net_device *
  
  static void el3_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int el3_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/3com/3c515.c
index 2653631810b3,d2f4358cc550..000000000000
--- a/drivers/net/ethernet/3com/3c515.c
+++ b/drivers/net/ethernet/3com/3c515.c
@@@ -1539,8 -1527,7 +1539,12 @@@ static void set_rx_mode(struct net_devi
  static void netdev_get_drvinfo(struct net_device *dev,
  			       struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	snprintf(info->bus_info, sizeof(info->bus_info), "ISA 0x%lx",
  		 dev->base_addr);
  }
diff --cc drivers/net/ethernet/3com/3c589_cs.c
index d47cde6c5f08,82f94b1635bf..000000000000
--- a/drivers/net/ethernet/3com/3c589_cs.c
+++ b/drivers/net/ethernet/3com/3c589_cs.c
@@@ -481,8 -480,7 +481,12 @@@ static void tc589_reset(struct net_devi
  static void netdev_get_drvinfo(struct net_device *dev,
  			       struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	snprintf(info->bus_info, sizeof(info->bus_info),
  		"PCMCIA 0x%lx", dev->base_addr);
  }
diff --cc drivers/net/ethernet/3com/typhoon.c
index 1d43c1d7ab9a,aaaff3ba43ef..000000000000
--- a/drivers/net/ethernet/3com/typhoon.c
+++ b/drivers/net/ethernet/3com/typhoon.c
@@@ -974,13 -968,13 +974,23 @@@ typhoon_get_drvinfo(struct net_device *
  	struct resp_desc xp_resp[3];
  
  	smp_rmb();
++<<<<<<< HEAD
 +	if(tp->card_state == Sleeping) {
 +		strlcpy(info->fw_version, "Sleep image",
 +			sizeof(info->fw_version));
 +	} else {
 +		INIT_COMMAND_WITH_RESPONSE(&xp_cmd, TYPHOON_CMD_READ_VERSIONS);
 +		if(typhoon_issue_command(tp, 1, &xp_cmd, 3, xp_resp) < 0) {
 +			strlcpy(info->fw_version, "Unknown runtime",
++=======
+ 	if (tp->card_state == Sleeping) {
+ 		strscpy(info->fw_version, "Sleep image",
+ 			sizeof(info->fw_version));
+ 	} else {
+ 		INIT_COMMAND_WITH_RESPONSE(&xp_cmd, TYPHOON_CMD_READ_VERSIONS);
+ 		if (typhoon_issue_command(tp, 1, &xp_cmd, 3, xp_resp) < 0) {
+ 			strscpy(info->fw_version, "Unknown runtime",
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  				sizeof(info->fw_version));
  		} else {
  			u32 sleep_ver = le32_to_cpu(xp_resp[0].parm2);
diff --cc drivers/net/ethernet/adaptec/starfire.c
index 265400c7061b,857361c74f5d..000000000000
--- a/drivers/net/ethernet/adaptec/starfire.c
+++ b/drivers/net/ethernet/adaptec/starfire.c
@@@ -1852,9 -1844,8 +1852,14 @@@ static int check_if_running(struct net_
  static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
  	struct netdev_private *np = netdev_priv(dev);
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/aeroflex/greth.c
index 916c5903ac79,9c4fe25aca6c..000000000000
--- a/drivers/net/ethernet/aeroflex/greth.c
+++ b/drivers/net/ethernet/aeroflex/greth.c
@@@ -1116,11 -1112,9 +1116,15 @@@ static void greth_get_drvinfo(struct ne
  {
  	struct greth_private *greth = netdev_priv(dev);
  
- 	strlcpy(info->driver, dev_driver_string(greth->dev),
+ 	strscpy(info->driver, dev_driver_string(greth->dev),
  		sizeof(info->driver));
++<<<<<<< HEAD
 +	strlcpy(info->version, "revision: 1.0", sizeof(info->version));
 +	strlcpy(info->bus_info, greth->dev->bus->name, sizeof(info->bus_info));
 +	strlcpy(info->fw_version, "N/A", sizeof(info->fw_version));
++=======
+ 	strscpy(info->bus_info, greth->dev->bus->name, sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static void greth_get_regs(struct net_device *dev, struct ethtool_regs *regs, void *p)
diff --cc drivers/net/ethernet/agere/et131x.c
index 5dd5d1e3449f,28334b1e3d6b..000000000000
--- a/drivers/net/ethernet/agere/et131x.c
+++ b/drivers/net/ethernet/agere/et131x.c
@@@ -2957,9 -2952,8 +2957,14 @@@ static void et131x_get_drvinfo(struct n
  {
  	struct et131x_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRIVER_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRIVER_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(info->driver, DRIVER_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(info->bus_info));
  }
  
diff --cc drivers/net/ethernet/alacritech/slicoss.c
index bae468be5d7d,4cea61f16be3..000000000000
--- a/drivers/net/ethernet/alacritech/slicoss.c
+++ b/drivers/net/ethernet/alacritech/slicoss.c
@@@ -1541,9 -1531,8 +1541,14 @@@ static void slic_get_drvinfo(struct net
  {
  	struct slic_device *sdev = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(sdev->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(sdev->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static const struct ethtool_ops slic_ethtool_ops = {
diff --cc drivers/net/ethernet/allwinner/sun4i-emac.c
index d7cbae25e9e1,a94c62956eed..000000000000
--- a/drivers/net/ethernet/allwinner/sun4i-emac.c
+++ b/drivers/net/ethernet/allwinner/sun4i-emac.c
@@@ -224,9 -331,8 +224,14 @@@ static int emac_ioctl(struct net_devic
  static void emac_get_drvinfo(struct net_device *dev,
  			      struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(DRV_NAME));
 +	strlcpy(info->version, DRV_VERSION, sizeof(DRV_VERSION));
 +	strlcpy(info->bus_info, dev_name(&dev->dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, dev_name(&dev->dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static u32 emac_get_msglevel(struct net_device *dev)
diff --cc drivers/net/ethernet/alteon/acenic.c
index 30e03970eb4f,d7762da8b2c0..000000000000
--- a/drivers/net/ethernet/alteon/acenic.c
+++ b/drivers/net/ethernet/alteon/acenic.c
@@@ -2704,13 -2691,12 +2704,19 @@@ static void ace_get_drvinfo(struct net_
  {
  	struct ace_private *ap = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, "acenic", sizeof(info->driver));
 +	snprintf(info->version, sizeof(info->version), "%i.%i.%i",
 +		 ap->firmware_major, ap->firmware_minor,
 +		 ap->firmware_fix);
++=======
+ 	strscpy(info->driver, "acenic", sizeof(info->driver));
+ 	snprintf(info->fw_version, sizeof(info->version), "%i.%i.%i",
+ 		 ap->firmware_major, ap->firmware_minor, ap->firmware_fix);
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  
  	if (ap->pdev)
- 		strlcpy(info->bus_info, pci_name(ap->pdev),
+ 		strscpy(info->bus_info, pci_name(ap->pdev),
  			sizeof(info->bus_info));
  
  }
diff --cc drivers/net/ethernet/amd/amd8111e.c
index 28a8629efeed,fb6a5f64d221..000000000000
--- a/drivers/net/ethernet/amd/amd8111e.c
+++ b/drivers/net/ethernet/amd/amd8111e.c
@@@ -1378,11 -1364,10 +1378,15 @@@ static void amd8111e_get_drvinfo(struc
  {
  	struct amd8111e_priv *lp = netdev_priv(dev);
  	struct pci_dev *pci_dev = lp->pci_dev;
++<<<<<<< HEAD
 +	strlcpy(info->driver, MODULE_NAME, sizeof(info->driver));
 +	strlcpy(info->version, MODULE_VERS, sizeof(info->version));
++=======
+ 	strscpy(info->driver, MODULE_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	snprintf(info->fw_version, sizeof(info->fw_version),
  		"%u", chip_version);
- 	strlcpy(info->bus_info, pci_name(pci_dev), sizeof(info->bus_info));
+ 	strscpy(info->bus_info, pci_name(pci_dev), sizeof(info->bus_info));
  }
  
  static int amd8111e_get_regs_len(struct net_device *dev)
diff --cc drivers/net/ethernet/amd/au1000_eth.c
index eabdf8eeeb9e,81d5af00d30d..000000000000
--- a/drivers/net/ethernet/amd/au1000_eth.c
+++ b/drivers/net/ethernet/amd/au1000_eth.c
@@@ -672,8 -650,7 +672,12 @@@ au1000_get_drvinfo(struct net_device *d
  {
  	struct au1000_private *aup = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	snprintf(info->bus_info, sizeof(info->bus_info), "%s %d", DRV_NAME,
  		 aup->mac_id);
  }
diff --cc drivers/net/ethernet/amd/nmclan_cs.c
index 023aecf6ab30,df8874bd619a..000000000000
--- a/drivers/net/ethernet/amd/nmclan_cs.c
+++ b/drivers/net/ethernet/amd/nmclan_cs.c
@@@ -816,8 -815,7 +816,12 @@@ static int mace_close(struct net_devic
  static void netdev_get_drvinfo(struct net_device *dev,
  			       struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	snprintf(info->bus_info, sizeof(info->bus_info),
  		"PCMCIA 0x%lx", dev->base_addr);
  }
diff --cc drivers/net/ethernet/amd/pcnet32.c
index 555ce8df6a1e,c9138175ec07..000000000000
--- a/drivers/net/ethernet/amd/pcnet32.c
+++ b/drivers/net/ethernet/amd/pcnet32.c
@@@ -808,10 -797,9 +808,14 @@@ static void pcnet32_get_drvinfo(struct 
  {
  	struct pcnet32_private *lp = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	if (lp->pci_dev)
- 		strlcpy(info->bus_info, pci_name(lp->pci_dev),
+ 		strscpy(info->bus_info, pci_name(lp->pci_dev),
  			sizeof(info->bus_info));
  	else
  		snprintf(info->bus_info, sizeof(info->bus_info),
diff --cc drivers/net/ethernet/amd/sunlance.c
index f6297146f114,4ed2ebbf9ff7..000000000000
--- a/drivers/net/ethernet/amd/sunlance.c
+++ b/drivers/net/ethernet/amd/sunlance.c
@@@ -1280,8 -1276,7 +1280,12 @@@ static void lance_free_hwresources(stru
  /* Ethtool support... */
  static void sparc_lance_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, "sunlance", sizeof(info->driver));
 +	strlcpy(info->version, "2.02", sizeof(info->version));
++=======
+ 	strscpy(info->driver, "sunlance", sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static const struct ethtool_ops sparc_lance_ethtool_ops = {
diff --cc drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
index 847d991c46db,6e83ff59172a..000000000000
--- a/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
+++ b/drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
@@@ -404,9 -402,8 +404,14 @@@ static void xgbe_get_drvinfo(struct net
  	struct xgbe_prv_data *pdata = netdev_priv(netdev);
  	struct xgbe_hw_features *hw_feat = &pdata->hw_feat;
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, XGBE_DRV_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, XGBE_DRV_VERSION, sizeof(drvinfo->version));
 +	strlcpy(drvinfo->bus_info, dev_name(pdata->dev),
++=======
+ 	strscpy(drvinfo->driver, XGBE_DRV_NAME, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, dev_name(pdata->dev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version), "%d.%d.%d",
  		 XGMAC_GET_BITS(hw_feat->version, MAC_VR, USERVER),
diff --cc drivers/net/ethernet/arc/emac_main.c
index 7e94b28aef7b,ba0646b3b122..000000000000
--- a/drivers/net/ethernet/arc/emac_main.c
+++ b/drivers/net/ethernet/arc/emac_main.c
@@@ -94,8 -91,7 +94,12 @@@ static void arc_emac_get_drvinfo(struc
  {
  	struct arc_emac_priv *priv = netdev_priv(ndev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, priv->drv_name, sizeof(info->driver));
 +	strlcpy(info->version, priv->drv_version, sizeof(info->version));
++=======
+ 	strscpy(info->driver, priv->drv_name, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static const struct ethtool_ops arc_emac_ethtool_ops = {
diff --cc drivers/net/ethernet/atheros/atl1c/atl1c_ethtool.c
index 28e9ae1a193b,0bce122c68f1..000000000000
--- a/drivers/net/ethernet/atheros/atl1c/atl1c_ethtool.c
+++ b/drivers/net/ethernet/atheros/atl1c/atl1c_ethtool.c
@@@ -234,10 -220,8 +234,15 @@@ static void atl1c_get_drvinfo(struct ne
  {
  	struct atl1c_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver,  atl1c_driver_name, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, atl1c_driver_version,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(drvinfo->driver,  atl1c_driver_name, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/atheros/atl1e/atl1e_ethtool.c
index 282ebdde4769,68f1832a198d..000000000000
--- a/drivers/net/ethernet/atheros/atl1e/atl1e_ethtool.c
+++ b/drivers/net/ethernet/atheros/atl1e/atl1e_ethtool.c
@@@ -320,11 -306,9 +320,17 @@@ static void atl1e_get_drvinfo(struct ne
  {
  	struct atl1e_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver,  atl1e_driver_name, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, atl1e_driver_version,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->fw_version, "L1e", sizeof(drvinfo->fw_version));
 +	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(drvinfo->driver,  atl1e_driver_name, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->fw_version, "L1e", sizeof(drvinfo->fw_version));
+ 	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/atheros/atlx/atl1.c
index 281dd64a16c1,7fcfba370fc3..000000000000
--- a/drivers/net/ethernet/atheros/atlx/atl1.c
+++ b/drivers/net/ethernet/atheros/atlx/atl1.c
@@@ -3384,10 -3340,8 +3384,15 @@@ static void atl1_get_drvinfo(struct net
  {
  	struct atl1_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, ATLX_DRIVER_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, ATLX_DRIVER_VERSION,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(drvinfo->driver, ATLX_DRIVER_NAME, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/atheros/atlx/atl2.c
index 884cc7572720,1b487c071cb6..000000000000
--- a/drivers/net/ethernet/atheros/atlx/atl2.c
+++ b/drivers/net/ethernet/atheros/atlx/atl2.c
@@@ -2026,11 -1980,9 +2026,17 @@@ static void atl2_get_drvinfo(struct net
  {
  	struct atl2_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver,  atl2_driver_name, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, atl2_driver_version,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->fw_version, "L2", sizeof(drvinfo->fw_version));
 +	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(drvinfo->driver,  atl2_driver_name, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->fw_version, "L2", sizeof(drvinfo->fw_version));
+ 	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/broadcom/bcm63xx_enet.c
index b8f8bf9794da,d91fdb0c2649..000000000000
--- a/drivers/net/ethernet/broadcom/bcm63xx_enet.c
+++ b/drivers/net/ethernet/broadcom/bcm63xx_enet.c
@@@ -1314,9 -1321,8 +1314,14 @@@ static const u32 unused_mib_regs[] = 
  static void bcm_enet_get_drvinfo(struct net_device *netdev,
  				 struct ethtool_drvinfo *drvinfo)
  {
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, bcm_enet_driver_name, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
 +	strlcpy(drvinfo->bus_info, "bcm63xx", sizeof(drvinfo->bus_info));
++=======
+ 	strscpy(drvinfo->driver, bcm_enet_driver_name, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, "bcm63xx", sizeof(drvinfo->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int bcm_enet_get_sset_count(struct net_device *netdev,
diff --cc drivers/net/ethernet/broadcom/bnx2x/bnx2x_ethtool.c
index ebbef6b43509,bda3ccc28eca..000000000000
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_ethtool.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_ethtool.c
@@@ -1111,14 -1112,7 +1111,18 @@@ static void bnx2x_get_drvinfo(struct ne
  	int ext_dev_info_offset;
  	u32 mbi;
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
 +
 +	memset(version, 0, sizeof(version));
 +	snprintf(version, ETHTOOL_FWVERS_LEN, " storm %d.%d.%d.%d",
 +		 BCM_5710_FW_MAJOR_VERSION, BCM_5710_FW_MINOR_VERSION,
 +		 BCM_5710_FW_REVISION_VERSION, BCM_5710_FW_ENGINEERING_VERSION);
 +	strlcat(info->version, version, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  
  	if (SHMEM2_HAS(bp, extended_dev_info_shared_addr)) {
  		ext_dev_info_offset = SHMEM2_RD(bp,
diff --cc drivers/net/ethernet/brocade/bna/bnad_ethtool.c
index 3b282d729789,5d2c68ee1ea9..000000000000
--- a/drivers/net/ethernet/brocade/bna/bnad_ethtool.c
+++ b/drivers/net/ethernet/brocade/bna/bnad_ethtool.c
@@@ -291,8 -283,7 +291,12 @@@ bnad_get_drvinfo(struct net_device *net
  	struct bfa_ioc_attr *ioc_attr;
  	unsigned long flags;
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, BNAD_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, BNAD_VERSION, sizeof(drvinfo->version));
++=======
+ 	strscpy(drvinfo->driver, BNAD_NAME, sizeof(drvinfo->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  
  	ioc_attr = kzalloc(sizeof(*ioc_attr), GFP_KERNEL);
  	if (ioc_attr) {
diff --cc drivers/net/ethernet/cavium/octeon/octeon_mgmt.c
index 580965378e24,369bfd376d6f..000000000000
--- a/drivers/net/ethernet/cavium/octeon/octeon_mgmt.c
+++ b/drivers/net/ethernet/cavium/octeon/octeon_mgmt.c
@@@ -1337,10 -1342,7 +1337,14 @@@ static void octeon_mgmt_poll_controller
  static void octeon_mgmt_get_drvinfo(struct net_device *netdev,
  				    struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->fw_version, "N/A", sizeof(info->fw_version));
 +	strlcpy(info->bus_info, "N/A", sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int octeon_mgmt_nway_reset(struct net_device *dev)
diff --cc drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
index 7cc4aeb22a4d,e5c71f907852..000000000000
--- a/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
@@@ -194,9 -191,8 +194,14 @@@ static void nicvf_get_drvinfo(struct ne
  {
  	struct nicvf *nic = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(nic->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(nic->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static u32 nicvf_get_msglevel(struct net_device *netdev)
diff --cc drivers/net/ethernet/cirrus/ep93xx_eth.c
index e2a702996db4,888506185326..000000000000
--- a/drivers/net/ethernet/cirrus/ep93xx_eth.c
+++ b/drivers/net/ethernet/cirrus/ep93xx_eth.c
@@@ -694,8 -689,7 +694,12 @@@ static int ep93xx_ioctl(struct net_devi
  
  static void ep93xx_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int ep93xx_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/cisco/enic/enic_ethtool.c
index d795c9a51754,08b7cc0a1809..000000000000
--- a/drivers/net/ethernet/cisco/enic/enic_ethtool.c
+++ b/drivers/net/ethernet/cisco/enic/enic_ethtool.c
@@@ -146,11 -131,10 +146,16 @@@ static void enic_get_drvinfo(struct net
  	if (err == -ENOMEM)
  		return;
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
 +	strlcpy(drvinfo->fw_version, fw_info->fw_version,
++=======
+ 	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->fw_version, fw_info->fw_version,
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->fw_version));
- 	strlcpy(drvinfo->bus_info, pci_name(enic->pdev),
+ 	strscpy(drvinfo->bus_info, pci_name(enic->pdev),
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/davicom/dm9000.c
index 269a44d6a243,77229e53b04e..000000000000
--- a/drivers/net/ethernet/davicom/dm9000.c
+++ b/drivers/net/ethernet/davicom/dm9000.c
@@@ -550,9 -540,8 +550,14 @@@ static void dm9000_get_drvinfo(struct n
  {
  	struct board_info *dm = to_dm9000_board(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, CARDNAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, to_platform_device(dm->dev)->name,
++=======
+ 	strscpy(info->driver, CARDNAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, to_platform_device(dm->dev)->name,
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(info->bus_info));
  }
  
diff --cc drivers/net/ethernet/dec/tulip/de2104x.c
index dda2ba735a7e,cd3dc4b89518..000000000000
--- a/drivers/net/ethernet/dec/tulip/de2104x.c
+++ b/drivers/net/ethernet/dec/tulip/de2104x.c
@@@ -1599,9 -1606,8 +1599,14 @@@ static void de_get_drvinfo (struct net_
  {
  	struct de_private *de = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(de->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(de->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int de_get_regs_len(struct net_device *dev)
diff --cc drivers/net/ethernet/dec/tulip/dmfe.c
index 17ef7a28873d,3188ba7b450f..000000000000
--- a/drivers/net/ethernet/dec/tulip/dmfe.c
+++ b/drivers/net/ethernet/dec/tulip/dmfe.c
@@@ -1088,9 -1074,8 +1088,14 @@@ static void dmfe_ethtool_get_drvinfo(st
  {
  	struct dmfe_board_info *np = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int dmfe_ethtool_set_wol(struct net_device *dev,
diff --cc drivers/net/ethernet/dec/tulip/tulip_core.c
index 6dc60eec09ae,ecfad43df45a..000000000000
--- a/drivers/net/ethernet/dec/tulip/tulip_core.c
+++ b/drivers/net/ethernet/dec/tulip/tulip_core.c
@@@ -867,9 -858,8 +867,14 @@@ static struct net_device_stats *tulip_g
  static void tulip_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
  	struct tulip_private *np = netdev_priv(dev);
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  
diff --cc drivers/net/ethernet/dec/tulip/uli526x.c
index 488a744084c9,ff080ab0f116..000000000000
--- a/drivers/net/ethernet/dec/tulip/uli526x.c
+++ b/drivers/net/ethernet/dec/tulip/uli526x.c
@@@ -979,9 -971,8 +979,14 @@@ static void netdev_get_drvinfo(struct n
  {
  	struct uli526x_board_info *np = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int netdev_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/dec/tulip/winbond-840.c
index 7f136488e67c,37fba39c0056..000000000000
--- a/drivers/net/ethernet/dec/tulip/winbond-840.c
+++ b/drivers/net/ethernet/dec/tulip/winbond-840.c
@@@ -1384,9 -1374,8 +1384,14 @@@ static void netdev_get_drvinfo (struct 
  {
  	struct netdev_private *np = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int netdev_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/dlink/dl2k.c
index 384373fe9d8b,2c67a857a42f..000000000000
--- a/drivers/net/ethernet/dlink/dl2k.c
+++ b/drivers/net/ethernet/dlink/dl2k.c
@@@ -1248,9 -1235,8 +1248,14 @@@ static void rio_get_drvinfo(struct net_
  {
  	struct netdev_private *np = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, "dl2k", sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, "dl2k", sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int rio_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/dlink/sundance.c
index 3442bf79fc11,43def191f26f..000000000000
--- a/drivers/net/ethernet/dlink/sundance.c
+++ b/drivers/net/ethernet/dlink/sundance.c
@@@ -1657,9 -1644,8 +1657,14 @@@ static int check_if_running(struct net_
  static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
  {
  	struct netdev_private *np = netdev_priv(dev);
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/dnet.c
index 50e971b213e2,99e6f76f6cc0..000000000000
--- a/drivers/net/ethernet/dnet.c
+++ b/drivers/net/ethernet/dnet.c
@@@ -744,9 -725,8 +744,14 @@@ static int dnet_ioctl(struct net_devic
  static void dnet_get_drvinfo(struct net_device *dev,
  			     struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, "0", sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, "0", sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static const struct ethtool_ops dnet_ethtool_ops = {
diff --cc drivers/net/ethernet/emulex/benet/be_ethtool.c
index c2db9bd5882f,77edc3d9b505..000000000000
--- a/drivers/net/ethernet/emulex/benet/be_ethtool.c
+++ b/drivers/net/ethernet/emulex/benet/be_ethtool.c
@@@ -220,10 -220,9 +220,14 @@@ static void be_get_drvinfo(struct net_d
  {
  	struct be_adapter *adapter = netdev_priv(netdev);
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, DRV_VER, sizeof(drvinfo->version));
++=======
+ 	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	if (!memcmp(adapter->fw_ver, adapter->fw_on_flash, FW_VER_LEN))
- 		strlcpy(drvinfo->fw_version, adapter->fw_ver,
+ 		strscpy(drvinfo->fw_version, adapter->fw_ver,
  			sizeof(drvinfo->fw_version));
  	else
  		snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
diff --cc drivers/net/ethernet/faraday/ftgmac100.c
index 975ff2ac3daf,9277d5fb5052..000000000000
--- a/drivers/net/ethernet/faraday/ftgmac100.c
+++ b/drivers/net/ethernet/faraday/ftgmac100.c
@@@ -1161,9 -1063,8 +1161,14 @@@ static int ftgmac100_mdiobus_write(stru
  static void ftgmac100_get_drvinfo(struct net_device *netdev,
  				  struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, dev_name(&netdev->dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, dev_name(&netdev->dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static void
diff --cc drivers/net/ethernet/faraday/ftmac100.c
index aecc76504b69,bf6e664ffd43..000000000000
--- a/drivers/net/ethernet/faraday/ftmac100.c
+++ b/drivers/net/ethernet/faraday/ftmac100.c
@@@ -821,9 -807,8 +821,14 @@@ static void ftmac100_mdio_write(struct 
  static void ftmac100_get_drvinfo(struct net_device *netdev,
  				 struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, dev_name(&netdev->dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, dev_name(&netdev->dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int ftmac100_get_link_ksettings(struct net_device *netdev,
diff --cc drivers/net/ethernet/fealnx.c
index e3f92d38464f,ed18450fd2cc..000000000000
--- a/drivers/net/ethernet/fealnx.c
+++ b/drivers/net/ethernet/fealnx.c
@@@ -1808,9 -1809,8 +1808,14 @@@ static void netdev_get_drvinfo(struct n
  {
  	struct netdev_private *np = netdev_priv(dev);
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int netdev_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/freescale/dpaa/dpaa_ethtool.c
index cc8fe9532885,769e936a263c..000000000000
--- a/drivers/net/ethernet/freescale/dpaa/dpaa_ethtool.c
+++ b/drivers/net/ethernet/freescale/dpaa/dpaa_ethtool.c
@@@ -105,20 -80,9 +105,26 @@@ static int dpaa_set_link_ksettings(stru
  static void dpaa_get_drvinfo(struct net_device *net_dev,
  			     struct ethtool_drvinfo *drvinfo)
  {
++<<<<<<< HEAD
 +	int len;
 +
 +	strlcpy(drvinfo->driver, KBUILD_MODNAME,
 +		sizeof(drvinfo->driver));
 +	len = snprintf(drvinfo->version, sizeof(drvinfo->version),
 +		       "%X", 0);
 +	len = snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 +		       "%X", 0);
 +
 +	if (len >= sizeof(drvinfo->fw_version)) {
 +		/* Truncated output */
 +		netdev_notice(net_dev, "snprintf() = %d\n", len);
 +	}
 +	strlcpy(drvinfo->bus_info, dev_name(net_dev->dev.parent->parent),
++=======
+ 	strscpy(drvinfo->driver, KBUILD_MODNAME,
+ 		sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, dev_name(net_dev->dev.parent->parent),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/freescale/fec_main.c
index 3a1e60d8aef0,7211597d323d..000000000000
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@@ -2088,10 -2328,9 +2088,14 @@@ static void fec_enet_get_drvinfo(struc
  {
  	struct fec_enet_private *fep = netdev_priv(ndev);
  
- 	strlcpy(info->driver, fep->pdev->dev.driver->name,
+ 	strscpy(info->driver, fep->pdev->dev.driver->name,
  		sizeof(info->driver));
++<<<<<<< HEAD
 +	strlcpy(info->version, "Revision: 1.0", sizeof(info->version));
 +	strlcpy(info->bus_info, dev_name(&ndev->dev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->bus_info, dev_name(&ndev->dev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int fec_enet_get_regs_len(struct net_device *ndev)
diff --cc drivers/net/ethernet/freescale/fec_ptp.c
index 0ab50d5ee831,dc856eb1ce60..000000000000
--- a/drivers/net/ethernet/freescale/fec_ptp.c
+++ b/drivers/net/ethernet/freescale/fec_ptp.c
@@@ -575,7 -578,7 +575,11 @@@ void fec_ptp_init(struct platform_devic
  	int ret;
  
  	fep->ptp_caps.owner = THIS_MODULE;
++<<<<<<< HEAD
 +	snprintf(fep->ptp_caps.name, 16, "fec ptp");
++=======
+ 	strscpy(fep->ptp_caps.name, "fec ptp", sizeof(fep->ptp_caps.name));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  
  	fep->ptp_caps.max_adj = 250000000;
  	fep->ptp_caps.n_alarm = 0;
diff --cc drivers/net/ethernet/freescale/fs_enet/fs_enet-main.c
index 9583642db084,5b760436bb01..000000000000
--- a/drivers/net/ethernet/freescale/fs_enet/fs_enet-main.c
+++ b/drivers/net/ethernet/freescale/fs_enet/fs_enet-main.c
@@@ -788,8 -791,7 +788,12 @@@ static int fs_enet_close(struct net_dev
  static void fs_get_drvinfo(struct net_device *dev,
  			    struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
++=======
+ 	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int fs_get_regs_len(struct net_device *dev)
diff --cc drivers/net/ethernet/freescale/gianfar_ethtool.c
index eb22ebb17b5e,b2b0d3c26fcc..000000000000
--- a/drivers/net/ethernet/freescale/gianfar_ethtool.c
+++ b/drivers/net/ethernet/freescale/gianfar_ethtool.c
@@@ -179,11 -163,7 +179,15 @@@ static int gfar_sset_count(struct net_d
  static void gfar_gdrvinfo(struct net_device *dev,
  			  struct ethtool_drvinfo *drvinfo)
  {
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, gfar_driver_version,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
 +	strlcpy(drvinfo->bus_info, "N/A", sizeof(drvinfo->bus_info));
++=======
+ 	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  /* Return the length of the register structure */
diff --cc drivers/net/ethernet/freescale/ucc_geth_ethtool.c
index 3a0050f794e3,601beb93d3b3..000000000000
--- a/drivers/net/ethernet/freescale/ucc_geth_ethtool.c
+++ b/drivers/net/ethernet/freescale/ucc_geth_ethtool.c
@@@ -343,10 -337,8 +343,15 @@@ static voi
  uec_get_drvinfo(struct net_device *netdev,
                         struct ethtool_drvinfo *drvinfo)
  {
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
 +	strlcpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
 +	strlcpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
 +	strlcpy(drvinfo->bus_info, "QUICC ENGINE", sizeof(drvinfo->bus_info));
++=======
+ 	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
+ 	strscpy(drvinfo->bus_info, "QUICC ENGINE", sizeof(drvinfo->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  #ifdef CONFIG_PM
diff --cc drivers/net/ethernet/intel/e100.c
index 3e60254b2a1c,560d1d442232..000000000000
--- a/drivers/net/ethernet/intel/e100.c
+++ b/drivers/net/ethernet/intel/e100.c
@@@ -2426,9 -2431,8 +2426,14 @@@ static void e100_get_drvinfo(struct net
  	struct ethtool_drvinfo *info)
  {
  	struct nic *nic = netdev_priv(netdev);
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(nic->pdev),
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, pci_name(nic->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(info->bus_info));
  }
  
diff --cc drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
index 70d85f25dbda,efa980514944..000000000000
--- a/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
+++ b/drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
@@@ -456,11 -456,9 +456,15 @@@ ixgb_get_drvinfo(struct net_device *net
  {
  	struct ixgb_adapter *adapter = netdev_priv(netdev);
  
- 	strlcpy(drvinfo->driver,  ixgb_driver_name,
+ 	strscpy(drvinfo->driver,  ixgb_driver_name,
  		sizeof(drvinfo->driver));
++<<<<<<< HEAD
 +	strlcpy(drvinfo->version, ixgb_driver_version,
 +		sizeof(drvinfo->version));
 +	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
++=======
+ 	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  		sizeof(drvinfo->bus_info));
  }
  
diff --cc drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
index 6e7cf06b4b87,a015b0e889e8..000000000000
--- a/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
+++ b/drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
@@@ -202,7 -205,8 +202,12 @@@ nfp_get_drvinfo(struct nfp_app *app, st
  {
  	char nsp_version[ETHTOOL_FWVERS_LEN] = {};
  
++<<<<<<< HEAD
 +	strlcpy(drvinfo->driver, pdev->driver->name, sizeof(drvinfo->driver));
++=======
+ 	strscpy(drvinfo->driver, dev_driver_string(&pdev->dev),
+ 		sizeof(drvinfo->driver));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	nfp_net_get_nspinfo(app, nsp_version);
  	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
  		 "%s %s %s %s", vnic_version, nsp_version,
@@@ -216,9 -220,9 +221,9 @@@ nfp_net_get_drvinfo(struct net_device *
  	struct nfp_net *nn = netdev_priv(netdev);
  
  	snprintf(vnic_version, sizeof(vnic_version), "%d.%d.%d.%d",
 -		 nn->fw_ver.extend, nn->fw_ver.class,
 +		 nn->fw_ver.resv, nn->fw_ver.class,
  		 nn->fw_ver.major, nn->fw_ver.minor);
- 	strlcpy(drvinfo->bus_info, pci_name(nn->pdev),
+ 	strscpy(drvinfo->bus_info, pci_name(nn->pdev),
  		sizeof(drvinfo->bus_info));
  
  	nfp_get_drvinfo(nn->app, nn->pdev, vnic_version, drvinfo);
diff --cc drivers/net/ethernet/ni/nixge.c
index 33b099a7c4f8,cf2929fa525e..000000000000
--- a/drivers/net/ethernet/ni/nixge.c
+++ b/drivers/net/ethernet/ni/nixge.c
@@@ -935,8 -990,8 +935,13 @@@ static const struct net_device_ops nixg
  static void nixge_ethtools_get_drvinfo(struct net_device *ndev,
  				       struct ethtool_drvinfo *ed)
  {
++<<<<<<< HEAD
 +	strlcpy(ed->driver, "nixge", sizeof(ed->driver));
 +	strlcpy(ed->bus_info, "platform", sizeof(ed->driver));
++=======
+ 	strscpy(ed->driver, "nixge", sizeof(ed->driver));
+ 	strscpy(ed->bus_info, "platform", sizeof(ed->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int
diff --cc drivers/net/ethernet/qlogic/qede/qede_main.c
index a294014158f2,3c1bfff29157..000000000000
--- a/drivers/net/ethernet/qlogic/qede/qede_main.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_main.c
@@@ -1224,11 -1214,7 +1224,15 @@@ static int __qede_probe(struct pci_dev 
  	/* Start the Slowpath-process */
  	memset(&sp_params, 0, sizeof(sp_params));
  	sp_params.int_mode = QED_INT_MODE_MSIX;
++<<<<<<< HEAD
 +	sp_params.drv_major = QEDE_MAJOR_VERSION;
 +	sp_params.drv_minor = QEDE_MINOR_VERSION;
 +	sp_params.drv_rev = QEDE_REVISION_VERSION;
 +	sp_params.drv_eng = QEDE_ENGINEERING_VERSION;
 +	strlcpy(sp_params.name, "qede LAN", QED_DRV_VER_STR_SIZE);
++=======
+ 	strscpy(sp_params.name, "qede LAN", QED_DRV_VER_STR_SIZE);
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  	rc = qed_ops->common->slowpath_start(cdev, &sp_params);
  	if (rc) {
  		pr_notice("Cannot start slowpath\n");
diff --cc drivers/net/ethernet/sgi/ioc3-eth.c
index ee1b53822bf5,8fc3f5272fa7..000000000000
--- a/drivers/net/ethernet/sgi/ioc3-eth.c
+++ b/drivers/net/ethernet/sgi/ioc3-eth.c
@@@ -1542,14 -1155,13 +1542,21 @@@ static inline unsigned int ioc3_hash(co
  	return temp;
  }
  
 -static void ioc3_get_drvinfo(struct net_device *dev,
 -			     struct ethtool_drvinfo *info)
 +static void ioc3_get_drvinfo (struct net_device *dev,
 +	struct ethtool_drvinfo *info)
  {
++<<<<<<< HEAD
 +	struct ioc3_private *ip = netdev_priv(dev);
 +
 +	strlcpy(info->driver, IOC3_NAME, sizeof(info->driver));
 +	strlcpy(info->version, IOC3_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, pci_name(ip->pdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, IOC3_NAME, sizeof(info->driver));
+ 	strscpy(info->version, IOC3_VERSION, sizeof(info->version));
+ 	strscpy(info->bus_info, pci_name(to_pci_dev(dev->dev.parent)),
+ 		sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int ioc3_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/via/via-rhine.c
index 7fe6d9ebf3af,29cde0bec4b1..000000000000
--- a/drivers/net/ethernet/via/via-rhine.c
+++ b/drivers/net/ethernet/via/via-rhine.c
@@@ -2295,9 -2281,8 +2295,14 @@@ static void netdev_get_drvinfo(struct n
  {
  	struct device *hwdev = dev->dev.parent;
  
++<<<<<<< HEAD
 +	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
 +	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
 +	strlcpy(info->bus_info, dev_name(hwdev), sizeof(info->bus_info));
++=======
+ 	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+ 	strscpy(info->bus_info, dev_name(hwdev), sizeof(info->bus_info));
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  }
  
  static int netdev_get_link_ksettings(struct net_device *dev,
diff --cc drivers/net/ethernet/xilinx/xilinx_emaclite.c
index a46d53908710,05848ff15fb5..000000000000
--- a/drivers/net/ethernet/xilinx/xilinx_emaclite.c
+++ b/drivers/net/ethernet/xilinx/xilinx_emaclite.c
@@@ -1051,15 -1041,35 +1051,39 @@@ static bool get_bool(struct platform_de
  {
  	u32 *p = (u32 *)of_get_property(ofdev->dev.of_node, s, NULL);
  
 -	if (!p) {
 -		dev_warn(&ofdev->dev, "Parameter %s not found, defaulting to false\n", s);
 +	if (p) {
 +		return (bool)*p;
 +	} else {
 +		dev_warn(&ofdev->dev, "Parameter %s not found,"
 +			"defaulting to false\n", s);
  		return false;
  	}
 -
 -	return (bool)*p;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * xemaclite_ethtools_get_drvinfo - Get various Axi Emac Lite driver info
+  * @ndev:       Pointer to net_device structure
+  * @ed:         Pointer to ethtool_drvinfo structure
+  *
+  * This implements ethtool command for getting the driver information.
+  * Issue "ethtool -i ethX" under linux prompt to execute this function.
+  */
+ static void xemaclite_ethtools_get_drvinfo(struct net_device *ndev,
+ 					   struct ethtool_drvinfo *ed)
+ {
+ 	strscpy(ed->driver, DRIVER_NAME, sizeof(ed->driver));
+ }
+ 
+ static const struct ethtool_ops xemaclite_ethtool_ops = {
+ 	.get_drvinfo    = xemaclite_ethtools_get_drvinfo,
+ 	.get_link       = ethtool_op_get_link,
+ 	.get_link_ksettings = phy_ethtool_get_link_ksettings,
+ 	.set_link_ksettings = phy_ethtool_set_link_ksettings,
+ };
+ 
++>>>>>>> f029c781dd6d (net: ethernet: move from strlcpy with unused retval to strscpy)
  static const struct net_device_ops xemaclite_netdev_ops;
  
  /**
* Unmerged path drivers/net/ethernet/atheros/ag71xx.c
* Unmerged path drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c
* Unmerged path drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
* Unmerged path drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
* Unmerged path drivers/net/ethernet/marvell/prestera/prestera_ethtool.c
* Unmerged path drivers/net/ethernet/mediatek/mtk_star_emac.c
* Unmerged path drivers/net/ethernet/microchip/lan743x_ethtool.c
* Unmerged path drivers/net/ethernet/sfc/siena/efx.c
* Unmerged path drivers/net/ethernet/sfc/siena/efx_common.c
* Unmerged path drivers/net/ethernet/sfc/siena/ethtool_common.c
* Unmerged path drivers/net/ethernet/sfc/siena/mcdi_mon.c
* Unmerged path drivers/net/ethernet/sfc/siena/nic.c
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-ethtool.c
* Unmerged path drivers/net/ethernet/ti/cpsw_new.c
* Unmerged path drivers/crypto/chelsio/chtls/chtls_main.c
* Unmerged path drivers/net/ethernet/3com/3c509.c
* Unmerged path drivers/net/ethernet/3com/3c515.c
* Unmerged path drivers/net/ethernet/3com/3c589_cs.c
diff --git a/drivers/net/ethernet/3com/3c59x.c b/drivers/net/ethernet/3com/3c59x.c
index 9e8b5261c99d..ecc3c680490f 100644
--- a/drivers/net/ethernet/3com/3c59x.c
+++ b/drivers/net/ethernet/3com/3c59x.c
@@ -2959,13 +2959,13 @@ static void vortex_get_drvinfo(struct net_device *dev,
 {
 	struct vortex_private *vp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
 	if (VORTEX_PCI(vp)) {
-		strlcpy(info->bus_info, pci_name(VORTEX_PCI(vp)),
+		strscpy(info->bus_info, pci_name(VORTEX_PCI(vp)),
 			sizeof(info->bus_info));
 	} else {
 		if (VORTEX_EISA(vp))
-			strlcpy(info->bus_info, dev_name(vp->gendev),
+			strscpy(info->bus_info, dev_name(vp->gendev),
 				sizeof(info->bus_info));
 		else
 			snprintf(info->bus_info, sizeof(info->bus_info),
* Unmerged path drivers/net/ethernet/3com/typhoon.c
diff --git a/drivers/net/ethernet/8390/ax88796.c b/drivers/net/ethernet/8390/ax88796.c
index 3dcc61821ed5..a1cb1d90981c 100644
--- a/drivers/net/ethernet/8390/ax88796.c
+++ b/drivers/net/ethernet/8390/ax88796.c
@@ -575,9 +575,9 @@ static void ax_get_drvinfo(struct net_device *dev,
 {
 	struct platform_device *pdev = to_platform_device(dev->dev.parent);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pdev->name, sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pdev->name, sizeof(info->bus_info));
 }
 
 static u32 ax_get_msglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/8390/etherh.c b/drivers/net/ethernet/8390/etherh.c
index 32e9627e3880..2903505519f9 100644
--- a/drivers/net/ethernet/8390/etherh.c
+++ b/drivers/net/ethernet/8390/etherh.c
@@ -558,9 +558,9 @@ static int __init etherm_addr(char *addr)
 
 static void etherh_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(dev->dev.parent),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(dev->dev.parent),
 		sizeof(info->bus_info));
 }
 
* Unmerged path drivers/net/ethernet/adaptec/starfire.c
* Unmerged path drivers/net/ethernet/aeroflex/greth.c
* Unmerged path drivers/net/ethernet/agere/et131x.c
* Unmerged path drivers/net/ethernet/alacritech/slicoss.c
* Unmerged path drivers/net/ethernet/allwinner/sun4i-emac.c
* Unmerged path drivers/net/ethernet/alteon/acenic.c
diff --git a/drivers/net/ethernet/amazon/ena/ena_ethtool.c b/drivers/net/ethernet/amazon/ena/ena_ethtool.c
index e374e655159e..5dd427b00f02 100644
--- a/drivers/net/ethernet/amazon/ena/ena_ethtool.c
+++ b/drivers/net/ethernet/amazon/ena/ena_ethtool.c
@@ -461,8 +461,8 @@ static void ena_get_drvinfo(struct net_device *dev,
 {
 	struct ena_adapter *adapter = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(adapter->pdev),
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(adapter->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/amazon/ena/ena_netdev.c b/drivers/net/ethernet/amazon/ena/ena_netdev.c
index 39bb25e3fcb5..ac8f5221f711 100644
--- a/drivers/net/ethernet/amazon/ena/ena_netdev.c
+++ b/drivers/net/ethernet/amazon/ena/ena_netdev.c
@@ -3171,7 +3171,7 @@ static void ena_config_host_info(struct ena_com_dev *ena_dev, struct pci_dev *pd
 	host_info->bdf = (pdev->bus->number << 8) | pdev->devfn;
 	host_info->os_type = ENA_ADMIN_OS_LINUX;
 	host_info->kernel_ver = LINUX_VERSION_CODE;
-	strlcpy(host_info->kernel_ver_str, utsname()->version,
+	strscpy(host_info->kernel_ver_str, utsname()->version,
 		sizeof(host_info->kernel_ver_str) - 1);
 	host_info->os_dist = 0;
 	strncpy(host_info->os_dist_str, utsname()->release,
* Unmerged path drivers/net/ethernet/amd/amd8111e.c
* Unmerged path drivers/net/ethernet/amd/au1000_eth.c
* Unmerged path drivers/net/ethernet/amd/nmclan_cs.c
* Unmerged path drivers/net/ethernet/amd/pcnet32.c
* Unmerged path drivers/net/ethernet/amd/sunlance.c
* Unmerged path drivers/net/ethernet/amd/xgbe/xgbe-ethtool.c
diff --git a/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c b/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
index f40de6d14c7c..e7bfa07ff3f0 100644
--- a/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_ethtool.c
@@ -157,7 +157,7 @@ static void aq_ethtool_get_drvinfo(struct net_device *ndev,
 		 "%u.%u.%u", firmware_version >> 24,
 		 (firmware_version >> 16) & 0xFFU, firmware_version & 0xFFFFU);
 
-	strlcpy(drvinfo->bus_info, pdev ? pci_name(pdev) : "",
+	strscpy(drvinfo->bus_info, pdev ? pci_name(pdev) : "",
 		sizeof(drvinfo->bus_info));
 	drvinfo->n_stats = aq_ethtool_n_stats(ndev);
 	drvinfo->testinfo_len = 0;
* Unmerged path drivers/net/ethernet/arc/emac_main.c
* Unmerged path drivers/net/ethernet/atheros/ag71xx.c
* Unmerged path drivers/net/ethernet/atheros/atl1c/atl1c_ethtool.c
* Unmerged path drivers/net/ethernet/atheros/atl1e/atl1e_ethtool.c
* Unmerged path drivers/net/ethernet/atheros/atlx/atl1.c
* Unmerged path drivers/net/ethernet/atheros/atlx/atl2.c
diff --git a/drivers/net/ethernet/broadcom/b44.c b/drivers/net/ethernet/broadcom/b44.c
index 1764ef799fcb..0df1ebe387fb 100644
--- a/drivers/net/ethernet/broadcom/b44.c
+++ b/drivers/net/ethernet/broadcom/b44.c
@@ -1793,13 +1793,13 @@ static void b44_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *inf
 	struct b44 *bp = netdev_priv(dev);
 	struct ssb_bus *bus = bp->sdev->bus;
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
 	switch (bus->bustype) {
 	case SSB_BUSTYPE_PCI:
-		strlcpy(info->bus_info, pci_name(bus->host_pci), sizeof(info->bus_info));
+		strscpy(info->bus_info, pci_name(bus->host_pci), sizeof(info->bus_info));
 		break;
 	case SSB_BUSTYPE_SSB:
-		strlcpy(info->bus_info, "SSB", sizeof(info->bus_info));
+		strscpy(info->bus_info, "SSB", sizeof(info->bus_info));
 		break;
 	case SSB_BUSTYPE_PCMCIA:
 	case SSB_BUSTYPE_SDIO:
* Unmerged path drivers/net/ethernet/broadcom/bcm63xx_enet.c
diff --git a/drivers/net/ethernet/broadcom/bcmsysport.c b/drivers/net/ethernet/broadcom/bcmsysport.c
index 558f39fe3bac..71d4fe64914b 100644
--- a/drivers/net/ethernet/broadcom/bcmsysport.c
+++ b/drivers/net/ethernet/broadcom/bcmsysport.c
@@ -293,8 +293,8 @@ static const struct bcm_sysport_stats bcm_sysport_gstrings_stats[] = {
 static void bcm_sysport_get_drvinfo(struct net_device *dev,
 				    struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->bus_info, "platform", sizeof(info->bus_info));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->bus_info, "platform", sizeof(info->bus_info));
 }
 
 static u32 bcm_sysport_get_msglvl(struct net_device *dev)
diff --git a/drivers/net/ethernet/broadcom/bgmac.c b/drivers/net/ethernet/broadcom/bgmac.c
index 01e81d0708cb..ee3721c0f112 100644
--- a/drivers/net/ethernet/broadcom/bgmac.c
+++ b/drivers/net/ethernet/broadcom/bgmac.c
@@ -1370,7 +1370,7 @@ static void bgmac_get_strings(struct net_device *dev, u32 stringset,
 		return;
 
 	for (i = 0; i < BGMAC_STATS_LEN; i++)
-		strlcpy(data + i * ETH_GSTRING_LEN,
+		strscpy(data + i * ETH_GSTRING_LEN,
 			bgmac_get_strings_stats[i].name, ETH_GSTRING_LEN);
 }
 
@@ -1398,8 +1398,8 @@ static void bgmac_get_ethtool_stats(struct net_device *dev,
 static void bgmac_get_drvinfo(struct net_device *net_dev,
 			      struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->bus_info, "AXI", sizeof(info->bus_info));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->bus_info, "AXI", sizeof(info->bus_info));
 }
 
 static const struct ethtool_ops bgmac_ethtool_ops = {
diff --git a/drivers/net/ethernet/broadcom/bnx2.c b/drivers/net/ethernet/broadcom/bnx2.c
index 2c5d91341284..34c414799ad0 100644
--- a/drivers/net/ethernet/broadcom/bnx2.c
+++ b/drivers/net/ethernet/broadcom/bnx2.c
@@ -7043,9 +7043,9 @@ bnx2_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct bnx2 *bp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(bp->pdev), sizeof(info->bus_info));
-	strlcpy(info->fw_version, bp->fw_version, sizeof(info->fw_version));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(bp->pdev), sizeof(info->bus_info));
+	strscpy(info->fw_version, bp->fw_version, sizeof(info->fw_version));
 }
 
 #define BNX2_REGDUMP_LEN		(32 * 1024)
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
index bedb1500ea4c..89c37504b1f0 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c
@@ -149,7 +149,7 @@ void bnx2x_fill_fw_str(struct bnx2x *bp, char *buf, size_t buf_len)
 		phy_fw_ver[0] = '\0';
 		bnx2x_get_ext_phy_fw_version(&bp->link_params,
 					     phy_fw_ver, PHY_FW_VER_LEN);
-		strlcpy(buf, bp->fw_ver, buf_len);
+		strscpy(buf, bp->fw_ver, buf_len);
 		snprintf(buf + strlen(bp->fw_ver), 32 - strlen(bp->fw_ver),
 			 "bc %d.%d.%d%s%s",
 			 (bp->common.bc_ver & 0xff0000) >> 16,
* Unmerged path drivers/net/ethernet/broadcom/bnx2x/bnx2x_ethtool.c
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
index 0f91cc641cb5..331cf40d9ac3 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c
@@ -3391,7 +3391,7 @@ static void bnx2x_drv_info_ether_stat(struct bnx2x *bp)
 		&bp->sp_objs->mac_obj;
 	int i;
 
-	strlcpy(ether_stat->version, DRV_MODULE_VERSION,
+	strscpy(ether_stat->version, DRV_MODULE_VERSION,
 		ETH_STAT_INFO_VERSION_LEN);
 
 	/* get DRV_INFO_ETH_STAT_NUM_MACS_REQUIRED macs, placing them in the
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.h b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.h
index 596ade1aceba..afe85aa2f47f 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.h
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.h
@@ -517,7 +517,7 @@ int bnx2x_vfpf_storm_rx_mode(struct bnx2x *bp);
 static inline void bnx2x_vf_fill_fw_str(struct bnx2x *bp, char *buf,
 					size_t buf_len)
 {
-	strlcpy(buf, bp->acquire_resp.pfdev_info.fw_ver, buf_len);
+	strscpy(buf, bp->acquire_resp.pfdev_info.fw_ver, buf_len);
 }
 
 static inline int bnx2x_vf_ustorm_prods_offset(struct bnx2x *bp,
diff --git a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c
index ea0e9394f898..1acc7501f6ab 100644
--- a/drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c
+++ b/drivers/net/ethernet/broadcom/bnx2x/bnx2x_vfpf.c
@@ -380,7 +380,7 @@ int bnx2x_vfpf_acquire(struct bnx2x *bp, u8 tx_count, u8 rx_count)
 	bp->igu_base_sb = bp->acquire_resp.resc.hw_sbs[0].hw_sb_id;
 	bp->vlan_credit = bp->acquire_resp.resc.num_vlan_filters;
 
-	strlcpy(bp->fw_ver, bp->acquire_resp.pfdev_info.fw_ver,
+	strscpy(bp->fw_ver, bp->acquire_resp.pfdev_info.fw_ver,
 		sizeof(bp->fw_ver));
 
 	if (is_valid_ether_addr(bp->acquire_resp.resc.current_mac_addr))
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c b/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
index a6c45ab12569..f3c30e33acfb 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
@@ -1368,9 +1368,9 @@ static void bnxt_get_drvinfo(struct net_device *dev,
 {
 	struct bnxt *bp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->fw_version, bp->fw_ver_str, sizeof(info->fw_version));
-	strlcpy(info->bus_info, pci_name(bp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->fw_version, bp->fw_ver_str, sizeof(info->fw_version));
+	strscpy(info->bus_info, pci_name(bp->pdev), sizeof(info->bus_info));
 	info->n_stats = bnxt_get_num_stats(bp);
 	info->testinfo_len = bp->num_tests;
 	/* TODO CHIMP_FW: eeprom dump details */
@@ -3870,7 +3870,7 @@ void bnxt_ethtool_init(struct bnxt *bp)
 		} else if (i == BNXT_IRQ_TEST_IDX) {
 			strcpy(str, "Interrupt_test (offline)");
 		} else {
-			strlcpy(str, fw_str, ETH_GSTRING_LEN);
+			strscpy(str, fw_str, ETH_GSTRING_LEN);
 			strncat(str, " test", ETH_GSTRING_LEN - strlen(str));
 			if (test_info->offline_mask & (1 << i))
 				strncat(str, " (offline)",
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c b/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
index aba453af2b77..3dc179551c1b 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_vfr.c
@@ -222,7 +222,7 @@ static int bnxt_vf_rep_get_phys_port_name(struct net_device *dev, char *buf,
 static void bnxt_vf_rep_get_drvinfo(struct net_device *dev,
 				    struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
 }
 
 static int bnxt_vf_rep_get_port_parent_id(struct net_device *dev,
diff --git a/drivers/net/ethernet/broadcom/genet/bcmgenet.c b/drivers/net/ethernet/broadcom/genet/bcmgenet.c
index 116c5aeea2f7..db64ba06b6d2 100644
--- a/drivers/net/ethernet/broadcom/genet/bcmgenet.c
+++ b/drivers/net/ethernet/broadcom/genet/bcmgenet.c
@@ -877,7 +877,7 @@ static const struct bcmgenet_stats bcmgenet_gstrings_stats[] = {
 static void bcmgenet_get_drvinfo(struct net_device *dev,
 				 struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, "bcmgenet", sizeof(info->driver));
+	strscpy(info->driver, "bcmgenet", sizeof(info->driver));
 }
 
 static int bcmgenet_get_sset_count(struct net_device *dev, int string_set)
diff --git a/drivers/net/ethernet/broadcom/tg3.c b/drivers/net/ethernet/broadcom/tg3.c
index 95440ad36665..b9923cd3b2d8 100644
--- a/drivers/net/ethernet/broadcom/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3.c
@@ -12305,9 +12305,9 @@ static void tg3_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info
 {
 	struct tg3 *tp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->fw_version, tp->fw_ver, sizeof(info->fw_version));
-	strlcpy(info->bus_info, pci_name(tp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->fw_version, tp->fw_ver, sizeof(info->fw_version));
+	strscpy(info->bus_info, pci_name(tp->pdev), sizeof(info->bus_info));
 }
 
 static void tg3_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
* Unmerged path drivers/net/ethernet/brocade/bna/bnad_ethtool.c
* Unmerged path drivers/net/ethernet/cavium/octeon/octeon_mgmt.c
* Unmerged path drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
diff --git a/drivers/net/ethernet/chelsio/cxgb/cxgb2.c b/drivers/net/ethernet/chelsio/cxgb/cxgb2.c
index 3168da1d6747..e0983fd39679 100644
--- a/drivers/net/ethernet/chelsio/cxgb/cxgb2.c
+++ b/drivers/net/ethernet/chelsio/cxgb/cxgb2.c
@@ -432,8 +432,8 @@ static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct adapter *adapter = dev->ml_priv;
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(adapter->pdev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(adapter->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c b/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
index c83fd14c0d2e..ea829a1c4468 100644
--- a/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb3/cxgb3_main.c
@@ -1628,8 +1628,8 @@ static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 	t3_get_tp_version(adapter, &tp_vers);
 	spin_unlock(&adapter->stats_lock);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(adapter->pdev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(adapter->pdev),
 		sizeof(info->bus_info));
 	if (fw_vers)
 		snprintf(info->fw_version, sizeof(info->fw_version),
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
index 078a8e77fa77..880c48b92075 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_ethtool.c
@@ -211,8 +211,8 @@ static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 	struct adapter *adapter = netdev2adap(dev);
 	u32 exprom_vers;
 
-	strlcpy(info->driver, cxgb4_driver_name, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(adapter->pdev),
+	strscpy(info->driver, cxgb4_driver_name, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(adapter->pdev),
 		sizeof(info->bus_info));
 	info->regdump_len = get_regs_len(dev);
 
diff --git a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
index 1150a32a2fb4..3cd0b853d01e 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c
@@ -3906,8 +3906,8 @@ static void cxgb4_mgmt_get_drvinfo(struct net_device *dev,
 {
 	struct adapter *adapter = netdev2adap(dev);
 
-	strlcpy(info->driver, cxgb4_driver_name, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(adapter->pdev),
+	strscpy(info->driver, cxgb4_driver_name, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(adapter->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c b/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
index 264bf3892fb6..7f740b3d985f 100644
--- a/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
+++ b/drivers/net/ethernet/chelsio/cxgb4vf/cxgb4vf_main.c
@@ -1553,8 +1553,8 @@ static void cxgb4vf_get_drvinfo(struct net_device *dev,
 {
 	struct adapter *adapter = netdev2adap(dev);
 
-	strlcpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->bus_info, pci_name(to_pci_dev(dev->dev.parent)),
+	strscpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->bus_info, pci_name(to_pci_dev(dev->dev.parent)),
 		sizeof(drvinfo->bus_info));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		 "%u.%u.%u.%u, TP %u.%u.%u.%u",
* Unmerged path drivers/net/ethernet/cirrus/ep93xx_eth.c
* Unmerged path drivers/net/ethernet/cisco/enic/enic_ethtool.c
* Unmerged path drivers/net/ethernet/davicom/dm9000.c
* Unmerged path drivers/net/ethernet/dec/tulip/de2104x.c
* Unmerged path drivers/net/ethernet/dec/tulip/dmfe.c
* Unmerged path drivers/net/ethernet/dec/tulip/tulip_core.c
* Unmerged path drivers/net/ethernet/dec/tulip/uli526x.c
* Unmerged path drivers/net/ethernet/dec/tulip/winbond-840.c
* Unmerged path drivers/net/ethernet/dlink/dl2k.c
* Unmerged path drivers/net/ethernet/dlink/sundance.c
* Unmerged path drivers/net/ethernet/dnet.c
diff --git a/drivers/net/ethernet/emulex/benet/be_cmds.c b/drivers/net/ethernet/emulex/benet/be_cmds.c
index 1288b5e3d220..7c81823b3645 100644
--- a/drivers/net/ethernet/emulex/benet/be_cmds.c
+++ b/drivers/net/ethernet/emulex/benet/be_cmds.c
@@ -1878,9 +1878,9 @@ int be_cmd_get_fw_ver(struct be_adapter *adapter)
 	if (!status) {
 		struct be_cmd_resp_get_fw_version *resp = embedded_payload(wrb);
 
-		strlcpy(adapter->fw_ver, resp->firmware_version_string,
+		strscpy(adapter->fw_ver, resp->firmware_version_string,
 			sizeof(adapter->fw_ver));
-		strlcpy(adapter->fw_on_flash, resp->fw_on_flash_version_string,
+		strscpy(adapter->fw_on_flash, resp->fw_on_flash_version_string,
 			sizeof(adapter->fw_on_flash));
 	}
 err:
@@ -2373,7 +2373,7 @@ static int lancer_cmd_write_object(struct be_adapter *adapter,
 
 	be_dws_cpu_to_le(ctxt, sizeof(req->context));
 	req->write_offset = cpu_to_le32(data_offset);
-	strlcpy(req->object_name, obj_name, sizeof(req->object_name));
+	strscpy(req->object_name, obj_name, sizeof(req->object_name));
 	req->descriptor_count = cpu_to_le32(1);
 	req->buf_len = cpu_to_le32(data_size);
 	req->addr_low = cpu_to_le32((cmd->dma +
@@ -2442,9 +2442,9 @@ int be_cmd_query_sfp_info(struct be_adapter *adapter)
 	status = be_cmd_read_port_transceiver_data(adapter, TR_PAGE_A0,
 						   0, PAGE_DATA_LEN, page_data);
 	if (!status) {
-		strlcpy(adapter->phy.vendor_name, page_data +
+		strscpy(adapter->phy.vendor_name, page_data +
 			SFP_VENDOR_NAME_OFFSET, SFP_VENDOR_NAME_LEN - 1);
-		strlcpy(adapter->phy.vendor_pn,
+		strscpy(adapter->phy.vendor_pn,
 			page_data + SFP_VENDOR_PN_OFFSET,
 			SFP_VENDOR_NAME_LEN - 1);
 	}
@@ -2473,7 +2473,7 @@ static int lancer_cmd_delete_object(struct be_adapter *adapter,
 			       OPCODE_COMMON_DELETE_OBJECT,
 			       sizeof(*req), wrb, NULL);
 
-	strlcpy(req->object_name, obj_name, sizeof(req->object_name));
+	strscpy(req->object_name, obj_name, sizeof(req->object_name));
 
 	status = be_mcc_notify_wait(adapter);
 err:
* Unmerged path drivers/net/ethernet/emulex/benet/be_ethtool.c
* Unmerged path drivers/net/ethernet/faraday/ftgmac100.c
* Unmerged path drivers/net/ethernet/faraday/ftmac100.c
* Unmerged path drivers/net/ethernet/fealnx.c
* Unmerged path drivers/net/ethernet/freescale/dpaa/dpaa_ethtool.c
* Unmerged path drivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c
* Unmerged path drivers/net/ethernet/freescale/enetc/enetc_ethtool.c
* Unmerged path drivers/net/ethernet/freescale/fec_main.c
* Unmerged path drivers/net/ethernet/freescale/fec_ptp.c
* Unmerged path drivers/net/ethernet/freescale/fs_enet/fs_enet-main.c
* Unmerged path drivers/net/ethernet/freescale/gianfar_ethtool.c
* Unmerged path drivers/net/ethernet/freescale/ucc_geth_ethtool.c
diff --git a/drivers/net/ethernet/fujitsu/fmvj18x_cs.c b/drivers/net/ethernet/fujitsu/fmvj18x_cs.c
index dc90c61fc827..16aae736a3a5 100644
--- a/drivers/net/ethernet/fujitsu/fmvj18x_cs.c
+++ b/drivers/net/ethernet/fujitsu/fmvj18x_cs.c
@@ -1041,8 +1041,8 @@ static void fjn_rx(struct net_device *dev)
 static void netdev_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 	snprintf(info->bus_info, sizeof(info->bus_info),
 		"PCMCIA 0x%lx", dev->base_addr);
 }
diff --git a/drivers/net/ethernet/hisilicon/hip04_eth.c b/drivers/net/ethernet/hisilicon/hip04_eth.c
index 2ee9c4ee26ad..dd032cd290df 100644
--- a/drivers/net/ethernet/hisilicon/hip04_eth.c
+++ b/drivers/net/ethernet/hisilicon/hip04_eth.c
@@ -750,8 +750,8 @@ static int hip04_set_coalesce(struct net_device *netdev,
 static void hip04_get_drvinfo(struct net_device *netdev,
 			      struct ethtool_drvinfo *drvinfo)
 {
-	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
+	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
 }
 
 static const struct ethtool_ops hip04_ethtool_ops = {
diff --git a/drivers/net/ethernet/ibm/ehea/ehea_ethtool.c b/drivers/net/ethernet/ibm/ehea/ehea_ethtool.c
index 4f58d338d739..de82cc01c263 100644
--- a/drivers/net/ethernet/ibm/ehea/ehea_ethtool.c
+++ b/drivers/net/ethernet/ibm/ehea/ehea_ethtool.c
@@ -173,8 +173,8 @@ static int ehea_nway_reset(struct net_device *dev)
 static void ehea_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 }
 
 static u32 ehea_get_msglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/ibm/emac/core.c b/drivers/net/ethernet/ibm/emac/core.c
index 03e0fb4c7f75..4b55bf021556 100644
--- a/drivers/net/ethernet/ibm/emac/core.c
+++ b/drivers/net/ethernet/ibm/emac/core.c
@@ -2265,8 +2265,8 @@ static void emac_ethtool_get_drvinfo(struct net_device *ndev,
 {
 	struct emac_instance *dev = netdev_priv(ndev);
 
-	strlcpy(info->driver, "ibm_emac", sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, "ibm_emac", sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 	snprintf(info->bus_info, sizeof(info->bus_info), "PPC 4xx EMAC-%d %pOF",
 		 dev->cell_index, dev->ofdev->dev.of_node);
 }
diff --git a/drivers/net/ethernet/ibm/ibmveth.c b/drivers/net/ethernet/ibm/ibmveth.c
index e59ed768b792..d1ea8e355a4b 100644
--- a/drivers/net/ethernet/ibm/ibmveth.c
+++ b/drivers/net/ethernet/ibm/ibmveth.c
@@ -751,8 +751,8 @@ static int netdev_get_link_ksettings(struct net_device *dev,
 static void netdev_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, ibmveth_driver_name, sizeof(info->driver));
-	strlcpy(info->version, ibmveth_driver_version, sizeof(info->version));
+	strscpy(info->driver, ibmveth_driver_name, sizeof(info->driver));
+	strscpy(info->version, ibmveth_driver_version, sizeof(info->version));
 }
 
 static netdev_features_t ibmveth_fix_features(struct net_device *dev,
* Unmerged path drivers/net/ethernet/intel/e100.c
diff --git a/drivers/net/ethernet/intel/e1000/e1000_ethtool.c b/drivers/net/ethernet/intel/e1000/e1000_ethtool.c
index 3314a23a57b0..fffbddf3b16a 100644
--- a/drivers/net/ethernet/intel/e1000/e1000_ethtool.c
+++ b/drivers/net/ethernet/intel/e1000/e1000_ethtool.c
@@ -531,12 +531,12 @@ static void e1000_get_drvinfo(struct net_device *netdev,
 {
 	struct e1000_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver,  e1000_driver_name,
+	strscpy(drvinfo->driver,  e1000_driver_name,
 		sizeof(drvinfo->driver));
 	strlcpy(drvinfo->version, e1000_driver_version,
 		sizeof(drvinfo->version));
 
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/intel/e1000e/ethtool.c b/drivers/net/ethernet/intel/e1000e/ethtool.c
index b80ae9a82224..51a5afe9df2f 100644
--- a/drivers/net/ethernet/intel/e1000e/ethtool.c
+++ b/drivers/net/ethernet/intel/e1000e/ethtool.c
@@ -639,7 +639,7 @@ static void e1000_get_drvinfo(struct net_device *netdev,
 {
 	struct e1000_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, e1000e_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->driver, e1000e_driver_name, sizeof(drvinfo->driver));
 
 	/* EEPROM image version # is reported as firmware version # for
 	 * PCI-E controllers
@@ -650,7 +650,7 @@ static void e1000_get_drvinfo(struct net_device *netdev,
 		 (adapter->eeprom_vers & 0x0FF0) >> 4,
 		 (adapter->eeprom_vers & 0x000F));
 
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/intel/e1000e/netdev.c b/drivers/net/ethernet/intel/e1000e/netdev.c
index 33aa251a53a5..d53b3a39daf1 100644
--- a/drivers/net/ethernet/intel/e1000e/netdev.c
+++ b/drivers/net/ethernet/intel/e1000e/netdev.c
@@ -7268,7 +7268,7 @@ static void e1000_print_device_info(struct e1000_adapter *adapter)
 	ret_val = e1000_read_pba_string_generic(hw, pba_str,
 						E1000_PBANUM_LENGTH);
 	if (ret_val)
-		strlcpy((char *)pba_str, "Unknown", sizeof(pba_str));
+		strscpy((char *)pba_str, "Unknown", sizeof(pba_str));
 	e_info("MAC: %d, PHY: %d, PBA No: %s\n",
 	       hw->mac.type, hw->phy.type, pba_str);
 }
@@ -7481,7 +7481,7 @@ static int e1000_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	e1000e_set_ethtool_ops(netdev);
 	netdev->watchdog_timeo = 5 * HZ;
 	netif_napi_add(netdev, &adapter->napi, e1000e_poll, 64);
-	strlcpy(netdev->name, pci_name(pdev), sizeof(netdev->name));
+	strscpy(netdev->name, pci_name(pdev), sizeof(netdev->name));
 
 	netdev->mem_start = mmio_start;
 	netdev->mem_end = mmio_start + mmio_len;
@@ -7677,7 +7677,7 @@ static int e1000_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if (hw->mac.type >= e1000_pch_cnp)
 		adapter->flags2 |= FLAG2_ENABLE_S0IX_FLOWS;
 
-	strlcpy(netdev->name, "eth%d", sizeof(netdev->name));
+	strscpy(netdev->name, "eth%d", sizeof(netdev->name));
 	err = register_netdev(netdev);
 	if (err)
 		goto err_register;
diff --git a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
index ca8e0acaea8d..116f3bd0000d 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ethtool.c
@@ -2003,10 +2003,10 @@ static void i40e_get_drvinfo(struct net_device *netdev,
 	struct i40e_vsi *vsi = np->vsi;
 	struct i40e_pf *pf = vsi->back;
 
-	strlcpy(drvinfo->driver, i40e_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->fw_version, i40e_nvm_version_str(&pf->hw),
+	strscpy(drvinfo->driver, i40e_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->fw_version, i40e_nvm_version_str(&pf->hw),
 		sizeof(drvinfo->fw_version));
-	strlcpy(drvinfo->bus_info, pci_name(pf->pdev),
+	strscpy(drvinfo->bus_info, pci_name(pf->pdev),
 		sizeof(drvinfo->bus_info));
 	drvinfo->n_priv_flags = I40E_PRIV_FLAGS_STR_LEN;
 	if (pf->hw.pf_id == 0)
diff --git a/drivers/net/ethernet/intel/i40e/i40e_main.c b/drivers/net/ethernet/intel/i40e/i40e_main.c
index 685af1b4efe8..9ea30ec6a166 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_main.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_main.c
@@ -10712,7 +10712,7 @@ static void i40e_send_version(struct i40e_pf *pf)
 	dv.minor_version = 0xff;
 	dv.build_version = 0xff;
 	dv.subbuild_version = 0;
-	strlcpy(dv.driver_string, UTS_RELEASE, sizeof(dv.driver_string));
+	strscpy(dv.driver_string, UTS_RELEASE, sizeof(dv.driver_string));
 	i40e_aq_send_driver_version(&pf->hw, &dv, NULL);
 }
 
@@ -16072,23 +16072,23 @@ static int i40e_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 
 		switch (hw->bus.speed) {
 		case i40e_bus_speed_8000:
-			strlcpy(speed, "8.0", PCI_SPEED_SIZE); break;
+			strscpy(speed, "8.0", PCI_SPEED_SIZE); break;
 		case i40e_bus_speed_5000:
-			strlcpy(speed, "5.0", PCI_SPEED_SIZE); break;
+			strscpy(speed, "5.0", PCI_SPEED_SIZE); break;
 		case i40e_bus_speed_2500:
-			strlcpy(speed, "2.5", PCI_SPEED_SIZE); break;
+			strscpy(speed, "2.5", PCI_SPEED_SIZE); break;
 		default:
 			break;
 		}
 		switch (hw->bus.width) {
 		case i40e_bus_width_pcie_x8:
-			strlcpy(width, "8", PCI_WIDTH_SIZE); break;
+			strscpy(width, "8", PCI_WIDTH_SIZE); break;
 		case i40e_bus_width_pcie_x4:
-			strlcpy(width, "4", PCI_WIDTH_SIZE); break;
+			strscpy(width, "4", PCI_WIDTH_SIZE); break;
 		case i40e_bus_width_pcie_x2:
-			strlcpy(width, "2", PCI_WIDTH_SIZE); break;
+			strscpy(width, "2", PCI_WIDTH_SIZE); break;
 		case i40e_bus_width_pcie_x1:
-			strlcpy(width, "1", PCI_WIDTH_SIZE); break;
+			strscpy(width, "1", PCI_WIDTH_SIZE); break;
 		default:
 			break;
 		}
diff --git a/drivers/net/ethernet/intel/i40e/i40e_ptp.c b/drivers/net/ethernet/intel/i40e/i40e_ptp.c
index 2d3533f38d7b..ffea0c9c82f1 100644
--- a/drivers/net/ethernet/intel/i40e/i40e_ptp.c
+++ b/drivers/net/ethernet/intel/i40e/i40e_ptp.c
@@ -1390,7 +1390,7 @@ static long i40e_ptp_create_clock(struct i40e_pf *pf)
 	if (!IS_ERR_OR_NULL(pf->ptp_clock))
 		return 0;
 
-	strlcpy(pf->ptp_caps.name, i40e_driver_name,
+	strscpy(pf->ptp_caps.name, i40e_driver_name,
 		sizeof(pf->ptp_caps.name) - 1);
 	pf->ptp_caps.owner = THIS_MODULE;
 	pf->ptp_caps.max_adj = 999999999;
diff --git a/drivers/net/ethernet/intel/iavf/iavf_ethtool.c b/drivers/net/ethernet/intel/iavf/iavf_ethtool.c
index e535d4c3da49..a056e1545615 100644
--- a/drivers/net/ethernet/intel/iavf/iavf_ethtool.c
+++ b/drivers/net/ethernet/intel/iavf/iavf_ethtool.c
@@ -581,9 +581,9 @@ static void iavf_get_drvinfo(struct net_device *netdev,
 {
 	struct iavf_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, iavf_driver_name, 32);
-	strlcpy(drvinfo->fw_version, "N/A", 4);
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev), 32);
+	strscpy(drvinfo->driver, iavf_driver_name, 32);
+	strscpy(drvinfo->fw_version, "N/A", 4);
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev), 32);
 	drvinfo->n_priv_flags = IAVF_PRIV_FLAGS_STR_LEN;
 }
 
diff --git a/drivers/net/ethernet/intel/igb/igb_ethtool.c b/drivers/net/ethernet/intel/igb/igb_ethtool.c
index c14fc871dd41..e5f3e7680dc6 100644
--- a/drivers/net/ethernet/intel/igb/igb_ethtool.c
+++ b/drivers/net/ethernet/intel/igb/igb_ethtool.c
@@ -850,14 +850,14 @@ static void igb_get_drvinfo(struct net_device *netdev,
 {
 	struct igb_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver,  igb_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->driver,  igb_driver_name, sizeof(drvinfo->driver));
 
 	/* EEPROM image version # is reported as firmware version # for
 	 * 82575 controllers
 	 */
-	strlcpy(drvinfo->fw_version, adapter->fw_version,
+	strscpy(drvinfo->fw_version, adapter->fw_version,
 		sizeof(drvinfo->fw_version));
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 
 	drvinfo->n_priv_flags = IGB_PRIV_FLAGS_STR_LEN;
diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 4e65ffe3f4e3..796a145bbdfb 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -3140,7 +3140,7 @@ static s32 igb_init_i2c(struct igb_adapter *adapter)
 	adapter->i2c_algo.data = adapter;
 	adapter->i2c_adap.algo_data = &adapter->i2c_algo;
 	adapter->i2c_adap.dev.parent = &adapter->pdev->dev;
-	strlcpy(adapter->i2c_adap.name, "igb BB",
+	strscpy(adapter->i2c_adap.name, "igb BB",
 		sizeof(adapter->i2c_adap.name));
 	status = i2c_bit_add_bus(&adapter->i2c_adap);
 	return status;
diff --git a/drivers/net/ethernet/intel/igbvf/ethtool.c b/drivers/net/ethernet/intel/igbvf/ethtool.c
index 9d4322b74163..83b97989a6bd 100644
--- a/drivers/net/ethernet/intel/igbvf/ethtool.c
+++ b/drivers/net/ethernet/intel/igbvf/ethtool.c
@@ -169,8 +169,8 @@ static void igbvf_get_drvinfo(struct net_device *netdev,
 {
 	struct igbvf_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver,  igbvf_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->driver,  igbvf_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
* Unmerged path drivers/net/ethernet/intel/ixgb/ixgb_ethtool.c
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c
index 6b4227a3b000..75fcfec7bff1 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_ethtool.c
@@ -1105,12 +1105,12 @@ static void ixgbe_get_drvinfo(struct net_device *netdev,
 {
 	struct ixgbe_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, ixgbe_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->driver, ixgbe_driver_name, sizeof(drvinfo->driver));
 
-	strlcpy(drvinfo->fw_version, adapter->eeprom_id,
+	strscpy(drvinfo->fw_version, adapter->eeprom_id,
 		sizeof(drvinfo->fw_version));
 
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 
 	drvinfo->n_priv_flags = IXGBE_PRIV_FLAGS_STR_LEN;
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
index 0fcd82036d4e..7311bd545acf 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_fcoe.c
@@ -1004,7 +1004,7 @@ int ixgbe_fcoe_get_hbainfo(struct net_device *netdev,
 		 ixgbe_driver_name,
 		 UTS_RELEASE);
 	/* Firmware Version */
-	strlcpy(info->firmware_version, adapter->eeprom_id,
+	strscpy(info->firmware_version, adapter->eeprom_id,
 		sizeof(info->firmware_version));
 
 	/* Model */
diff --git a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
index a809d702dedd..09b596597854 100644
--- a/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
+++ b/drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
@@ -10716,7 +10716,7 @@ static int ixgbe_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	netdev->netdev_ops = &ixgbe_netdev_ops;
 	ixgbe_set_ethtool_ops(netdev);
 	netdev->watchdog_timeo = 5 * HZ;
-	strlcpy(netdev->name, pci_name(pdev), sizeof(netdev->name));
+	strscpy(netdev->name, pci_name(pdev), sizeof(netdev->name));
 
 	/* Setup hw api */
 	hw->mac.ops   = *ii->mac_ops;
@@ -11004,7 +11004,7 @@ static int ixgbe_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 
 	err = ixgbe_read_pba_string_generic(hw, part_str, sizeof(part_str));
 	if (err)
-		strlcpy(part_str, "Unknown", sizeof(part_str));
+		strscpy(part_str, "Unknown", sizeof(part_str));
 	if (ixgbe_is_sfp(hw) && hw->phy.sfp_type != ixgbe_sfp_type_not_present)
 		e_dev_info("MAC: %d, PHY: %d, SFP+: %d, PBA No: %s\n",
 			   hw->mac.type, hw->phy.type, hw->phy.sfp_type,
diff --git a/drivers/net/ethernet/intel/ixgbevf/ethtool.c b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
index fed46872af2b..ccfa6b91aac6 100644
--- a/drivers/net/ethernet/intel/ixgbevf/ethtool.c
+++ b/drivers/net/ethernet/intel/ixgbevf/ethtool.c
@@ -213,8 +213,8 @@ static void ixgbevf_get_drvinfo(struct net_device *netdev,
 {
 	struct ixgbevf_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, ixgbevf_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->driver, ixgbevf_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 
 	drvinfo->n_priv_flags = IXGBEVF_PRIV_FLAGS_STR_LEN;
diff --git a/drivers/net/ethernet/jme.c b/drivers/net/ethernet/jme.c
index 2bed364625fe..d3cfe6224c44 100644
--- a/drivers/net/ethernet/jme.c
+++ b/drivers/net/ethernet/jme.c
@@ -2378,9 +2378,9 @@ jme_get_drvinfo(struct net_device *netdev,
 {
 	struct jme_adapter *jme = netdev_priv(netdev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(jme->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(jme->pdev), sizeof(info->bus_info));
 }
 
 static int
diff --git a/drivers/net/ethernet/korina.c b/drivers/net/ethernet/korina.c
index f98d9d627c71..b742800b8e95 100644
--- a/drivers/net/ethernet/korina.c
+++ b/drivers/net/ethernet/korina.c
@@ -694,9 +694,9 @@ static void netdev_get_drvinfo(struct net_device *dev,
 {
 	struct korina_private *lp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, lp->dev->name, sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, lp->dev->name, sizeof(info->bus_info));
 }
 
 static int netdev_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/marvell/mv643xx_eth.c b/drivers/net/ethernet/marvell/mv643xx_eth.c
index cb4c7654089a..1b1f088c44ac 100644
--- a/drivers/net/ethernet/marvell/mv643xx_eth.c
+++ b/drivers/net/ethernet/marvell/mv643xx_eth.c
@@ -1619,12 +1619,12 @@ mv643xx_eth_set_link_ksettings(struct net_device *dev,
 static void mv643xx_eth_get_drvinfo(struct net_device *dev,
 				    struct ethtool_drvinfo *drvinfo)
 {
-	strlcpy(drvinfo->driver, mv643xx_eth_driver_name,
+	strscpy(drvinfo->driver, mv643xx_eth_driver_name,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, mv643xx_eth_driver_version,
+	strscpy(drvinfo->version, mv643xx_eth_driver_version,
 		sizeof(drvinfo->version));
-	strlcpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
-	strlcpy(drvinfo->bus_info, "platform", sizeof(drvinfo->bus_info));
+	strscpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
+	strscpy(drvinfo->bus_info, "platform", sizeof(drvinfo->bus_info));
 }
 
 static int mv643xx_eth_get_coalesce(struct net_device *dev,
diff --git a/drivers/net/ethernet/marvell/mvneta.c b/drivers/net/ethernet/marvell/mvneta.c
index 6038965452d4..b829a06f6fae 100644
--- a/drivers/net/ethernet/marvell/mvneta.c
+++ b/drivers/net/ethernet/marvell/mvneta.c
@@ -3872,11 +3872,11 @@ mvneta_ethtool_get_coalesce(struct net_device *dev,
 static void mvneta_ethtool_get_drvinfo(struct net_device *dev,
 				    struct ethtool_drvinfo *drvinfo)
 {
-	strlcpy(drvinfo->driver, MVNETA_DRIVER_NAME,
+	strscpy(drvinfo->driver, MVNETA_DRIVER_NAME,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, MVNETA_DRIVER_VERSION,
+	strscpy(drvinfo->version, MVNETA_DRIVER_VERSION,
 		sizeof(drvinfo->version));
-	strlcpy(drvinfo->bus_info, dev_name(&dev->dev),
+	strscpy(drvinfo->bus_info, dev_name(&dev->dev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
index e63128b6b7c2..01089dc484f9 100644
--- a/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
+++ b/drivers/net/ethernet/marvell/mvpp2/mvpp2_main.c
@@ -3704,11 +3704,11 @@ mvpp2_ethtool_get_coalesce(struct net_device *dev,
 static void mvpp2_ethtool_get_drvinfo(struct net_device *dev,
 				      struct ethtool_drvinfo *drvinfo)
 {
-	strlcpy(drvinfo->driver, MVPP2_DRIVER_NAME,
+	strscpy(drvinfo->driver, MVPP2_DRIVER_NAME,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, MVPP2_DRIVER_VERSION,
+	strscpy(drvinfo->version, MVPP2_DRIVER_VERSION,
 		sizeof(drvinfo->version));
-	strlcpy(drvinfo->bus_info, dev_name(&dev->dev),
+	strscpy(drvinfo->bus_info, dev_name(&dev->dev),
 		sizeof(drvinfo->bus_info));
 }
 
* Unmerged path drivers/net/ethernet/marvell/octeontx2/nic/otx2_ethtool.c
* Unmerged path drivers/net/ethernet/marvell/prestera/prestera_ethtool.c
diff --git a/drivers/net/ethernet/marvell/pxa168_eth.c b/drivers/net/ethernet/marvell/pxa168_eth.c
index a61f0b6c374b..56bc6387b637 100644
--- a/drivers/net/ethernet/marvell/pxa168_eth.c
+++ b/drivers/net/ethernet/marvell/pxa168_eth.c
@@ -1374,10 +1374,10 @@ static void pxa168_eth_netpoll(struct net_device *dev)
 static void pxa168_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRIVER_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRIVER_VERSION, sizeof(info->version));
-	strlcpy(info->fw_version, "N/A", sizeof(info->fw_version));
-	strlcpy(info->bus_info, "N/A", sizeof(info->bus_info));
+	strscpy(info->driver, DRIVER_NAME, sizeof(info->driver));
+	strscpy(info->version, DRIVER_VERSION, sizeof(info->version));
+	strscpy(info->fw_version, "N/A", sizeof(info->fw_version));
+	strscpy(info->bus_info, "N/A", sizeof(info->bus_info));
 }
 
 static const struct ethtool_ops pxa168_ethtool_ops = {
diff --git a/drivers/net/ethernet/marvell/skge.c b/drivers/net/ethernet/marvell/skge.c
index 4c12140b09f8..521fad2e4b63 100644
--- a/drivers/net/ethernet/marvell/skge.c
+++ b/drivers/net/ethernet/marvell/skge.c
@@ -405,9 +405,9 @@ static void skge_get_drvinfo(struct net_device *dev,
 {
 	struct skge_port *skge = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(skge->hw->pdev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(skge->hw->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/marvell/sky2.c b/drivers/net/ethernet/marvell/sky2.c
index 01ad6616f75f..04d29567c076 100644
--- a/drivers/net/ethernet/marvell/sky2.c
+++ b/drivers/net/ethernet/marvell/sky2.c
@@ -3699,9 +3699,9 @@ static void sky2_get_drvinfo(struct net_device *dev,
 {
 	struct sky2_port *sky2 = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(sky2->hw->pdev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(sky2->hw->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/mediatek/mtk_eth_soc.c b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
index 3e2b333879e7..50ca979fcce7 100644
--- a/drivers/net/ethernet/mediatek/mtk_eth_soc.c
+++ b/drivers/net/ethernet/mediatek/mtk_eth_soc.c
@@ -2195,8 +2195,8 @@ static void mtk_get_drvinfo(struct net_device *dev,
 {
 	struct mtk_mac *mac = netdev_priv(dev);
 
-	strlcpy(info->driver, mac->hw->dev->driver->name, sizeof(info->driver));
-	strlcpy(info->bus_info, dev_name(mac->hw->dev), sizeof(info->bus_info));
+	strscpy(info->driver, mac->hw->dev->driver->name, sizeof(info->driver));
+	strscpy(info->bus_info, dev_name(mac->hw->dev), sizeof(info->bus_info));
 	info->n_stats = ARRAY_SIZE(mtk_ethtool_stats);
 }
 
* Unmerged path drivers/net/ethernet/mediatek/mtk_star_emac.c
diff --git a/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
index 2d4fb23b4008..019f7cf37235 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_ethtool.c
@@ -88,15 +88,15 @@ mlx4_en_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
 	struct mlx4_en_priv *priv = netdev_priv(dev);
 	struct mlx4_en_dev *mdev = priv->mdev;
 
-	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, DRV_VERSION,
+	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, DRV_VERSION,
 		sizeof(drvinfo->version));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		"%d.%d.%d",
 		(u16) (mdev->dev->caps.fw_ver >> 32),
 		(u16) ((mdev->dev->caps.fw_ver >> 16) & 0xffff),
 		(u16) (mdev->dev->caps.fw_ver & 0xffff));
-	strlcpy(drvinfo->bus_info, pci_name(mdev->dev->persist->pdev),
+	strscpy(drvinfo->bus_info, pci_name(mdev->dev->persist->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlx4/fw.c b/drivers/net/ethernet/mellanox/mlx4/fw.c
index 42c96c9d7fb1..a719ee8675f4 100644
--- a/drivers/net/ethernet/mellanox/mlx4/fw.c
+++ b/drivers/net/ethernet/mellanox/mlx4/fw.c
@@ -1779,7 +1779,7 @@ static void get_board_id(void *vsd, char *board_id)
 
 	if (be16_to_cpup(vsd + VSD_OFFSET_SIG1) == VSD_SIGNATURE_TOPSPIN &&
 	    be16_to_cpup(vsd + VSD_OFFSET_SIG2) == VSD_SIGNATURE_TOPSPIN) {
-		strlcpy(board_id, vsd + VSD_OFFSET_TS_BOARD_ID, MLX4_BOARD_ID_LEN);
+		strscpy(board_id, vsd + VSD_OFFSET_TS_BOARD_ID, MLX4_BOARD_ID_LEN);
 	} else {
 		/*
 		 * The board ID is a string but the firmware byte
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index 76853a5c1294..c6965fe6896b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@ -42,12 +42,12 @@ void mlx5e_ethtool_get_drvinfo(struct mlx5e_priv *priv,
 {
 	struct mlx5_core_dev *mdev = priv->mdev;
 
-	strlcpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		 "%d.%d.%04d (%.16s)",
 		 fw_rev_maj(mdev), fw_rev_min(mdev), fw_rev_sub(mdev),
 		 mdev->board_id);
-	strlcpy(drvinfo->bus_info, dev_name(mdev->device),
+	strscpy(drvinfo->bus_info, dev_name(mdev->device),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 621c0242c759..41390aadad17 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@ -69,7 +69,7 @@ static void mlx5e_rep_get_drvinfo(struct net_device *dev,
 	struct mlx5e_priv *priv = netdev_priv(dev);
 	struct mlx5_core_dev *mdev = priv->mdev;
 
-	strlcpy(drvinfo->driver, mlx5e_rep_driver_name,
+	strscpy(drvinfo->driver, mlx5e_rep_driver_name,
 		sizeof(drvinfo->driver));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		 "%d.%d.%04d (%.16s)",
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ethtool.c b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ethtool.c
index f4f7eaf16446..0f50e54bd2f9 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ethtool.c
@@ -39,7 +39,7 @@ static void mlx5i_get_drvinfo(struct net_device *dev,
 	struct mlx5e_priv *priv = mlx5i_epriv(dev);
 
 	mlx5e_ethtool_get_drvinfo(priv, drvinfo);
-	strlcpy(drvinfo->driver, KBUILD_MODNAME "[ib_ipoib]",
+	strscpy(drvinfo->driver, KBUILD_MODNAME "[ib_ipoib]",
 		sizeof(drvinfo->driver));
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlxsw/core.c b/drivers/net/ethernet/mellanox/mlxsw/core.c
index 49fab4a59db8..941ea9d238c4 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/core.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/core.c
@@ -606,7 +606,7 @@ static void mlxsw_emad_process_string_tlv(const struct sk_buff *skb,
 		return;
 
 	string = mlxsw_emad_string_tlv_string_data(string_tlv);
-	strlcpy(trans->emad_err_string, string,
+	strscpy(trans->emad_err_string, string,
 		MLXSW_EMAD_STRING_TLV_STRING_LEN);
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlxsw/minimal.c b/drivers/net/ethernet/mellanox/mlxsw/minimal.c
index ad80166720d6..261046848042 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/minimal.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/minimal.c
@@ -81,14 +81,14 @@ static void mlxsw_m_module_get_drvinfo(struct net_device *dev,
 	struct mlxsw_m_port *mlxsw_m_port = netdev_priv(dev);
 	struct mlxsw_m *mlxsw_m = mlxsw_m_port->mlxsw_m;
 
-	strlcpy(drvinfo->driver, mlxsw_m->bus_info->device_kind,
+	strscpy(drvinfo->driver, mlxsw_m->bus_info->device_kind,
 		sizeof(drvinfo->driver));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		 "%d.%d.%d",
 		 mlxsw_m->bus_info->fw_rev.major,
 		 mlxsw_m->bus_info->fw_rev.minor,
 		 mlxsw_m->bus_info->fw_rev.subminor);
-	strlcpy(drvinfo->bus_info, mlxsw_m->bus_info->device_name,
+	strscpy(drvinfo->bus_info, mlxsw_m->bus_info->device_name,
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/mellanox/mlxsw/spectrum_ethtool.c b/drivers/net/ethernet/mellanox/mlxsw/spectrum_ethtool.c
index 078601d31cde..1f0504ce3404 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/spectrum_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/spectrum_ethtool.c
@@ -14,16 +14,16 @@ static void mlxsw_sp_port_get_drvinfo(struct net_device *dev,
 	struct mlxsw_sp_port *mlxsw_sp_port = netdev_priv(dev);
 	struct mlxsw_sp *mlxsw_sp = mlxsw_sp_port->mlxsw_sp;
 
-	strlcpy(drvinfo->driver, mlxsw_sp->bus_info->device_kind,
+	strscpy(drvinfo->driver, mlxsw_sp->bus_info->device_kind,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, mlxsw_sp_driver_version,
+	strscpy(drvinfo->version, mlxsw_sp_driver_version,
 		sizeof(drvinfo->version));
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		 "%d.%d.%d",
 		 mlxsw_sp->bus_info->fw_rev.major,
 		 mlxsw_sp->bus_info->fw_rev.minor,
 		 mlxsw_sp->bus_info->fw_rev.subminor);
-	strlcpy(drvinfo->bus_info, mlxsw_sp->bus_info->device_name,
+	strscpy(drvinfo->bus_info, mlxsw_sp->bus_info->device_name,
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/micrel/ks8851.c b/drivers/net/ethernet/micrel/ks8851.c
index 3092d510ddfc..aa28131a8ef6 100644
--- a/drivers/net/ethernet/micrel/ks8851.c
+++ b/drivers/net/ethernet/micrel/ks8851.c
@@ -1058,9 +1058,9 @@ static const struct net_device_ops ks8851_netdev_ops = {
 static void ks8851_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *di)
 {
-	strlcpy(di->driver, "KS8851", sizeof(di->driver));
-	strlcpy(di->version, "1.00", sizeof(di->version));
-	strlcpy(di->bus_info, dev_name(dev->dev.parent), sizeof(di->bus_info));
+	strscpy(di->driver, "KS8851", sizeof(di->driver));
+	strscpy(di->version, "1.00", sizeof(di->version));
+	strscpy(di->bus_info, dev_name(dev->dev.parent), sizeof(di->bus_info));
 }
 
 static u32 ks8851_get_msglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/micrel/ksz884x.c b/drivers/net/ethernet/micrel/ksz884x.c
index d339acc0b659..3b555080dec2 100644
--- a/drivers/net/ethernet/micrel/ksz884x.c
+++ b/drivers/net/ethernet/micrel/ksz884x.c
@@ -6091,9 +6091,9 @@ static void netdev_get_drvinfo(struct net_device *dev,
 	struct dev_priv *priv = netdev_priv(dev);
 	struct dev_info *hw_priv = priv->adapter;
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(hw_priv->pdev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(hw_priv->pdev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/microchip/enc28j60.c b/drivers/net/ethernet/microchip/enc28j60.c
index a0923585e1c4..e8d39c42637b 100644
--- a/drivers/net/ethernet/microchip/enc28j60.c
+++ b/drivers/net/ethernet/microchip/enc28j60.c
@@ -1480,9 +1480,9 @@ static void enc28j60_restart_work_handler(struct work_struct *work)
 static void
 enc28j60_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info,
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info,
 		dev_name(dev->dev.parent), sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/microchip/encx24j600.c b/drivers/net/ethernet/microchip/encx24j600.c
index a4b2ea279493..4d42ae219954 100644
--- a/drivers/net/ethernet/microchip/encx24j600.c
+++ b/drivers/net/ethernet/microchip/encx24j600.c
@@ -934,9 +934,9 @@ static void encx24j600_get_regs(struct net_device *dev,
 static void encx24j600_get_drvinfo(struct net_device *dev,
 				   struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(dev->dev.parent),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(dev->dev.parent),
 		sizeof(info->bus_info));
 }
 
* Unmerged path drivers/net/ethernet/microchip/lan743x_ethtool.c
diff --git a/drivers/net/ethernet/myricom/myri10ge/myri10ge.c b/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
index 9eefcedc4820..aed5809c0c80 100644
--- a/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
+++ b/drivers/net/ethernet/myricom/myri10ge/myri10ge.c
@@ -1658,10 +1658,10 @@ myri10ge_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *info)
 {
 	struct myri10ge_priv *mgp = netdev_priv(netdev);
 
-	strlcpy(info->driver, "myri10ge", sizeof(info->driver));
-	strlcpy(info->version, MYRI10GE_VERSION_STR, sizeof(info->version));
-	strlcpy(info->fw_version, mgp->fw_version, sizeof(info->fw_version));
-	strlcpy(info->bus_info, pci_name(mgp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, "myri10ge", sizeof(info->driver));
+	strscpy(info->version, MYRI10GE_VERSION_STR, sizeof(info->version));
+	strscpy(info->fw_version, mgp->fw_version, sizeof(info->fw_version));
+	strscpy(info->bus_info, pci_name(mgp->pdev), sizeof(info->bus_info));
 }
 
 static int myri10ge_get_coalesce(struct net_device *netdev,
diff --git a/drivers/net/ethernet/natsemi/natsemi.c b/drivers/net/ethernet/natsemi/natsemi.c
index 04f2d7b88f15..11bfe93b5873 100644
--- a/drivers/net/ethernet/natsemi/natsemi.c
+++ b/drivers/net/ethernet/natsemi/natsemi.c
@@ -2568,9 +2568,9 @@ static void set_rx_mode(struct net_device *dev)
 static void get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct netdev_private *np = netdev_priv(dev);
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
 }
 
 static int get_regs_len(struct net_device *dev)
diff --git a/drivers/net/ethernet/natsemi/ns83820.c b/drivers/net/ethernet/natsemi/ns83820.c
index c201148bb69c..68d7a04a47ca 100644
--- a/drivers/net/ethernet/natsemi/ns83820.c
+++ b/drivers/net/ethernet/natsemi/ns83820.c
@@ -1366,9 +1366,9 @@ static int ns83820_set_link_ksettings(struct net_device *ndev,
 static void ns83820_get_drvinfo(struct net_device *ndev, struct ethtool_drvinfo *info)
 {
 	struct ns83820 *dev = PRIV(ndev);
-	strlcpy(info->driver, "ns83820", sizeof(info->driver));
-	strlcpy(info->version, VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(dev->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, "ns83820", sizeof(info->driver));
+	strscpy(info->version, VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(dev->pci_dev), sizeof(info->bus_info));
 }
 
 static u32 ns83820_get_link(struct net_device *ndev)
diff --git a/drivers/net/ethernet/neterion/s2io.c b/drivers/net/ethernet/neterion/s2io.c
index b4f4a86a3032..87b1c3615a38 100644
--- a/drivers/net/ethernet/neterion/s2io.c
+++ b/drivers/net/ethernet/neterion/s2io.c
@@ -5337,9 +5337,9 @@ static void s2io_ethtool_gdrvinfo(struct net_device *dev,
 {
 	struct s2io_nic *sp = netdev_priv(dev);
 
-	strlcpy(info->driver, s2io_driver_name, sizeof(info->driver));
-	strlcpy(info->version, s2io_driver_version, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(sp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, s2io_driver_name, sizeof(info->driver));
+	strscpy(info->version, s2io_driver_version, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(sp->pdev), sizeof(info->bus_info));
 }
 
 /**
* Unmerged path drivers/net/ethernet/netronome/nfp/nfp_net_ethtool.c
* Unmerged path drivers/net/ethernet/ni/nixge.c
diff --git a/drivers/net/ethernet/nvidia/forcedeth.c b/drivers/net/ethernet/nvidia/forcedeth.c
index 0e4f9e8c5826..2b8c55248776 100644
--- a/drivers/net/ethernet/nvidia/forcedeth.c
+++ b/drivers/net/ethernet/nvidia/forcedeth.c
@@ -4225,9 +4225,9 @@ static void nv_do_stats_poll(struct timer_list *t)
 static void nv_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct fe_priv *np = netdev_priv(dev);
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, FORCEDETH_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, FORCEDETH_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
 }
 
 static void nv_get_wol(struct net_device *dev, struct ethtool_wolinfo *wolinfo)
diff --git a/drivers/net/ethernet/nxp/lpc_eth.c b/drivers/net/ethernet/nxp/lpc_eth.c
index fb319591e119..658f4bdc9894 100644
--- a/drivers/net/ethernet/nxp/lpc_eth.c
+++ b/drivers/net/ethernet/nxp/lpc_eth.c
@@ -1214,9 +1214,9 @@ static int lpc_eth_open(struct net_device *ndev)
 static void lpc_eth_ethtool_getdrvinfo(struct net_device *ndev,
 	struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, MODNAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(ndev->dev.parent),
+	strscpy(info->driver, MODNAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(ndev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_ethtool.c b/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_ethtool.c
index 52bc3d8b299b..eeba3d9ec5af 100644
--- a/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_ethtool.c
+++ b/drivers/net/ethernet/oki-semi/pch_gbe/pch_gbe_ethtool.c
@@ -178,9 +178,9 @@ static void pch_gbe_get_drvinfo(struct net_device *netdev,
 {
 	struct pch_gbe_adapter *adapter = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, pch_driver_version, sizeof(drvinfo->version));
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->driver, KBUILD_MODNAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, pch_driver_version, sizeof(drvinfo->version));
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/packetengines/hamachi.c b/drivers/net/ethernet/packetengines/hamachi.c
index b7940e5ebb3c..449169e67f61 100644
--- a/drivers/net/ethernet/packetengines/hamachi.c
+++ b/drivers/net/ethernet/packetengines/hamachi.c
@@ -1804,9 +1804,9 @@ static void hamachi_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *
 {
 	struct hamachi_private *np = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
 }
 
 static int hamachi_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/packetengines/yellowfin.c b/drivers/net/ethernet/packetengines/yellowfin.c
index f68801152128..df68ad9204ab 100644
--- a/drivers/net/ethernet/packetengines/yellowfin.c
+++ b/drivers/net/ethernet/packetengines/yellowfin.c
@@ -1326,9 +1326,9 @@ static void yellowfin_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo
 {
 	struct yellowfin_private *np = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
 }
 
 static const struct ethtool_ops ethtool_ops = {
diff --git a/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c b/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c
index 17f97bd8c348..9286974133a6 100644
--- a/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c
+++ b/drivers/net/ethernet/qlogic/netxen/netxen_nic_ethtool.c
@@ -81,9 +81,9 @@ netxen_nic_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
 	u32 fw_minor = 0;
 	u32 fw_build = 0;
 
-	strlcpy(drvinfo->driver, netxen_nic_driver_name,
+	strscpy(drvinfo->driver, netxen_nic_driver_name,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, NETXEN_NIC_LINUX_VERSIONID,
+	strscpy(drvinfo->version, NETXEN_NIC_LINUX_VERSIONID,
 		sizeof(drvinfo->version));
 	fw_major = NXRD32(adapter, NETXEN_FW_VERSION_MAJOR);
 	fw_minor = NXRD32(adapter, NETXEN_FW_VERSION_MINOR);
@@ -91,7 +91,7 @@ netxen_nic_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		"%d.%d.%d", fw_major, fw_minor, fw_build);
 
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/qlogic/qed/qed_int.c b/drivers/net/ethernet/qlogic/qed/qed_int.c
index a72dd3ce1404..b8a03fb4b933 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_int.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_int.c
@@ -1119,7 +1119,7 @@ static int qed_int_deassertion(struct qed_hwfn  *p_hwfn,
 						snprintf(bit_name, 30,
 							 p_aeu->bit_name, num);
 					else
-						strlcpy(bit_name,
+						strscpy(bit_name,
 							p_aeu->bit_name, 30);
 
 					/* We now need to pass bitmask in its
diff --git a/drivers/net/ethernet/qlogic/qede/qede_ethtool.c b/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
index 44df1aa300ef..d21081f7cbd9 100644
--- a/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
+++ b/drivers/net/ethernet/qlogic/qede/qede_ethtool.c
@@ -624,7 +624,7 @@ static void qede_get_drvinfo(struct net_device *ndev,
 	struct qede_dev *edev = netdev_priv(ndev);
 	char mbi[ETHTOOL_FWVERS_LEN];
 
-	strlcpy(info->driver, "qede", sizeof(info->driver));
+	strscpy(info->driver, "qede", sizeof(info->driver));
 
 	snprintf(storm, ETHTOOL_FWVERS_LEN, "%d.%d.%d.%d",
 		 edev->dev_info.common.fw_major,
@@ -661,7 +661,7 @@ static void qede_get_drvinfo(struct net_device *ndev,
 			 "mfw %s", mfw);
 	}
 
-	strlcpy(info->bus_info, pci_name(edev->pdev), sizeof(info->bus_info));
+	strscpy(info->bus_info, pci_name(edev->pdev), sizeof(info->bus_info));
 }
 
 static void qede_get_wol(struct net_device *ndev, struct ethtool_wolinfo *wol)
* Unmerged path drivers/net/ethernet/qlogic/qede/qede_main.c
diff --git a/drivers/net/ethernet/qlogic/qla3xxx.c b/drivers/net/ethernet/qlogic/qla3xxx.c
index 81dff2dd3d4d..deb35d408ed1 100644
--- a/drivers/net/ethernet/qlogic/qla3xxx.c
+++ b/drivers/net/ethernet/qlogic/qla3xxx.c
@@ -1738,10 +1738,10 @@ static void ql_get_drvinfo(struct net_device *ndev,
 			   struct ethtool_drvinfo *drvinfo)
 {
 	struct ql3_adapter *qdev = netdev_priv(ndev);
-	strlcpy(drvinfo->driver, ql3xxx_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, ql3xxx_driver_version,
+	strscpy(drvinfo->driver, ql3xxx_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, ql3xxx_driver_version,
 		sizeof(drvinfo->version));
-	strlcpy(drvinfo->bus_info, pci_name(qdev->pdev),
+	strscpy(drvinfo->bus_info, pci_name(qdev->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c
index a0f885d8756c..a6abebeb4bd3 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_ethtool.c
@@ -278,10 +278,10 @@ qlcnic_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *drvinfo)
 	snprintf(drvinfo->fw_version, sizeof(drvinfo->fw_version),
 		"%d.%d.%d", fw_major, fw_minor, fw_build);
 
-	strlcpy(drvinfo->bus_info, pci_name(adapter->pdev),
+	strscpy(drvinfo->bus_info, pci_name(adapter->pdev),
 		sizeof(drvinfo->bus_info));
-	strlcpy(drvinfo->driver, qlcnic_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, QLCNIC_LINUX_VERSIONID,
+	strscpy(drvinfo->driver, qlcnic_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, QLCNIC_LINUX_VERSIONID,
 		sizeof(drvinfo->version));
 }
 
diff --git a/drivers/net/ethernet/qualcomm/qca_debug.c b/drivers/net/ethernet/qualcomm/qca_debug.c
index 90d12cda57fe..44e5d3a3eef4 100644
--- a/drivers/net/ethernet/qualcomm/qca_debug.c
+++ b/drivers/net/ethernet/qualcomm/qca_debug.c
@@ -180,10 +180,10 @@ qcaspi_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *p)
 {
 	struct qcaspi *qca = netdev_priv(dev);
 
-	strlcpy(p->driver, QCASPI_DRV_NAME, sizeof(p->driver));
-	strlcpy(p->version, QCASPI_DRV_VERSION, sizeof(p->version));
-	strlcpy(p->fw_version, "QCA7000", sizeof(p->fw_version));
-	strlcpy(p->bus_info, dev_name(&qca->spi_dev->dev),
+	strscpy(p->driver, QCASPI_DRV_NAME, sizeof(p->driver));
+	strscpy(p->version, QCASPI_DRV_VERSION, sizeof(p->version));
+	strscpy(p->fw_version, "QCA7000", sizeof(p->fw_version));
+	strscpy(p->bus_info, dev_name(&qca->spi_dev->dev),
 		sizeof(p->bus_info));
 }
 
diff --git a/drivers/net/ethernet/rdc/r6040.c b/drivers/net/ethernet/rdc/r6040.c
index 25b4c8152b43..b51d843c676a 100644
--- a/drivers/net/ethernet/rdc/r6040.c
+++ b/drivers/net/ethernet/rdc/r6040.c
@@ -950,9 +950,9 @@ static void netdev_get_drvinfo(struct net_device *dev,
 {
 	struct r6040_private *rp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(rp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(rp->pdev), sizeof(info->bus_info));
 }
 
 static const struct ethtool_ops netdev_ethtool_ops = {
diff --git a/drivers/net/ethernet/realtek/8139cp.c b/drivers/net/ethernet/realtek/8139cp.c
index 3a49f41d811c..42a84072dc3a 100644
--- a/drivers/net/ethernet/realtek/8139cp.c
+++ b/drivers/net/ethernet/realtek/8139cp.c
@@ -1377,9 +1377,9 @@ static void cp_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *info
 {
 	struct cp_private *cp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(cp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(cp->pdev), sizeof(info->bus_info));
 }
 
 static void cp_get_ringparam(struct net_device *dev,
diff --git a/drivers/net/ethernet/realtek/8139too.c b/drivers/net/ethernet/realtek/8139too.c
index a481c12b8ce8..a9f10563dee6 100644
--- a/drivers/net/ethernet/realtek/8139too.c
+++ b/drivers/net/ethernet/realtek/8139too.c
@@ -2378,9 +2378,9 @@ static int rtl8139_set_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
 static void rtl8139_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct rtl8139_private *tp = netdev_priv(dev);
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(tp->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(tp->pci_dev), sizeof(info->bus_info));
 }
 
 static int rtl8139_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/realtek/r8169_main.c b/drivers/net/ethernet/realtek/r8169_main.c
index af8f470ce7fa..5655b940eacf 100644
--- a/drivers/net/ethernet/realtek/r8169_main.c
+++ b/drivers/net/ethernet/realtek/r8169_main.c
@@ -1453,11 +1453,11 @@ static void rtl8169_get_drvinfo(struct net_device *dev,
 	struct rtl8169_private *tp = netdev_priv(dev);
 	struct rtl_fw *rtl_fw = tp->rtl_fw;
 
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->bus_info, pci_name(tp->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->bus_info, pci_name(tp->pci_dev), sizeof(info->bus_info));
 	BUILD_BUG_ON(sizeof(info->fw_version) < sizeof(rtl_fw->version));
 	if (rtl_fw)
-		strlcpy(info->fw_version, rtl_fw->version,
+		strscpy(info->fw_version, rtl_fw->version,
 			sizeof(info->fw_version));
 }
 
diff --git a/drivers/net/ethernet/rocker/rocker_main.c b/drivers/net/ethernet/rocker/rocker_main.c
index fbd127ea6ae3..26dff7f6ed99 100644
--- a/drivers/net/ethernet/rocker/rocker_main.c
+++ b/drivers/net/ethernet/rocker/rocker_main.c
@@ -2224,8 +2224,8 @@ rocker_port_set_link_ksettings(struct net_device *dev,
 static void rocker_port_get_drvinfo(struct net_device *dev,
 				    struct ethtool_drvinfo *drvinfo)
 {
-	strlcpy(drvinfo->driver, rocker_driver_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, UTS_RELEASE, sizeof(drvinfo->version));
+	strscpy(drvinfo->driver, rocker_driver_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, UTS_RELEASE, sizeof(drvinfo->version));
 }
 
 static struct rocker_port_stats {
diff --git a/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c b/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c
index 9f497898c2a8..87f7079269c4 100644
--- a/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c
+++ b/drivers/net/ethernet/samsung/sxgbe/sxgbe_ethtool.c
@@ -178,8 +178,8 @@ static int sxgbe_set_eee(struct net_device *dev,
 static void sxgbe_getdrvinfo(struct net_device *dev,
 			     struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 }
 
 static u32 sxgbe_getmsglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/sfc/efx.c b/drivers/net/ethernet/sfc/efx.c
index 62eaf90feb63..1eb7c3e00e33 100644
--- a/drivers/net/ethernet/sfc/efx.c
+++ b/drivers/net/ethernet/sfc/efx.c
@@ -781,7 +781,7 @@ static void efx_unregister_netdev(struct efx_nic *efx)
 	BUG_ON(netdev_priv(efx->net_dev) != efx);
 
 	if (efx_dev_registered(efx)) {
-		strlcpy(efx->name, pci_name(efx->pci_dev), sizeof(efx->name));
+		strscpy(efx->name, pci_name(efx->pci_dev), sizeof(efx->name));
 		efx_fini_mcdi_logging(efx);
 		device_remove_file(&efx->pci_dev->dev, &dev_attr_phy_type);
 		unregister_netdev(efx->net_dev);
diff --git a/drivers/net/ethernet/sfc/efx_common.c b/drivers/net/ethernet/sfc/efx_common.c
index f187631b2c5c..6ea61aa5f69b 100644
--- a/drivers/net/ethernet/sfc/efx_common.c
+++ b/drivers/net/ethernet/sfc/efx_common.c
@@ -995,7 +995,7 @@ int efx_init_struct(struct efx_nic *efx,
 	efx->pci_dev = pci_dev;
 	efx->msg_enable = debug;
 	efx->state = STATE_UNINIT;
-	strlcpy(efx->name, pci_name(pci_dev), sizeof(efx->name));
+	strscpy(efx->name, pci_name(pci_dev), sizeof(efx->name));
 
 	efx->net_dev = net_dev;
 	efx->rx_prefix_size = efx->type->rx_prefix_size;
diff --git a/drivers/net/ethernet/sfc/ethtool_common.c b/drivers/net/ethernet/sfc/ethtool_common.c
index bd552c7dffcb..849176adf2e2 100644
--- a/drivers/net/ethernet/sfc/ethtool_common.c
+++ b/drivers/net/ethernet/sfc/ethtool_common.c
@@ -105,10 +105,10 @@ void efx_ethtool_get_drvinfo(struct net_device *net_dev,
 {
 	struct efx_nic *efx = netdev_priv(net_dev);
 
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
 	efx_mcdi_print_fwver(efx, info->fw_version,
 			     sizeof(info->fw_version));
-	strlcpy(info->bus_info, pci_name(efx->pci_dev), sizeof(info->bus_info));
+	strscpy(info->bus_info, pci_name(efx->pci_dev), sizeof(info->bus_info));
 }
 
 u32 efx_ethtool_get_msglevel(struct net_device *net_dev)
@@ -467,7 +467,7 @@ void efx_ethtool_get_strings(struct net_device *net_dev,
 		strings += (efx->type->describe_stats(efx, strings) *
 			    ETH_GSTRING_LEN);
 		for (i = 0; i < EFX_ETHTOOL_SW_STAT_COUNT; i++)
-			strlcpy(strings + i * ETH_GSTRING_LEN,
+			strscpy(strings + i * ETH_GSTRING_LEN,
 				efx_sw_stat_desc[i].name, ETH_GSTRING_LEN);
 		strings += EFX_ETHTOOL_SW_STAT_COUNT * ETH_GSTRING_LEN;
 		strings += (efx_describe_per_queue_stats(efx, strings) *
diff --git a/drivers/net/ethernet/sfc/falcon/efx.c b/drivers/net/ethernet/sfc/falcon/efx.c
index e73a06debd2b..32f0dacaa0b1 100644
--- a/drivers/net/ethernet/sfc/falcon/efx.c
+++ b/drivers/net/ethernet/sfc/falcon/efx.c
@@ -2365,7 +2365,7 @@ static void ef4_unregister_netdev(struct ef4_nic *efx)
 	BUG_ON(netdev_priv(efx->net_dev) != efx);
 
 	if (ef4_dev_registered(efx)) {
-		strlcpy(efx->name, pci_name(efx->pci_dev), sizeof(efx->name));
+		strscpy(efx->name, pci_name(efx->pci_dev), sizeof(efx->name));
 		device_remove_file(&efx->pci_dev->dev, &dev_attr_phy_type);
 		unregister_netdev(efx->net_dev);
 	}
@@ -2676,7 +2676,7 @@ static int ef4_init_struct(struct ef4_nic *efx,
 	efx->pci_dev = pci_dev;
 	efx->msg_enable = debug;
 	efx->state = STATE_UNINIT;
-	strlcpy(efx->name, pci_name(pci_dev), sizeof(efx->name));
+	strscpy(efx->name, pci_name(pci_dev), sizeof(efx->name));
 
 	efx->net_dev = net_dev;
 	efx->rx_prefix_size = efx->type->rx_prefix_size;
diff --git a/drivers/net/ethernet/sfc/falcon/ethtool.c b/drivers/net/ethernet/sfc/falcon/ethtool.c
index c8a01321ae81..7e0a768a7879 100644
--- a/drivers/net/ethernet/sfc/falcon/ethtool.c
+++ b/drivers/net/ethernet/sfc/falcon/ethtool.c
@@ -162,9 +162,9 @@ static void ef4_ethtool_get_drvinfo(struct net_device *net_dev,
 {
 	struct ef4_nic *efx = netdev_priv(net_dev);
 
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->version, EF4_DRIVER_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(efx->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->version, EF4_DRIVER_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(efx->pci_dev), sizeof(info->bus_info));
 }
 
 static int ef4_ethtool_get_regs_len(struct net_device *net_dev)
@@ -412,7 +412,7 @@ static void ef4_ethtool_get_strings(struct net_device *net_dev,
 		strings += (efx->type->describe_stats(efx, strings) *
 			    ETH_GSTRING_LEN);
 		for (i = 0; i < EF4_ETHTOOL_SW_STAT_COUNT; i++)
-			strlcpy(strings + i * ETH_GSTRING_LEN,
+			strscpy(strings + i * ETH_GSTRING_LEN,
 				ef4_sw_stat_desc[i].name, ETH_GSTRING_LEN);
 		strings += EF4_ETHTOOL_SW_STAT_COUNT * ETH_GSTRING_LEN;
 		strings += (ef4_describe_per_queue_stats(efx, strings) *
diff --git a/drivers/net/ethernet/sfc/falcon/falcon.c b/drivers/net/ethernet/sfc/falcon/falcon.c
index 3324a6219a09..7a1c9337081b 100644
--- a/drivers/net/ethernet/sfc/falcon/falcon.c
+++ b/drivers/net/ethernet/sfc/falcon/falcon.c
@@ -2387,7 +2387,7 @@ static int falcon_probe_nic(struct ef4_nic *efx)
 	board->i2c_data.data = efx;
 	board->i2c_adap.algo_data = &board->i2c_data;
 	board->i2c_adap.dev.parent = &efx->pci_dev->dev;
-	strlcpy(board->i2c_adap.name, "SFC4000 GPIO",
+	strscpy(board->i2c_adap.name, "SFC4000 GPIO",
 		sizeof(board->i2c_adap.name));
 	rc = i2c_bit_add_bus(&board->i2c_adap);
 	if (rc)
diff --git a/drivers/net/ethernet/sfc/falcon/nic.c b/drivers/net/ethernet/sfc/falcon/nic.c
index 156da315ec89..78c851b5a56f 100644
--- a/drivers/net/ethernet/sfc/falcon/nic.c
+++ b/drivers/net/ethernet/sfc/falcon/nic.c
@@ -452,7 +452,7 @@ size_t ef4_nic_describe_stats(const struct ef4_hw_stat_desc *desc, size_t count,
 	for_each_set_bit(index, mask, count) {
 		if (desc[index].name) {
 			if (names) {
-				strlcpy(names, desc[index].name,
+				strscpy(names, desc[index].name,
 					ETH_GSTRING_LEN);
 				names += ETH_GSTRING_LEN;
 			}
diff --git a/drivers/net/ethernet/sfc/mcdi_mon.c b/drivers/net/ethernet/sfc/mcdi_mon.c
index 5954fcfee2b1..f5128db7c7e7 100644
--- a/drivers/net/ethernet/sfc/mcdi_mon.c
+++ b/drivers/net/ethernet/sfc/mcdi_mon.c
@@ -285,7 +285,7 @@ efx_mcdi_mon_add_attr(struct efx_nic *efx, const char *name,
 	struct efx_mcdi_mon *hwmon = efx_mcdi_mon(efx);
 	struct efx_mcdi_mon_attribute *attr = &hwmon->attrs[hwmon->n_attrs];
 
-	strlcpy(attr->name, name, sizeof(attr->name));
+	strscpy(attr->name, name, sizeof(attr->name));
 	attr->index = index;
 	attr->type = type;
 	if (type < ARRAY_SIZE(efx_mcdi_sensor_type))
diff --git a/drivers/net/ethernet/sfc/nic.c b/drivers/net/ethernet/sfc/nic.c
index 22fbb0ae77fb..63e2394382bb 100644
--- a/drivers/net/ethernet/sfc/nic.c
+++ b/drivers/net/ethernet/sfc/nic.c
@@ -465,7 +465,7 @@ size_t efx_nic_describe_stats(const struct efx_hw_stat_desc *desc, size_t count,
 	for_each_set_bit(index, mask, count) {
 		if (desc[index].name) {
 			if (names) {
-				strlcpy(names, desc[index].name,
+				strscpy(names, desc[index].name,
 					ETH_GSTRING_LEN);
 				names += ETH_GSTRING_LEN;
 			}
* Unmerged path drivers/net/ethernet/sfc/siena/efx.c
* Unmerged path drivers/net/ethernet/sfc/siena/efx_common.c
* Unmerged path drivers/net/ethernet/sfc/siena/ethtool_common.c
* Unmerged path drivers/net/ethernet/sfc/siena/mcdi_mon.c
* Unmerged path drivers/net/ethernet/sfc/siena/nic.c
* Unmerged path drivers/net/ethernet/sgi/ioc3-eth.c
diff --git a/drivers/net/ethernet/sis/sis190.c b/drivers/net/ethernet/sis/sis190.c
index a0ee171e23df..36c4199394f5 100644
--- a/drivers/net/ethernet/sis/sis190.c
+++ b/drivers/net/ethernet/sis/sis190.c
@@ -1755,9 +1755,9 @@ static void sis190_get_drvinfo(struct net_device *dev,
 {
 	struct sis190_private *tp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(tp->pci_dev),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(tp->pci_dev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/sis/sis900.c b/drivers/net/ethernet/sis/sis900.c
index c50a8834f80e..6cd7b1a05baf 100644
--- a/drivers/net/ethernet/sis/sis900.c
+++ b/drivers/net/ethernet/sis/sis900.c
@@ -2009,9 +2009,9 @@ static void sis900_get_drvinfo(struct net_device *net_dev,
 {
 	struct sis900_private *sis_priv = netdev_priv(net_dev);
 
-	strlcpy(info->driver, SIS900_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->version, SIS900_DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(sis_priv->pci_dev),
+	strscpy(info->driver, SIS900_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->version, SIS900_DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(sis_priv->pci_dev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/smsc/epic100.c b/drivers/net/ethernet/smsc/epic100.c
index 4a570f8f2b1e..cb9f438010f8 100644
--- a/drivers/net/ethernet/smsc/epic100.c
+++ b/drivers/net/ethernet/smsc/epic100.c
@@ -1380,9 +1380,9 @@ static void netdev_get_drvinfo (struct net_device *dev, struct ethtool_drvinfo *
 {
 	struct epic_private *np = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(np->pci_dev), sizeof(info->bus_info));
 }
 
 static int netdev_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/smsc/smc911x.c b/drivers/net/ethernet/smsc/smc911x.c
index 1e178d16d010..8893c78d55b0 100644
--- a/drivers/net/ethernet/smsc/smc911x.c
+++ b/drivers/net/ethernet/smsc/smc911x.c
@@ -1517,9 +1517,9 @@ smc911x_ethtool_set_link_ksettings(struct net_device *dev,
 static void
 smc911x_ethtool_getdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, CARDNAME, sizeof(info->driver));
-	strlcpy(info->version, version, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(dev->dev.parent),
+	strscpy(info->driver, CARDNAME, sizeof(info->driver));
+	strscpy(info->version, version, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(dev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/smsc/smc91c92_cs.c b/drivers/net/ethernet/smsc/smc91c92_cs.c
index f2a50eb3c1e0..085eab7bc15c 100644
--- a/drivers/net/ethernet/smsc/smc91c92_cs.c
+++ b/drivers/net/ethernet/smsc/smc91c92_cs.c
@@ -1906,8 +1906,8 @@ static int check_if_running(struct net_device *dev)
 
 static void smc_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 }
 
 static int smc_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/smsc/smc91x.c b/drivers/net/ethernet/smsc/smc91x.c
index 73197f4bac07..72dd808e8c73 100644
--- a/drivers/net/ethernet/smsc/smc91x.c
+++ b/drivers/net/ethernet/smsc/smc91x.c
@@ -1600,9 +1600,9 @@ smc_ethtool_set_link_ksettings(struct net_device *dev,
 static void
 smc_ethtool_getdrvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, CARDNAME, sizeof(info->driver));
-	strlcpy(info->version, version, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(dev->dev.parent),
+	strscpy(info->driver, CARDNAME, sizeof(info->driver));
+	strscpy(info->version, version, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(dev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/smsc/smsc911x.c b/drivers/net/ethernet/smsc/smsc911x.c
index 98a1e6be8571..2632ffd966db 100644
--- a/drivers/net/ethernet/smsc/smsc911x.c
+++ b/drivers/net/ethernet/smsc/smsc911x.c
@@ -1967,9 +1967,9 @@ static int smsc911x_do_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)
 static void smsc911x_ethtool_getdrvinfo(struct net_device *dev,
 					struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, SMSC_CHIPNAME, sizeof(info->driver));
-	strlcpy(info->version, SMSC_DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(dev->dev.parent),
+	strscpy(info->driver, SMSC_CHIPNAME, sizeof(info->driver));
+	strscpy(info->version, SMSC_DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(dev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/smsc/smsc9420.c b/drivers/net/ethernet/smsc/smsc9420.c
index 9b6366b20110..7dfb85cafe05 100644
--- a/drivers/net/ethernet/smsc/smsc9420.c
+++ b/drivers/net/ethernet/smsc/smsc9420.c
@@ -236,10 +236,10 @@ static void smsc9420_ethtool_get_drvinfo(struct net_device *netdev,
 {
 	struct smsc9420_pdata *pd = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->bus_info, pci_name(pd->pdev),
+	strscpy(drvinfo->driver, DRV_NAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->bus_info, pci_name(pd->pdev),
 		sizeof(drvinfo->bus_info));
-	strlcpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
+	strscpy(drvinfo->version, DRV_VERSION, sizeof(drvinfo->version));
 }
 
 static u32 smsc9420_ethtool_get_msglevel(struct net_device *netdev)
diff --git a/drivers/net/ethernet/socionext/netsec.c b/drivers/net/ethernet/socionext/netsec.c
index 63c23f878c12..e3f9192b7217 100644
--- a/drivers/net/ethernet/socionext/netsec.c
+++ b/drivers/net/ethernet/socionext/netsec.c
@@ -481,8 +481,8 @@ static int netsec_phy_read(struct mii_bus *bus, int phy_addr, int reg_addr)
 static void netsec_et_get_drvinfo(struct net_device *net_device,
 				  struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, "netsec", sizeof(info->driver));
-	strlcpy(info->bus_info, dev_name(net_device->dev.parent),
+	strscpy(info->driver, "netsec", sizeof(info->driver));
+	strscpy(info->bus_info, dev_name(net_device->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/socionext/sni_ave.c b/drivers/net/ethernet/socionext/sni_ave.c
index 4d0244d7b05b..2fd5f842f73c 100644
--- a/drivers/net/ethernet/socionext/sni_ave.c
+++ b/drivers/net/ethernet/socionext/sni_ave.c
@@ -393,8 +393,8 @@ static void ave_ethtool_get_drvinfo(struct net_device *ndev,
 {
 	struct device *dev = ndev->dev.parent;
 
-	strlcpy(info->driver, dev->driver->name, sizeof(info->driver));
-	strlcpy(info->bus_info, dev_name(dev), sizeof(info->bus_info));
+	strscpy(info->driver, dev->driver->name, sizeof(info->driver));
+	strscpy(info->bus_info, dev_name(dev), sizeof(info->bus_info));
 	ave_hw_read_version(ndev, info->fw_version, sizeof(info->fw_version));
 }
 
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
index 6dcadef840fd..4fb494b0b76e 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_ethtool.c
@@ -277,15 +277,15 @@ static void stmmac_ethtool_getdrvinfo(struct net_device *dev,
 	struct stmmac_priv *priv = netdev_priv(dev);
 
 	if (priv->plat->has_gmac || priv->plat->has_gmac4)
-		strlcpy(info->driver, GMAC_ETHTOOL_NAME, sizeof(info->driver));
+		strscpy(info->driver, GMAC_ETHTOOL_NAME, sizeof(info->driver));
 	else if (priv->plat->has_xgmac)
-		strlcpy(info->driver, XGMAC_ETHTOOL_NAME, sizeof(info->driver));
+		strscpy(info->driver, XGMAC_ETHTOOL_NAME, sizeof(info->driver));
 	else
-		strlcpy(info->driver, MAC100_ETHTOOL_NAME,
+		strscpy(info->driver, MAC100_ETHTOOL_NAME,
 			sizeof(info->driver));
 
 	if (priv->plat->pdev) {
-		strlcpy(info->bus_info, pci_name(priv->plat->pdev),
+		strscpy(info->bus_info, pci_name(priv->plat->pdev),
 			sizeof(info->bus_info));
 	}
 	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
diff --git a/drivers/net/ethernet/sun/cassini.c b/drivers/net/ethernet/sun/cassini.c
index ef5ea865fc96..39157c3da2de 100644
--- a/drivers/net/ethernet/sun/cassini.c
+++ b/drivers/net/ethernet/sun/cassini.c
@@ -4525,9 +4525,9 @@ static void cas_set_multicast(struct net_device *dev)
 static void cas_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
 	struct cas *cp = netdev_priv(dev);
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(cp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(cp->pdev), sizeof(info->bus_info));
 }
 
 static int cas_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/sun/ldmvsw.c b/drivers/net/ethernet/sun/ldmvsw.c
index d42f47f6c632..ab522067de96 100644
--- a/drivers/net/ethernet/sun/ldmvsw.c
+++ b/drivers/net/ethernet/sun/ldmvsw.c
@@ -63,8 +63,8 @@ static struct vio_version vsw_versions[] = {
 static void vsw_get_drvinfo(struct net_device *dev,
 			    struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
 }
 
 static u32 vsw_get_msglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/sun/niu.c b/drivers/net/ethernet/sun/niu.c
index 120a932ae896..1ffe4a1f4f76 100644
--- a/drivers/net/ethernet/sun/niu.c
+++ b/drivers/net/ethernet/sun/niu.c
@@ -6800,12 +6800,12 @@ static void niu_get_drvinfo(struct net_device *dev,
 	struct niu *np = netdev_priv(dev);
 	struct niu_vpd *vpd = &np->vpd;
 
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
 	snprintf(info->fw_version, sizeof(info->fw_version), "%d.%d",
 		vpd->fcode_major, vpd->fcode_minor);
 	if (np->parent->plat_type != PLAT_TYPE_NIU)
-		strlcpy(info->bus_info, pci_name(np->pdev),
+		strscpy(info->bus_info, pci_name(np->pdev),
 			sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/sun/sunbmac.c b/drivers/net/ethernet/sun/sunbmac.c
index e504c0df0b83..6b8972655ab9 100644
--- a/drivers/net/ethernet/sun/sunbmac.c
+++ b/drivers/net/ethernet/sun/sunbmac.c
@@ -1037,8 +1037,8 @@ static void bigmac_set_multicast(struct net_device *dev)
 /* Ethtool support... */
 static void bigmac_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, "sunbmac", sizeof(info->driver));
-	strlcpy(info->version, "2.0", sizeof(info->version));
+	strscpy(info->driver, "sunbmac", sizeof(info->driver));
+	strscpy(info->version, "2.0", sizeof(info->version));
 }
 
 static u32 bigmac_get_link(struct net_device *dev)
diff --git a/drivers/net/ethernet/sun/sungem.c b/drivers/net/ethernet/sun/sungem.c
index be0f868a619b..080f4462d5ee 100644
--- a/drivers/net/ethernet/sun/sungem.c
+++ b/drivers/net/ethernet/sun/sungem.c
@@ -2519,9 +2519,9 @@ static void gem_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info
 {
 	struct gem *gp = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(gp->pdev), sizeof(info->bus_info));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(gp->pdev), sizeof(info->bus_info));
 }
 
 static int gem_get_link_ksettings(struct net_device *dev,
diff --git a/drivers/net/ethernet/sun/sunhme.c b/drivers/net/ethernet/sun/sunhme.c
index af6f82f5ce6e..92299d8e4732 100644
--- a/drivers/net/ethernet/sun/sunhme.c
+++ b/drivers/net/ethernet/sun/sunhme.c
@@ -2511,11 +2511,11 @@ static void hme_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info
 {
 	struct happy_meal *hp = netdev_priv(dev);
 
-	strlcpy(info->driver, "sunhme", sizeof(info->driver));
-	strlcpy(info->version, "2.02", sizeof(info->version));
+	strscpy(info->driver, "sunhme", sizeof(info->driver));
+	strscpy(info->version, "2.02", sizeof(info->version));
 	if (hp->happy_flags & HFLAG_PCI) {
 		struct pci_dev *pdev = hp->happy_dev;
-		strlcpy(info->bus_info, pci_name(pdev), sizeof(info->bus_info));
+		strscpy(info->bus_info, pci_name(pdev), sizeof(info->bus_info));
 	}
 #ifdef CONFIG_SBUS
 	else {
diff --git a/drivers/net/ethernet/sun/sunqe.c b/drivers/net/ethernet/sun/sunqe.c
index d39a0de7aca0..8cd3a10e48e8 100644
--- a/drivers/net/ethernet/sun/sunqe.c
+++ b/drivers/net/ethernet/sun/sunqe.c
@@ -684,8 +684,8 @@ static void qe_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *info)
 	struct sunqe *qep = netdev_priv(dev);
 	struct platform_device *op;
 
-	strlcpy(info->driver, "sunqe", sizeof(info->driver));
-	strlcpy(info->version, "3.0", sizeof(info->version));
+	strscpy(info->driver, "sunqe", sizeof(info->driver));
+	strscpy(info->version, "3.0", sizeof(info->version));
 
 	op = qep->op;
 	regs = of_get_property(op->dev.of_node, "reg", NULL);
diff --git a/drivers/net/ethernet/sun/sunvnet.c b/drivers/net/ethernet/sun/sunvnet.c
index 12539b357a78..2b939ba1d849 100644
--- a/drivers/net/ethernet/sun/sunvnet.c
+++ b/drivers/net/ethernet/sun/sunvnet.c
@@ -60,8 +60,8 @@ static struct vio_version vnet_versions[] = {
 static void vnet_get_drvinfo(struct net_device *dev,
 			     struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_MODULE_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_MODULE_VERSION, sizeof(info->version));
 }
 
 static u32 vnet_get_msglevel(struct net_device *dev)
diff --git a/drivers/net/ethernet/synopsys/dwc-xlgmac-common.c b/drivers/net/ethernet/synopsys/dwc-xlgmac-common.c
index eb1c6b03c329..31c38b263e31 100644
--- a/drivers/net/ethernet/synopsys/dwc-xlgmac-common.c
+++ b/drivers/net/ethernet/synopsys/dwc-xlgmac-common.c
@@ -54,8 +54,8 @@ static void xlgmac_default_config(struct xlgmac_pdata *pdata)
 	pdata->phy_speed = SPEED_25000;
 	pdata->sysclk_rate = XLGMAC_SYSCLOCK;
 
-	strlcpy(pdata->drv_name, XLGMAC_DRV_NAME, sizeof(pdata->drv_name));
-	strlcpy(pdata->drv_ver, XLGMAC_DRV_VERSION, sizeof(pdata->drv_ver));
+	strscpy(pdata->drv_name, XLGMAC_DRV_NAME, sizeof(pdata->drv_name));
+	strscpy(pdata->drv_ver, XLGMAC_DRV_VERSION, sizeof(pdata->drv_ver));
 }
 
 static void xlgmac_init_all_ops(struct xlgmac_pdata *pdata)
diff --git a/drivers/net/ethernet/synopsys/dwc-xlgmac-ethtool.c b/drivers/net/ethernet/synopsys/dwc-xlgmac-ethtool.c
index 20a745e9fb37..c8fcb4ab7f99 100644
--- a/drivers/net/ethernet/synopsys/dwc-xlgmac-ethtool.c
+++ b/drivers/net/ethernet/synopsys/dwc-xlgmac-ethtool.c
@@ -102,9 +102,9 @@ static void xlgmac_ethtool_get_drvinfo(struct net_device *netdev,
 	u32 ver = pdata->hw_feat.version;
 	u32 snpsver, devid, userver;
 
-	strlcpy(drvinfo->driver, pdata->drv_name, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, pdata->drv_ver, sizeof(drvinfo->version));
-	strlcpy(drvinfo->bus_info, dev_name(pdata->dev),
+	strscpy(drvinfo->driver, pdata->drv_name, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, pdata->drv_ver, sizeof(drvinfo->version));
+	strscpy(drvinfo->bus_info, dev_name(pdata->dev),
 		sizeof(drvinfo->bus_info));
 	/* S|SNPSVER: Synopsys-defined Version
 	 * D|DEVID: Indicates the Device family
diff --git a/drivers/net/ethernet/tehuti/tehuti.c b/drivers/net/ethernet/tehuti/tehuti.c
index bb73343e3881..197473c04aa4 100644
--- a/drivers/net/ethernet/tehuti/tehuti.c
+++ b/drivers/net/ethernet/tehuti/tehuti.c
@@ -2160,10 +2160,10 @@ bdx_get_drvinfo(struct net_device *netdev, struct ethtool_drvinfo *drvinfo)
 {
 	struct bdx_priv *priv = netdev_priv(netdev);
 
-	strlcpy(drvinfo->driver, BDX_DRV_NAME, sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, BDX_DRV_VERSION, sizeof(drvinfo->version));
-	strlcpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
-	strlcpy(drvinfo->bus_info, pci_name(priv->pdev),
+	strscpy(drvinfo->driver, BDX_DRV_NAME, sizeof(drvinfo->driver));
+	strscpy(drvinfo->version, BDX_DRV_VERSION, sizeof(drvinfo->version));
+	strscpy(drvinfo->fw_version, "N/A", sizeof(drvinfo->fw_version));
+	strscpy(drvinfo->bus_info, pci_name(priv->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-ethtool.c
diff --git a/drivers/net/ethernet/ti/cpmac.c b/drivers/net/ethernet/ti/cpmac.c
index 2ea9805ff4a8..be816b32ec47 100644
--- a/drivers/net/ethernet/ti/cpmac.c
+++ b/drivers/net/ethernet/ti/cpmac.c
@@ -873,8 +873,8 @@ static int cpmac_set_ringparam(struct net_device *dev,
 static void cpmac_get_drvinfo(struct net_device *dev,
 			      struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, "cpmac", sizeof(info->driver));
-	strlcpy(info->version, CPMAC_VERSION, sizeof(info->version));
+	strscpy(info->driver, "cpmac", sizeof(info->driver));
+	strscpy(info->version, CPMAC_VERSION, sizeof(info->version));
 	snprintf(info->bus_info, sizeof(info->bus_info), "%s", "cpmac");
 }
 
diff --git a/drivers/net/ethernet/ti/cpsw.c b/drivers/net/ethernet/ti/cpsw.c
index d42bdcd3bf1c..246e03d62ffd 100644
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@ -2229,9 +2229,9 @@ static void cpsw_get_drvinfo(struct net_device *ndev,
 	struct cpsw_common *cpsw = ndev_to_cpsw(ndev);
 	struct platform_device	*pdev = to_platform_device(cpsw->dev);
 
-	strlcpy(info->driver, "cpsw", sizeof(info->driver));
-	strlcpy(info->version, "1.0", sizeof(info->version));
-	strlcpy(info->bus_info, pdev->name, sizeof(info->bus_info));
+	strscpy(info->driver, "cpsw", sizeof(info->driver));
+	strscpy(info->version, "1.0", sizeof(info->version));
+	strscpy(info->bus_info, pdev->name, sizeof(info->bus_info));
 }
 
 static u32 cpsw_get_msglevel(struct net_device *ndev)
* Unmerged path drivers/net/ethernet/ti/cpsw_new.c
diff --git a/drivers/net/ethernet/ti/davinci_emac.c b/drivers/net/ethernet/ti/davinci_emac.c
index 1bb4c0f9c255..54e47698e73d 100644
--- a/drivers/net/ethernet/ti/davinci_emac.c
+++ b/drivers/net/ethernet/ti/davinci_emac.c
@@ -389,8 +389,8 @@ static char *emac_rxhost_errcodes[16] = {
 static void emac_get_drvinfo(struct net_device *ndev,
 			     struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, emac_version_string, sizeof(info->driver));
-	strlcpy(info->version, EMAC_MODULE_VERSION, sizeof(info->version));
+	strscpy(info->driver, emac_version_string, sizeof(info->driver));
+	strscpy(info->version, EMAC_MODULE_VERSION, sizeof(info->version));
 }
 
 /**
diff --git a/drivers/net/ethernet/ti/tlan.c b/drivers/net/ethernet/ti/tlan.c
index fd2dba0e1792..36fcfc7b30e1 100644
--- a/drivers/net/ethernet/ti/tlan.c
+++ b/drivers/net/ethernet/ti/tlan.c
@@ -783,12 +783,12 @@ static void tlan_get_drvinfo(struct net_device *dev,
 {
 	struct tlan_priv *priv = netdev_priv(dev);
 
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
 	if (priv->pci_dev)
-		strlcpy(info->bus_info, pci_name(priv->pci_dev),
+		strscpy(info->bus_info, pci_name(priv->pci_dev),
 			sizeof(info->bus_info));
 	else
-		strlcpy(info->bus_info, "EISA",	sizeof(info->bus_info));
+		strscpy(info->bus_info, "EISA",	sizeof(info->bus_info));
 }
 
 static int tlan_get_eeprom_len(struct net_device *dev)
diff --git a/drivers/net/ethernet/toshiba/ps3_gelic_net.c b/drivers/net/ethernet/toshiba/ps3_gelic_net.c
index 4b624357467b..45671173eeff 100644
--- a/drivers/net/ethernet/toshiba/ps3_gelic_net.c
+++ b/drivers/net/ethernet/toshiba/ps3_gelic_net.c
@@ -1202,8 +1202,8 @@ int gelic_net_open(struct net_device *netdev)
 void gelic_net_get_drvinfo(struct net_device *netdev,
 			   struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 }
 
 static int gelic_ether_get_link_ksettings(struct net_device *netdev,
diff --git a/drivers/net/ethernet/toshiba/spider_net_ethtool.c b/drivers/net/ethernet/toshiba/spider_net_ethtool.c
index baf46e101955..503f9aff5f1d 100644
--- a/drivers/net/ethernet/toshiba/spider_net_ethtool.c
+++ b/drivers/net/ethernet/toshiba/spider_net_ethtool.c
@@ -76,12 +76,12 @@ spider_net_ethtool_get_drvinfo(struct net_device *netdev,
 	card = netdev_priv(netdev);
 
 	/* clear and fill out info */
-	strlcpy(drvinfo->driver, spider_net_driver_name,
+	strscpy(drvinfo->driver, spider_net_driver_name,
 		sizeof(drvinfo->driver));
-	strlcpy(drvinfo->version, VERSION, sizeof(drvinfo->version));
-	strlcpy(drvinfo->fw_version, "no information",
+	strscpy(drvinfo->version, VERSION, sizeof(drvinfo->version));
+	strscpy(drvinfo->fw_version, "no information",
 		sizeof(drvinfo->fw_version));
-	strlcpy(drvinfo->bus_info, pci_name(card->pdev),
+	strscpy(drvinfo->bus_info, pci_name(card->pdev),
 		sizeof(drvinfo->bus_info));
 }
 
diff --git a/drivers/net/ethernet/toshiba/tc35815.c b/drivers/net/ethernet/toshiba/tc35815.c
index b802ba8746ae..220822a22215 100644
--- a/drivers/net/ethernet/toshiba/tc35815.c
+++ b/drivers/net/ethernet/toshiba/tc35815.c
@@ -1943,9 +1943,9 @@ static void tc35815_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo *
 {
 	struct tc35815_local *lp = netdev_priv(dev);
 
-	strlcpy(info->driver, MODNAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, pci_name(lp->pci_dev), sizeof(info->bus_info));
+	strscpy(info->driver, MODNAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, pci_name(lp->pci_dev), sizeof(info->bus_info));
 }
 
 static u32 tc35815_get_msglevel(struct net_device *dev)
* Unmerged path drivers/net/ethernet/via/via-rhine.c
diff --git a/drivers/net/ethernet/via/via-velocity.c b/drivers/net/ethernet/via/via-velocity.c
index ce3805c0ea37..07d67448d9c8 100644
--- a/drivers/net/ethernet/via/via-velocity.c
+++ b/drivers/net/ethernet/via/via-velocity.c
@@ -3417,13 +3417,13 @@ static void velocity_get_drvinfo(struct net_device *dev, struct ethtool_drvinfo
 {
 	struct velocity_info *vptr = netdev_priv(dev);
 
-	strlcpy(info->driver, VELOCITY_NAME, sizeof(info->driver));
-	strlcpy(info->version, VELOCITY_VERSION, sizeof(info->version));
+	strscpy(info->driver, VELOCITY_NAME, sizeof(info->driver));
+	strscpy(info->version, VELOCITY_VERSION, sizeof(info->version));
 	if (vptr->pdev)
-		strlcpy(info->bus_info, pci_name(vptr->pdev),
+		strscpy(info->bus_info, pci_name(vptr->pdev),
 						sizeof(info->bus_info));
 	else
-		strlcpy(info->bus_info, "platform", sizeof(info->bus_info));
+		strscpy(info->bus_info, "platform", sizeof(info->bus_info));
 }
 
 static void velocity_ethtool_get_wol(struct net_device *dev, struct ethtool_wolinfo *wol)
diff --git a/drivers/net/ethernet/wiznet/w5100.c b/drivers/net/ethernet/wiznet/w5100.c
index ca2d4c1abe1e..1b7e26d6fa89 100644
--- a/drivers/net/ethernet/wiznet/w5100.c
+++ b/drivers/net/ethernet/wiznet/w5100.c
@@ -725,9 +725,9 @@ static void w5100_hw_close(struct w5100_priv *priv)
 static void w5100_get_drvinfo(struct net_device *ndev,
 			      struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(ndev->dev.parent),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(ndev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/wiznet/w5300.c b/drivers/net/ethernet/wiznet/w5300.c
index 0d13299cc2c8..fd2dc21cbfa6 100644
--- a/drivers/net/ethernet/wiznet/w5300.c
+++ b/drivers/net/ethernet/wiznet/w5300.c
@@ -283,9 +283,9 @@ static void w5300_hw_close(struct w5300_priv *priv)
 static void w5300_get_drvinfo(struct net_device *ndev,
 			      struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
-	strlcpy(info->bus_info, dev_name(ndev->dev.parent),
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->bus_info, dev_name(ndev->dev.parent),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index 01416fbdb4f0..c2cb1c83524b 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -1077,8 +1077,8 @@ static const struct net_device_ops axienet_netdev_ops = {
 static void axienet_ethtools_get_drvinfo(struct net_device *ndev,
 					 struct ethtool_drvinfo *ed)
 {
-	strlcpy(ed->driver, DRIVER_NAME, sizeof(ed->driver));
-	strlcpy(ed->version, DRIVER_VERSION, sizeof(ed->version));
+	strscpy(ed->driver, DRIVER_NAME, sizeof(ed->driver));
+	strscpy(ed->version, DRIVER_VERSION, sizeof(ed->version));
 }
 
 /**
* Unmerged path drivers/net/ethernet/xilinx/xilinx_emaclite.c
diff --git a/drivers/net/ethernet/xircom/xirc2ps_cs.c b/drivers/net/ethernet/xircom/xirc2ps_cs.c
index 480ab7251515..2900af5db20e 100644
--- a/drivers/net/ethernet/xircom/xirc2ps_cs.c
+++ b/drivers/net/ethernet/xircom/xirc2ps_cs.c
@@ -1408,7 +1408,7 @@ do_open(struct net_device *dev)
 static void netdev_get_drvinfo(struct net_device *dev,
 			       struct ethtool_drvinfo *info)
 {
-	strlcpy(info->driver, "xirc2ps_cs", sizeof(info->driver));
+	strscpy(info->driver, "xirc2ps_cs", sizeof(info->driver));
 	snprintf(info->bus_info, sizeof(info->bus_info), "PCMCIA 0x%lx",
 		 dev->base_addr);
 }
diff --git a/drivers/net/ethernet/xscale/ixp4xx_eth.c b/drivers/net/ethernet/xscale/ixp4xx_eth.c
index 51b61ffc478f..200f310131f5 100644
--- a/drivers/net/ethernet/xscale/ixp4xx_eth.c
+++ b/drivers/net/ethernet/xscale/ixp4xx_eth.c
@@ -991,11 +991,11 @@ static void ixp4xx_get_drvinfo(struct net_device *dev,
 {
 	struct port *port = netdev_priv(dev);
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
 	snprintf(info->fw_version, sizeof(info->fw_version), "%u:%u:%u:%u",
 		 port->firmware[0], port->firmware[1],
 		 port->firmware[2], port->firmware[3]);
-	strlcpy(info->bus_info, "internal", sizeof(info->bus_info));
+	strscpy(info->bus_info, "internal", sizeof(info->bus_info));
 }
 
 int ixp46x_phc_index = -1;
