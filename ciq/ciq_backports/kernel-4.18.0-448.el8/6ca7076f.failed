cpufreq: check only freq_table in __resolve_freq()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Lukasz Luba <lukasz.luba@arm.com>
commit 6ca7076fbfaeccce173aeab832d76b9e49e1034b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/6ca7076f.failed

There is no need to check if the cpufreq driver implements callback
cpufreq_driver::target_index. The logic in the __resolve_freq uses
the frequency table available in the policy. It doesn't matter if the
driver provides 'target_index' or 'target' callback. It just has to
populate the 'policy->freq_table'.

Thus, check only frequency table during the frequency resolving call.

	Acked-by: Viresh Kumar <viresh.kumar@linaro.org>
	Signed-off-by: Lukasz Luba <lukasz.luba@arm.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 6ca7076fbfaeccce173aeab832d76b9e49e1034b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cpufreq.c
diff --cc drivers/cpufreq/cpufreq.c
index 7a742a743e8a,69b3d61852ac..000000000000
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@@ -519,6 -525,22 +519,25 @@@ void cpufreq_disable_fast_switch(struc
  }
  EXPORT_SYMBOL_GPL(cpufreq_disable_fast_switch);
  
++<<<<<<< HEAD
++=======
+ static unsigned int __resolve_freq(struct cpufreq_policy *policy,
+ 		unsigned int target_freq, unsigned int relation)
+ {
+ 	unsigned int idx;
+ 
+ 	target_freq = clamp_val(target_freq, policy->min, policy->max);
+ 
+ 	if (!policy->freq_table)
+ 		return target_freq;
+ 
+ 	idx = cpufreq_frequency_table_target(policy, target_freq, relation);
+ 	policy->cached_resolved_idx = idx;
+ 	policy->cached_target_freq = target_freq;
+ 	return policy->freq_table[idx].frequency;
+ }
+ 
++>>>>>>> 6ca7076fbfae (cpufreq: check only freq_table in __resolve_freq())
  /**
   * cpufreq_driver_resolve_freq - Map a target frequency to a driver-supported
   * one.
* Unmerged path drivers/cpufreq/cpufreq.c
