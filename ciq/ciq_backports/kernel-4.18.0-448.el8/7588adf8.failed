mm: clean up is_device_*_page() definitions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Robin Murphy <robin.murphy@arm.com>
commit 7588adf8dff12c4b358557a13796a25fef796548
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7588adf8.failed

Refactor is_device_{public,private}_page() with is_pci_p2pdma_page() to
make them all consistent in depending on their respective config options
even when CONFIG_DEV_PAGEMAP_OPS is enabled for other reasons.  This
allows a little more compile-time optimisation as well as the conceptual
and cosmetic cleanup.

Link: http://lkml.kernel.org/r/187c2ab27dea70635d375a61b2f2076d26c032b0.1558547956.git.robin.murphy@arm.com
	Signed-off-by: Robin Murphy <robin.murphy@arm.com>
	Suggested-by: Jerome Glisse <jglisse@redhat.com>
	Reviewed-by: Anshuman Khandual <anshuman.khandual@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Ira Weiny <ira.weiny@intel.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Oliver O'Halloran <oohall@gmail.com>
	Cc: Will Deacon <will.deacon@arm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7588adf8dff12c4b358557a13796a25fef796548)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mm.h
diff --cc include/linux/mm.h
index e3b1a16638a0,baa8b8761d8c..000000000000
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@@ -1023,40 -956,19 +1023,47 @@@ static inline bool page_is_devmap_manag
  	return false;
  }
  
++<<<<<<< HEAD
 +static inline bool is_device_private_page(const struct page *page)
 +{
 +	return is_zone_device_page(page) &&
 +		page->pgmap->type == MEMORY_DEVICE_PRIVATE;
 +}
 +
 +#ifdef CONFIG_PCI_P2PDMA
 +static inline bool is_pci_p2pdma_page(const struct page *page)
 +{
 +	return is_zone_device_page(page) &&
 +		page->pgmap->type == MEMORY_DEVICE_PCI_P2PDMA;
 +}
 +#else /* CONFIG_PCI_P2PDMA */
 +static inline bool is_pci_p2pdma_page(const struct page *page)
 +{
 +	return false;
 +}
 +#endif /* CONFIG_PCI_P2PDMA */
 +
 +void put_devmap_managed_page(struct page *page);
 +
++=======
++>>>>>>> 7588adf8dff1 (mm: clean up is_device_*_page() definitions)
  #else /* CONFIG_DEV_PAGEMAP_OPS */
 -static inline bool put_devmap_managed_page(struct page *page)
 +static inline bool page_is_devmap_managed(struct page *page)
  {
  	return false;
  }
+ #endif /* CONFIG_DEV_PAGEMAP_OPS */
  
 +static inline void put_devmap_managed_page(struct page *page)
 +{
 +}
 +
  static inline bool is_device_private_page(const struct page *page)
  {
- 	return false;
+ 	return IS_ENABLED(CONFIG_DEV_PAGEMAP_OPS) &&
+ 		IS_ENABLED(CONFIG_DEVICE_PRIVATE) &&
+ 		is_zone_device_page(page) &&
+ 		page->pgmap->type == MEMORY_DEVICE_PRIVATE;
  }
  
  static inline bool is_pci_p2pdma_page(const struct page *page)
* Unmerged path include/linux/mm.h
