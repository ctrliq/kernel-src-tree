Documentation/virt/kvm/api.rst: Add protvirt dump/info api descriptions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Janosch Frank <frankja@linux.ibm.com>
commit 437cfd714db9c1d28878a6e2555e9a730f3490c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/437cfd71.failed

Time to add the dump API changes to the api documentation file.
Also some minor cleanup.

	Signed-off-by: Janosch Frank <frankja@linux.ibm.com>
	Acked-by: Claudio Imbrenda <imbrenda@linux.ibm.com>
Link: https://lore.kernel.org/r/20220517163629.3443-11-frankja@linux.ibm.com
Message-Id: <20220517163629.3443-11-frankja@linux.ibm.com>
	Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
(cherry picked from commit 437cfd714db9c1d28878a6e2555e9a730f3490c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virt/kvm/api.rst
diff --cc Documentation/virt/kvm/api.rst
index e8bd6e623e48,47d3064f5b79..000000000000
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@@ -5386,7 -5892,52 +5496,33 @@@ enabled with ``arch_prctl()``, but thi
  The offsets of the state save areas in struct kvm_xsave follow the contents
  of CPUID leaf 0xD on the host.
  
 -4.135 KVM_XEN_HVM_EVTCHN_SEND
 ------------------------------
 -
 -:Capability: KVM_CAP_XEN_HVM / KVM_XEN_HVM_CONFIG_EVTCHN_SEND
 -:Architectures: x86
 -:Type: vm ioctl
 -:Parameters: struct kvm_irq_routing_xen_evtchn
 -:Returns: 0 on success, < 0 on error
 -
 -
 -::
 -
 -   struct kvm_irq_routing_xen_evtchn {
 -	__u32 port;
 -	__u32 vcpu;
 -	__u32 priority;
 -   };
 -
 -This ioctl injects an event channel interrupt directly to the guest vCPU.
  
+ 4.136 KVM_S390_PV_CPU_COMMAND
+ -----------------------------
+ 
+ :Capability: KVM_CAP_S390_PROTECTED_DUMP
+ :Architectures: s390
+ :Type: vcpu ioctl
+ :Parameters: none
+ :Returns: 0 on success, < 0 on error
+ 
+ This ioctl closely mirrors `KVM_S390_PV_COMMAND` but handles requests
+ for vcpus. It re-uses the kvm_s390_pv_dmp struct and hence also shares
+ the command ids.
+ 
+ **command:**
+ 
+ KVM_PV_DUMP
+   Presents an API that provides calls which facilitate dumping a vcpu
+   of a protected VM.
+ 
+ **subcommand:**
+ 
+ KVM_PV_DUMP_CPU
+   Provides encrypted dump data like register values.
+   The length of the returned data is provided by uv_info.guest_cpu_stor_len.
+ 
+ 
  5. The kvm_run structure
  ========================
  
@@@ -7339,6 -8080,30 +7475,33 @@@ At this time, KVM_PMU_CAP_DISABLE is th
  this capability will disable PMU virtualization for that VM.  Usermode
  should adjust CPUID leaf 0xA to reflect that the PMU is disabled.
  
++<<<<<<< HEAD
++=======
+ 8.36 KVM_CAP_ARM_SYSTEM_SUSPEND
+ -------------------------------
+ 
+ :Capability: KVM_CAP_ARM_SYSTEM_SUSPEND
+ :Architectures: arm64
+ :Type: vm
+ 
+ When enabled, KVM will exit to userspace with KVM_EXIT_SYSTEM_EVENT of
+ type KVM_SYSTEM_EVENT_SUSPEND to process the guest suspend request.
+ 
+ 8.37 KVM_CAP_S390_PROTECTED_DUMP
+ --------------------------------
+ 
+ :Capability: KVM_CAP_S390_PROTECTED_DUMP
+ :Architectures: s390
+ :Type: vm
+ 
+ This capability indicates that KVM and the Ultravisor support dumping
+ PV guests. The `KVM_PV_DUMP` command is available for the
+ `KVM_S390_PV_COMMAND` ioctl and the `KVM_PV_INFO` command provides
+ dump related UV data. Also the vcpu ioctl `KVM_S390_PV_CPU_COMMAND` is
+ available and supports the `KVM_PV_DUMP_CPU` subcommand.
+ 
+ 
++>>>>>>> 437cfd714db9 (Documentation/virt/kvm/api.rst: Add protvirt dump/info api descriptions)
  9. Known KVM API problems
  =========================
  
* Unmerged path Documentation/virt/kvm/api.rst
