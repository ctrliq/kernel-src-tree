wifi: mac80211: fix NULL pointer deref with non-MLD STA

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 206c8c0680b15d2630900ca27eb971c5d25557e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/206c8c06.failed

If we have a non-MLD STA on an AP MLD, we crash while
adding the station. Fix that, in this case we need to
use the STA's address also on the link data structure.

Fixes: f36fe0a2df03 ("wifi: mac80211: fix up link station creation/insertion")
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 206c8c0680b15d2630900ca27eb971c5d25557e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/cfg.c
diff --cc net/mac80211/cfg.c
index 968555a65d49,b0fdfc61b2f9..000000000000
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@@ -1822,7 -1854,19 +1822,23 @@@ static int ieee80211_add_station(struc
  	    !sdata->u.mgd.associated)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	sta = sta_info_alloc(sdata, mac, GFP_KERNEL);
++=======
+ 	/*
+ 	 * If we have a link ID, it can be a non-MLO station on an AP MLD,
+ 	 * but we need to have a link_mac in that case as well, so use the
+ 	 * STA's MAC address in that case.
+ 	 */
+ 	if (params->link_sta_params.link_id >= 0)
+ 		sta = sta_info_alloc_with_link(sdata, mac,
+ 					       params->link_sta_params.link_id,
+ 					       params->link_sta_params.link_mac ?: mac,
+ 					       GFP_KERNEL);
+ 	else
+ 		sta = sta_info_alloc(sdata, mac, GFP_KERNEL);
+ 
++>>>>>>> 206c8c0680b1 (wifi: mac80211: fix NULL pointer deref with non-MLD STA)
  	if (!sta)
  		return -ENOMEM;
  
* Unmerged path net/mac80211/cfg.c
