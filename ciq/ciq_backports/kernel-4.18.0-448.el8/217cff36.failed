netfilter: flowtable: pass flowtable to nf_flow_table_iterate()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 217cff36e885627c41a14e803fc44f9cbc945767
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/217cff36.failed

The flowtable object is already passed as argument to
nf_flow_table_iterate(), do use not data pointer to pass flowtable.

	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 217cff36e885627c41a14e803fc44f9cbc945767)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_flow_table_core.c
diff --cc net/netfilter/nf_flow_table_core.c
index 45760c6a73eb,3db256da919b..000000000000
--- a/net/netfilter/nf_flow_table_core.c
+++ b/net/netfilter/nf_flow_table_core.c
@@@ -372,12 -438,33 +373,42 @@@ nf_flow_table_iterate(struct nf_flowtab
  	return err;
  }
  
++<<<<<<< HEAD
 +static void nf_flow_offload_gc_step(struct flow_offload *flow, void *data)
 +{
 +	struct nf_flowtable *flow_table = data;
 +
 +	if (nf_flow_has_expired(flow) || nf_ct_is_dying(flow->ct))
 +		flow_offload_teardown(flow);
++=======
+ static bool flow_offload_stale_dst(struct flow_offload_tuple *tuple)
+ {
+ 	struct dst_entry *dst;
+ 
+ 	if (tuple->xmit_type == FLOW_OFFLOAD_XMIT_NEIGH ||
+ 	    tuple->xmit_type == FLOW_OFFLOAD_XMIT_XFRM) {
+ 		dst = tuple->dst_cache;
+ 		if (!dst_check(dst, tuple->dst_cookie))
+ 			return true;
+ 	}
+ 
+ 	return false;
+ }
+ 
+ static bool nf_flow_has_stale_dst(struct flow_offload *flow)
+ {
+ 	return flow_offload_stale_dst(&flow->tuplehash[FLOW_OFFLOAD_DIR_ORIGINAL].tuple) ||
+ 	       flow_offload_stale_dst(&flow->tuplehash[FLOW_OFFLOAD_DIR_REPLY].tuple);
+ }
+ 
+ static void nf_flow_offload_gc_step(struct nf_flowtable *flow_table,
+ 				    struct flow_offload *flow, void *data)
+ {
+ 	if (nf_flow_has_expired(flow) ||
+ 	    nf_ct_is_dying(flow->ct) ||
+ 	    nf_flow_has_stale_dst(flow))
+ 		set_bit(NF_FLOW_TEARDOWN, &flow->flags);
++>>>>>>> 217cff36e885 (netfilter: flowtable: pass flowtable to nf_flow_table_iterate())
  
  	if (test_bit(NF_FLOW_TEARDOWN, &flow->flags)) {
  		if (test_bit(NF_FLOW_HW, &flow->flags)) {
* Unmerged path net/netfilter/nf_flow_table_core.c
