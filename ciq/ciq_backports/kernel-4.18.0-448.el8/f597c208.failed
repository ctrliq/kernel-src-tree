fbdev: Unexport unlink_framebuffer()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Thomas Zimmermann <tzimmermann@suse.de>
commit f597c2089da4dd55133546b1255493579a295bff
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/f597c208.failed

There are no external callers of unlink_framebuffer() left. Make the
function an internal interface.

	Signed-off-by: Thomas Zimmermann <tzimmermann@suse.de>
	Reviewed-by: Noralf Tr√∏nnes <noralf@tronnes.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20191114125106.28347-4-tzimmermann@suse.de
(cherry picked from commit f597c2089da4dd55133546b1255493579a295bff)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbmem.c
#	include/linux/fb.h
diff --cc drivers/video/fbdev/core/fbmem.c
index 32dffdd5addd,86b06a599f96..000000000000
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@@ -1702,29 -1668,34 +1702,44 @@@ static int unbind_console(struct fb_inf
  
  	console_lock();
  	lock_fb_info(fb_info);
 -	fbcon_fb_unbind(fb_info);
 +	event.info = fb_info;
 +	ret = fb_notifier_call_chain(FB_EVENT_FB_UNBIND, &event);
  	unlock_fb_info(fb_info);
  	console_unlock();
 +
 +	return ret;
  }
  
++<<<<<<< HEAD
 +static int __unlink_framebuffer(struct fb_info *fb_info);
 +
 +static int do_unregister_framebuffer(struct fb_info *fb_info)
++=======
+ static void unlink_framebuffer(struct fb_info *fb_info)
++>>>>>>> f597c2089da4 (fbdev: Unexport unlink_framebuffer())
  {
 -	int i;
 -
 -	i = fb_info->node;
 -	if (WARN_ON(i < 0 || i >= FB_MAX || registered_fb[i] != fb_info))
 -		return;
 +	struct fb_event event;
 +	int ret;
  
 -	if (!fb_info->dev)
 -		return;
 +	ret = unbind_console(fb_info);
  
 -	device_destroy(fb_class, MKDEV(FB_MAJOR, i));
 +	if (ret)
 +		return -EINVAL;
  
  	pm_vt_switch_unregister(fb_info->dev);
  
++<<<<<<< HEAD
 +	__unlink_framebuffer(fb_info);
++=======
+ 	unbind_console(fb_info);
+ 
+ 	fb_info->dev = NULL;
+ }
+ 
+ static void do_unregister_framebuffer(struct fb_info *fb_info)
+ {
+ 	unlink_framebuffer(fb_info);
++>>>>>>> f597c2089da4 (fbdev: Unexport unlink_framebuffer())
  	if (fb_info->pixmap.addr &&
  	    (fb_info->pixmap.flags & FB_PIXMAP_DEFAULT))
  		kfree(fb_info->pixmap.addr);
diff --cc include/linux/fb.h
index 5bd1a6c3d119,a6ad528990de..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -635,8 -605,7 +635,12 @@@ extern ssize_t fb_sys_write(struct fb_i
  
  /* drivers/video/fbmem.c */
  extern int register_framebuffer(struct fb_info *fb_info);
++<<<<<<< HEAD
 +extern int unregister_framebuffer(struct fb_info *fb_info);
 +extern int unlink_framebuffer(struct fb_info *fb_info);
++=======
+ extern void unregister_framebuffer(struct fb_info *fb_info);
++>>>>>>> f597c2089da4 (fbdev: Unexport unlink_framebuffer())
  extern int remove_conflicting_pci_framebuffers(struct pci_dev *pdev,
  					       const char *name);
  extern int remove_conflicting_framebuffers(struct apertures_struct *a,
* Unmerged path drivers/video/fbdev/core/fbmem.c
* Unmerged path include/linux/fb.h
