ASoC: nau8822: Don't reconfigure PLL to the same values

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mark Brown <broonie@kernel.org>
commit 3ae190edc5f6f64f296f8dd15f4b511f529ab402
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/3ae190ed.failed

When we configure the PLL record the input and output frequency, then if we
get asked to configure the same values again just skip reprogramming the
hardware. This makes things a bit easier to use for machine drivers since
it means they don't need to keep track of if they've programmed the PLL
so much.

	Signed-off-by: Mark Brown <broonie@kernel.org>
Link: https://lore.kernel.org/r/20220603103530.3844527-1-broonie@kernel.org
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 3ae190edc5f6f64f296f8dd15f4b511f529ab402)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/nau8822.c
diff --cc sound/soc/codecs/nau8822.c
index f5b162d222ff,f4f68b549e1a..000000000000
--- a/sound/soc/codecs/nau8822.c
+++ b/sound/soc/codecs/nau8822.c
@@@ -726,12 -726,9 +726,18 @@@ static int nau8822_set_pll(struct snd_s
  	struct nau8822_pll *pll_param = &nau8822->pll;
  	int ret, fs;
  
++<<<<<<< HEAD
 +	if (freq_out == 0) {
 +		dev_dbg(component->dev, "PLL disabled\n");
 +		snd_soc_component_update_bits(component,
 +			NAU8822_REG_POWER_MANAGEMENT_1, NAU8822_PLL_EN_MASK, NAU8822_PLL_OFF);
 +		return 0;
 +	}
++=======
+ 	if (freq_in == pll_param->freq_in &&
+ 	    freq_out == pll_param->freq_out)
+ 		return 0;
++>>>>>>> 3ae190edc5f6 (ASoC: nau8822: Don't reconfigure PLL to the same values)
  
  	fs = freq_out / 256;
  
* Unmerged path sound/soc/codecs/nau8822.c
diff --git a/sound/soc/codecs/nau8822.h b/sound/soc/codecs/nau8822.h
index b45d42c15de6..547ec057f853 100644
--- a/sound/soc/codecs/nau8822.h
+++ b/sound/soc/codecs/nau8822.h
@@ -198,6 +198,8 @@ struct nau8822_pll {
 	int mclk_scaler;
 	int pll_frac;
 	int pll_int;
+	int freq_in;
+	int freq_out;
 };
 
 /* Codec Private Data */
