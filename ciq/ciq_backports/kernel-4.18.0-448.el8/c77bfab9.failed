wifi: mac80211: only accumulate airtime deficit for active clients

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Felix Fietkau <nbd@nbd.name>
commit c77bfab9237109d93162d9fce0d69f97aed5dc40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/c77bfab9.failed

When a client does not generate any local tx activity, accumulating airtime
deficit for the round-robin scheduler can be harmful. If this goes on for too
long, the deficit could grow quite large, which might cause unreasonable
initial latency once the client becomes active

	Signed-off-by: Felix Fietkau <nbd@nbd.name>
	Acked-by: Toke Høiland-Jørgensen <toke@toke.dk>
Link: https://lore.kernel.org/r/20220625212411.36675-7-nbd@nbd.name
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit c77bfab9237109d93162d9fce0d69f97aed5dc40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/sta_info.c
diff --cc net/mac80211/sta_info.c
index d25b297851c4,c9852f71e8e1..000000000000
--- a/net/mac80211/sta_info.c
+++ b/net/mac80211/sta_info.c
@@@ -1942,12 -2042,26 +1942,32 @@@ void ieee80211_register_airtime(struct 
  void ieee80211_sta_register_airtime(struct ieee80211_sta *pubsta, u8 tid,
  				    u32 tx_airtime, u32 rx_airtime)
  {
++<<<<<<< HEAD
 +	struct ieee80211_txq *txq = pubsta->txq[tid];
++=======
+ 	struct sta_info *sta = container_of(pubsta, struct sta_info, sta);
+ 	struct ieee80211_local *local = sta->sdata->local;
+ 	u8 ac = ieee80211_ac_from_tid(tid);
+ 	u32 airtime = 0;
+ 	u32 diff;
++>>>>>>> c77bfab92371 (wifi: mac80211: only accumulate airtime deficit for active clients)
  
 -	if (sta->local->airtime_flags & AIRTIME_USE_TX)
 -		airtime += tx_airtime;
 -	if (sta->local->airtime_flags & AIRTIME_USE_RX)
 -		airtime += rx_airtime;
 +	if (!txq)
 +		return;
  
++<<<<<<< HEAD
 +	ieee80211_register_airtime(txq, tx_airtime, rx_airtime);
++=======
+ 	spin_lock_bh(&local->active_txq_lock[ac]);
+ 	sta->airtime[ac].tx_airtime += tx_airtime;
+ 	sta->airtime[ac].rx_airtime += rx_airtime;
+ 
+ 	diff = (u32)jiffies - sta->airtime[ac].last_active;
+ 	if (diff <= AIRTIME_ACTIVE_DURATION)
+ 		sta->airtime[ac].deficit -= airtime;
+ 
+ 	spin_unlock_bh(&local->active_txq_lock[ac]);
++>>>>>>> c77bfab92371 (wifi: mac80211: only accumulate airtime deficit for active clients)
  }
  EXPORT_SYMBOL(ieee80211_sta_register_airtime);
  
* Unmerged path net/mac80211/sta_info.c
