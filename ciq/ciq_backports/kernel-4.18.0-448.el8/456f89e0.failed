KVM: selftests: aarch64: Skip tests if we can't create a vgic-v3

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mark Brown <broonie@kernel.org>
commit 456f89e0928ab938122a40e9f094a6524cc158b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/456f89e0.failed

The arch_timer and vgic_irq kselftests assume that they can create a
vgic-v3, using the library function vgic_v3_setup() which aborts with a
test failure if it is not possible to do so. Since vgic-v3 can only be
instantiated on systems where the host has GICv3 this leads to false
positives on older systems where that is not the case.

Fix this by changing vgic_v3_setup() to return an error if the vgic can't
be instantiated and have the callers skip if this happens. We could also
exit flagging a skip in vgic_v3_setup() but this would prevent future test
cases conditionally deciding which GIC to use or generally doing more
complex output.

	Signed-off-by: Mark Brown <broonie@kernel.org>
	Reviewed-by: Andrew Jones <drjones@redhat.com>
	Tested-by: Ricardo Koller <ricarkol@google.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20220223131624.1830351-1-broonie@kernel.org
(cherry picked from commit 456f89e0928ab938122a40e9f094a6524cc158b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/aarch64/arch_timer.c
#	tools/testing/selftests/kvm/aarch64/vgic_irq.c
#	tools/testing/selftests/kvm/lib/aarch64/vgic.c
diff --cc tools/testing/selftests/kvm/aarch64/arch_timer.c
index bf6a45b0b8dc,b08d30bf71c5..000000000000
--- a/tools/testing/selftests/kvm/aarch64/arch_timer.c
+++ b/tools/testing/selftests/kvm/aarch64/arch_timer.c
@@@ -382,7 -383,11 +383,15 @@@ static struct kvm_vm *test_vm_create(vo
  
  	ucall_init(vm, NULL);
  	test_init_timer_irq(vm);
++<<<<<<< HEAD
 +	vgic_v3_setup(vm, nr_vcpus, GICD_BASE_GPA, GICR_BASE_GPA);
++=======
+ 	ret = vgic_v3_setup(vm, nr_vcpus, 64, GICD_BASE_GPA, GICR_BASE_GPA);
+ 	if (ret < 0) {
+ 		print_skip("Failed to create vgic-v3");
+ 		exit(KSFT_SKIP);
+ 	}
++>>>>>>> 456f89e0928a (KVM: selftests: aarch64: Skip tests if we can't create a vgic-v3)
  
  	/* Make all the test's cmdline args visible to the guest */
  	sync_global_to_guest(vm, test_args);
diff --cc tools/testing/selftests/kvm/lib/aarch64/vgic.c
index a1f1f6c8e2e0,f5cd0c536d85..000000000000
--- a/tools/testing/selftests/kvm/lib/aarch64/vgic.c
+++ b/tools/testing/selftests/kvm/lib/aarch64/vgic.c
@@@ -52,7 -52,16 +52,20 @@@ int vgic_v3_setup(struct kvm_vm *vm, un
  			nr_vcpus, nr_vcpus_created);
  
  	/* Distributor setup */
++<<<<<<< HEAD
 +	gic_fd = kvm_create_device(vm, KVM_DEV_TYPE_ARM_VGIC_V3, false);
++=======
+ 	if (_kvm_create_device(vm, KVM_DEV_TYPE_ARM_VGIC_V3,
+ 			       false, &gic_fd) != 0)
+ 		return -1;
+ 
+ 	kvm_device_access(gic_fd, KVM_DEV_ARM_VGIC_GRP_NR_IRQS,
+ 			0, &nr_irqs, true);
+ 
+ 	kvm_device_access(gic_fd, KVM_DEV_ARM_VGIC_GRP_CTRL,
+ 			KVM_DEV_ARM_VGIC_CTRL_INIT, NULL, true);
+ 
++>>>>>>> 456f89e0928a (KVM: selftests: aarch64: Skip tests if we can't create a vgic-v3)
  	kvm_device_access(gic_fd, KVM_DEV_ARM_VGIC_GRP_ADDR,
  			KVM_VGIC_V3_ADDR_TYPE_DIST, &gicd_base_gpa, true);
  	nr_gic_pages = vm_calc_num_guest_pages(vm->mode, KVM_VGIC_V3_DIST_SIZE);
* Unmerged path tools/testing/selftests/kvm/aarch64/vgic_irq.c
* Unmerged path tools/testing/selftests/kvm/aarch64/arch_timer.c
* Unmerged path tools/testing/selftests/kvm/aarch64/vgic_irq.c
* Unmerged path tools/testing/selftests/kvm/lib/aarch64/vgic.c
