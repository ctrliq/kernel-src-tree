gve: Correct order of processing device options

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Jeroen de Borst <jeroendb@google.com>
commit a10834a36c8ab59b1a76df48d526fd9ddc090fca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/a10834a3.failed

The legacy raw addressing device option was processed before the
new RDA queue format option.  This caused the supported features mask,
which is provided only on the RDA queue format option, not to be set.

This disabled jumbo-frame support when using raw adressing.

Fixes: 255489f5b33c ("gve: Add a jumbo-frame device option")
	Signed-off-by: Jeroen de Borst <jeroendb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a10834a36c8ab59b1a76df48d526fd9ddc090fca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/google/gve/gve_adminq.c
diff --cc drivers/net/ethernet/google/gve/gve_adminq.c
index 69a76038cb46,326b56b49216..000000000000
--- a/drivers/net/ethernet/google/gve/gve_adminq.c
+++ b/drivers/net/ethernet/google/gve/gve_adminq.c
@@@ -638,17 -738,26 +638,30 @@@ int gve_adminq_describe_device(struct g
  	 * is not set to GqiRda, choose the queue format in a priority order:
  	 * DqoRda, GqiRda, GqiQpl. Use GqiQpl as default.
  	 */
++<<<<<<< HEAD
 +	if (priv->raw_addressing == 1) {
 +		dev_info(&priv->pdev->dev,
 +			 "Driver is running with GQI RDA queue format.\n");
 +	} else if (dev_op_dqo_rda) {
++=======
+ 	if (dev_op_dqo_rda) {
+ 		priv->queue_format = GVE_DQO_RDA_FORMAT;
++>>>>>>> a10834a36c8a (gve: Correct order of processing device options)
  		dev_info(&priv->pdev->dev,
  			 "Driver is running with DQO RDA queue format.\n");
 -		supported_features_mask =
 -			be32_to_cpu(dev_op_dqo_rda->supported_features_mask);
  	} else if (dev_op_gqi_rda) {
 -		priv->queue_format = GVE_GQI_RDA_FORMAT;
  		dev_info(&priv->pdev->dev,
  			 "Driver is running with GQI RDA queue format.\n");
++<<<<<<< HEAD
 +		priv->raw_addressing = 1;
++=======
+ 		supported_features_mask =
+ 			be32_to_cpu(dev_op_gqi_rda->supported_features_mask);
+ 	} else if (priv->queue_format == GVE_GQI_RDA_FORMAT) {
+ 		dev_info(&priv->pdev->dev,
+ 			 "Driver is running with GQI RDA queue format.\n");
++>>>>>>> a10834a36c8a (gve: Correct order of processing device options)
  	} else {
 -		priv->queue_format = GVE_GQI_QPL_FORMAT;
 -		if (dev_op_gqi_qpl)
 -			supported_features_mask =
 -				be32_to_cpu(dev_op_gqi_qpl->supported_features_mask);
  		dev_info(&priv->pdev->dev,
  			 "Driver is running with GQI QPL queue format.\n");
  	}
* Unmerged path drivers/net/ethernet/google/gve/gve_adminq.c
