ASoC: SOF: Introduce IPC dependent ops for firmware handling, loading

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
commit 61bafd1c4571ceb9cdf1830a257eac873d0b68ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/61bafd1c.failed

The parsing and loading of firmware modules/components are IPC dependent
operations as the organization of the firmware depends on the IPC it is
supporting.

	Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20220425221129.124615-2-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 61bafd1c4571ceb9cdf1830a257eac873d0b68ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/sof-priv.h
diff --cc sound/soc/sof/sof-priv.h
index 538862b12104,1df0b1473661..000000000000
--- a/sound/soc/sof/sof-priv.h
+++ b/sound/soc/sof/sof-priv.h
@@@ -385,14 -354,71 +385,79 @@@ struct snd_sof_ipc_msg 
  	bool ipc_complete;
  };
  
++<<<<<<< HEAD
++=======
+ /**
+  * struct sof_ipc_pm_ops - IPC-specific PM ops
+  * @ctx_save:		Function pointer for context save
+  * @ctx_restore:	Function pointer for context restore
+  */
+ struct sof_ipc_pm_ops {
+ 	int (*ctx_save)(struct snd_sof_dev *sdev);
+ 	int (*ctx_restore)(struct snd_sof_dev *sdev);
+ };
+ 
+ /**
+  * struct sof_ipc_fw_loader_ops - IPC/FW-specific loader ops
+  * @validate:		Function pointer for validating the firmware image
+  * @parse_ext_manifest:	Function pointer for parsing the manifest of the firmware
+  * @load_fw_to_dsp:	Optional function pointer for loading the firmware to the
+  *			DSP.
+  *			The function implements generic, hardware independent way
+  *			of loading the initial firmware and its modules (if any).
+  * @query_fw_configuration: Optional function pointer to query information and
+  *			configuration from the booted firmware.
+  *			Executed after the first successful firmware boot.
+  */
+ struct sof_ipc_fw_loader_ops {
+ 	int (*validate)(struct snd_sof_dev *sdev);
+ 	size_t (*parse_ext_manifest)(struct snd_sof_dev *sdev);
+ 	int (*load_fw_to_dsp)(struct snd_sof_dev *sdev);
+ 	int (*query_fw_configuration)(struct snd_sof_dev *sdev);
+ };
+ 
++>>>>>>> 61bafd1c4571 (ASoC: SOF: Introduce IPC dependent ops for firmware handling, loading)
  struct sof_ipc_tplg_ops;
 -struct sof_ipc_pcm_ops;
  
  /**
   * struct sof_ipc_ops - IPC-specific ops
   * @tplg:	Pointer to IPC-specific topology ops
++<<<<<<< HEAD
++ */
++struct sof_ipc_ops {
++	const struct sof_ipc_tplg_ops *tplg;
++=======
+  * @pm:		Pointer to PM ops
+  * @pcm:	Pointer to PCM ops
+  * @fw_loader:	Pointer to Firmware Loader ops
+  *
+  * @tx_msg:	Function pointer for sending a 'short' IPC message
+  * @set_get_data: Function pointer for set/get data ('large' IPC message). This
+  *		function may split up the 'large' message and use the @tx_msg
+  *		path to transfer individual chunks, or use other means to transfer
+  *		the message.
+  * @get_reply:	Function pointer for fetching the reply to
+  *		sdev->ipc->msg.reply_data
+  * @rx_msg:	Function pointer for handling a received message
+  *
+  * Note: both @tx_msg and @set_get_data considered as TX functions and they are
+  * serialized for the duration of the instructed transfer. A large message sent
+  * via @set_get_data is a single transfer even if at the hardware level it is
+  * handled with multiple chunks.
   */
  struct sof_ipc_ops {
  	const struct sof_ipc_tplg_ops *tplg;
+ 	const struct sof_ipc_pm_ops *pm;
+ 	const struct sof_ipc_pcm_ops *pcm;
+ 	const struct sof_ipc_fw_loader_ops *fw_loader;
+ 
+ 	int (*tx_msg)(struct snd_sof_dev *sdev, void *msg_data, size_t msg_bytes,
+ 		      void *reply_data, size_t reply_bytes, bool no_pm);
+ 	int (*set_get_data)(struct snd_sof_dev *sdev, void *data, size_t data_bytes,
+ 			    bool set);
+ 	int (*get_reply)(struct snd_sof_dev *sdev);
+ 	void (*rx_msg)(struct snd_sof_dev *sdev);
++>>>>>>> 61bafd1c4571 (ASoC: SOF: Introduce IPC dependent ops for firmware handling, loading)
  };
  
  /* SOF generic IPC data */
* Unmerged path sound/soc/sof/sof-priv.h
