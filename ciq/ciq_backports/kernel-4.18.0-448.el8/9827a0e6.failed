netfilter: nft_set_pipapo: release elements in clone from abort path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 9827a0e6e23bf43003cd3d5b7fb11baf59a35e1e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/9827a0e6.failed

New elements that reside in the clone are not released in case that the
transaction is aborted.

[16302.231754] ------------[ cut here ]------------
[16302.231756] WARNING: CPU: 0 PID: 100509 at net/netfilter/nf_tables_api.c:1864 nf_tables_chain_destroy+0x26/0x127 [nf_tables]
[...]
[16302.231882] CPU: 0 PID: 100509 Comm: nft Tainted: G        W         5.19.0-rc3+ #155
[...]
[16302.231887] RIP: 0010:nf_tables_chain_destroy+0x26/0x127 [nf_tables]
[16302.231899] Code: f3 fe ff ff 41 55 41 54 55 53 48 8b 6f 10 48 89 fb 48 c7 c7 82 96 d9 a0 8b 55 50 48 8b 75 58 e8 de f5 92 e0 83 7d 50 00 74 09 <0f> 0b 5b 5d 41 5c 41 5d c3 4c 8b 65 00 48 8b 7d 08 49 39 fc 74 05
[...]
[16302.231917] Call Trace:
[16302.231919]  <TASK>
[16302.231921]  __nf_tables_abort.cold+0x23/0x28 [nf_tables]
[16302.231934]  nf_tables_abort+0x30/0x50 [nf_tables]
[16302.231946]  nfnetlink_rcv_batch+0x41a/0x840 [nfnetlink]
[16302.231952]  ? __nla_validate_parse+0x48/0x190
[16302.231959]  nfnetlink_rcv+0x110/0x129 [nfnetlink]
[16302.231963]  netlink_unicast+0x211/0x340
[16302.231969]  netlink_sendmsg+0x21e/0x460

Add nft_set_pipapo_match_destroy() helper function to release the
elements in the lookup tables.

Stefano Brivio says: "We additionally look for elements pointers in the
cloned matching data if priv->dirty is set, because that means that
cloned data might point to additional elements we did not commit to the
working copy yet (such as the abort path case, but perhaps not limited
to it)."

Fixes: 3c4287f62044 ("nf_tables: Add set type for arbitrary concatenation of ranges")
	Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 9827a0e6e23bf43003cd3d5b7fb11baf59a35e1e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nft_set_pipapo.c
diff --cc net/netfilter/nft_set_pipapo.c
index 6742ce760e27,4f9299b9dcdd..000000000000
--- a/net/netfilter/nft_set_pipapo.c
+++ b/net/netfilter/nft_set_pipapo.c
@@@ -2042,20 -2164,11 +2067,8 @@@ static void nft_pipapo_destroy(const st
  	if (m) {
  		rcu_barrier();
  
- 		for (i = 0, f = m->f; i < m->field_count - 1; i++, f++)
- 			;
- 
- 		for (r = 0; r < f->rules; r++) {
- 			struct nft_pipapo_elem *e;
- 
- 			if (r < f->rules - 1 && f->mt[r + 1].e == f->mt[r].e)
- 				continue;
- 
- 			e = f->mt[r].e;
- 
- 			nft_set_elem_destroy(set, e, true);
- 		}
+ 		nft_set_pipapo_match_destroy(set, m);
  
 -#ifdef NFT_PIPAPO_ALIGN
 -		free_percpu(m->scratch_aligned);
 -#endif
  		for_each_possible_cpu(cpu)
  			kfree(*per_cpu_ptr(m->scratch, cpu));
  		free_percpu(m->scratch);
@@@ -2066,6 -2178,14 +2079,17 @@@
  	}
  
  	if (priv->clone) {
++<<<<<<< HEAD
++=======
+ 		m = priv->clone;
+ 
+ 		if (priv->dirty)
+ 			nft_set_pipapo_match_destroy(set, m);
+ 
+ #ifdef NFT_PIPAPO_ALIGN
+ 		free_percpu(priv->clone->scratch_aligned);
+ #endif
++>>>>>>> 9827a0e6e23b (netfilter: nft_set_pipapo: release elements in clone from abort path)
  		for_each_possible_cpu(cpu)
  			kfree(*per_cpu_ptr(priv->clone->scratch, cpu));
  		free_percpu(priv->clone->scratch);
* Unmerged path net/netfilter/nft_set_pipapo.c
