wifi: mac80211: tighten locking check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Johannes Berg <johannes.berg@intel.com>
commit 939c4c7e823b161701637720016999ef1f4ae4db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/939c4c7e.failed

When we remove a link that doesn't have a channel context,
we don't really need the local->mtx locking. Tighten the
check here.

	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 939c4c7e823b161701637720016999ef1f4ae4db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/chan.c
diff --cc net/mac80211/chan.c
index 37035c3e5f8a,5ab210706123..000000000000
--- a/net/mac80211/chan.c
+++ b/net/mac80211/chan.c
@@@ -1856,14 -1985,17 +1856,19 @@@ int ieee80211_vif_change_bandwidth(stru
  	return ret;
  }
  
 -void ieee80211_link_release_channel(struct ieee80211_link_data *link)
 +void ieee80211_vif_release_channel(struct ieee80211_sub_if_data *sdata)
  {
 -	struct ieee80211_sub_if_data *sdata = link->sdata;
 -
  	WARN_ON(sdata->dev && netif_carrier_ok(sdata->dev));
  
- 	lockdep_assert_held(&sdata->local->mtx);
- 
  	mutex_lock(&sdata->local->chanctx_mtx);
++<<<<<<< HEAD
 +	__ieee80211_vif_release_channel(sdata);
++=======
+ 	if (rcu_access_pointer(link->conf->chanctx_conf)) {
+ 		lockdep_assert_held(&sdata->local->mtx);
+ 		__ieee80211_link_release_channel(link);
+ 	}
++>>>>>>> 939c4c7e823b (wifi: mac80211: tighten locking check)
  	mutex_unlock(&sdata->local->chanctx_mtx);
  }
  
* Unmerged path net/mac80211/chan.c
