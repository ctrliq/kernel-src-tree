xfs: ensure log flush at the end of a synchronous fallocate call

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Dave Chinner <dchinner@redhat.com>
commit cea267c235e1b1ec3bfc415f6bd420289bcb3bc9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/cea267c2.failed

Since we've started treating fallocate more like a file write, we
should flush the log to disk if the user has asked for synchronous
writes either by setting it via fcntl flags, or inode flags, or with
the sync mount option.  We've already got a helper for this, so use
it.

[The original patch by Darrick was massaged by Dave to fit this patchset]

	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
(cherry picked from commit cea267c235e1b1ec3bfc415f6bd420289bcb3bc9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/xfs_file.c
diff --cc fs/xfs/xfs_file.c
index 45fc285545d0,5bddb1e9e0b3..000000000000
--- a/fs/xfs/xfs_file.c
+++ b/fs/xfs/xfs_file.c
@@@ -1086,21 -1096,6 +1101,24 @@@ xfs_file_fadvise
  	return ret;
  }
  
++<<<<<<< HEAD
 +/* Does this file, inode, or mount want synchronous writes? */
 +static inline bool xfs_file_sync_writes(struct file *filp)
 +{
 +	struct xfs_inode	*ip = XFS_I(file_inode(filp));
 +
 +	if (ip->i_mount->m_flags & XFS_MOUNT_WSYNC)
 +		return true;
 +	if (filp->f_flags & (__O_SYNC | O_DSYNC))
 +		return true;
 +	if (IS_SYNC(file_inode(filp)))
 +		return true;
 +
 +	return false;
 +}
 +
++=======
++>>>>>>> cea267c235e1 (xfs: ensure log flush at the end of a synchronous fallocate call)
  STATIC loff_t
  xfs_file_remap_range(
  	struct file		*file_in,
* Unmerged path fs/xfs/xfs_file.c
