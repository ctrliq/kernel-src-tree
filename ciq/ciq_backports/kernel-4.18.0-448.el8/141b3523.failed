dm bufio: use the acquire memory barrier when testing for B_READING

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit 141b3523e9be6f15577acf4bbc3bc1f82d81d6d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/141b3523.failed

The function test_bit doesn't provide any memory barrier. It may be
possible that the read requests that follow test_bit(B_READING, &b->state)
are reordered before the test, reading invalid data that existed before
B_READING was cleared.

Fix this bug by changing test_bit to test_bit_acquire. This is
particularly important on arches with weak(er) memory ordering
(e.g. arm64).

Depends-On: 8238b4579866 ("wait_on_bit: add an acquire memory barrier")
Depends-On: d6ffe6067a54 ("provide arch_test_bit_acquire for architectures that define test_bit")
	Cc: stable@vger.kernel.org
	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit 141b3523e9be6f15577acf4bbc3bc1f82d81d6d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-bufio.c
diff --cc drivers/md/dm-bufio.c
index 2433b40fb098,9c5ef818ca36..000000000000
--- a/drivers/md/dm-bufio.c
+++ b/drivers/md/dm-bufio.c
@@@ -1424,6 -1478,14 +1425,17 @@@ retry
  }
  EXPORT_SYMBOL_GPL(dm_bufio_release_move);
  
++<<<<<<< HEAD
++=======
+ static void forget_buffer_locked(struct dm_buffer *b)
+ {
+ 	if (likely(!b->hold_count) && likely(!smp_load_acquire(&b->state))) {
+ 		__unlink_buffer(b);
+ 		__free_buffer_wake(b);
+ 	}
+ }
+ 
++>>>>>>> 141b3523e9be (dm bufio: use the acquire memory barrier when testing for B_READING)
  /*
   * Free the given buffer.
   *
* Unmerged path drivers/md/dm-bufio.c
