vfio/pci: introduce CONFIG_VFIO_PCI_ZDEV_KVM

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Matthew Rosato <mjrosato@linux.ibm.com>
commit c435c54639aa5513ab877c8b014dd83d4ce6b40e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/c435c546.failed

The current contents of vfio-pci-zdev are today only useful in a KVM
environment; let's tie everything currently under vfio-pci-zdev to
this Kconfig statement and require KVM in this case, reducing complexity
(e.g. symbol lookups).

	Signed-off-by: Matthew Rosato <mjrosato@linux.ibm.com>
	Acked-by: Alex Williamson <alex.williamson@redhat.com>
	Reviewed-by: Pierre Morel <pmorel@linux.ibm.com>
Link: https://lore.kernel.org/r/20220606203325.110625-11-mjrosato@linux.ibm.com
	Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
(cherry picked from commit c435c54639aa5513ab877c8b014dd83d4ce6b40e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/pci/Kconfig
#	drivers/vfio/pci/Makefile
#	drivers/vfio/pci/vfio_pci_private.h
diff --cc drivers/vfio/pci/Kconfig
index d0f8e4f5a039,f9d0c908e738..000000000000
--- a/drivers/vfio/pci/Kconfig
+++ b/drivers/vfio/pci/Kconfig
@@@ -38,9 -42,21 +38,28 @@@ config VFIO_PCI_IG
  	  and LPC bridge config space.
  
  	  To enable Intel IGD assignment through vfio-pci, say Y.
 -endif
  
++<<<<<<< HEAD
 +config VFIO_PCI_NVLINK2
 +	def_bool y
 +	depends on VFIO_PCI && PPC_POWERNV
 +	help
 +	  VFIO PCI support for P9 Witherspoon machine with NVIDIA V100 GPUs
++=======
+ config VFIO_PCI_ZDEV_KVM
+ 	bool "VFIO PCI extensions for s390x KVM passthrough"
+ 	depends on S390 && KVM
+ 	default y
+ 	help
+ 	  Support s390x-specific extensions to enable support for enhancements
+ 	  to KVM passthrough capabilities, such as interpretive execution of
+ 	  zPCI instructions.
+ 
+ 	  To enable s390x KVM vfio-pci extensions, say Y.
+ 
+ source "drivers/vfio/pci/mlx5/Kconfig"
+ 
+ source "drivers/vfio/pci/hisilicon/Kconfig"
+ 
+ endif
++>>>>>>> c435c54639aa (vfio/pci: introduce CONFIG_VFIO_PCI_ZDEV_KVM)
diff --cc drivers/vfio/pci/Makefile
index 4747432b9d28,24c524224da5..000000000000
--- a/drivers/vfio/pci/Makefile
+++ b/drivers/vfio/pci/Makefile
@@@ -1,7 -1,13 +1,15 @@@
 -# SPDX-License-Identifier: GPL-2.0-only
  
++<<<<<<< HEAD
 +vfio-pci-y := vfio_pci.o vfio_pci_intrs.o vfio_pci_rdwr.o vfio_pci_config.o
++=======
+ vfio-pci-core-y := vfio_pci_core.o vfio_pci_intrs.o vfio_pci_rdwr.o vfio_pci_config.o
+ vfio-pci-core-$(CONFIG_VFIO_PCI_ZDEV_KVM) += vfio_pci_zdev.o
+ obj-$(CONFIG_VFIO_PCI_CORE) += vfio-pci-core.o
+ 
+ vfio-pci-y := vfio_pci.o
++>>>>>>> c435c54639aa (vfio/pci: introduce CONFIG_VFIO_PCI_ZDEV_KVM)
  vfio-pci-$(CONFIG_VFIO_PCI_IGD) += vfio_pci_igd.o
 -obj-$(CONFIG_VFIO_PCI) += vfio-pci.o
 -
 -obj-$(CONFIG_MLX5_VFIO_PCI)           += mlx5/
 +vfio-pci-$(CONFIG_VFIO_PCI_NVLINK2) += vfio_pci_nvlink2.o
 +vfio-pci-$(CONFIG_S390) += vfio_pci_zdev.o
  
 -obj-$(CONFIG_HISI_ACC_VFIO_PCI) += hisilicon/
 +obj-$(CONFIG_VFIO_PCI) += vfio-pci.o
diff --cc drivers/vfio/pci/vfio_pci_private.h
index 37c783312fa0,63af2897939c..000000000000
--- a/drivers/vfio/pci/vfio_pci_private.h
+++ b/drivers/vfio/pci/vfio_pci_private.h
@@@ -202,26 -205,12 +202,31 @@@ static inline int vfio_pci_igd_init(str
  	return -ENODEV;
  }
  #endif
 +#ifdef CONFIG_VFIO_PCI_NVLINK2
 +extern int vfio_pci_nvdia_v100_nvlink2_init(struct vfio_pci_device *vdev);
 +extern int vfio_pci_ibm_npu2_init(struct vfio_pci_device *vdev);
 +#else
 +static inline int vfio_pci_nvdia_v100_nvlink2_init(struct vfio_pci_device *vdev)
 +{
 +	return -ENODEV;
 +}
  
 +static inline int vfio_pci_ibm_npu2_init(struct vfio_pci_device *vdev)
 +{
 +	return -ENODEV;
 +}
 +#endif
 +
++<<<<<<< HEAD:drivers/vfio/pci/vfio_pci_private.h
 +#ifdef CONFIG_S390
 +extern int vfio_pci_info_zdev_add_caps(struct vfio_pci_device *vdev,
++=======
+ #ifdef CONFIG_VFIO_PCI_ZDEV_KVM
+ extern int vfio_pci_info_zdev_add_caps(struct vfio_pci_core_device *vdev,
++>>>>>>> c435c54639aa (vfio/pci: introduce CONFIG_VFIO_PCI_ZDEV_KVM):include/linux/vfio_pci_core.h
  				       struct vfio_info_cap *caps);
  #else
 -static inline int vfio_pci_info_zdev_add_caps(struct vfio_pci_core_device *vdev,
 +static inline int vfio_pci_info_zdev_add_caps(struct vfio_pci_device *vdev,
  					      struct vfio_info_cap *caps)
  {
  	return -ENODEV;
* Unmerged path drivers/vfio/pci/Kconfig
* Unmerged path drivers/vfio/pci/Makefile
* Unmerged path drivers/vfio/pci/vfio_pci_private.h
