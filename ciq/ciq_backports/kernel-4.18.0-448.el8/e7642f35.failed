backlight: drop EARLY_EVENT_BLANK support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Sam Ravnborg <sam@ravnborg.org>
commit e7642f35851da14b78be7a38b0bb0d4068254859
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e7642f35.failed

There was no users left - so drop the code to support EARLY_EVENT_BLANK.
This patch removes the support in backlight,
and drop the notifier in fbmem.

That EARLY_EVENT_BLANK is not used can be verified that no driver set any of:

    lcd_ops.early_set_power()
    lcd_ops.r_early_set_power()

Noticed while browsing backlight code for other reasons.

v2:
- Fix changelog to say "EARLY_EVENT_BLANK" (Daniel)

	Signed-off-by: Sam Ravnborg <sam@ravnborg.org>
	Cc: Lee Jones <lee.jones@linaro.org>
	Cc: Daniel Thompson <daniel.thompson@linaro.org>
	Cc: Jingoo Han <jingoohan1@gmail.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Sam Ravnborg <sam@ravnborg.org>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: "Michał Mirosław" <mirq-linux@rere.qmqm.pl>
	Cc: Peter Rosin <peda@axentia.se>
	Cc: Gerd Hoffmann <kraxel@redhat.com>
	Cc: dri-devel@lists.freedesktop.org
	Cc: linux-fbdev@vger.kernel.org
	Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
	Acked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Acked-by: Lee Jones <lee.jones@linaro.org>
Link: https://patchwork.freedesktop.org/patch/msgid/20190725143224.GB31803@ravnborg.org
(cherry picked from commit e7642f35851da14b78be7a38b0bb0d4068254859)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/fb.h
diff --cc include/linux/fb.h
index 5bd1a6c3d119,756706b666a1..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -143,27 -133,8 +143,30 @@@ struct fb_cursor_user 
  #define FB_EVENT_FB_UNREGISTERED        0x06
  #endif
  
 -/*      A display blank is requested       */
 +/*      CONSOLE-SPECIFIC: get console to framebuffer mapping */
 +#define FB_EVENT_GET_CONSOLE_MAP        0x07
 +/*      CONSOLE-SPECIFIC: set console to framebuffer mapping */
 +#define FB_EVENT_SET_CONSOLE_MAP        0x08
 +/*      A hardware display blank change occurred */
  #define FB_EVENT_BLANK                  0x09
++<<<<<<< HEAD
 +/*      Private modelist is to be replaced */
 +#define FB_EVENT_NEW_MODELIST           0x0A
 +/*	The resolution of the passed in fb_info about to change and
 +        all vc's should be changed         */
 +#define FB_EVENT_MODE_CHANGE_ALL	0x0B
 +/*	A software display blank change occurred */
 +#define FB_EVENT_CONBLANK               0x0C
 +/*      Get drawing requirements        */
 +#define FB_EVENT_GET_REQ                0x0D
 +/*      Unbind from the console if possible */
 +#define FB_EVENT_FB_UNBIND              0x0E
 +/*      A hardware display blank early change occured */
 +#define FB_EARLY_EVENT_BLANK		0x10
 +/*      A hardware display blank revert early change occured */
 +#define FB_R_EARLY_EVENT_BLANK		0x11
++=======
++>>>>>>> e7642f35851d (backlight: drop EARLY_EVENT_BLANK support)
  
  struct fb_event {
  	struct fb_info *info;
diff --git a/drivers/video/backlight/lcd.c b/drivers/video/backlight/lcd.c
index 4b40c6a4d441..bb6466c52bb7 100644
--- a/drivers/video/backlight/lcd.c
+++ b/drivers/video/backlight/lcd.c
@@ -50,14 +50,6 @@ static int fb_notifier_callback(struct notifier_block *self,
 		if (event == FB_EVENT_BLANK) {
 			if (ld->ops->set_power)
 				ld->ops->set_power(ld, *(int *)evdata->data);
-		} else if (event == FB_EARLY_EVENT_BLANK) {
-			if (ld->ops->early_set_power)
-				ld->ops->early_set_power(ld,
-						*(int *)evdata->data);
-		} else if (event == FB_R_EARLY_EVENT_BLANK) {
-			if (ld->ops->r_early_set_power)
-				ld->ops->r_early_set_power(ld,
-						*(int *)evdata->data);
 		} else {
 			if (ld->ops->set_mode)
 				ld->ops->set_mode(ld, evdata->data);
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index 32dffdd5addd..98001c4da584 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -1039,7 +1039,7 @@ int
 fb_blank(struct fb_info *info, int blank)
 {	
 	struct fb_event event;
-	int ret = -EINVAL, early_ret;
+	int ret = -EINVAL;
 
  	if (blank > FB_BLANK_POWERDOWN)
  		blank = FB_BLANK_POWERDOWN;
@@ -1047,21 +1047,11 @@ fb_blank(struct fb_info *info, int blank)
 	event.info = info;
 	event.data = &blank;
 
-	early_ret = fb_notifier_call_chain(FB_EARLY_EVENT_BLANK, &event);
-
 	if (info->fbops->fb_blank)
  		ret = info->fbops->fb_blank(blank, info);
 
 	if (!ret)
 		fb_notifier_call_chain(FB_EVENT_BLANK, &event);
-	else {
-		/*
-		 * if fb_blank is failed then revert effects of
-		 * the early blank event.
-		 */
-		if (!early_ret)
-			fb_notifier_call_chain(FB_R_EARLY_EVENT_BLANK, &event);
-	}
 
  	return ret;
 }
* Unmerged path include/linux/fb.h
diff --git a/include/linux/lcd.h b/include/linux/lcd.h
index 851eee8fff25..238fb1dfed98 100644
--- a/include/linux/lcd.h
+++ b/include/linux/lcd.h
@@ -41,16 +41,6 @@ struct lcd_ops {
 	/* Get the LCD panel power status (0: full on, 1..3: controller
 	   power on, flat panel power off, 4: full off), see FB_BLANK_XXX */
 	int (*get_power)(struct lcd_device *);
-	/*
-	 * Enable or disable power to the LCD(0: on; 4: off, see FB_BLANK_XXX)
-	 * and this callback would be called proir to fb driver's callback.
-	 *
-	 * P.S. note that if early_set_power is not NULL then early fb notifier
-	 *	would be registered.
-	 */
-	int (*early_set_power)(struct lcd_device *, int power);
-	/* revert the effects of the early blank event. */
-	int (*r_early_set_power)(struct lcd_device *, int power);
 	/* Enable or disable power to the LCD (0: on; 4: off, see FB_BLANK_XXX) */
 	int (*set_power)(struct lcd_device *, int power);
 	/* Get the current contrast setting (0-max_contrast) */
