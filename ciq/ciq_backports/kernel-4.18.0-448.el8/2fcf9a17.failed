of: fdt: Rename reserve_elfcorehdr() to fdt_reserve_elfcorehdr()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Geert Uytterhoeven <geert+renesas@glider.be>
commit 2fcf9a178ba1f2d4f2bf715312b84508850701d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/2fcf9a17.failed

On ia64/allmodconfig:

    drivers/of/fdt.c:609:20: error: conflicting types for 'reserve_elfcorehdr'; have 'void(void)'
      609 | static void __init reserve_elfcorehdr(void)
	  |                    ^~~~~~~~~~~~~~~~~~
    arch/ia64/include/asm/meminit.h:43:12: note: previous declaration of 'reserve_elfcorehdr' with type 'int(u64 *, u64 *)' {aka 'int(long long unsigned int *, long long unsigned int *)'}
       43 | extern int reserve_elfcorehdr(u64 *start, u64 *end);
	  |            ^~~~~~~~~~~~~~~~~~

Fix this by prefixing the FDT function name with "fdt_".

Fixes: f7e7ce93aac13118 ("of: fdt: Add generic support for handling elf core headers property")
	Reported-by: kernel test robot <lkp@intel.com>
	Signed-off-by: Geert Uytterhoeven <geert+renesas@glider.be>
Link: https://lore.kernel.org/r/f6eabbbce0fba6da3da0264c1e1cf23c01173999.1629884393.git.geert+renesas@glider.be
	Signed-off-by: Rob Herring <robh@kernel.org>
(cherry picked from commit 2fcf9a178ba1f2d4f2bf715312b84508850701d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/of/fdt.c
diff --cc drivers/of/fdt.c
index 5f804b7f0a7a,4546572af24b..000000000000
--- a/drivers/of/fdt.c
+++ b/drivers/of/fdt.c
@@@ -650,6 -598,30 +650,33 @@@ static int __init __fdt_scan_reserved_m
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * fdt_reserve_elfcorehdr() - reserves memory for elf core header
+  *
+  * This function reserves the memory occupied by an elf core header
+  * described in the device tree. This region contains all the
+  * information about primary kernel's core image and is used by a dump
+  * capture kernel to access the system memory on primary kernel.
+  */
+ static void __init fdt_reserve_elfcorehdr(void)
+ {
+ 	if (!IS_ENABLED(CONFIG_CRASH_DUMP) || !elfcorehdr_size)
+ 		return;
+ 
+ 	if (memblock_is_region_reserved(elfcorehdr_addr, elfcorehdr_size)) {
+ 		pr_warn("elfcorehdr is overlapped\n");
+ 		return;
+ 	}
+ 
+ 	memblock_reserve(elfcorehdr_addr, elfcorehdr_size);
+ 
+ 	pr_info("Reserving %llu KiB of memory at 0x%llx for elfcorehdr\n",
+ 		elfcorehdr_size >> 10, elfcorehdr_addr);
+ }
+ 
++>>>>>>> 2fcf9a178ba1 (of: fdt: Rename reserve_elfcorehdr() to fdt_reserve_elfcorehdr())
  /**
   * early_init_fdt_scan_reserved_mem() - create reserved memory regions
   *
@@@ -675,6 -647,7 +702,10 @@@ void __init early_init_fdt_scan_reserve
  
  	of_scan_flat_dt(__fdt_scan_reserved_mem, NULL);
  	fdt_init_reserved_mem();
++<<<<<<< HEAD
++=======
+ 	fdt_reserve_elfcorehdr();
++>>>>>>> 2fcf9a178ba1 (of: fdt: Rename reserve_elfcorehdr() to fdt_reserve_elfcorehdr())
  }
  
  /**
* Unmerged path drivers/of/fdt.c
