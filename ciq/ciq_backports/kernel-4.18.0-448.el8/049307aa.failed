ASoC: SOF: Add enum_get/put control ops for IPC3

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit 049307aad2a355f7b44736eeb5795d6d4499fd12
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/049307aa.failed

Define and set the enum_get/put control IPC ops for IPC3.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20220317175044.1752400-9-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 049307aad2a355f7b44736eeb5795d6d4499fd12)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/control.c
#	sound/soc/sof/ipc3-control.c
diff --cc sound/soc/sof/control.c
index ef61936dad59,499d426c5d38..000000000000
--- a/sound/soc/sof/control.c
+++ b/sound/soc/sof/control.c
@@@ -211,17 -160,14 +211,19 @@@ int snd_sof_switch_put(struct snd_kcont
  int snd_sof_enum_get(struct snd_kcontrol *kcontrol,
  		     struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_enum *se =
- 		(struct soc_enum *)kcontrol->private_value;
+ 	struct soc_enum *se = (struct soc_enum *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = se->dobj.private;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	unsigned int i, channels = scontrol->num_channels;
++=======
+ 	struct snd_soc_component *scomp = scontrol->scomp;
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> 049307aad2a3 (ASoC: SOF: Add enum_get/put control ops for IPC3)
  
- 	snd_sof_refresh_control(scontrol);
- 
- 	/* read back each channel */
- 	for (i = 0; i < channels; i++)
- 		ucontrol->value.enumerated.item[i] = cdata->chanv[i].value;
+ 	if (tplg_ops->control->enum_get)
+ 		return tplg_ops->control->enum_get(scontrol, ucontrol);
  
  	return 0;
  }
@@@ -229,28 -175,16 +231,23 @@@
  int snd_sof_enum_put(struct snd_kcontrol *kcontrol,
  		     struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_enum *se =
- 		(struct soc_enum *)kcontrol->private_value;
+ 	struct soc_enum *se = (struct soc_enum *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = se->dobj.private;
  	struct snd_soc_component *scomp = scontrol->scomp;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	unsigned int i, channels = scontrol->num_channels;
 +	bool change = false;
 +	u32 value;
++=======
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> 049307aad2a3 (ASoC: SOF: Add enum_get/put control ops for IPC3)
  
- 	/* update each channel */
- 	for (i = 0; i < channels; i++) {
- 		value = ucontrol->value.enumerated.item[i];
- 		change = change || (value != cdata->chanv[i].value);
- 		cdata->chanv[i].channel = i;
- 		cdata->chanv[i].value = value;
- 	}
+ 	if (tplg_ops->control->enum_put)
+ 		return tplg_ops->control->enum_put(scontrol, ucontrol);
  
- 	/* notify DSP of enum updates */
- 	if (pm_runtime_active(scomp->dev))
- 		snd_sof_ipc_set_get_comp_data(scontrol, true);
- 
- 	return change;
+ 	return false;
  }
  
  int snd_sof_bytes_get(struct snd_kcontrol *kcontrol,
* Unmerged path sound/soc/sof/ipc3-control.c
* Unmerged path sound/soc/sof/control.c
* Unmerged path sound/soc/sof/ipc3-control.c
