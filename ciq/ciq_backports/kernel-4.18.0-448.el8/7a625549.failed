Revert "backlight/fbcon: Add FB_EVENT_CONBLANK"

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Daniel Vetter <daniel.vetter@ffwll.ch>
commit 7a625549ea8c14be70bc7cfaf30215401bba6da0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/7a625549.failed

This reverts commit 994efacdf9a087b52f71e620b58dfa526b0cf928.

The justification is that if hw blanking fails (i.e. fbops->fb_blank)
fails, then we still want to shut down the backlight. Which is exactly
_not_ what fb_blank() does and so rather inconsistent if we end up
with different behaviour between fbcon and direct fbdev usage. Given
that the entire notifier maze is getting in the way anyway I figured
it's simplest to revert this not well justified commit.

v2: Add static inline to the dummy version.

	Cc: Richard Purdie <rpurdie@rpsys.net>
	Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
	Reviewed-by: Sam Ravnborg <sam@ravnborg.org>
	Reviewed-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Acked-by: Daniel Thompson <daniel.thompson@linaro.org>
	Cc: Lee Jones <lee.jones@linaro.org>
	Cc: Daniel Thompson <daniel.thompson@linaro.org>
	Cc: Jingoo Han <jingoohan1@gmail.com>
	Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: Hans de Goede <hdegoede@redhat.com>
	Cc: Yisheng Xie <ysxie@foxmail.com>
	Cc: linux-fbdev@vger.kernel.org
Link: https://patchwork.freedesktop.org/patch/msgid/20190528090304.9388-25-daniel.vetter@ffwll.ch
(cherry picked from commit 7a625549ea8c14be70bc7cfaf30215401bba6da0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/video/fbdev/core/fbcon.c
#	include/linux/fb.h
#	include/linux/fbcon.h
diff --cc drivers/video/fbdev/core/fbcon.c
index 689e13ab3084,be179b47d1c6..000000000000
--- a/drivers/video/fbdev/core/fbcon.c
+++ b/drivers/video/fbdev/core/fbcon.c
@@@ -3379,15 -3335,9 +3370,21 @@@ static int fbcon_event_notify(struct no
  		con2fb = event->data;
  		con2fb->framebuffer = con2fb_map[con2fb->console - 1];
  		break;
++<<<<<<< HEAD
 +	case FB_EVENT_BLANK:
 +		fbcon_fb_blanked(info, *(int *)event->data);
 +		break;
 +	case FB_EVENT_NEW_MODELIST:
 +		fbcon_new_modelist(info);
 +		break;
 +	case FB_EVENT_GET_REQ:
 +		caps = event->data;
 +		fbcon_get_requirement(info, caps);
++=======
+ 	case FB_EVENT_REMAP_ALL_CONSOLE:
+ 		idx = info->node;
+ 		fbcon_remap_all(idx);
++>>>>>>> 7a625549ea8c (Revert "backlight/fbcon: Add FB_EVENT_CONBLANK")
  		break;
  	}
  	return ret;
diff --cc include/linux/fb.h
index 5bd1a6c3d119,1e66fac3124f..000000000000
--- a/include/linux/fb.h
+++ b/include/linux/fb.h
@@@ -147,22 -137,15 +147,28 @@@ struct fb_cursor_user 
  #define FB_EVENT_GET_CONSOLE_MAP        0x07
  /*      CONSOLE-SPECIFIC: set console to framebuffer mapping */
  #define FB_EVENT_SET_CONSOLE_MAP        0x08
- /*      A hardware display blank change occurred */
+ /*      A display blank is requested       */
  #define FB_EVENT_BLANK                  0x09
  /*      Private modelist is to be replaced */
 +#define FB_EVENT_NEW_MODELIST           0x0A
 +/*	The resolution of the passed in fb_info about to change and
 +        all vc's should be changed         */
  #define FB_EVENT_MODE_CHANGE_ALL	0x0B
++<<<<<<< HEAD
 +/*	A software display blank change occurred */
 +#define FB_EVENT_CONBLANK               0x0C
 +/*      Get drawing requirements        */
 +#define FB_EVENT_GET_REQ                0x0D
 +/*      Unbind from the console if possible */
 +#define FB_EVENT_FB_UNBIND              0x0E
 +/*      A hardware display blank early change occured */
++=======
+ /*      CONSOLE-SPECIFIC: remap all consoles to new fb - for vga_switcheroo */
+ #define FB_EVENT_REMAP_ALL_CONSOLE      0x0F
+ /*      A hardware display blank early change occurred */
++>>>>>>> 7a625549ea8c (Revert "backlight/fbcon: Add FB_EVENT_CONBLANK")
  #define FB_EARLY_EVENT_BLANK		0x10
 -/*      A hardware display blank revert early change occurred */
 +/*      A hardware display blank revert early change occured */
  #define FB_R_EARLY_EVENT_BLANK		0x11
  
  struct fb_event {
diff --cc include/linux/fbcon.h
index 34abc144f9f8,d67d7ec51ef9..000000000000
--- a/include/linux/fbcon.h
+++ b/include/linux/fbcon.h
@@@ -6,13 -6,29 +6,37 @@@ void __init fb_console_init(void)
  void __exit fb_console_exit(void);
  int fbcon_fb_registered(struct fb_info *info);
  void fbcon_fb_unregistered(struct fb_info *info);
++<<<<<<< HEAD
 +void fbcon_remap_all(struct fb_info *info);
++=======
+ void fbcon_fb_unbind(struct fb_info *info);
+ void fbcon_suspended(struct fb_info *info);
+ void fbcon_resumed(struct fb_info *info);
+ int fbcon_mode_deleted(struct fb_info *info,
+ 		       struct fb_videomode *mode);
+ void fbcon_new_modelist(struct fb_info *info);
+ void fbcon_get_requirement(struct fb_info *info,
+ 			   struct fb_blit_caps *caps);
+ void fbcon_fb_blanked(struct fb_info *info, int blank);
++>>>>>>> 7a625549ea8c (Revert "backlight/fbcon: Add FB_EVENT_CONBLANK")
  #else
  static inline void fb_console_init(void) {}
  static inline void fb_console_exit(void) {}
  static inline int fbcon_fb_registered(struct fb_info *info) { return 0; }
  static inline void fbcon_fb_unregistered(struct fb_info *info) {}
++<<<<<<< HEAD
 +static inline void fbcon_remap_all(struct fb_info *info) {}
++=======
+ static inline void fbcon_fb_unbind(struct fb_info *info) {}
+ static inline void fbcon_suspended(struct fb_info *info) {}
+ static inline void fbcon_resumed(struct fb_info *info) {}
+ static inline int fbcon_mode_deleted(struct fb_info *info,
+ 				     struct fb_videomode *mode) { return 0; }
+ static inline void fbcon_new_modelist(struct fb_info *info) {}
+ static inline void fbcon_get_requirement(struct fb_info *info,
+ 					 struct fb_blit_caps *caps) {}
+ static inline void fbcon_fb_blanked(struct fb_info *info, int blank) {}
++>>>>>>> 7a625549ea8c (Revert "backlight/fbcon: Add FB_EVENT_CONBLANK")
  #endif
  
  #endif /* _LINUX_FBCON_H */
diff --git a/drivers/video/backlight/backlight.c b/drivers/video/backlight/backlight.c
index de73c3c340d2..26a14cd15322 100644
--- a/drivers/video/backlight/backlight.c
+++ b/drivers/video/backlight/backlight.c
@@ -52,7 +52,7 @@ static int fb_notifier_callback(struct notifier_block *self,
 	int fb_blank = 0;
 
 	/* If we aren't interested in this event, skip it immediately ... */
-	if (event != FB_EVENT_BLANK && event != FB_EVENT_CONBLANK)
+	if (event != FB_EVENT_BLANK)
 		return 0;
 
 	bd = container_of(self, struct backlight_device, fb_notif);
* Unmerged path drivers/video/fbdev/core/fbcon.c
diff --git a/drivers/video/fbdev/core/fbmem.c b/drivers/video/fbdev/core/fbmem.c
index e0a48e4a47a0..1d31b06aadcc 100644
--- a/drivers/video/fbdev/core/fbmem.c
+++ b/drivers/video/fbdev/core/fbmem.c
@@ -1048,6 +1048,7 @@ fb_blank(struct fb_info *info, int blank)
 	event.data = &blank;
 
 	early_ret = fb_notifier_call_chain(FB_EARLY_EVENT_BLANK, &event);
+	fbcon_fb_blanked(info, blank);
 
 	if (info->fbops->fb_blank)
  		ret = info->fbops->fb_blank(blank, info);
* Unmerged path include/linux/fb.h
* Unmerged path include/linux/fbcon.h
