of: address: Work around missing device_type property in pcie nodes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Marc Zyngier <maz@kernel.org>
commit d1ac0002dd297069bb8448c2764c9c31c4668441
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/d1ac0002.failed

Recent changes to the DT PCI bus parsing made it mandatory for
device tree nodes describing a PCI controller to have the
'device_type = "pci"' property for the node to be matched.

Although this follows the letter of the specification, it
breaks existing device-trees that have been working fine
for years.  Rockchip rk3399-based systems are a prime example
of such collateral damage, and have stopped discovering their
PCI bus.

In order to paper over it, let's add a workaround to the code
matching the device type, and accept as PCI any node that is
named "pcie",

A warning will hopefully nudge the user into updating their
DT to a fixed version if they can, but the incentive is
obviously pretty small.

Fixes: 2f96593ecc37 ("of_address: Add bus type match for pci ranges parser")
	Suggested-by: Rob Herring <robh+dt@kernel.org>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20200819094255.474565-1-maz@kernel.org
	Signed-off-by: Rob Herring <robh@kernel.org>
(cherry picked from commit d1ac0002dd297069bb8448c2764c9c31c4668441)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/of/address.c
diff --cc drivers/of/address.c
index 29b4021f3bf3,da4f7341323f..000000000000
--- a/drivers/of/address.c
+++ b/drivers/of/address.c
@@@ -132,9 -144,13 +142,18 @@@ static int of_bus_pci_match(struct devi
   	 * "pciex" is PCI Express
  	 * "vci" is for the /chaos bridge on 1st-gen PCI powermacs
  	 * "ht" is hypertransport
+ 	 *
+ 	 * If none of the device_type match, and that the node name is
+ 	 * "pcie", accept the device as PCI (with a warning).
  	 */
++<<<<<<< HEAD
 +	return !strcmp(np->type, "pci") || !strcmp(np->type, "pciex") ||
 +		!strcmp(np->type, "vci") || !strcmp(np->type, "ht");
++=======
+ 	return of_node_is_type(np, "pci") || of_node_is_type(np, "pciex") ||
+ 		of_node_is_type(np, "vci") || of_node_is_type(np, "ht") ||
+ 		of_node_is_pcie(np);
++>>>>>>> d1ac0002dd29 (of: address: Work around missing device_type property in pcie nodes)
  }
  
  static void of_bus_pci_count_cells(struct device_node *np,
* Unmerged path drivers/of/address.c
