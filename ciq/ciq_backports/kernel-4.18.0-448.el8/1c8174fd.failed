s390/pci: tolerate inconsistent handle in recover

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit 1c8174fdc798489159a79466fca782daa231219a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/1c8174fd.failed

Since commit 8256adda1f44 ("s390/pci: handle FH state mismatch only on
disable") zpci_disable_device() returns -EINVAL when the platform
detects an attempt to disable a PCI function that it sees as already
disabled.

In most situations we want to abort whenever this happens and abort is
possible since it either means that the device vanished but we haven't
gotten an availability event yet, or the FH got out of sync which should
not happen.

Unfortunately there is an inconsistency between the LPAR and z/VM
hypervisors on whether error events for PCI functions contain an
an enabled or a general handle. So under z/VM it can happen that our
most up to date function handle is enabled but trying to disable the
function results in the aforementioned error.

Since recover is designed to be used to recover functions from the error
state let's make it robust to this inconsistency by explicitly treating
it as a successful disable.

	Acked-by: Pierre Morel <pmorel@linux.ibm.com>
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit 1c8174fdc798489159a79466fca782daa231219a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci_sysfs.c
diff --cc arch/s390/pci/pci_sysfs.c
index 6e2450c2b9c1,cae280e5c047..000000000000
--- a/arch/s390/pci/pci_sysfs.c
+++ b/arch/s390/pci/pci_sysfs.c
@@@ -82,9 -82,25 +82,31 @@@ static ssize_t recover_store(struct dev
  	pci_lock_rescan_remove();
  	if (pci_dev_is_added(pdev)) {
  		pci_stop_and_remove_bus_device(pdev);
++<<<<<<< HEAD
 +		ret = zpci_disable_device(zdev);
 +		if (ret)
 +			goto out;
++=======
+ 		if (zdev->dma_table) {
+ 			ret = zpci_dma_exit_device(zdev);
+ 			if (ret)
+ 				goto out;
+ 		}
+ 
+ 		if (zdev_enabled(zdev)) {
+ 			ret = zpci_disable_device(zdev);
+ 			/*
+ 			 * Due to a z/VM vs LPAR inconsistency in the error
+ 			 * state the FH may indicate an enabled device but
+ 			 * disable says the device is already disabled don't
+ 			 * treat it as an error here.
+ 			 */
+ 			if (ret == -EINVAL)
+ 				ret = 0;
+ 			if (ret)
+ 				goto out;
+ 		}
++>>>>>>> 1c8174fdc798 (s390/pci: tolerate inconsistent handle in recover)
  
  		ret = zpci_enable_device(zdev);
  		if (ret)
* Unmerged path arch/s390/pci/pci_sysfs.c
