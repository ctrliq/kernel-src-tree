scsi: mpt3sas: Fix return value check of dma_get_required_mask()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-448.el8
commit-author Sreekanth Reddy <sreekanth.reddy@broadcom.com>
commit e0e0747de0ea3dd87cdbb0393311e17471a9baf1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-448.el8/e0e0747d.failed

Fix the incorrect return value check of dma_get_required_mask().  Due to
this incorrect check, the driver was always setting the DMA mask to 63 bit.

Link: https://lore.kernel.org/r/20220913120538.18759-2-sreekanth.reddy@broadcom.com
Fixes: ba27c5cf286d ("scsi: mpt3sas: Don't change the DMA coherent mask after allocations")
	Signed-off-by: Sreekanth Reddy <sreekanth.reddy@broadcom.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit e0e0747de0ea3dd87cdbb0393311e17471a9baf1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/mpt3sas/mpt3sas_base.c
diff --cc drivers/scsi/mpt3sas/mpt3sas_base.c
index b2a6795a5d4f,331e896d8225..000000000000
--- a/drivers/scsi/mpt3sas/mpt3sas_base.c
+++ b/drivers/scsi/mpt3sas/mpt3sas_base.c
@@@ -2895,26 -2990,19 +2895,32 @@@ static in
  _base_config_dma_addressing(struct MPT3SAS_ADAPTER *ioc, struct pci_dev *pdev)
  {
  	struct sysinfo s;
 +	u64 coherent_dma_mask, dma_mask;
  
++<<<<<<< HEAD
 +	if (ioc->is_mcpu_endpoint || sizeof(dma_addr_t) == 4 ||
 +	    dma_get_required_mask(&pdev->dev) <= 32) {
++=======
+ 	if (ioc->is_mcpu_endpoint ||
+ 	    sizeof(dma_addr_t) == 4 || ioc->use_32bit_dma ||
+ 	    dma_get_required_mask(&pdev->dev) <= DMA_BIT_MASK(32))
++>>>>>>> e0e0747de0ea (scsi: mpt3sas: Fix return value check of dma_get_required_mask())
  		ioc->dma_mask = 32;
 +		coherent_dma_mask = dma_mask = DMA_BIT_MASK(32);
  	/* Set 63 bit DMA mask for all SAS3 and SAS35 controllers */
 -	else if (ioc->hba_mpi_version_belonged > MPI2_VERSION)
 +	} else if (ioc->hba_mpi_version_belonged > MPI2_VERSION) {
  		ioc->dma_mask = 63;
 -	else
 +		coherent_dma_mask = dma_mask = DMA_BIT_MASK(63);
 +	} else {
  		ioc->dma_mask = 64;
 +		coherent_dma_mask = dma_mask = DMA_BIT_MASK(64);
 +	}
  
 -	if (dma_set_mask(&pdev->dev, DMA_BIT_MASK(ioc->dma_mask)) ||
 -	    dma_set_coherent_mask(&pdev->dev, DMA_BIT_MASK(ioc->dma_mask)))
 +	if (ioc->use_32bit_dma)
 +		coherent_dma_mask = DMA_BIT_MASK(32);
 +
 +	if (dma_set_mask(&pdev->dev, dma_mask) ||
 +	    dma_set_coherent_mask(&pdev->dev, coherent_dma_mask))
  		return -ENODEV;
  
  	if (ioc->dma_mask > 32) {
* Unmerged path drivers/scsi/mpt3sas/mpt3sas_base.c
