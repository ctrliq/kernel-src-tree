NFSD: Protect against filesystem freezing

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-508.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit fd9a2e1d513823e840960cb3bc26d8b7749d4ac2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-508.el8/fd9a2e1d.failed

Flole observes this WARNING on occasion:

[1210423.486503] WARNING: CPU: 8 PID: 1524732 at fs/ext4/ext4_jbd2.c:75 ext4_journal_check_start+0x68/0xb0

	Reported-by: <flole@flole.de>
	Suggested-by: Jan Kara <jack@suse.cz>
Link: https://bugzilla.kernel.org/show_bug.cgi?id=217123
Fixes: 73da852e3831 ("nfsd: use vfs_iter_read/write")
	Reviewed-by: Jeff Layton <jlayton@kernel.org>
	Reviewed-by: Jan Kara <jack@suse.cz>
	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit fd9a2e1d513823e840960cb3bc26d8b7749d4ac2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/vfs.c
diff --cc fs/nfsd/vfs.c
index c504bd9ef42a,ba34a31a7c70..000000000000
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@@ -1059,16 -1100,32 +1059,35 @@@ nfsd_vfs_write(struct svc_rqst *rqstp, 
  	if (stable && !use_wgather)
  		flags |= RWF_SYNC;
  
++<<<<<<< HEAD
 +	iov_iter_kvec(&iter, WRITE, vec, vlen, *cnt);
 +	host_err = vfs_iter_write(file, &iter, &pos, flags);
++=======
+ 	iov_iter_kvec(&iter, ITER_SOURCE, vec, vlen, *cnt);
+ 	since = READ_ONCE(file->f_wb_err);
+ 	if (verf)
+ 		nfsd_copy_write_verifier(verf, nn);
+ 	file_start_write(file);
+ 	host_err = vfs_iter_write(file, &iter, &pos, flags);
+ 	file_end_write(file);
+ 	if (host_err < 0) {
+ 		nfsd_reset_write_verifier(nn);
+ 		trace_nfsd_writeverf_reset(nn, rqstp, host_err);
+ 		goto out_nfserr;
+ 	}
+ 	*cnt = host_err;
+ 	nfsd_stats_io_write_add(exp, *cnt);
+ 	fsnotify_modify(file);
+ 	host_err = filemap_check_wb_err(file->f_mapping, since);
++>>>>>>> fd9a2e1d5138 (NFSD: Protect against filesystem freezing)
  	if (host_err < 0)
  		goto out_nfserr;
 +	*cnt = host_err;
 +	nfsdstats.io_write += *cnt;
 +	fsnotify_modify(file);
  
 -	if (stable && use_wgather) {
 +	if (stable && use_wgather)
  		host_err = wait_for_concurrent_writes(file);
 -		if (host_err < 0) {
 -			nfsd_reset_write_verifier(nn);
 -			trace_nfsd_writeverf_reset(nn, rqstp, host_err);
 -		}
 -	}
  
  out_nfserr:
  	if (host_err >= 0) {
* Unmerged path fs/nfsd/vfs.c
