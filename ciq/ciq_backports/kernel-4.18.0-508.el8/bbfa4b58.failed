net/mlx5: Read embedded cpu after init bit cleared

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-508.el8
commit-author Moshe Shemesh <moshe@nvidia.com>
commit bbfa4b58997e3d38ba629c9f6fc0bd1c163aaf43
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-508.el8/bbfa4b58.failed

During driver load it reads embedded_cpu bit from initialization
segment, but the initialization segment is readable only after
initialization bit is cleared.

Move the call to mlx5_read_embedded_cpu() right after initialization bit
cleared.

	Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
Fixes: 591905ba9679 ("net/mlx5: Introduce Mellanox SmartNIC and modify page management logic")
	Reviewed-by: Shay Drory <shayd@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit bbfa4b58997e3d38ba629c9f6fc0bd1c163aaf43)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index d1d3e9174564,d6ee016deae1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -921,8 -923,6 +921,11 @@@ static int mlx5_pci_init(struct mlx5_co
  	}
  
  	mlx5_pci_vsc_init(dev);
++<<<<<<< HEAD
 +	dev->caps.embedded_cpu = mlx5_read_embedded_cpu(dev);
 +	pci_hw_unmaintained(mlx5_core_hw_unsupp_pci_table, pdev);
++=======
++>>>>>>> bbfa4b58997e (net/mlx5: Read embedded cpu after init bit cleared)
  	return 0;
  
  err_clr_master:
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
