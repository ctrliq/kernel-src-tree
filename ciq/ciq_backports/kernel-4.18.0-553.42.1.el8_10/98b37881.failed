scsi: st: Don't set pos_unknown just after device recognition

jira LE-2741
Rebuild_History Non-Buildable kernel-4.18.0-553.42.1.el8_10
commit-author Kai Mäkisara <Kai.Makisara@kolumbus.fi>
commit 98b37881b7492ae9048ad48260cc8a6ee9eb39fd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.42.1.el8_10/98b37881.failed

Commit 9604eea5bd3a ("scsi: st: Add third party poweron reset handling") in
v6.6 added new code to handle the Power On/Reset Unit Attention (POR UA)
sense data. This was in addition to the existing method. When this Unit
Attention is received, the driver blocks attempts to read, write and some
other operations because the reset may have rewinded the tape. Because of
the added code, also the initial POR UA resulted in blocking operations,
including those that are used to set the driver options after the device is
recognized. Also, reading and writing are refused, whereas they succeeded
before this commit.

Add code to not set pos_unknown to block operations if the POR UA is
received from the first test_ready() call after the st device has been
created. This restores the behavior before v6.6.

	Signed-off-by: Kai Mäkisara <Kai.Makisara@kolumbus.fi>
Link: https://lore.kernel.org/r/20241216113755.30415-1-Kai.Makisara@kolumbus.fi
Fixes: 9604eea5bd3a ("scsi: st: Add third party poweron reset handling")
CC: stable@vger.kernel.org
Closes: https://lore.kernel.org/linux-scsi/2201CF73-4795-4D3B-9A79-6EE5215CF58D@kolumbus.fi/
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 98b37881b7492ae9048ad48260cc8a6ee9eb39fd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/st.c
diff --cc drivers/scsi/st.c
index 32db554d65e0,ebbd50ec0cda..000000000000
--- a/drivers/scsi/st.c
+++ b/drivers/scsi/st.c
@@@ -4355,7 -4332,8 +4360,12 @@@ static int st_probe(struct device *dev
  	tpnt->nbr_partitions = 0;
  	blk_queue_rq_timeout(tpnt->device->request_queue, ST_TIMEOUT);
  	tpnt->long_timeout = ST_LONG_TIMEOUT;
++<<<<<<< HEAD
 +	tpnt->try_dio = try_direct_io && !SDp->host->unchecked_isa_dma;
++=======
+ 	tpnt->try_dio = try_direct_io;
+ 	tpnt->first_tur = 1;
++>>>>>>> 98b37881b749 (scsi: st: Don't set pos_unknown just after device recognition)
  
  	for (i = 0; i < ST_NBR_MODES; i++) {
  		STm = &(tpnt->modes[i]);
* Unmerged path drivers/scsi/st.c
diff --git a/drivers/scsi/st.h b/drivers/scsi/st.h
index 95d2e7a7988d..355e55f681b9 100644
--- a/drivers/scsi/st.h
+++ b/drivers/scsi/st.h
@@ -173,6 +173,7 @@ struct scsi_tape {
 	unsigned char rew_at_close;  /* rewind necessary at close */
 	unsigned char inited;
 	unsigned char cleaning_req;  /* cleaning requested? */
+	unsigned char first_tur;     /* first TEST UNIT READY */
 	int block_size;
 	int min_block;
 	int max_block;
