selftest: kvm: Move struct kvm_x86_state to header

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.26.1.rt7.183.el8_6
commit-author Yang Zhong <yang.zhong@intel.com>
commit 6559b4a523cd65f6005b4592833b16ba970abdf5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.26.1.rt7.183.el8_6/6559b4a5.failed

Those changes can avoid dereferencing pointer compile issue
when amx_test.c reference state->xsave.

Move struct kvm_x86_state definition to processor.h.

	Signed-off-by: Yang Zhong <yang.zhong@intel.com>
Message-Id: <20211223145322.2914028-3-yang.zhong@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 6559b4a523cd65f6005b4592833b16ba970abdf5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/x86_64/processor.c
diff --cc tools/testing/selftests/kvm/lib/x86_64/processor.c
index 28cb881f440d,babb0f28575c..000000000000
--- a/tools/testing/selftests/kvm/lib/x86_64/processor.c
+++ b/tools/testing/selftests/kvm/lib/x86_64/processor.c
@@@ -1019,21 -1056,6 +1019,24 @@@ void vcpu_dump(FILE *stream, struct kvm
  	sregs_dump(stream, &sregs, indent + 4);
  }
  
++<<<<<<< HEAD
 +struct kvm_x86_state {
 +	struct kvm_vcpu_events events;
 +	struct kvm_mp_state mp_state;
 +	struct kvm_regs regs;
 +	struct kvm_xsave xsave;
 +	struct kvm_xcrs xcrs;
 +	struct kvm_sregs sregs;
 +	struct kvm_debugregs debugregs;
 +	union {
 +		struct kvm_nested_state nested;
 +		char nested_[16384];
 +	};
 +	struct kvm_msrs msrs;
 +};
 +
++=======
++>>>>>>> 6559b4a523cd (selftest: kvm: Move struct kvm_x86_state to header)
  static int kvm_get_num_msrs_fd(int kvm_fd)
  {
  	struct kvm_msr_list nmsrs;
diff --git a/tools/testing/selftests/kvm/include/x86_64/processor.h b/tools/testing/selftests/kvm/include/x86_64/processor.h
index 05e65ca1c30c..2b1a08e8a6d4 100644
--- a/tools/testing/selftests/kvm/include/x86_64/processor.h
+++ b/tools/testing/selftests/kvm/include/x86_64/processor.h
@@ -92,6 +92,21 @@ struct desc_ptr {
 	uint64_t address;
 } __attribute__((packed));
 
+struct kvm_x86_state {
+	struct kvm_xsave *xsave;
+	struct kvm_vcpu_events events;
+	struct kvm_mp_state mp_state;
+	struct kvm_regs regs;
+	struct kvm_xcrs xcrs;
+	struct kvm_sregs sregs;
+	struct kvm_debugregs debugregs;
+	union {
+		struct kvm_nested_state nested;
+		char nested_[16384];
+	};
+	struct kvm_msrs msrs;
+};
+
 static inline uint64_t get_desc64_base(const struct desc64 *desc)
 {
 	return ((uint64_t)desc->base3 << 32) |
@@ -348,7 +363,6 @@ static inline unsigned long get_xmm(int n)
 
 bool is_intel_cpu(void);
 
-struct kvm_x86_state;
 struct kvm_x86_state *vcpu_save_state(struct kvm_vm *vm, uint32_t vcpuid);
 void vcpu_load_state(struct kvm_vm *vm, uint32_t vcpuid,
 		     struct kvm_x86_state *state);
* Unmerged path tools/testing/selftests/kvm/lib/x86_64/processor.c
