linux/compiler-clang.h: define HAVE_BUILTIN_BSWAP*

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-507.el8
commit-author Arnd Bergmann <arnd@arndb.de>
commit 97e4910232fa1f81e806aa60c25a0450276d99a2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-507.el8/97e49102.failed

Separating compiler-clang.h from compiler-gcc.h inadventently dropped the
definitions of the three HAVE_BUILTIN_BSWAP macros, which requires falling
back to the open-coded version and hoping that the compiler detects it.

Since all versions of clang support the __builtin_bswap interfaces, add
back the flags and have the headers pick these up automatically.

This results in a 4% improvement of compilation speed for arm defconfig.

Note: it might also be worth revisiting which architectures set
CONFIG_ARCH_USE_BUILTIN_BSWAP for one compiler or the other, today this is
set on six architectures (arm32, csky, mips, powerpc, s390, x86), while
another ten architectures define custom helpers (alpha, arc, ia64, m68k,
mips, nios2, parisc, sh, sparc, xtensa), and the rest (arm64, h8300,
hexagon, microblaze, nds32, openrisc, riscv) just get the unoptimized
version and rely on the compiler to detect it.

A long time ago, the compiler builtins were architecture specific, but
nowadays, all compilers that are able to build the kernel have correct
implementations of them, though some may not be as optimized as the inline
asm versions.

The patch that dropped the optimization landed in v4.19, so as discussed
it would be fairly safe to backport this revert to stable kernels to the
4.19/5.4/5.10 stable kernels, but there is a remaining risk for
regressions, and it has no known side-effects besides compile speed.

Link: https://lkml.kernel.org/r/20210226161151.2629097-1-arnd@kernel.org
Link: https://lore.kernel.org/lkml/20210225164513.3667778-1-arnd@kernel.org/
Fixes: 815f0ddb346c ("include/linux/compiler*.h: make compiler-*.h mutually exclusive")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Reviewed-by: Nathan Chancellor <nathan@kernel.org>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Acked-by: Miguel Ojeda <ojeda@kernel.org>
	Acked-by: Nick Desaulniers <ndesaulniers@google.com>
	Acked-by: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
	Cc: Masahiro Yamada <masahiroy@kernel.org>
	Cc: Nick Hu <nickhu@andestech.com>
	Cc: Greentime Hu <green.hu@gmail.com>
	Cc: Vincent Chen <deanbo422@gmail.com>
	Cc: Paul Walmsley <paul.walmsley@sifive.com>
	Cc: Palmer Dabbelt <palmer@dabbelt.com>
	Cc: Albert Ou <aou@eecs.berkeley.edu>
	Cc: Guo Ren <guoren@kernel.org>
	Cc: Randy Dunlap <rdunlap@infradead.org>
	Cc: Sami Tolvanen <samitolvanen@google.com>
	Cc: Marco Elver <elver@google.com>
	Cc: Arvind Sankar <nivedita@alum.mit.edu>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 97e4910232fa1f81e806aa60c25a0450276d99a2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/compiler-clang.h
diff --cc include/linux/compiler-clang.h
index 7f432aad8ccb,d217c382b02d..000000000000
--- a/include/linux/compiler-clang.h
+++ b/include/linux/compiler-clang.h
@@@ -45,8 -31,22 +45,25 @@@
  #define __no_sanitize_thread
  #endif
  
++<<<<<<< HEAD
++=======
+ #if defined(CONFIG_ARCH_USE_BUILTIN_BSWAP)
+ #define __HAVE_BUILTIN_BSWAP32__
+ #define __HAVE_BUILTIN_BSWAP64__
+ #define __HAVE_BUILTIN_BSWAP16__
+ #endif /* CONFIG_ARCH_USE_BUILTIN_BSWAP */
+ 
+ #if __has_feature(undefined_behavior_sanitizer)
+ /* GCC does not have __SANITIZE_UNDEFINED__ */
+ #define __no_sanitize_undefined \
+ 		__attribute__((no_sanitize("undefined")))
+ #else
+ #define __no_sanitize_undefined
+ #endif
+ 
++>>>>>>> 97e4910232fa (linux/compiler-clang.h: define HAVE_BUILTIN_BSWAP*)
  /*
 - * Not all versions of clang implement the type-generic versions
 + * Not all versions of clang implement the the type-generic versions
   * of the builtin overflow checkers. Fortunately, clang implements
   * __has_builtin allowing us to avoid awkward version
   * checks. Unfortunately, we don't know which version of gcc clang
* Unmerged path include/linux/compiler-clang.h
