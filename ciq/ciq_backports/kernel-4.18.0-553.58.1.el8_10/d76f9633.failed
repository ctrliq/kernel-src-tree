s390/pci: Remove redundant bus removal and disable from zpci_release_device()

jira LE-3467
Rebuild_History Non-Buildable kernel-4.18.0-553.58.1.el8_10
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit d76f9633296785343d45f85199f4138cb724b6d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.58.1.el8_10/d76f9633.failed

Remove zpci_bus_remove_device() and zpci_disable_device() calls from
zpci_release_device(). These calls were done when the device
transitioned into the ZPCI_FN_STATE_STANDBY state which is guaranteed to
happen before it enters the ZPCI_FN_STATE_RESERVED state. When
zpci_release_device() is called the device is known to be in the
ZPCI_FN_STATE_RESERVED state which is also checked by a WARN_ON().

	Cc: stable@vger.kernel.org
Fixes: a46044a92add ("s390/pci: fix zpci_zdev_put() on reserve")
	Reviewed-by: Gerd Bayer <gbayer@linux.ibm.com>
	Reviewed-by: Julian Ruess <julianr@linux.ibm.com>
	Tested-by: Gerd Bayer <gbayer@linux.ibm.com>
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit d76f9633296785343d45f85199f4138cb724b6d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci.c
diff --cc arch/s390/pci/pci.c
index 661c4e000c5b,9fcc6d3180f2..000000000000
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@@ -1023,41 -923,42 +1023,46 @@@ int zpci_deconfigure_device(struct zpci
  void zpci_release_device(struct kref *kref)
  {
  	struct zpci_dev *zdev = container_of(kref, struct zpci_dev, kref);
 +	int ret;
  
 -	WARN_ON(zdev->state != ZPCI_FN_STATE_RESERVED);
++<<<<<<< HEAD
 +	if (zdev->zbus->bus)
 +		zpci_bus_remove_device(zdev, false);
 +
 +	if (zdev->dma_table)
 +		zpci_dma_exit_device(zdev);
 +	if (zdev_enabled(zdev))
 +		zpci_disable_device(zdev);
  
 +	switch (zdev->state) {
 +	case ZPCI_FN_STATE_CONFIGURED:
 +		ret = sclp_pci_deconfigure(zdev->fid);
 +		zpci_dbg(3, "deconf fid:%x, rc:%d\n", zdev->fid, ret);
 +		fallthrough;
 +	case ZPCI_FN_STATE_STANDBY:
 +		if (zdev->has_hp_slot)
 +			zpci_exit_slot(zdev);
 +		spin_lock(&zpci_list_lock);
 +		list_del(&zdev->entry);
 +		spin_unlock(&zpci_list_lock);
 +		zpci_dbg(3, "rsv fid:%x\n", zdev->fid);
 +		fallthrough;
 +	case ZPCI_FN_STATE_RESERVED:
 +		if (zdev->has_resources)
 +			zpci_cleanup_bus_resources(zdev);
 +		zpci_bus_device_unregister(zdev);
 +		zpci_destroy_iommu(zdev);
 +		/* fallthrough */
 +	default:
 +		break;
 +	}
++=======
+ 	if (zdev->has_hp_slot)
+ 		zpci_exit_slot(zdev);
++>>>>>>> d76f96332967 (s390/pci: Remove redundant bus removal and disable from zpci_release_device())
  
 -	if (zdev->has_resources)
 -		zpci_cleanup_bus_resources(zdev);
 -
 -	zpci_bus_device_unregister(zdev);
 -	zpci_destroy_iommu(zdev);
  	zpci_dbg(3, "rem fid:%x\n", zdev->fid);
 -	kfree_rcu(zdev, rcu);
 +	kfree(zdev);
  }
  
  int zpci_report_error(struct pci_dev *pdev,
* Unmerged path arch/s390/pci/pci.c
