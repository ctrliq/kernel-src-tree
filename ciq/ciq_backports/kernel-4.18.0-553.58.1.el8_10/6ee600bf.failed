s390/pci: remove hotplug slot when releasing the device

jira LE-3467
Rebuild_History Non-Buildable kernel-4.18.0-553.58.1.el8_10
commit-author Gerd Bayer <gbayer@linux.ibm.com>
commit 6ee600bfbe0f818ffb7748d99e9b0c89d0d9f02a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.58.1.el8_10/6ee600bf.failed

Centralize the removal so all paths are covered and the hotplug slot
will remain active until the device is really destroyed.

	Signed-off-by: Gerd Bayer <gbayer@linux.ibm.com>
	Reviewed-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit 6ee600bfbe0f818ffb7748d99e9b0c89d0d9f02a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci.c
diff --cc arch/s390/pci/pci.c
index 661c4e000c5b,c87b8aff5285..000000000000
--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@@ -1020,6 -895,29 +1020,32 @@@ int zpci_deconfigure_device(struct zpci
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * zpci_device_reserved() - Mark device as resverved
+  * @zdev: the zpci_dev that was reserved
+  *
+  * Handle the case that a given zPCI function was reserved by another system.
+  * After a call to this function the zpci_dev can not be found via
+  * get_zdev_by_fid() anymore but may still be accessible via existing
+  * references though it will not be functional anymore.
+  */
+ void zpci_device_reserved(struct zpci_dev *zdev)
+ {
+ 	/*
+ 	 * Remove device from zpci_list as it is going away. This also
+ 	 * makes sure we ignore subsequent zPCI events for this device.
+ 	 */
+ 	spin_lock(&zpci_list_lock);
+ 	list_del(&zdev->entry);
+ 	spin_unlock(&zpci_list_lock);
+ 	zdev->state = ZPCI_FN_STATE_RESERVED;
+ 	zpci_dbg(3, "rsv fid:%x\n", zdev->fid);
+ 	zpci_zdev_put(zdev);
+ }
+ 
++>>>>>>> 6ee600bfbe0f (s390/pci: remove hotplug slot when releasing the device)
  void zpci_release_device(struct kref *kref)
  {
  	struct zpci_dev *zdev = container_of(kref, struct zpci_dev, kref);
* Unmerged path arch/s390/pci/pci.c
