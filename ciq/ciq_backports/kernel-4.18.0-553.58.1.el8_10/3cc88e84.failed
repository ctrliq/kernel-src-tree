idpf: fix memleak in vport interrupt configuration

jira LE-3467
Rebuild_History Non-Buildable kernel-4.18.0-553.58.1.el8_10
commit-author Michal Kubiak <michal.kubiak@intel.com>
commit 3cc88e8405b8d55e0ff035e31971aadd6baee2b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.58.1.el8_10/3cc88e84.failed

The initialization of vport interrupt consists of two functions:
 1) idpf_vport_intr_init() where a generic configuration is done
 2) idpf_vport_intr_req_irq() where the irq for each q_vector is
   requested.

The first function used to create a base name for each interrupt using
"kasprintf()" call. Unfortunately, although that call allocated memory
for a text buffer, that memory was never released.

Fix this by removing creating the interrupt base name in 1).
Instead, always create a full interrupt name in the function 2), because
there is no need to create a base name separately, considering that the
function 2) is never called out of idpf_vport_intr_init() context.

Fixes: d4d558718266 ("idpf: initialize interrupts and enable vport")
	Cc: stable@vger.kernel.org # 6.7
	Signed-off-by: Michal Kubiak <michal.kubiak@intel.com>
	Reviewed-by: Pavan Kumar Linga <pavan.kumar.linga@intel.com>
	Signed-off-by: Alexander Lobakin <aleksander.lobakin@intel.com>
	Reviewed-by: Simon Horman <horms@kernel.org>
	Tested-by: Krishneil Singh <krishneil.k.singh@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
Link: https://patch.msgid.link/20240806220923.3359860-3-anthony.l.nguyen@intel.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 3cc88e8405b8d55e0ff035e31971aadd6baee2b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/idpf/idpf_txrx.c
diff --cc drivers/net/ethernet/intel/idpf/idpf_txrx.c
index 4a7062c55fcb,a2f9f252694a..000000000000
--- a/drivers/net/ethernet/intel/idpf/idpf_txrx.c
+++ b/drivers/net/ethernet/intel/idpf/idpf_txrx.c
@@@ -3671,11 -3806,11 +3673,16 @@@ static int idpf_vport_intr_req_irq(stru
  		else
  			continue;
  
++<<<<<<< HEAD
 +		q_vector->name = kasprintf(GFP_KERNEL, "%s-%s-%d",
 +					   basename, vec_name, vidx);
++=======
+ 		name = kasprintf(GFP_KERNEL, "%s-%s-%s-%d", drv_name, if_name,
+ 				 vec_name, vidx);
++>>>>>>> 3cc88e8405b8 (idpf: fix memleak in vport interrupt configuration)
  
  		err = request_irq(irq_num, idpf_vport_intr_clean_queues, 0,
 -				  name, q_vector);
 +				  q_vector->name, q_vector);
  		if (err) {
  			netdev_err(vport->netdev,
  				   "Request_irq failed, error: %d\n", err);
* Unmerged path drivers/net/ethernet/intel/idpf/idpf_txrx.c
