net: mana: Fix perf regression: remove rx_cqes, tx_cqes counters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-513.el8
commit-author Haiyang Zhang <haiyangz@microsoft.com>
commit 1919b39fc6eabb9a6f9a51706ff6d03865f5df29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-513.el8/1919b39f.failed

The apc->eth_stats.rx_cqes is one per NIC (vport), and it's on the
frequent and parallel code path of all queues. So, r/w into this
single shared variable by many threads on different CPUs creates a
lot caching and memory overhead, hence perf regression. And, it's
not accurate due to the high volume concurrent r/w.

For example, a workload is iperf with 128 threads, and with RPS
enabled. We saw perf regression of 25% with the previous patch
adding the counters. And this patch eliminates the regression.

Since the error path of mana_poll_rx_cq() already has warnings, so
keeping the counter and convert it to a per-queue variable is not
necessary. So, just remove this counter from this high frequency
code path.

Also, remove the tx_cqes counter for the same reason. We have
warnings & other counters for errors on that path, and don't need
to count every normal cqe processing.

	Cc: stable@vger.kernel.org
Fixes: bd7fc6e1957c ("net: mana: Add new MANA VF performance counters for easier troubleshooting")
	Signed-off-by: Haiyang Zhang <haiyangz@microsoft.com>
	Reviewed-by: Horatiu Vultur <horatiu.vultur@microchip.com>
	Reviewed-by: Jiri Pirko <jiri@nvidia.com>
Link: https://lore.kernel.org/r/1685115537-31675-1-git-send-email-haiyangz@microsoft.com
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit 1919b39fc6eabb9a6f9a51706ff6d03865f5df29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/microsoft/mana/mana_ethtool.c
#	include/net/mana/mana.h
diff --cc drivers/net/ethernet/microsoft/mana/mana_ethtool.c
index 6f98de6d7440,0dc78679f620..000000000000
--- a/drivers/net/ethernet/microsoft/mana/mana_ethtool.c
+++ b/drivers/net/ethernet/microsoft/mana/mana_ethtool.c
@@@ -13,6 -13,13 +13,16 @@@ static const struct 
  } mana_eth_stats[] = {
  	{"stop_queue", offsetof(struct mana_ethtool_stats, stop_queue)},
  	{"wake_queue", offsetof(struct mana_ethtool_stats, wake_queue)},
++<<<<<<< HEAD
++=======
+ 	{"tx_cq_err", offsetof(struct mana_ethtool_stats, tx_cqe_err)},
+ 	{"tx_cqe_unknown_type", offsetof(struct mana_ethtool_stats,
+ 					tx_cqe_unknown_type)},
+ 	{"rx_coalesced_err", offsetof(struct mana_ethtool_stats,
+ 					rx_coalesced_err)},
+ 	{"rx_cqe_unknown_type", offsetof(struct mana_ethtool_stats,
+ 					rx_cqe_unknown_type)},
++>>>>>>> 1919b39fc6ea (net: mana: Fix perf regression: remove rx_cqes, tx_cqes counters)
  };
  
  static int mana_get_sset_count(struct net_device *ndev, int stringset)
diff --cc include/net/mana/mana.h
index 048648ae77fa,9eef19972845..000000000000
--- a/include/net/mana/mana.h
+++ b/include/net/mana/mana.h
@@@ -335,6 -347,10 +335,13 @@@ struct mana_tx_qp 
  struct mana_ethtool_stats {
  	u64 stop_queue;
  	u64 wake_queue;
++<<<<<<< HEAD
++=======
+ 	u64 tx_cqe_err;
+ 	u64 tx_cqe_unknown_type;
+ 	u64 rx_coalesced_err;
+ 	u64 rx_cqe_unknown_type;
++>>>>>>> 1919b39fc6ea (net: mana: Fix perf regression: remove rx_cqes, tx_cqes counters)
  };
  
  struct mana_context {
* Unmerged path drivers/net/ethernet/microsoft/mana/mana_ethtool.c
* Unmerged path include/net/mana/mana.h
