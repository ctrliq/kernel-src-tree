gfs2: Remove LM_FLAG_PRIORITY flag

jira LE-2815
Rebuild_History Non-Buildable kernel-4.18.0-553.50.1.el8_10
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 0b93bac2271e11beb980fca037a34a9819c7dc37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.50.1.el8_10/0b93bac2.failed

The last user of this flag was removed in commit b77b4a4815a9 ("gfs2:
Rework freeze / thaw logic").

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 0b93bac2271e11beb980fca037a34a9819c7dc37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/glock.c
diff --cc fs/gfs2/glock.c
index 5dc035ea3dca,72346f3306e4..000000000000
--- a/fs/gfs2/glock.c
+++ b/fs/gfs2/glock.c
@@@ -618,12 -591,9 +618,11 @@@ static void finish_xmote(struct gfs2_gl
  		if (gh && !test_bit(GLF_DEMOTE_IN_PROGRESS, &gl->gl_flags)) {
  			/* move to back of queue and try next entry */
  			if (ret & LM_OUT_CANCELED) {
- 				if ((gh->gh_flags & LM_FLAG_PRIORITY) == 0)
- 					list_move_tail(&gh->gh_list, &gl->gl_holders);
+ 				list_move_tail(&gh->gh_list, &gl->gl_holders);
  				gh = find_first_waiter(gl);
  				gl->gl_target = gh->gh_state;
 +				if (do_promote(gl))
 +					goto out;
  				goto retry;
  			}
  			/* Some error or failed "try lock" - report it */
@@@ -703,9 -676,9 +702,15 @@@ __acquires(&gl->gl_lockref.lock
  
  	if (target != LM_ST_UNLOCKED && glock_blocked_by_withdraw(gl) &&
  	    gh && !(gh->gh_flags & LM_FLAG_NOEXP))
++<<<<<<< HEAD
 +		return;
 +	lck_flags &= (LM_FLAG_TRY | LM_FLAG_TRY_1CB | LM_FLAG_NOEXP |
 +		      LM_FLAG_PRIORITY);
++=======
+ 		goto skip_inval;
+ 
+ 	lck_flags &= (LM_FLAG_TRY | LM_FLAG_TRY_1CB | LM_FLAG_NOEXP);
++>>>>>>> 0b93bac2271e (gfs2: Remove LM_FLAG_PRIORITY flag)
  	GLOCK_BUG_ON(gl, gl->gl_state == target);
  	GLOCK_BUG_ON(gl, gl->gl_state == gl->gl_target);
  	if ((target == LM_ST_UNLOCKED || target == LM_ST_DEFERRED) &&
diff --git a/Documentation/filesystems/gfs2-glocks.txt b/Documentation/filesystems/gfs2-glocks.txt
index 7059623635b2..49d69cadfe9a 100644
--- a/Documentation/filesystems/gfs2-glocks.txt
+++ b/Documentation/filesystems/gfs2-glocks.txt
@@ -17,8 +17,7 @@ The gl_holders list contains all the queued lock requests (not
 just the holders) associated with the glock. If there are any
 held locks, then they will be contiguous entries at the head
 of the list. Locks are granted in strictly the order that they
-are queued, except for those marked LM_FLAG_PRIORITY which are
-used only during recovery, and even then only for journal locks.
+are queued.
 
 There are three lock states that users of the glock layer can request,
 namely shared (SH), deferred (DF) and exclusive (EX). Those translate
* Unmerged path fs/gfs2/glock.c
diff --git a/fs/gfs2/glock.h b/fs/gfs2/glock.h
index 02ceba2ebc68..e446fe07e75d 100644
--- a/fs/gfs2/glock.h
+++ b/fs/gfs2/glock.h
@@ -71,14 +71,6 @@ enum {
  * also be granted in SHARED.  The preferred state is whichever is compatible
  * with other granted locks, or the specified state if no other locks exist.
  *
- * LM_FLAG_PRIORITY
- * Override fairness considerations.  Suppose a lock is held in a shared state
- * and there is a pending request for the deferred state.  A shared lock
- * request with the priority flag would be allowed to bypass the deferred
- * request and directly join the other shared lock.  A shared lock request
- * without the priority flag might be forced to wait until the deferred
- * requested had acquired and released the lock.
- *
  * LM_FLAG_NODE_SCOPE
  * This holder agrees to share the lock within this node. In other words,
  * the glock is held in EX mode according to DLM, but local holders on the
@@ -89,7 +81,6 @@ enum {
 #define LM_FLAG_TRY_1CB		0x0002
 #define LM_FLAG_NOEXP		0x0004
 #define LM_FLAG_ANY		0x0008
-#define LM_FLAG_PRIORITY	0x0010
 #define LM_FLAG_NODE_SCOPE	0x0020
 #define GL_ASYNC		0x0040
 #define GL_EXACT		0x0080
diff --git a/fs/gfs2/lock_dlm.c b/fs/gfs2/lock_dlm.c
index 29eb3d167807..0579fdbc9c63 100644
--- a/fs/gfs2/lock_dlm.c
+++ b/fs/gfs2/lock_dlm.c
@@ -240,11 +240,6 @@ static u32 make_flags(struct gfs2_glock *gl, const unsigned int gfs_flags,
 		lkf |= DLM_LKF_NOQUEUEBAST;
 	}
 
-	if (gfs_flags & LM_FLAG_PRIORITY) {
-		lkf |= DLM_LKF_NOORDER;
-		lkf |= DLM_LKF_HEADQUE;
-	}
-
 	if (gfs_flags & LM_FLAG_ANY) {
 		if (req == DLM_LOCK_PR)
 			lkf |= DLM_LKF_ALTCW;
