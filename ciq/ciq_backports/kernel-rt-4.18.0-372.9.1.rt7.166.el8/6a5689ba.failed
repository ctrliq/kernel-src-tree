net/mlx5e: Fix possible non-initialized struct usage

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Vladyslav Tarasiuk <vladyslavt@nvidia.com>
commit 6a5689ba0259acded00f69856fc364b158c54c2e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/6a5689ba.failed

If mlx5e_devlink_port_register() fails, driver may try to register
devlink health TX and RX reporters on non-registered devlink port.

Instead, create health reporters only if mlx5e_devlink_port_register()
does not fail. And destroy reporters only if devlink_port is registered.

Also, change mlx5e_get_devlink_port() behavior and return NULL in case
port is not registered to replicate devlink's wrapper when ndo is not
implemented.

	Signed-off-by: Vladyslav Tarasiuk <vladyslavt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 6a5689ba0259acded00f69856fc364b158c54c2e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
index 73414ce0a713,0dd7615e5931..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
@@@ -58,28 -53,19 +58,42 @@@ void mlx5e_devlink_port_type_eth_set(st
  
  void mlx5e_devlink_port_unregister(struct mlx5e_priv *priv)
  {
 -	struct devlink_port *dl_port = mlx5e_devlink_get_dl_port(priv);
 +	struct mlx5_core_dev *mdev = priv->mdev;
  
++<<<<<<< HEAD
 +	if (!mlx5_core_is_sf(mdev))
 +		return; /* RHEL-only: Disable 'devlink port' support for non-switchdev mode*/
 +
 +	devlink_port_unregister(&priv->dl_port);
++=======
+ 	if (dl_port->registered)
+ 		devlink_port_unregister(dl_port);
++>>>>>>> 6a5689ba0259 (net/mlx5e: Fix possible non-initialized struct usage)
  }
  
  struct devlink_port *mlx5e_get_devlink_port(struct net_device *dev)
  {
  	struct mlx5e_priv *priv = netdev_priv(dev);
++<<<<<<< HEAD
 +	struct mlx5e_rep_priv *rpriv = priv->ppriv;
 +	struct mlx5_core_dev *mdev = priv->mdev;
 +
 +	if (!netif_device_present(dev))
 +		return NULL;
 +
 +	if (mdev->priv.eswitch && rpriv && rpriv->rep && rpriv->rep->vport)
 +		return mlx5_esw_offloads_devlink_port(mdev->priv.eswitch, rpriv->rep->vport);
 +
 +	if (!mlx5_core_is_sf(mdev))
 +		return NULL; /* RHEL-only: Disable 'devlink port' support for non-switchdev mode*/
 +
 +	return &priv->dl_port;
++=======
+ 	struct devlink_port *port;
+ 
+ 	port = mlx5e_devlink_get_dl_port(priv);
+ 	if (port->registered)
+ 		return port;
+ 	return NULL;
++>>>>>>> 6a5689ba0259 (net/mlx5e: Fix possible non-initialized struct usage)
  }
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 12c3751bdd22,bc2d37d2806f..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4909,19 -4902,19 +4910,32 @@@ static int mlx5e_nic_init(struct mlx5_c
  	if (err)
  		mlx5_core_err(mdev, "TLS initialization failed, %d\n", err);
  
++<<<<<<< HEAD
 +	err = mlx5e_devlink_port_register(priv);
 +	if (err)
 +		mlx5_core_err(mdev, "mlx5e_devlink_port_register failed, %d\n", err);
 +
 +	mlx5e_health_create_reporters(priv);
++=======
+ 	dl_port = mlx5e_devlink_get_dl_port(priv);
+ 	if (dl_port->registered)
+ 		mlx5e_health_create_reporters(priv);
++>>>>>>> 6a5689ba0259 (net/mlx5e: Fix possible non-initialized struct usage)
  
  	return 0;
  }
  
  static void mlx5e_nic_cleanup(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	mlx5e_health_destroy_reporters(priv);
 +	mlx5e_devlink_port_unregister(priv);
++=======
+ 	struct devlink_port *dl_port = mlx5e_devlink_get_dl_port(priv);
+ 
+ 	if (dl_port->registered)
+ 		mlx5e_health_destroy_reporters(priv);
++>>>>>>> 6a5689ba0259 (net/mlx5e: Fix possible non-initialized struct usage)
  	mlx5e_tls_cleanup(priv);
  	mlx5e_ipsec_cleanup(priv);
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/devlink.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
