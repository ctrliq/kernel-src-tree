vdpa: Support reporting max device capabilities

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Eli Cohen <elic@nvidia.com>
commit cd2629f6df1cab5b3df34705ae7f3bde6147fce3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/cd2629f6.failed

Add max_supported_vqs and supported_features fields to struct
vdpa_mgmt_dev. Upstream drivers need to feel these values according to
the device capabilities.

These values are reported back in a netlink message when showing management
devices.

Examples:

$ auxiliary/mlx5_core.sf.1:
  supported_classes net
  max_supported_vqs 257
  dev_features CSUM GUEST_CSUM MTU HOST_TSO4 HOST_TSO6 STATUS CTRL_VQ MQ \
               CTRL_MAC_ADDR VERSION_1 ACCESS_PLATFORM

$ vdpa -j mgmtdev show
{"mgmtdev":{"auxiliary/mlx5_core.sf.1":{"supported_classes":["net"], \
  "max_supported_vqs":257,"dev_features":["CSUM","GUEST_CSUM","MTU", \
  "HOST_TSO4","HOST_TSO6","STATUS","CTRL_VQ","MQ","CTRL_MAC_ADDR", \
  "VERSION_1","ACCESS_PLATFORM"]}}}

$ vdpa -jp mgmtdev show
{
    "mgmtdev": {
        "auxiliary/mlx5_core.sf.1": {
            "supported_classes": [ "net" ],
            "max_supported_vqs": 257,
            "dev_features": ["CSUM","GUEST_CSUM","MTU","HOST_TSO4", \
                             "HOST_TSO6","STATUS","CTRL_VQ","MQ", \
                             "CTRL_MAC_ADDR","VERSION_1","ACCESS_PLATFORM"]
        }
    }
}

	Signed-off-by: Eli Cohen <elic@nvidia.com>
Link: https://lore.kernel.org/r/20220105114646.577224-11-elic@nvidia.com
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
	Reviewed-by: Si-Wei Liu<si-wei.liu@oracle.com>
(cherry picked from commit cd2629f6df1cab5b3df34705ae7f3bde6147fce3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/vdpa.h
diff --cc include/uapi/linux/vdpa.h
index a252f06f9dfd,1061d8d2d09d..000000000000
--- a/include/uapi/linux/vdpa.h
+++ b/include/uapi/linux/vdpa.h
@@@ -40,6 -43,9 +40,12 @@@ enum vdpa_attr 
  	VDPA_ATTR_DEV_NET_CFG_MAX_VQP,		/* u16 */
  	VDPA_ATTR_DEV_NET_CFG_MTU,		/* u16 */
  
++<<<<<<< HEAD
++=======
+ 	VDPA_ATTR_DEV_NEGOTIATED_FEATURES,	/* u64 */
+ 	VDPA_ATTR_DEV_MGMTDEV_MAX_VQS,		/* u32 */
+ 	VDPA_ATTR_DEV_SUPPORTED_FEATURES,	/* u64 */
++>>>>>>> cd2629f6df1c (vdpa: Support reporting max device capabilities)
  	/* new attributes must be added above here */
  	VDPA_ATTR_MAX,
  };
diff --git a/drivers/vdpa/vdpa.c b/drivers/vdpa/vdpa.c
index 2703bbc9306a..1b09ab0ab69a 100644
--- a/drivers/vdpa/vdpa.c
+++ b/drivers/vdpa/vdpa.c
@@ -516,6 +516,16 @@ static int vdpa_mgmtdev_fill(const struct vdpa_mgmt_dev *mdev, struct sk_buff *m
 		err = -EMSGSIZE;
 		goto msg_err;
 	}
+	if (nla_put_u32(msg, VDPA_ATTR_DEV_MGMTDEV_MAX_VQS,
+			mdev->max_supported_vqs)) {
+		err = -EMSGSIZE;
+		goto msg_err;
+	}
+	if (nla_put_u64_64bit(msg, VDPA_ATTR_DEV_SUPPORTED_FEATURES,
+			      mdev->supported_features, VDPA_ATTR_PAD)) {
+		err = -EMSGSIZE;
+		goto msg_err;
+	}
 
 	genlmsg_end(msg, hdr);
 	return 0;
diff --git a/include/linux/vdpa.h b/include/linux/vdpa.h
index a32e0e9b012d..f3c6d9d25965 100644
--- a/include/linux/vdpa.h
+++ b/include/linux/vdpa.h
@@ -428,6 +428,8 @@ struct vdpa_mgmt_dev {
 	const struct vdpa_mgmtdev_ops *ops;
 	const struct virtio_device_id *id_table;
 	struct list_head list;
+	u64 supported_features;
+	u32 max_supported_vqs;
 };
 
 int vdpa_mgmtdev_register(struct vdpa_mgmt_dev *mdev);
* Unmerged path include/uapi/linux/vdpa.h
