ALSA: usb-audio: Move interface setup delay into quirk_flags

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 1f074fe569870ed91c8ad2f67cccd9db5265443e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/1f074fe5.failed

Yet another delay is applied at switching the interface.  This can be
moved to quirk_flags, too.

Link: https://lore.kernel.org/r/20210729073855.19043-10-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 1f074fe569870ed91c8ad2f67cccd9db5265443e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/quirks.c
#	sound/usb/usbaudio.h
diff --cc sound/usb/quirks.c
index 9c3d234c8b32,f47078209bcc..000000000000
--- a/sound/usb/quirks.c
+++ b/sound/usb/quirks.c
@@@ -1913,12 -1820,75 +1897,28 @@@ static const struct usb_audio_quirk_fla
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x05a7, 0x1020, /* Bose Companion 5 */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
++<<<<<<< HEAD
++=======
+ 	DEVICE_FLG(0x05e1, 0x0408, /* Syntek STK1160 */
+ 		   QUIRK_FLAG_ALIGN_TRANSFER),
+ 	DEVICE_FLG(0x05e1, 0x0480, /* Hauppauge Woodbury */
+ 		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
+ 	DEVICE_FLG(0x0644, 0x8043, /* TEAC UD-501/UD-501V2/UD-503/NT-503 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
+ 		   QUIRK_FLAG_IFACE_DELAY),
+ 	DEVICE_FLG(0x0644, 0x8044, /* Esoteric D-05X */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
+ 		   QUIRK_FLAG_IFACE_DELAY),
+ 	DEVICE_FLG(0x0644, 0x804a, /* TEAC UD-301 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
+ 		   QUIRK_FLAG_IFACE_DELAY),
++>>>>>>> 1f074fe56987 (ALSA: usb-audio: Move interface setup delay into quirk_flags)
  	DEVICE_FLG(0x074d, 0x3553, /* Outlaw RR2150 (Micronas UAC3553B) */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x0951, 0x16ad, /* Kingston HyperX */
 -		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
 -	DEVICE_FLG(0x0b0e, 0x0349, /* Jabra 550a */
 -		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
 -	DEVICE_FLG(0x0fd9, 0x0008, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
  	DEVICE_FLG(0x1395, 0x740a, /* Sennheiser DECT */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x154e, 0x1002, /* Denon DCD-1500RE */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
 -	DEVICE_FLG(0x154e, 0x1003, /* Denon DA-300USB */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
 -	DEVICE_FLG(0x154e, 0x3005, /* Marantz HD-DAC1 */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
 -	DEVICE_FLG(0x154e, 0x3006, /* Marantz SA-14S1 */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
 -	DEVICE_FLG(0x154e, 0x500e, /* Denon DN-X1600 */
 -		   QUIRK_FLAG_IGNORE_CLOCK_SOURCE),
 -	DEVICE_FLG(0x1686, 0x00dd, /* Zoom R16/24 */
 -		   QUIRK_FLAG_TX_LENGTH | QUIRK_FLAG_CTL_MSG_DELAY_1M),
 -	DEVICE_FLG(0x1852, 0x5065, /* Luxman DA-06 */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
  	DEVICE_FLG(0x1901, 0x0191, /* GE B850V3 CP2114 audio interface */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x2040, 0x7200, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7201, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7210, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7211, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7213, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7217, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721b, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721e, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721f, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7240, /* Hauppauge HVR-850 */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7260, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7270, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7280, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7281, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x8200, /* Hauppauge Woodbury */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
  	DEVICE_FLG(0x21b4, 0x0081, /* AudioQuest DragonFly */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x2912, 0x30c8, /* Audioengine D1 */
@@@ -1929,10 -1901,16 +1929,20 @@@
  	/* Vendor matches */
  	VENDOR_FLG(0x045e, /* MS Lifecam */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	VENDOR_FLG(0x046d, /* Logitech */
 -		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
  	VENDOR_FLG(0x047f, /* Plantronics */
++<<<<<<< HEAD
++		   QUIRK_FLAG_GET_SAMPLE_RATE),
++	VENDOR_FLG(0x1de7, /* Phoenix Audio */
 +		   QUIRK_FLAG_GET_SAMPLE_RATE),
++=======
+ 		   QUIRK_FLAG_GET_SAMPLE_RATE | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	VENDOR_FLG(0x0644, /* TEAC Corp. */
+ 		   QUIRK_FLAG_CTL_MSG_DELAY | QUIRK_FLAG_IFACE_DELAY),
  	VENDOR_FLG(0x1de7, /* Phoenix Audio */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
+ 	VENDOR_FLG(0x23ba, /* Playback Design */
+ 		   QUIRK_FLAG_CTL_MSG_DELAY | QUIRK_FLAG_IFACE_DELAY),
++>>>>>>> 1f074fe56987 (ALSA: usb-audio: Move interface setup delay into quirk_flags)
  
  	{} /* terminator */
  };
diff --cc sound/usb/usbaudio.h
index c0a3ac71bf0a,57b5dcf211d4..000000000000
--- a/sound/usb/usbaudio.h
+++ b/sound/usb/usbaudio.h
@@@ -130,8 -131,43 +130,49 @@@ extern bool snd_usb_skip_validation
   * QUIRK_FLAG_GET_SAMPLE_RATE:
   *  Skip reading sample rate for devices, as some devices behave inconsistently
   *  or return error
++<<<<<<< HEAD
 + */
 +
 +#define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
++=======
+  * QUIRK_FLAG_SHARE_MEDIA_DEVICE:
+  *  Create Media Controller API entries
+  * QUIRK_FLAG_ALIGN_TRANSFER:
+  *  Allow alignment on audio sub-slot (channel samples) rather than on audio
+  *  slots (audio frames)
+  * QUIRK_TX_LENGTH:
+  *  Add length specifier to transfers
+  * QUIRK_FLAG_PLAYBACK_FIRST:
+  *  Start playback stream at first even in implement feedback mode
+  * QUIRK_FLAG_SKIP_CLOCK_SELECTOR:
+  *  Skip clock selector setup; the device may reset to invalid state
+  * QUIRK_FLAG_IGNORE_CLOCK_SOURCE:
+  *  Ignore errors from clock source search; i.e. hardcoded clock
+  * QUIRK_FLAG_ITF_USB_DSD_DAC:
+  *  Indicates the device is for ITF-USB DSD based DACs that need a vendor cmd
+  *  to switch between PCM and native DSD mode
+  * QUIRK_FLAG_CTL_MSG_DELAY:
+  *  Add a delay of 20ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_1M:
+  *  Add a delay of 1-2ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_5M:
+  *  Add a delay of 5-6ms at each control message handling
+  * QUIRK_FLAG_IFACE_DELAY:
+  *  Add a delay of 50ms at each interface setup
+  */
+ 
+ #define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
+ #define QUIRK_FLAG_SHARE_MEDIA_DEVICE	(1U << 1)
+ #define QUIRK_FLAG_ALIGN_TRANSFER	(1U << 2)
+ #define QUIRK_FLAG_TX_LENGTH		(1U << 3)
+ #define QUIRK_FLAG_PLAYBACK_FIRST	(1U << 4)
+ #define QUIRK_FLAG_SKIP_CLOCK_SELECTOR	(1U << 5)
+ #define QUIRK_FLAG_IGNORE_CLOCK_SOURCE	(1U << 6)
+ #define QUIRK_FLAG_ITF_USB_DSD_DAC	(1U << 7)
+ #define QUIRK_FLAG_CTL_MSG_DELAY	(1U << 8)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_1M	(1U << 9)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_5M	(1U << 10)
+ #define QUIRK_FLAG_IFACE_DELAY		(1U << 11)
++>>>>>>> 1f074fe56987 (ALSA: usb-audio: Move interface setup delay into quirk_flags)
  
  #endif /* __USBAUDIO_H */
diff --git a/sound/usb/endpoint.c b/sound/usb/endpoint.c
index da649211bff3..4ecb94e1eb1d 100644
--- a/sound/usb/endpoint.c
+++ b/sound/usb/endpoint.c
@@ -803,7 +803,8 @@ static int endpoint_set_interface(struct snd_usb_audio *chip,
 		return err;
 	}
 
-	snd_usb_set_interface_quirk(chip);
+	if (chip->quirk_flags & QUIRK_FLAG_IFACE_DELAY)
+		msleep(50);
 	return 0;
 }
 
* Unmerged path sound/usb/quirks.c
diff --git a/sound/usb/quirks.h b/sound/usb/quirks.h
index 0a49e074ae6a..31abb7cb01a5 100644
--- a/sound/usb/quirks.h
+++ b/sound/usb/quirks.h
@@ -33,7 +33,6 @@ int snd_usb_is_big_endian_format(struct snd_usb_audio *chip,
 
 void snd_usb_endpoint_start_quirk(struct snd_usb_endpoint *ep);
 
-void snd_usb_set_interface_quirk(struct snd_usb_audio *chip);
 void snd_usb_ctl_msg_quirk(struct usb_device *dev, unsigned int pipe,
 			   __u8 request, __u8 requesttype, __u16 value,
 			   __u16 index, void *data, __u16 size);
* Unmerged path sound/usb/usbaudio.h
