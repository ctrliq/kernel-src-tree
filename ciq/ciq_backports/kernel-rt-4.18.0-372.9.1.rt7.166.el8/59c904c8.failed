net/mlx5: E-Switch, Add eswitch pointer to each representor

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Mark Bloch <mbloch@nvidia.com>
commit 59c904c8fffd903c1dae5fc6a402b88fa6dfc874
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/59c904c8.failed

Store the managing E-Switch of each representor. This will be used
when a representor is created on eswitch manager 0 but the vport
belongs to eswitch manager 1.

	Signed-off-by: Mark Bloch <mbloch@nvidia.com>
	Reviewed-by: Saeed Mahameed <saeedm@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 59c904c8fffd903c1dae5fc6a402b88fa6dfc874)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index 599145a9cc37,f6c0e7e05ad5..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -3215,11 -3148,12 +3215,17 @@@ void mlx5_eswitch_register_vport_reps(s
  {
  	struct mlx5_eswitch_rep_data *rep_data;
  	struct mlx5_eswitch_rep *rep;
 -	int i;
 +	unsigned long i;
  
  	esw->offloads.rep_ops[rep_type] = ops;
++<<<<<<< HEAD
 +	mlx5_esw_for_each_rep(esw, i, rep) {
 +		if (likely(mlx5_eswitch_vport_has_rep(esw, rep->vport))) {
++=======
+ 	mlx5_esw_for_all_reps(esw, i, rep) {
+ 		if (likely(mlx5_eswitch_vport_has_rep(esw, i))) {
+ 			rep->esw = esw;
++>>>>>>> 59c904c8fffd (net/mlx5: E-Switch, Add eswitch pointer to each representor)
  			rep_data = &rep->rep_data[rep_type];
  			atomic_set(&rep_data->state, REP_REGISTERED);
  		}
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --git a/include/linux/mlx5/eswitch.h b/include/linux/mlx5/eswitch.h
index 2caba8c4ba43..6778200e4b54 100644
--- a/include/linux/mlx5/eswitch.h
+++ b/include/linux/mlx5/eswitch.h
@@ -48,6 +48,7 @@ struct mlx5_eswitch_rep {
 	/* Only IB rep is using vport_index */
 	u16		       vport_index;
 	u32		       vlan_refcount;
+	struct                 mlx5_eswitch *esw;
 };
 
 void mlx5_eswitch_register_vport_reps(struct mlx5_eswitch *esw,
