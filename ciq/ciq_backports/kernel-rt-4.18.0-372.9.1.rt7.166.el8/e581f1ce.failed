ALSA: usb-audio: Disable low-latency playback for free-wheel mode

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit e581f1cec4f899f788f6c9477f805b1d5fef25e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/e581f1ce.failed

The free-wheel stream operation like dmix may not update the appl_ptr
appropriately, and it doesn't fit with the low-latency playback mode.
Disable the low-latency playback operation when the stream is set up
in such a mode.

Link: https://lore.kernel.org/r/20210929080844.11583-5-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit e581f1cec4f899f788f6c9477f805b1d5fef25e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/pcm.c
diff --cc sound/usb/pcm.c
index af70e60d7da4,84b03a32ee23..000000000000
--- a/sound/usb/pcm.c
+++ b/sound/usb/pcm.c
@@@ -572,6 -581,26 +572,29 @@@ static int snd_usb_hw_free(struct snd_p
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ /* check whether early start is needed for playback stream */
+ static int lowlatency_playback_available(struct snd_pcm_runtime *runtime,
+ 					 struct snd_usb_substream *subs)
+ {
+ 	struct snd_usb_audio *chip = subs->stream->chip;
+ 
+ 	if (subs->direction == SNDRV_PCM_STREAM_CAPTURE)
+ 		return false;
+ 	/* disabled via module option? */
+ 	if (!chip->lowlatency)
+ 		return false;
+ 	/* free-wheeling mode? (e.g. dmix) */
+ 	if (runtime->stop_threshold > runtime->buffer_size)
+ 		return false;
+ 	/* too short periods? */
+ 	if (subs->data_endpoint->nominal_queue_size >= subs->buffer_bytes)
+ 		return false;
+ 	return true;
+ }
+ 
++>>>>>>> e581f1cec4f8 (ALSA: usb-audio: Disable low-latency playback for free-wheel mode)
  /*
   * prepare callback
   *
@@@ -605,6 -634,10 +628,13 @@@ static int snd_usb_pcm_prepare(struct s
  	subs->period_elapsed_pending = 0;
  	runtime->delay = 0;
  
++<<<<<<< HEAD
++=======
+ 	subs->lowlatency_playback = lowlatency_playback_available(runtime, subs);
+ 	if (!subs->lowlatency_playback)
+ 		ret = start_endpoints(subs);
+ 
++>>>>>>> e581f1cec4f8 (ALSA: usb-audio: Disable low-latency playback for free-wheel mode)
   unlock:
  	snd_usb_unlock_shutdown(chip);
  	return ret;
* Unmerged path sound/usb/pcm.c
