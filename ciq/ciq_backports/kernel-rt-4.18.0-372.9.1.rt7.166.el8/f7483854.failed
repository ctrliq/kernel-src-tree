ALSA: usb-audio: Move control message delay quirk into quirk_flags

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit f748385471f72992f8d5242a89deab518b38be76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/f7483854.failed

We apply some delay for the control messages on certain devices as a
workaround, and this can be moved into the quirk_flags as well.
Currently there are three different delay periods (1ms, 5ms and 20ms),
so three different quirk bits are assigned for them.

Link: https://lore.kernel.org/r/20210729073855.19043-9-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit f748385471f72992f8d5242a89deab518b38be76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/quirks.c
#	sound/usb/usbaudio.h
diff --cc sound/usb/quirks.c
index 9c3d234c8b32,a6b78cbf5089..000000000000
--- a/sound/usb/quirks.c
+++ b/sound/usb/quirks.c
@@@ -1629,57 -1593,14 +1629,43 @@@ void snd_usb_ctl_msg_quirk(struct usb_d
  {
  	struct snd_usb_audio *chip = dev_get_drvdata(&dev->dev);
  
- 	if (!chip)
+ 	if (!chip || (requesttype & USB_TYPE_MASK) != USB_TYPE_CLASS)
  		return;
- 	/*
- 	 * "Playback Design" products need a 20ms delay after each
- 	 * class compliant request
- 	 */
- 	if (USB_ID_VENDOR(chip->usb_id) == 0x23ba &&
- 	    (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
- 		msleep(20);
  
- 	/*
- 	 * "TEAC Corp." products need a 20ms delay after each
- 	 * class compliant request
- 	 */
- 	if (USB_ID_VENDOR(chip->usb_id) == 0x0644 &&
- 	    (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
+ 	if (chip->quirk_flags & QUIRK_FLAG_CTL_MSG_DELAY)
  		msleep(20);
++<<<<<<< HEAD
 +
 +	/* ITF-USB DSD based DACs functionality need a delay
 +	 * after each class compliant request
 +	 */
 +	if (is_itf_usb_dsd_dac(chip->usb_id)
 +	    && (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
 +		msleep(20);
 +
 +	/*
 +	 * Plantronics headsets (C320, C320-M, etc) need a delay to avoid
 +	 * random microhpone failures.
 +	 */
 +	if (USB_ID_VENDOR(chip->usb_id) == 0x047f &&
 +	    (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
 +		msleep(20);
 +
 +	/* Zoom R16/24, many Logitech(at least H650e/H570e/BCC950),
 +	 * Jabra 550a, Kingston HyperX needs a tiny delay here,
 +	 * otherwise requests like get/set frequency return
 +	 * as failed despite actually succeeding.
 +	 */
 +	if ((chip->usb_id == USB_ID(0x1686, 0x00dd) ||
 +	     USB_ID_VENDOR(chip->usb_id) == 0x046d  || /* Logitech */
 +	     chip->usb_id == USB_ID(0x0b0e, 0x0349) ||
 +	     chip->usb_id == USB_ID(0x0951, 0x16ad)) &&
 +	    (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
++=======
+ 	else if (chip->quirk_flags & QUIRK_FLAG_CTL_MSG_DELAY_1M)
++>>>>>>> f748385471f7 (ALSA: usb-audio: Move control message delay quirk into quirk_flags)
  		usleep_range(1000, 2000);
- 
- 	/*
- 	 * Samsung USBC Headset (AKG) need a tiny delay after each
- 	 * class compliant request. (Model number: AAM625R or AAM627R)
- 	 */
- 	if (chip->usb_id == USB_ID(0x04e8, 0xa051) &&
- 	    (requesttype & USB_TYPE_MASK) == USB_TYPE_CLASS)
+ 	else if (chip->quirk_flags & QUIRK_FLAG_CTL_MSG_DELAY_5M)
  		usleep_range(5000, 6000);
  }
  
@@@ -1904,21 -1825,83 +1890,63 @@@ static const struct usb_audio_quirk_fla
  	DEVICE_FLG(0x041e, 0x4080, /* Creative Live Cam VF0610 */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x046d, 0x084c, /* Logitech ConferenceCam Connect */
- 		   QUIRK_FLAG_GET_SAMPLE_RATE),
+ 		   QUIRK_FLAG_GET_SAMPLE_RATE | QUIRK_FLAG_CTL_MSG_DELAY_1M),
  	DEVICE_FLG(0x04d8, 0xfeea, /* Benchmark DAC1 Pre */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
++<<<<<<< HEAD
++=======
+ 	DEVICE_FLG(0x04e8, 0xa051, /* Samsung USBC Headset (AKG) */
+ 		   QUIRK_FLAG_SKIP_CLOCK_SELECTOR | QUIRK_FLAG_CTL_MSG_DELAY_5M),
++>>>>>>> f748385471f7 (ALSA: usb-audio: Move control message delay quirk into quirk_flags)
  	DEVICE_FLG(0x0556, 0x0014, /* Phoenix Audio TMX320VC */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x05a3, 0x9420, /* ELP HD USB Camera */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x05a7, 0x1020, /* Bose Companion 5 */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
++<<<<<<< HEAD
 +	DEVICE_FLG(0x074d, 0x3553, /* Outlaw RR2150 (Micronas UAC3553B) */
 +		   QUIRK_FLAG_GET_SAMPLE_RATE),
 +	DEVICE_FLG(0x1395, 0x740a, /* Sennheiser DECT */
 +		   QUIRK_FLAG_GET_SAMPLE_RATE),
++=======
+ 	DEVICE_FLG(0x05e1, 0x0408, /* Syntek STK1160 */
+ 		   QUIRK_FLAG_ALIGN_TRANSFER),
+ 	DEVICE_FLG(0x05e1, 0x0480, /* Hauppauge Woodbury */
+ 		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
+ 	DEVICE_FLG(0x0644, 0x8043, /* TEAC UD-501/UD-501V2/UD-503/NT-503 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x0644, 0x8044, /* Esoteric D-05X */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x0644, 0x804a, /* TEAC UD-301 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x074d, 0x3553, /* Outlaw RR2150 (Micronas UAC3553B) */
+ 		   QUIRK_FLAG_GET_SAMPLE_RATE),
+ 	DEVICE_FLG(0x0951, 0x16ad, /* Kingston HyperX */
+ 		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
+ 	DEVICE_FLG(0x0b0e, 0x0349, /* Jabra 550a */
+ 		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
+ 	DEVICE_FLG(0x0fd9, 0x0008, /* Hauppauge HVR-950Q */
+ 		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
+ 	DEVICE_FLG(0x1395, 0x740a, /* Sennheiser DECT */
+ 		   QUIRK_FLAG_GET_SAMPLE_RATE),
+ 	DEVICE_FLG(0x154e, 0x1002, /* Denon DCD-1500RE */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x1003, /* Denon DA-300USB */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x3005, /* Marantz HD-DAC1 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x3006, /* Marantz SA-14S1 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x500e, /* Denon DN-X1600 */
+ 		   QUIRK_FLAG_IGNORE_CLOCK_SOURCE),
+ 	DEVICE_FLG(0x1686, 0x00dd, /* Zoom R16/24 */
+ 		   QUIRK_FLAG_TX_LENGTH | QUIRK_FLAG_CTL_MSG_DELAY_1M),
+ 	DEVICE_FLG(0x1852, 0x5065, /* Luxman DA-06 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
++>>>>>>> f748385471f7 (ALSA: usb-audio: Move control message delay quirk into quirk_flags)
  	DEVICE_FLG(0x1901, 0x0191, /* GE B850V3 CP2114 audio interface */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x2040, 0x7200, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7201, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7210, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7211, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7213, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7217, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721b, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721e, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721f, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7240, /* Hauppauge HVR-850 */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7260, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7270, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7280, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7281, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x8200, /* Hauppauge Woodbury */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
  	DEVICE_FLG(0x21b4, 0x0081, /* AudioQuest DragonFly */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x2912, 0x30c8, /* Audioengine D1 */
diff --cc sound/usb/usbaudio.h
index c0a3ac71bf0a,69fa81150f36..000000000000
--- a/sound/usb/usbaudio.h
+++ b/sound/usb/usbaudio.h
@@@ -130,8 -131,40 +130,46 @@@ extern bool snd_usb_skip_validation
   * QUIRK_FLAG_GET_SAMPLE_RATE:
   *  Skip reading sample rate for devices, as some devices behave inconsistently
   *  or return error
++<<<<<<< HEAD
 + */
 +
 +#define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
++=======
+  * QUIRK_FLAG_SHARE_MEDIA_DEVICE:
+  *  Create Media Controller API entries
+  * QUIRK_FLAG_ALIGN_TRANSFER:
+  *  Allow alignment on audio sub-slot (channel samples) rather than on audio
+  *  slots (audio frames)
+  * QUIRK_TX_LENGTH:
+  *  Add length specifier to transfers
+  * QUIRK_FLAG_PLAYBACK_FIRST:
+  *  Start playback stream at first even in implement feedback mode
+  * QUIRK_FLAG_SKIP_CLOCK_SELECTOR:
+  *  Skip clock selector setup; the device may reset to invalid state
+  * QUIRK_FLAG_IGNORE_CLOCK_SOURCE:
+  *  Ignore errors from clock source search; i.e. hardcoded clock
+  * QUIRK_FLAG_ITF_USB_DSD_DAC:
+  *  Indicates the device is for ITF-USB DSD based DACs that need a vendor cmd
+  *  to switch between PCM and native DSD mode
+  * QUIRK_FLAG_CTL_MSG_DELAY:
+  *  Add a delay of 20ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_1M:
+  *  Add a delay of 1-2ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_5M:
+  *  Add a delay of 5-6ms at each control message handling
+  */
+ 
+ #define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
+ #define QUIRK_FLAG_SHARE_MEDIA_DEVICE	(1U << 1)
+ #define QUIRK_FLAG_ALIGN_TRANSFER	(1U << 2)
+ #define QUIRK_FLAG_TX_LENGTH		(1U << 3)
+ #define QUIRK_FLAG_PLAYBACK_FIRST	(1U << 4)
+ #define QUIRK_FLAG_SKIP_CLOCK_SELECTOR	(1U << 5)
+ #define QUIRK_FLAG_IGNORE_CLOCK_SOURCE	(1U << 6)
+ #define QUIRK_FLAG_ITF_USB_DSD_DAC	(1U << 7)
+ #define QUIRK_FLAG_CTL_MSG_DELAY	(1U << 8)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_1M	(1U << 9)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_5M	(1U << 10)
++>>>>>>> f748385471f7 (ALSA: usb-audio: Move control message delay quirk into quirk_flags)
  
  #endif /* __USBAUDIO_H */
* Unmerged path sound/usb/quirks.c
* Unmerged path sound/usb/usbaudio.h
