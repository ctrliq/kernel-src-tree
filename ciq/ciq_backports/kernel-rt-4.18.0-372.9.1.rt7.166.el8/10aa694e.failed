PM: runtime: Fix resposible -> responsible in runtime.c

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Bhaskar Chowdhury <unixbhaskar@gmail.com>
commit 10aa694ea0d0adfbd97400fb39ea237a273c335f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/10aa694e.failed

s/resposible/responsible/

	Signed-off-by: Bhaskar Chowdhury <unixbhaskar@gmail.com>
	Acked-by: Randy Dunlap <rdunlap@infradead.org>
[ rjw: Subject edit ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 10aa694ea0d0adfbd97400fb39ea237a273c335f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/power/runtime.c
diff --cc drivers/base/power/runtime.c
index aef4fbb4866e,a46a7e30881b..000000000000
--- a/drivers/base/power/runtime.c
+++ b/drivers/base/power/runtime.c
@@@ -1069,24 -1082,26 +1069,29 @@@ int __pm_runtime_resume(struct device *
  EXPORT_SYMBOL_GPL(__pm_runtime_resume);
  
  /**
 - * pm_runtime_get_if_active - Conditionally bump up device usage counter.
 + * pm_runtime_get_if_active - Conditionally bump up the device's usage counter.
   * @dev: Device to handle.
 - * @ign_usage_count: Whether or not to look at the current usage counter value.
   *
 - * Return -EINVAL if runtime PM is disabled for @dev.
 + * Return -EINVAL if runtime PM is disabled for the device.
   *
 - * Otherwise, if the runtime PM status of @dev is %RPM_ACTIVE and either
 - * @ign_usage_count is %true or the runtime PM usage counter of @dev is not
 - * zero, increment the usage counter of @dev and return 1. Otherwise, return 0
 - * without changing the usage counter.
 + * Otherwise, if the device's runtime PM status is RPM_ACTIVE and either
 + * ign_usage_count is true or the device's usage_count is non-zero, increment
 + * the counter and return 1. Otherwise return 0 without changing the counter.
   *
 - * If @ign_usage_count is %true, this function can be used to prevent suspending
 - * the device when its runtime PM status is %RPM_ACTIVE.
 + * If ign_usage_count is true, the function can be used to prevent suspending
 + * the device when its runtime PM status is RPM_ACTIVE.
   *
 - * If @ign_usage_count is %false, this function can be used to prevent
 - * suspending the device when both its runtime PM status is %RPM_ACTIVE and its
 - * runtime PM usage counter is not zero.
 + * If ign_usage_count is false, the function can be used to prevent suspending
 + * the device when both its runtime PM status is RPM_ACTIVE and its usage_count
 + * is non-zero.
   *
++<<<<<<< HEAD
 + * The caller is resposible for putting the device's usage count when ther
 + * return value is greater than zero.
++=======
+  * The caller is responsible for decrementing the runtime PM usage counter of
+  * @dev after this function has returned a positive value for it.
++>>>>>>> 10aa694ea0d0 (PM: runtime: Fix resposible -> responsible in runtime.c)
   */
  int pm_runtime_get_if_active(struct device *dev, bool ign_usage_count)
  {
* Unmerged path drivers/base/power/runtime.c
