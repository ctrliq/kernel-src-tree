ext4: prevent partial update of the extent blocks

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Zhang Yi <yi.zhang@huawei.com>
commit 0f2f87d51aebcf71a709b52f661d681594c7dffa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/0f2f87d5.failed

In the most error path of current extents updating operations are not
roll back partial updates properly when some bad things happens(.e.g in
ext4_ext_insert_extent()). So we may get an inconsistent extents tree
if journal has been aborted due to IO error, which may probability lead
to BUGON later when we accessing these extent entries in errors=continue
mode. This patch drop extent buffer's verify flag before updatng the
contents in ext4_ext_get_access(), and reset it after updating in
__ext4_ext_dirty(). After this patch we could force to check the extent
buffer if extents tree updating was break off, make sure the extents are
consistent.

	Signed-off-by: Zhang Yi <yi.zhang@huawei.com>
	Reviewed-by: Theodore Ts'o <tytso@mit.edu>
Link: https://lore.kernel.org/r/20210908120850.4012324-4-yi.zhang@huawei.com
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 0f2f87d51aebcf71a709b52f661d681594c7dffa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ext4/extents.c
diff --cc fs/ext4/extents.c
index 8cb32b3ef129,09f56e04f4b2..000000000000
--- a/fs/ext4/extents.c
+++ b/fs/ext4/extents.c
@@@ -148,7 -141,16 +150,20 @@@ static int ext4_ext_get_access(handle_
  	if (path->p_bh) {
  		/* path points to block */
  		BUFFER_TRACE(path->p_bh, "get_write_access");
++<<<<<<< HEAD
 +		return ext4_journal_get_write_access(handle, path->p_bh);
++=======
+ 		err = ext4_journal_get_write_access(handle, inode->i_sb,
+ 						    path->p_bh, EXT4_JTR_NONE);
+ 		/*
+ 		 * The extent buffer's verified bit will be set again in
+ 		 * __ext4_ext_dirty(). We could leave an inconsistent
+ 		 * buffer if the extents updating procudure break off du
+ 		 * to some error happens, force to check it again.
+ 		 */
+ 		if (!err)
+ 			clear_buffer_verified(path->p_bh);
++>>>>>>> 0f2f87d51aeb (ext4: prevent partial update of the extent blocks)
  	}
  	/* path points to leaf/index in inode body */
  	/* we use in-core data, no need to protect them */
* Unmerged path fs/ext4/extents.c
