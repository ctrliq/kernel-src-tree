netfilter: nft_set_pipapo: allocate pcpu scratch maps on clone

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Florian Westphal <fw@strlen.de>
commit 23c54263efd7cb605e2f7af72717a2a951999217
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/23c54263.failed

This is needed in case a new transaction is made that doesn't insert any
new elements into an already existing set.

Else, after second 'nft -f ruleset.txt', lookups in such a set will fail
because ->lookup() encounters raw_cpu_ptr(m->scratch) == NULL.

For the initial rule load, insertion of elements takes care of the
allocation, but for rule reloads this isn't guaranteed: we might not
have additions to the set.

Fixes: 3c4287f62044a90e ("nf_tables: Add set type for arbitrary concatenation of ranges")
	Reported-by: etkaar <lists.netfilter.org@prvy.eu>
	Signed-off-by: Florian Westphal <fw@strlen.de>
	Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 23c54263efd7cb605e2f7af72717a2a951999217)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nft_set_pipapo.c
diff --cc net/netfilter/nft_set_pipapo.c
index f73eae464aad,2c8051d8cca6..000000000000
--- a/net/netfilter/nft_set_pipapo.c
+++ b/net/netfilter/nft_set_pipapo.c
@@@ -1202,6 -1285,17 +1202,20 @@@ static struct nft_pipapo_match *pipapo_
  	if (!new->scratch)
  		goto out_scratch;
  
++<<<<<<< HEAD
++=======
+ #ifdef NFT_PIPAPO_ALIGN
+ 	new->scratch_aligned = alloc_percpu(*new->scratch_aligned);
+ 	if (!new->scratch_aligned)
+ 		goto out_scratch;
+ #endif
+ 	for_each_possible_cpu(i)
+ 		*per_cpu_ptr(new->scratch, i) = NULL;
+ 
+ 	if (pipapo_realloc_scratch(new, old->bsize_max))
+ 		goto out_scratch_realloc;
+ 
++>>>>>>> 23c54263efd7 (netfilter: nft_set_pipapo: allocate pcpu scratch maps on clone)
  	rcu_head_init(&new->rcu);
  
  	src = old->f;
@@@ -1239,8 -1339,14 +1253,18 @@@ out_lt
  		kvfree(dst->lt);
  		dst--;
  	}
++<<<<<<< HEAD
++=======
+ out_scratch_realloc:
+ 	for_each_possible_cpu(i)
+ 		kfree(*per_cpu_ptr(new->scratch, i));
+ #ifdef NFT_PIPAPO_ALIGN
+ 	free_percpu(new->scratch_aligned);
+ #endif
+ out_scratch:
++>>>>>>> 23c54263efd7 (netfilter: nft_set_pipapo: allocate pcpu scratch maps on clone)
  	free_percpu(new->scratch);
 +out_scratch:
  	kfree(new);
  
  	return ERR_PTR(-ENOMEM);
* Unmerged path net/netfilter/nft_set_pipapo.c
