net/mlx5e: Consider PTP-RQ when setting RX VLAN stripping

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Aya Levin <ayal@nvidia.com>
commit a759f845d1f78634b54744db0fa48524ef6d0e14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/a759f845.failed

Add PTP-RQ to the loop when setting rx-vlan-offload feature via ethtool.
On PTP-RQ's creation, set rx-vlan-offload into its parameters.

Fixes: a099da8ffcf6 ("net/mlx5e: Add RQ to PTP channel")
	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit a759f845d1f78634b54744db0fa48524ef6d0e14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
index f9afbdefded5,07b429b94d93..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
@@@ -415,17 -478,35 +415,29 @@@ static void mlx5e_ptp_build_params(stru
  	params->num_tc = orig->num_tc;
  
  	/* SQ */
++<<<<<<< HEAD
 +	params->log_sq_size = orig->log_sq_size;
 +
 +	mlx5e_ptp_build_sq_param(c->mdev, params, &cparams->txq_sq_param);
++=======
+ 	if (test_bit(MLX5E_PTP_STATE_TX, c->state)) {
+ 		params->log_sq_size = orig->log_sq_size;
+ 		mlx5e_ptp_build_sq_param(c->mdev, params, &cparams->txq_sq_param);
+ 	}
+ 	/* RQ */
+ 	if (test_bit(MLX5E_PTP_STATE_RX, c->state)) {
+ 		params->vlan_strip_disable = orig->vlan_strip_disable;
+ 		mlx5e_ptp_build_rq_param(c->mdev, c->netdev, c->priv->q_counter, cparams);
+ 	}
++>>>>>>> a759f845d1f7 (net/mlx5e: Consider PTP-RQ when setting RX VLAN stripping)
  }
  
 -static int mlx5e_init_ptp_rq(struct mlx5e_ptp *c, struct mlx5e_params *params,
 -			     struct mlx5e_rq *rq)
 +static int mlx5e_ptp_open_queues(struct mlx5e_port_ptp *c,
 +				 struct mlx5e_ptp_params *cparams)
  {
 -	struct mlx5_core_dev *mdev = c->mdev;
 -	struct mlx5e_priv *priv = c->priv;
  	int err;
  
 -	rq->wq_type      = params->rq_wq_type;
 -	rq->pdev         = mdev->device;
 -	rq->netdev       = priv->netdev;
 -	rq->priv         = priv;
 -	rq->clock        = &mdev->clock;
 -	rq->tstamp       = &priv->tstamp;
 -	rq->mdev         = mdev;
 -	rq->hw_mtu       = MLX5E_SW2HW_MTU(params, params->sw_mtu);
 -	rq->stats        = &c->priv->ptp_stats.rq;
 -	rq->ptp_cyc2time = mlx5_rq_ts_translator(mdev);
 -	err = mlx5e_rq_set_handlers(rq, params, false);
 +	err = mlx5e_ptp_open_cqs(c, cparams);
  	if (err)
  		return err;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index b71f4682ed53..01d809b4413d 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -3354,7 +3354,7 @@ static int mlx5e_modify_channels_scatter_fcs(struct mlx5e_channels *chs, bool en
 
 static int mlx5e_modify_channels_vsd(struct mlx5e_channels *chs, bool vsd)
 {
-	int err = 0;
+	int err;
 	int i;
 
 	for (i = 0; i < chs->num; i++) {
@@ -3362,6 +3362,8 @@ static int mlx5e_modify_channels_vsd(struct mlx5e_channels *chs, bool vsd)
 		if (err)
 			return err;
 	}
+	if (chs->ptp && test_bit(MLX5E_PTP_STATE_RX, chs->ptp->state))
+		return mlx5e_modify_rq_vsd(&chs->ptp->rq, vsd);
 
 	return 0;
 }
