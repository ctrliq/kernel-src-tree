ice: fix getting UDP tunnel entry

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
commit e4c2efa1393c6f1fbfabf91d1d83fcb4ae691ccb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/e4c2efa1.failed

Correct parameters order in call to ice_tunnel_idx_to_entry function.

Entry in sparse port table is correct when the idx is 0. For idx 1 one
correct entry should be skipped, for idx 2 two of them should be skipped
etc. Change if condition to be true when idx is 0, which means that
previous valid entry of this tunnel type were skipped.

Fixes: b20e6c17c468 ("ice: convert to new udp_tunnel infrastructure")
	Signed-off-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
	Tested-by: Gurucharan G <gurucharanx.g@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit e4c2efa1393c6f1fbfabf91d1d83fcb4ae691ccb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_flex_pipe.c
diff --cc drivers/net/ethernet/intel/ice/ice_flex_pipe.c
index a3e1704ca779,1ac96dc66d0d..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_flex_pipe.c
+++ b/drivers/net/ethernet/intel/ice/ice_flex_pipe.c
@@@ -1718,8 -1651,34 +1718,36 @@@ ice_get_open_tunnel_port(struct ice_hw 
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * ice_tunnel_idx_to_entry - convert linear index to the sparse one
+  * @hw: pointer to the HW structure
+  * @type: type of tunnel
+  * @idx: linear index
+  *
+  * Stack assumes we have 2 linear tables with indexes [0, count_valid),
+  * but really the port table may be sprase, and types are mixed, so convert
+  * the stack index into the device index.
+  */
+ static u16 ice_tunnel_idx_to_entry(struct ice_hw *hw, enum ice_tunnel_type type,
+ 				   u16 idx)
+ {
+ 	u16 i;
+ 
+ 	for (i = 0; i < hw->tnl.count && i < ICE_TUNNEL_MAX_ENTRIES; i++)
+ 		if (hw->tnl.tbl[i].valid &&
+ 		    hw->tnl.tbl[i].type == type &&
+ 		    idx-- == 0)
+ 			return i;
+ 
+ 	WARN_ON_ONCE(1);
+ 	return 0;
+ }
+ 
+ /**
++>>>>>>> e4c2efa1393c (ice: fix getting UDP tunnel entry)
   * ice_create_tunnel
   * @hw: pointer to the HW structure
 - * @index: device table entry
   * @type: type of tunnel
   * @port: port of tunnel to create
   *
@@@ -1899,6 -1817,52 +1927,55 @@@ ice_destroy_tunnel_end
  	return status;
  }
  
++<<<<<<< HEAD
++=======
+ int ice_udp_tunnel_set_port(struct net_device *netdev, unsigned int table,
+ 			    unsigned int idx, struct udp_tunnel_info *ti)
+ {
+ 	struct ice_netdev_priv *np = netdev_priv(netdev);
+ 	struct ice_vsi *vsi = np->vsi;
+ 	struct ice_pf *pf = vsi->back;
+ 	enum ice_tunnel_type tnl_type;
+ 	enum ice_status status;
+ 	u16 index;
+ 
+ 	tnl_type = ti->type == UDP_TUNNEL_TYPE_VXLAN ? TNL_VXLAN : TNL_GENEVE;
+ 	index = ice_tunnel_idx_to_entry(&pf->hw, tnl_type, idx);
+ 
+ 	status = ice_create_tunnel(&pf->hw, index, tnl_type, ntohs(ti->port));
+ 	if (status) {
+ 		netdev_err(netdev, "Error adding UDP tunnel - %s\n",
+ 			   ice_stat_str(status));
+ 		return -EIO;
+ 	}
+ 
+ 	udp_tunnel_nic_set_port_priv(netdev, table, idx, index);
+ 	return 0;
+ }
+ 
+ int ice_udp_tunnel_unset_port(struct net_device *netdev, unsigned int table,
+ 			      unsigned int idx, struct udp_tunnel_info *ti)
+ {
+ 	struct ice_netdev_priv *np = netdev_priv(netdev);
+ 	struct ice_vsi *vsi = np->vsi;
+ 	struct ice_pf *pf = vsi->back;
+ 	enum ice_tunnel_type tnl_type;
+ 	enum ice_status status;
+ 
+ 	tnl_type = ti->type == UDP_TUNNEL_TYPE_VXLAN ? TNL_VXLAN : TNL_GENEVE;
+ 
+ 	status = ice_destroy_tunnel(&pf->hw, ti->hw_priv, tnl_type,
+ 				    ntohs(ti->port));
+ 	if (status) {
+ 		netdev_err(netdev, "Error removing UDP tunnel - %s\n",
+ 			   ice_stat_str(status));
+ 		return -EIO;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> e4c2efa1393c (ice: fix getting UDP tunnel entry)
  /* PTG Management */
  
  /**
* Unmerged path drivers/net/ethernet/intel/ice/ice_flex_pipe.c
