net/mlx5e: Fix page allocation failure for ptp-RQ over SF

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Aya Levin <ayal@nvidia.com>
commit 678b1ae1af4aef488fcc42baa663e737b9a531ba
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/678b1ae1.failed

Set the correct pci-device pointer to the ptp-RQ. This allows access to
dma_mask and avoids allocation request with wrong pci-device.

Fixes: a099da8ffcf6 ("net/mlx5e: Add RQ to PTP channel")
	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 678b1ae1af4aef488fcc42baa663e737b9a531ba)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
index f9afbdefded5,efef4adce086..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
@@@ -415,12 -478,55 +415,53 @@@ static void mlx5e_ptp_build_params(stru
  	params->num_tc = orig->num_tc;
  
  	/* SQ */
 -	if (test_bit(MLX5E_PTP_STATE_TX, c->state)) {
 -		params->log_sq_size = orig->log_sq_size;
 -		mlx5e_ptp_build_sq_param(c->mdev, params, &cparams->txq_sq_param);
 -	}
 -	/* RQ */
 -	if (test_bit(MLX5E_PTP_STATE_RX, c->state)) {
 -		params->vlan_strip_disable = orig->vlan_strip_disable;
 -		mlx5e_ptp_build_rq_param(c->mdev, c->netdev, c->priv->q_counter, cparams);
 -	}
 +	params->log_sq_size = orig->log_sq_size;
 +
 +	mlx5e_ptp_build_sq_param(c->mdev, params, &cparams->txq_sq_param);
  }
  
++<<<<<<< HEAD
 +static int mlx5e_ptp_open_queues(struct mlx5e_port_ptp *c,
++=======
+ static int mlx5e_init_ptp_rq(struct mlx5e_ptp *c, struct mlx5e_params *params,
+ 			     struct mlx5e_rq *rq)
+ {
+ 	struct mlx5_core_dev *mdev = c->mdev;
+ 	struct mlx5e_priv *priv = c->priv;
+ 	int err;
+ 
+ 	rq->wq_type      = params->rq_wq_type;
+ 	rq->pdev         = c->pdev;
+ 	rq->netdev       = priv->netdev;
+ 	rq->priv         = priv;
+ 	rq->clock        = &mdev->clock;
+ 	rq->tstamp       = &priv->tstamp;
+ 	rq->mdev         = mdev;
+ 	rq->hw_mtu       = MLX5E_SW2HW_MTU(params, params->sw_mtu);
+ 	rq->stats        = &c->priv->ptp_stats.rq;
+ 	rq->ptp_cyc2time = mlx5_rq_ts_translator(mdev);
+ 	err = mlx5e_rq_set_handlers(rq, params, false);
+ 	if (err)
+ 		return err;
+ 
+ 	return xdp_rxq_info_reg(&rq->xdp_rxq, rq->netdev, rq->ix, 0);
+ }
+ 
+ static int mlx5e_ptp_open_rq(struct mlx5e_ptp *c, struct mlx5e_params *params,
+ 			     struct mlx5e_rq_param *rq_param)
+ {
+ 	int node = dev_to_node(c->mdev->device);
+ 	int err;
+ 
+ 	err = mlx5e_init_ptp_rq(c, params, &c->rq);
+ 	if (err)
+ 		return err;
+ 
+ 	return mlx5e_open_rq(params, rq_param, NULL, node, &c->rq);
+ }
+ 
+ static int mlx5e_ptp_open_queues(struct mlx5e_ptp *c,
++>>>>>>> 678b1ae1af4a (net/mlx5e: Fix page allocation failure for ptp-RQ over SF)
  				 struct mlx5e_ptp_params *cparams)
  {
  	int err;
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
