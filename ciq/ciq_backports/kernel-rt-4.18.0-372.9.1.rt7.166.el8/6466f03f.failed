RDMA/mlx5: Delete right entry from MR signature database

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Aharon Landau <aharonl@nvidia.com>
commit 6466f03fdf98dd78b9453deb8a7cb0d887c09fec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/6466f03f.failed

The value mr->sig is stored in the entry upon mr allocation, however, ibmr
is wrongly entered here as "old", therefore, xa_cmpxchg() does not replace
the entry with NULL, which leads to the following trace:

 WARNING: CPU: 28 PID: 2078 at drivers/infiniband/hw/mlx5/main.c:3643 mlx5_ib_stage_init_cleanup+0x4d/0x60 [mlx5_ib]
 Modules linked in: nvme_rdma nvme_fabrics nvme_core 8021q garp mrp bonding bridge stp llc rfkill rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_tad
 CPU: 28 PID: 2078 Comm: reboot Tainted: G               X --------- ---  5.13.0-0.rc2.19.el9.x86_64 #1
 Hardware name: Dell Inc. PowerEdge R430/03XKDV, BIOS 2.9.1 12/07/2018
 RIP: 0010:mlx5_ib_stage_init_cleanup+0x4d/0x60 [mlx5_ib]
 Code: 8d bb 70 1f 00 00 be 00 01 00 00 e8 9d 94 ce da 48 3d 00 01 00 00 75 02 5b c3 0f 0b 5b c3 0f 0b 48 83 bb b0 20 00 00 00 74 d5 <0f> 0b eb d1 4
 RSP: 0018:ffffa8db06d33c90 EFLAGS: 00010282
 RAX: 0000000000000000 RBX: ffff97f890a44000 RCX: ffff97f900ec0160
 RDX: 0000000000000000 RSI: 0000000080080001 RDI: ffff97f890a44000
 RBP: ffffffffc0c189b8 R08: 0000000000000001 R09: 0000000000000000
 R10: 0000000000000001 R11: 0000000000000300 R12: ffff97f890a44000
 R13: ffffffffc0c36030 R14: 00000000fee1dead R15: 0000000000000000
 FS:  00007f0d5a8a3b40(0000) GS:ffff98077fb80000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 0000555acbf4f450 CR3: 00000002a6f56002 CR4: 00000000001706e0
 Call Trace:
  mlx5r_remove+0x39/0x60 [mlx5_ib]
  auxiliary_bus_remove+0x1b/0x30
  __device_release_driver+0x17a/0x230
  device_release_driver+0x24/0x30
  bus_remove_device+0xdb/0x140
  device_del+0x18b/0x3e0
  mlx5_detach_device+0x59/0x90 [mlx5_core]
  mlx5_unload_one+0x22/0x60 [mlx5_core]
  shutdown+0x31/0x3a [mlx5_core]
  pci_device_shutdown+0x34/0x60
  device_shutdown+0x15b/0x1c0
  __do_sys_reboot.cold+0x2f/0x5b
  ? vfs_writev+0xc7/0x140
  ? handle_mm_fault+0xc5/0x290
  ? do_writev+0x6b/0x110
  do_syscall_64+0x40/0x80
  entry_SYSCALL_64_after_hwframe+0x44/0xae

Fixes: e6fb246ccafb ("RDMA/mlx5: Consolidate MR destruction to mlx5_ib_dereg_mr()")
Link: https://lore.kernel.org/r/f3f585ea0db59c2a78f94f65eedeafc5a2374993.1623309971.git.leonro@nvidia.com
	Signed-off-by: Aharon Landau <aharonl@nvidia.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 6466f03fdf98dd78b9453deb8a7cb0d887c09fec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mr.c
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 4125b41cdef4,425423dfac72..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -1776,9 -1923,39 +1776,43 @@@ mlx5_free_priv_descs(struct mlx5_ib_mr 
  	}
  }
  
 -int mlx5_ib_dereg_mr(struct ib_mr *ibmr, struct ib_udata *udata)
 +static void clean_mr(struct mlx5_ib_dev *dev, struct mlx5_ib_mr *mr)
  {
++<<<<<<< HEAD
 +	if (mr->ibmr.type == IB_MR_TYPE_INTEGRITY) {
++=======
+ 	struct mlx5_ib_mr *mr = to_mmr(ibmr);
+ 	struct mlx5_ib_dev *dev = to_mdev(ibmr->device);
+ 	int rc;
+ 
+ 	/*
+ 	 * Any async use of the mr must hold the refcount, once the refcount
+ 	 * goes to zero no other thread, such as ODP page faults, prefetch, any
+ 	 * UMR activity, etc can touch the mkey. Thus it is safe to destroy it.
+ 	 */
+ 	if (IS_ENABLED(CONFIG_INFINIBAND_ON_DEMAND_PAGING) &&
+ 	    refcount_read(&mr->mmkey.usecount) != 0 &&
+ 	    xa_erase(&mr_to_mdev(mr)->odp_mkeys, mlx5_base_mkey(mr->mmkey.key)))
+ 		mlx5r_deref_wait_odp_mkey(&mr->mmkey);
+ 
+ 	if (ibmr->type == IB_MR_TYPE_INTEGRITY) {
+ 		xa_cmpxchg(&dev->sig_mrs, mlx5_base_mkey(mr->mmkey.key),
+ 			   mr->sig, NULL, GFP_KERNEL);
+ 
+ 		if (mr->mtt_mr) {
+ 			rc = mlx5_ib_dereg_mr(&mr->mtt_mr->ibmr, NULL);
+ 			if (rc)
+ 				return rc;
+ 			mr->mtt_mr = NULL;
+ 		}
+ 		if (mr->klm_mr) {
+ 			rc = mlx5_ib_dereg_mr(&mr->klm_mr->ibmr, NULL);
+ 			if (rc)
+ 				return rc;
+ 			mr->klm_mr = NULL;
+ 		}
+ 
++>>>>>>> 6466f03fdf98 (RDMA/mlx5: Delete right entry from MR signature database)
  		if (mlx5_core_destroy_psv(dev->mdev,
  					  mr->sig->psv_memory.psv_idx))
  			mlx5_ib_warn(dev, "failed to destroy mem psv %d\n",
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
