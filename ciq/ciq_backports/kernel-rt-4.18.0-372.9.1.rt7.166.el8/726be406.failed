drm/amdkfd: Fix error handling in svm_range_add

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Felix Kuehling <Felix.Kuehling@amd.com>
commit 726be40607264b180a2b336c81e1dcff941de618
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/726be406.failed

Add null-pointer check after the last svm_range_new call. This was
originally reported by Zhou Qingyang <zhou1615@umn.edu> based on a
static analyzer.

To avoid duplicating the unwinding code from svm_range_handle_overlap,
I merged the two functions into one.

	Signed-off-by: Felix Kuehling <Felix.Kuehling@amd.com>
	Cc: Zhou Qingyang <zhou1615@umn.edu>
	Reviewed-by: Philip Yang <Philip.Yang@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 726be40607264b180a2b336c81e1dcff941de618)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdkfd/kfd_svm.c
diff --cc drivers/gpu/drm/amd/amdkfd/kfd_svm.c
index 1006f5953ca1,e9489ffe0e09..000000000000
--- a/drivers/gpu/drm/amd/amdkfd/kfd_svm.c
+++ b/drivers/gpu/drm/amd/amdkfd/kfd_svm.c
@@@ -2663,59 -2904,7 +2676,63 @@@ svm_range_is_valid(struct mm_struct *mm
  }
  
  /**
++<<<<<<< HEAD
 + * svm_range_add - add svm range and handle overlap
 + * @p: the range add to this process svms
 + * @start: page size aligned
 + * @size: page size aligned
 + * @nattr: number of attributes
 + * @attrs: array of attributes
 + * @update_list: output, the ranges need validate and update GPU mapping
 + * @insert_list: output, the ranges need insert to svms
 + * @remove_list: output, the ranges are replaced and need remove from svms
 + *
 + * Check if the virtual address range has overlap with the registered ranges,
 + * split the overlapped range, copy and adjust pages address and vram nodes in
 + * old and new ranges.
 + *
 + * Context: Process context, caller must hold svms->lock
 + *
 + * Return:
 + * 0 - OK, otherwise error code
 + */
 +static int
 +svm_range_add(struct kfd_process *p, uint64_t start, uint64_t size,
 +	      uint32_t nattr, struct kfd_ioctl_svm_attribute *attrs,
 +	      struct list_head *update_list, struct list_head *insert_list,
 +	      struct list_head *remove_list)
 +{
 +	uint64_t last = start + size - 1UL;
 +	struct svm_range_list *svms;
 +	struct svm_range new = {0};
 +	struct svm_range *prange;
 +	unsigned long left = 0;
 +	int r = 0;
 +
 +	pr_debug("svms 0x%p [0x%llx 0x%llx]\n", &p->svms, start, last);
 +
 +	svm_range_apply_attrs(p, &new, nattr, attrs);
 +
 +	svms = &p->svms;
 +
 +	r = svm_range_handle_overlap(svms, &new, start, last, update_list,
 +				     insert_list, remove_list, &left);
 +	if (r)
 +		return r;
 +
 +	if (left) {
 +		prange = svm_range_new(svms, last - left + 1, last);
 +		list_add(&prange->insert_list, insert_list);
 +		list_add(&prange->update_list, update_list);
 +	}
 +
 +	return 0;
 +}
 +
 +/* svm_range_best_prefetch_location - decide the best prefetch location
++=======
+  * svm_range_best_prefetch_location - decide the best prefetch location
++>>>>>>> 726be4060726 (drm/amdkfd: Fix error handling in svm_range_add)
   * @prange: svm range structure
   *
   * For xnack off:
* Unmerged path drivers/gpu/drm/amd/amdkfd/kfd_svm.c
