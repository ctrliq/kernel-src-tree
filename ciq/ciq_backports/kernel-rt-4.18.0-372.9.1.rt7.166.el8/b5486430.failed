RDMA/mlx5: Add missing returned error check of mlx5_ib_dereg_mr

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Leon Romanovsky <leonro@nvidia.com>
commit b5486430bb0fbb4f2bd1e06bd85921395ba357a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/b5486430.failed

Fix the following smatch error:

drivers/infiniband/hw/mlx5/mr.c:1950 mlx5_ib_dereg_mr() error: uninitialized symbol 'rc'.

Fixes: e6fb246ccafb ("RDMA/mlx5: Consolidate MR destruction to mlx5_ib_dereg_mr()")
Link: https://lore.kernel.org/r/20210314082250.10143-1-leon@kernel.org
	Reported-by: kernel test robot <lkp@intel.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit b5486430bb0fbb4f2bd1e06bd85921395ba357a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mr.c
diff --cc drivers/infiniband/hw/mlx5/mr.c
index 4344f79c242a,9dcb9fb4eeaa..000000000000
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@@ -1775,9 -1919,39 +1775,43 @@@ mlx5_free_priv_descs(struct mlx5_ib_mr 
  	}
  }
  
 -int mlx5_ib_dereg_mr(struct ib_mr *ibmr, struct ib_udata *udata)
 +static void clean_mr(struct mlx5_ib_dev *dev, struct mlx5_ib_mr *mr)
  {
++<<<<<<< HEAD
 +	if (mr->ibmr.type == IB_MR_TYPE_INTEGRITY) {
++=======
+ 	struct mlx5_ib_mr *mr = to_mmr(ibmr);
+ 	struct mlx5_ib_dev *dev = to_mdev(ibmr->device);
+ 	int rc;
+ 
+ 	/*
+ 	 * Any async use of the mr must hold the refcount, once the refcount
+ 	 * goes to zero no other thread, such as ODP page faults, prefetch, any
+ 	 * UMR activity, etc can touch the mkey. Thus it is safe to destroy it.
+ 	 */
+ 	if (IS_ENABLED(CONFIG_INFINIBAND_ON_DEMAND_PAGING) &&
+ 	    refcount_read(&mr->mmkey.usecount) != 0 &&
+ 	    xa_erase(&mr_to_mdev(mr)->odp_mkeys, mlx5_base_mkey(mr->mmkey.key)))
+ 		mlx5r_deref_wait_odp_mkey(&mr->mmkey);
+ 
+ 	if (ibmr->type == IB_MR_TYPE_INTEGRITY) {
+ 		xa_cmpxchg(&dev->sig_mrs, mlx5_base_mkey(mr->mmkey.key), ibmr,
+ 			   NULL, GFP_KERNEL);
+ 
+ 		if (mr->mtt_mr) {
+ 			rc = mlx5_ib_dereg_mr(&mr->mtt_mr->ibmr, NULL);
+ 			if (rc)
+ 				return rc;
+ 			mr->mtt_mr = NULL;
+ 		}
+ 		if (mr->klm_mr) {
+ 			rc = mlx5_ib_dereg_mr(&mr->klm_mr->ibmr, NULL);
+ 			if (rc)
+ 				return rc;
+ 			mr->klm_mr = NULL;
+ 		}
+ 
++>>>>>>> b5486430bb0f (RDMA/mlx5: Add missing returned error check of mlx5_ib_dereg_mr)
  		if (mlx5_core_destroy_psv(dev->mdev,
  					  mr->sig->psv_memory.psv_idx))
  			mlx5_ib_warn(dev, "failed to destroy mem psv %d\n",
* Unmerged path drivers/infiniband/hw/mlx5/mr.c
