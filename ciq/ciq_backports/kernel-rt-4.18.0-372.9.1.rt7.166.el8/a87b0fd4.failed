s390/cpumf: Support for CPU Measurement Facility CSVN 7

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Thomas Richter <tmricht@linux.ibm.com>
commit a87b0fd4f9003f8521226e226cf92b18147b3519
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/a87b0fd4.failed

Adds support for the CPU Measurement Counter Facility second version
number 7.

	Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
	Acked-by: Sumanth Korikkar <sumanthk@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit a87b0fd4f9003f8521226e226cf92b18147b3519)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kernel/perf_cpum_cf_common.c
diff --cc arch/s390/kernel/perf_cpum_cf_common.c
index 3bced89caffb,8ee48672233f..000000000000
--- a/arch/s390/kernel/perf_cpum_cf_common.c
+++ b/arch/s390/kernel/perf_cpum_cf_common.c
@@@ -170,6 -155,53 +170,55 @@@ static int cpum_cf_offline_cpu(unsigne
  	return cpum_cf_setup(cpu, PMC_RELEASE);
  }
  
++<<<<<<< HEAD
++=======
+ /* Return the maximum possible counter set size (in number of 8 byte counters)
+  * depending on type and model number.
+  */
+ size_t cpum_cf_ctrset_size(enum cpumf_ctr_set ctrset,
+ 			   struct cpumf_ctr_info *info)
+ {
+ 	size_t ctrset_size = 0;
+ 
+ 	switch (ctrset) {
+ 	case CPUMF_CTR_SET_BASIC:
+ 		if (info->cfvn >= 1)
+ 			ctrset_size = 6;
+ 		break;
+ 	case CPUMF_CTR_SET_USER:
+ 		if (info->cfvn == 1)
+ 			ctrset_size = 6;
+ 		else if (info->cfvn >= 3)
+ 			ctrset_size = 2;
+ 		break;
+ 	case CPUMF_CTR_SET_CRYPTO:
+ 		if (info->csvn >= 1 && info->csvn <= 5)
+ 			ctrset_size = 16;
+ 		else if (info->csvn == 6 || info->csvn == 7)
+ 			ctrset_size = 20;
+ 		break;
+ 	case CPUMF_CTR_SET_EXT:
+ 		if (info->csvn == 1)
+ 			ctrset_size = 32;
+ 		else if (info->csvn == 2)
+ 			ctrset_size = 48;
+ 		else if (info->csvn >= 3 && info->csvn <= 5)
+ 			ctrset_size = 128;
+ 		else if (info->csvn == 6 || info->csvn == 7)
+ 			ctrset_size = 160;
+ 		break;
+ 	case CPUMF_CTR_SET_MT_DIAG:
+ 		if (info->csvn > 3)
+ 			ctrset_size = 48;
+ 		break;
+ 	case CPUMF_CTR_SET_MAX:
+ 		break;
+ 	}
+ 
+ 	return ctrset_size;
+ }
+ 
++>>>>>>> a87b0fd4f900 (s390/cpumf: Support for CPU Measurement Facility CSVN 7)
  static int __init cpum_cf_init(void)
  {
  	int rc;
* Unmerged path arch/s390/kernel/perf_cpum_cf_common.c
diff --git a/arch/s390/kernel/perf_cpum_cf_events.c b/arch/s390/kernel/perf_cpum_cf_events.c
index 37265f551a11..52c1fe23b823 100644
--- a/arch/s390/kernel/perf_cpum_cf_events.c
+++ b/arch/s390/kernel/perf_cpum_cf_events.c
@@ -344,7 +344,7 @@ static struct attribute *cpumcf_svn_12345_pmu_event_attr[] __initdata = {
 	NULL,
 };
 
-static struct attribute *cpumcf_svn_6_pmu_event_attr[] __initdata = {
+static struct attribute *cpumcf_svn_67_pmu_event_attr[] __initdata = {
 	CPUMF_EVENT_PTR(cf_svn_12345, PRNG_FUNCTIONS),
 	CPUMF_EVENT_PTR(cf_svn_12345, PRNG_CYCLES),
 	CPUMF_EVENT_PTR(cf_svn_12345, PRNG_BLOCKED_FUNCTIONS),
@@ -715,8 +715,8 @@ __init const struct attribute_group **cpumf_cf_event_group(void)
 	case 1 ... 5:
 		csvn = cpumcf_svn_12345_pmu_event_attr;
 		break;
-	case 6:
-		csvn = cpumcf_svn_6_pmu_event_attr;
+	case 6 ... 7:
+		csvn = cpumcf_svn_67_pmu_event_attr;
 		break;
 	default:
 		csvn = none;
