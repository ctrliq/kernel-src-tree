ALSA: usb-audio: Move playback_first flag into quirk_flags

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 019c7f912ca947c80b9b6f090fee90f90e1be9c8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/019c7f91.failed

The snd_usb_audio.playback_first flag is used by the implicit feedback
mode handling, and this can be also moved to quirk_flags.

Link: https://lore.kernel.org/r/20210729073855.19043-6-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 019c7f912ca947c80b9b6f090fee90f90e1be9c8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/usbaudio.h
diff --cc sound/usb/usbaudio.h
index c0a3ac71bf0a,8de2b6c51dad..000000000000
--- a/sound/usb/usbaudio.h
+++ b/sound/usb/usbaudio.h
@@@ -32,10 -35,7 +32,9 @@@ struct snd_usb_audio 
  	atomic_t usage_count;
  	wait_queue_head_t shutdown_wait;
  	unsigned int quirk_flags;
 +	unsigned int txfr_quirk:1; /* Subframe boundaries on transfers */
 +	unsigned int tx_length_quirk:1; /* Put length specifier in transfers */
  	unsigned int need_delayed_register:1; /* warn for delayed registration */
- 	unsigned int playback_first:1;	/* for implicit fb: don't wait for the first capture URBs */
  	int num_interfaces;
  	int num_suspended_intf;
  	int sample_rate_read_error;
@@@ -130,8 -131,21 +129,27 @@@ extern bool snd_usb_skip_validation
   * QUIRK_FLAG_GET_SAMPLE_RATE:
   *  Skip reading sample rate for devices, as some devices behave inconsistently
   *  or return error
++<<<<<<< HEAD
 + */
 +
 +#define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
++=======
+  * QUIRK_FLAG_SHARE_MEDIA_DEVICE:
+  *  Create Media Controller API entries
+  * QUIRK_FLAG_ALIGN_TRANSFER:
+  *  Allow alignment on audio sub-slot (channel samples) rather than on audio
+  *  slots (audio frames)
+  * QUIRK_TX_LENGTH:
+  *  Add length specifier to transfers
+  * QUIRK_FLAG_PLAYBACK_FIRST:
+  *  Start playback stream at first even in implement feedback mode
+  */
+ 
+ #define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
+ #define QUIRK_FLAG_SHARE_MEDIA_DEVICE	(1U << 1)
+ #define QUIRK_FLAG_ALIGN_TRANSFER	(1U << 2)
+ #define QUIRK_FLAG_TX_LENGTH		(1U << 3)
+ #define QUIRK_FLAG_PLAYBACK_FIRST	(1U << 4)
++>>>>>>> 019c7f912ca9 (ALSA: usb-audio: Move playback_first flag into quirk_flags)
  
  #endif /* __USBAUDIO_H */
diff --git a/sound/usb/endpoint.c b/sound/usb/endpoint.c
index da649211bff3..a3b9257350ee 100644
--- a/sound/usb/endpoint.c
+++ b/sound/usb/endpoint.c
@@ -1377,7 +1377,7 @@ int snd_usb_endpoint_start(struct snd_usb_endpoint *ep)
 		goto __error;
 
 	if (snd_usb_endpoint_implicit_feedback_sink(ep) &&
-	    !ep->chip->playback_first) {
+	    !(ep->chip->quirk_flags & QUIRK_FLAG_PLAYBACK_FIRST)) {
 		for (i = 0; i < ep->nurbs; i++) {
 			struct snd_urb_ctx *ctx = ep->urb + i;
 			list_add_tail(&ctx->ready_list, &ep->ready_playback_urbs);
diff --git a/sound/usb/implicit.c b/sound/usb/implicit.c
index 590a0dbba7a2..23767a14d126 100644
--- a/sound/usb/implicit.c
+++ b/sound/usb/implicit.c
@@ -171,7 +171,7 @@ static int add_roland_implicit_fb(struct snd_usb_audio *chip,
 	if (!usb_endpoint_is_isoc_in(epd) ||
 	    (epd->bmAttributes & USB_ENDPOINT_SYNCTYPE) != USB_ENDPOINT_SYNC_ASYNC)
 		return 0;
-	chip->playback_first = 1;
+	chip->quirk_flags |= QUIRK_FLAG_PLAYBACK_FIRST;
 	return add_implicit_fb_sync_ep(chip, fmt, epd->bEndpointAddress, 0,
 				       alts->desc.bInterfaceNumber, alts);
 }
@@ -320,7 +320,7 @@ static int audioformat_implicit_fb_quirk(struct snd_usb_audio *chip,
 		case IMPLICIT_FB_FIXED:
 			return 0; /* no quirk */
 		case IMPLICIT_FB_BOTH:
-			chip->playback_first = 1;
+			chip->quirk_flags |= QUIRK_FLAG_PLAYBACK_FIRST;
 			return add_generic_implicit_fb(chip, fmt, alts);
 		}
 	}
@@ -344,7 +344,7 @@ static int audioformat_implicit_fb_quirk(struct snd_usb_audio *chip,
 
 	/* Pioneer devices with vendor spec class */
 	if (is_pioneer_implicit_fb(chip, alts)) {
-		chip->playback_first = 1;
+		chip->quirk_flags |= QUIRK_FLAG_PLAYBACK_FIRST;
 		return add_implicit_fb_sync_ep(chip, fmt,
 					       get_endpoint(alts, 1)->bEndpointAddress,
 					       1, alts->desc.bInterfaceNumber,
* Unmerged path sound/usb/usbaudio.h
