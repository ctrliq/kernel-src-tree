net/mlx5e: Maintain MQPRIO mode parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Tariq Toukan <tariqt@nvidia.com>
commit e2aeac448f06ac6c6bee41a7ebecf814f7a57eef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/e2aeac44.failed

This is in preparation for supporting MQPRIO CHANNEL mode in
downstream patch, in addition to DCB mode that's supported today.

	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Maxim Mikityanskiy <maximmi@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit e2aeac448f06ac6c6bee41a7ebecf814f7a57eef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 73a162266789,3dbcb2cf2ff8..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -252,11 -248,14 +252,18 @@@ struct mlx5e_params 
  	u8  rq_wq_type;
  	u8  log_rq_mtu_frames;
  	u16 num_channels;
++<<<<<<< HEAD
 +	u8  num_tc;
++=======
+ 	struct {
+ 		u16 mode;
+ 		u8 num_tc;
+ 	} mqprio;
++>>>>>>> e2aeac448f06 (net/mlx5e: Maintain MQPRIO mode parameter)
  	bool rx_cqe_compress_def;
 -	bool tunneled_offload_en;
  	struct dim_cq_moder rx_cq_moderation;
  	struct dim_cq_moder tx_cq_moderation;
 +	bool tunneled_offload_en;
  	bool lro_en;
  	u8  tx_min_inline_mode;
  	bool vlan_strip_disable;
@@@ -269,8 -268,15 +276,17 @@@
  	struct mlx5e_xsk *xsk;
  	unsigned int sw_mtu;
  	int hard_mtu;
 -	bool ptp_rx;
  };
  
++<<<<<<< HEAD
++=======
+ static inline u8 mlx5e_get_dcb_num_tc(struct mlx5e_params *params)
+ {
+ 	return params->mqprio.mode == TC_MQPRIO_MODE_DCB ?
+ 		params->mqprio.num_tc : 1;
+ }
+ 
++>>>>>>> e2aeac448f06 (net/mlx5e: Maintain MQPRIO mode parameter)
  enum {
  	MLX5E_RQ_STATE_ENABLED,
  	MLX5E_RQ_STATE_RECOVERING,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 15e30d82e985,0d84eb17707e..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -3365,50 -2847,27 +3365,59 @@@ static int mlx5e_modify_channels_vsd(st
  	return 0;
  }
  
- static int mlx5e_setup_tc_mqprio(struct mlx5e_priv *priv,
- 				 struct tc_mqprio_qopt *mqprio)
+ static int mlx5e_setup_tc_mqprio_dcb(struct mlx5e_priv *priv,
+ 				     struct tc_mqprio_qopt *mqprio)
  {
 -	struct mlx5e_params new_params;
 +	struct mlx5e_channels new_channels = {};
  	u8 tc = mqprio->num_tc;
- 	int err = 0;
+ 	int err;
  
  	mqprio->hw = TC_MQPRIO_HW_OFFLOAD_TCS;
  
  	if (tc && tc != MLX5E_MAX_NUM_TC)
  		return -EINVAL;
  
++<<<<<<< HEAD
 +	mutex_lock(&priv->state_lock);
 +
 +	/* MQPRIO is another toplevel qdisc that can't be attached
 +	 * simultaneously with the offloaded HTB.
 +	 */
 +	if (WARN_ON(priv->htb.maj_id)) {
 +		err = -EINVAL;
 +		goto out;
 +	}
 +
 +	new_channels.params = priv->channels.params;
 +	new_channels.params.num_tc = tc ? tc : 1;
++=======
+ 	new_params = priv->channels.params;
+ 	new_params.mqprio.mode = TC_MQPRIO_MODE_DCB;
+ 	new_params.mqprio.num_tc = tc ? tc : 1;
++>>>>>>> e2aeac448f06 (net/mlx5e: Maintain MQPRIO mode parameter)
 +
 +	if (!test_bit(MLX5E_STATE_OPENED, &priv->state)) {
 +		struct mlx5e_params old_params;
 +
 +		old_params = priv->channels.params;
 +		priv->channels.params = new_channels.params;
 +		err = mlx5e_num_channels_changed(priv);
 +		if (err)
 +			priv->channels.params = old_params;
 +
 +		goto out;
 +	}
  
 -	err = mlx5e_safe_switch_params(priv, &new_params,
 -				       mlx5e_num_channels_changed_ctx, NULL, true);
 +	err = mlx5e_safe_switch_channels(priv, &new_channels,
 +					 mlx5e_num_channels_changed_ctx, NULL);
  
- out:
  	priv->max_opened_tc = max_t(u8, priv->max_opened_tc,
++<<<<<<< HEAD
 +				    priv->channels.params.num_tc);
 +	mutex_unlock(&priv->state_lock);
++=======
+ 				    mlx5e_get_dcb_num_tc(&priv->channels.params));
++>>>>>>> e2aeac448f06 (net/mlx5e: Maintain MQPRIO mode parameter)
  	return err;
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
