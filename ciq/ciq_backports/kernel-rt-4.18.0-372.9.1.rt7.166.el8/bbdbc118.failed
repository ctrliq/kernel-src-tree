arm64/crash_core: Export TCR_EL1.T1SZ in vmcoreinfo

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Bhupesh Sharma <bhsharma@redhat.com>
commit bbdbc11804ff0b4130e7550113b452e96a74d16e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/bbdbc118.failed

TCR_EL1.TxSZ, which controls the VA space size, is configured by a
single kernel image to support either 48-bit or 52-bit VA space.

If the ARMv8.2-LVA optional feature is present and we are running
with a 64KB page size, then it is possible to use 52-bits of address
space for both userspace and kernel addresses. However, any kernel
binary that supports 52-bit must also be able to fall back to 48-bit
at early boot time if the hardware feature is not present.

Since TCR_EL1.T1SZ indicates the size of the memory region addressed by
TTBR1_EL1, export the same in vmcoreinfo. User-space utilities like
makedumpfile and crash-utility need to read this value from vmcoreinfo
for determining if a virtual address lies in the linear map range.

While at it also add documentation for TCR_EL1.T1SZ variable being
added to vmcoreinfo.

It indicates the size offset of the memory region addressed by
TTBR1_EL1.

	Signed-off-by: Bhupesh Sharma <bhsharma@redhat.com>
	Tested-by: John Donnelly <john.p.donnelly@oracle.com>
	Tested-by: Kamlakant Patel <kamlakantp@marvell.com>
	Tested-by: Amit Daniel Kachhap <amit.kachhap@arm.com>
	Reviewed-by: James Morse <james.morse@arm.com>
	Reviewed-by: Amit Daniel Kachhap <amit.kachhap@arm.com>
	Cc: James Morse <james.morse@arm.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Steve Capper <steve.capper@arm.com>
	Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
	Cc: Dave Anderson <anderson@redhat.com>
	Cc: Kazuhito Hagio <k-hagio@ab.jp.nec.com>
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: linux-kernel@vger.kernel.org
	Cc: kexec@lists.infradead.org
Link: https://lore.kernel.org/r/1589395957-24628-3-git-send-email-bhsharma@redhat.com
[catalin.marinas@arm.com: removed vabits_actual from the commit log]
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit bbdbc11804ff0b4130e7550113b452e96a74d16e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/admin-guide/kdump/vmcoreinfo.rst
#	arch/arm64/kernel/crash_core.c
* Unmerged path Documentation/admin-guide/kdump/vmcoreinfo.rst
* Unmerged path arch/arm64/kernel/crash_core.c
* Unmerged path Documentation/admin-guide/kdump/vmcoreinfo.rst
diff --git a/arch/arm64/include/asm/pgtable-hwdef.h b/arch/arm64/include/asm/pgtable-hwdef.h
index e3259ae8eb70..d76e5972ed97 100644
--- a/arch/arm64/include/asm/pgtable-hwdef.h
+++ b/arch/arm64/include/asm/pgtable-hwdef.h
@@ -227,6 +227,7 @@
 #define TCR_TxSZ(x)		(TCR_T0SZ(x) | TCR_T1SZ(x))
 #define TCR_TxSZ_WIDTH		6
 #define TCR_T0SZ_MASK		(((UL(1) << TCR_TxSZ_WIDTH) - 1) << TCR_T0SZ_OFFSET)
+#define TCR_T1SZ_MASK		(((UL(1) << TCR_TxSZ_WIDTH) - 1) << TCR_T1SZ_OFFSET)
 
 #define TCR_EPD0_SHIFT		7
 #define TCR_EPD0_MASK		(UL(1) << TCR_EPD0_SHIFT)
* Unmerged path arch/arm64/kernel/crash_core.c
