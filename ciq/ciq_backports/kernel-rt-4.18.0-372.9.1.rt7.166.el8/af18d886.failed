ice: reduce time to read Option ROM CIVD data

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.9.1.rt7.166.el8
commit-author Jacob Keller <jacob.e.keller@intel.com>
commit af18d8866c8013fadca37a3db0162fbc5c4fc9c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.9.1.rt7.166.el8/af18d886.failed

During probe and device reset, the ice driver reads some data from the
NVM image as part of ice_init_nvm. Part of this data includes a section
of the Option ROM which contains version information.

The function ice_get_orom_civd_data is used to locate the '$CIV' data
section of the Option ROM.

Timing of ice_probe and ice_rebuild indicate that the
ice_get_orom_civd_data function takes about 10 seconds to finish
executing.

The function locates the section by scanning the Option ROM every 512
bytes. This requires a significant number of NVM read accesses, since
the Option ROM bank is 500KB. In the worst case it would take about 1000
reads. Worse, all PFs serialize this operation during reload because of
acquiring the NVM semaphore.

The CIVD section is located at the end of the Option ROM image data.
Unfortunately, the driver has no easy method to determine the offset
manually. Practical experiments have shown that the data could be at
a variety of locations, so simply reversing the scanning order is not
sufficient to reduce the overall read time.

Instead, copy the entire contents of the Option ROM into memory. This
allows reading the data using 4Kb pages instead of 512 bytes at a time.
This reduces the total number of firmware commands by a factor of 8. In
addition, reading the whole section together at once allows better
indication to firmware of when we're "done".

Re-write ice_get_orom_civd_data to allocate virtual memory to store the
Option ROM data. Copy the entire OptionROM contents at once using
ice_read_flash_module. Finally, use this memory copy to scan for the
'$CIV' section.

This change significantly reduces the time to read the Option ROM CIVD
section from ~10 seconds down to ~1 second. This has a significant
impact on the total time to complete a driver rebuild or probe.

	Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
	Tested-by: Gurucharan G <gurucharanx.g@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit af18d8866c8013fadca37a3db0162fbc5c4fc9c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_nvm.c
diff --cc drivers/net/ethernet/intel/ice/ice_nvm.c
index fee37a5844cf,f3fe6829c3df..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_nvm.c
+++ b/drivers/net/ethernet/intel/ice/ice_nvm.c
@@@ -619,8 -615,8 +619,13 @@@ static enum ice_statu
  ice_get_orom_civd_data(struct ice_hw *hw, enum ice_bank_select bank,
  		       struct ice_orom_civd_info *civd)
  {
++<<<<<<< HEAD
 +	struct ice_orom_civd_info tmp;
 +	enum ice_status status;
++=======
+ 	u8 *orom_data;
+ 	int status;
++>>>>>>> af18d8866c80 (ice: reduce time to read Option ROM CIVD data)
  	u32 offset;
  
  	/* The CIVD section is located in the Option ROM aligned to 512 bytes.
@@@ -650,14 -665,19 +674,27 @@@
  		if (sum) {
  			ice_debug(hw, ICE_DBG_NVM, "Found CIVD data with invalid checksum of %u\n",
  				  sum);
++<<<<<<< HEAD
 +			return ICE_ERR_NVM;
++=======
+ 			goto err_invalid_checksum;
++>>>>>>> af18d8866c80 (ice: reduce time to read Option ROM CIVD data)
  		}
  
- 		*civd = tmp;
+ 		*civd = *tmp;
+ 		vfree(orom_data);
  		return 0;
  	}
  
++<<<<<<< HEAD
 +	return ICE_ERR_NVM;
++=======
+ 	ice_debug(hw, ICE_DBG_NVM, "Unable to locate CIVD data within the Option ROM\n");
+ 
+ err_invalid_checksum:
+ 	vfree(orom_data);
+ 	return -EIO;
++>>>>>>> af18d8866c80 (ice: reduce time to read Option ROM CIVD data)
  }
  
  /**
* Unmerged path drivers/net/ethernet/intel/ice/ice_nvm.c
