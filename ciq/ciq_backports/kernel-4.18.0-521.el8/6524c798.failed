driver core: cpu: Make cpu_show_not_affected() static

jira LE-1907
cve CVE-2023-20569
Rebuild_History Non-Buildable kernel-4.18.0-521.el8
commit-author Borislav Petkov (AMD) <bp@alien8.de>
commit 6524c798b727ffdb5c7eaed2f50e8e839997df8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-521.el8/6524c798.failed

Fix a -Wmissing-prototypes warning and add the gather_data_sampling()
stub macro call for real.

Fixes: 0fddfe338210 ("driver core: cpu: Unify redundant silly stubs")
Closes: https://lore.kernel.org/oe-kbuild-all/202308101956.oRj1ls7s-lkp@intel.com
	Reported-by: kernel test robot <lkp@intel.com>
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
Link: https://lore.kernel.org/r/202308101956.oRj1ls7s-lkp@intel.com
(cherry picked from commit 6524c798b727ffdb5c7eaed2f50e8e839997df8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/cpu.c
diff --cc drivers/base/cpu.c
index 87400da7f43b,d7300d885822..000000000000
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@@ -507,80 -509,31 +507,78 @@@ static void __init cpu_dev_register_gen
  }
  
  #ifdef CONFIG_GENERIC_CPU_VULNERABILITIES
++<<<<<<< HEAD
 +
 +ssize_t __weak cpu_show_meltdown(struct device *dev,
 +				 struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_spectre_v1(struct device *dev,
 +				   struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_spectre_v2(struct device *dev,
 +				   struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_spec_store_bypass(struct device *dev,
 +					  struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_l1tf(struct device *dev,
 +			     struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_mds(struct device *dev,
 +			    struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_tsx_async_abort(struct device *dev,
 +					struct device_attribute *attr,
 +					char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_itlb_multihit(struct device *dev,
 +				      struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_srbds(struct device *dev,
++=======
+ static ssize_t cpu_show_not_affected(struct device *dev,
++>>>>>>> 6524c798b727 (driver core: cpu: Make cpu_show_not_affected() static)
  			      struct device_attribute *attr, char *buf)
  {
  	return sysfs_emit(buf, "Not affected\n");
  }
  
 -#define CPU_SHOW_VULN_FALLBACK(func)					\
 -	ssize_t cpu_show_##func(struct device *,			\
 -				  struct device_attribute *, char *)	\
 -		 __attribute__((weak, alias("cpu_show_not_affected")))
 -
 -CPU_SHOW_VULN_FALLBACK(meltdown);
 -CPU_SHOW_VULN_FALLBACK(spectre_v1);
 -CPU_SHOW_VULN_FALLBACK(spectre_v2);
 -CPU_SHOW_VULN_FALLBACK(spec_store_bypass);
 -CPU_SHOW_VULN_FALLBACK(l1tf);
 -CPU_SHOW_VULN_FALLBACK(mds);
 -CPU_SHOW_VULN_FALLBACK(tsx_async_abort);
 -CPU_SHOW_VULN_FALLBACK(itlb_multihit);
 -CPU_SHOW_VULN_FALLBACK(srbds);
 -CPU_SHOW_VULN_FALLBACK(mmio_stale_data);
 -CPU_SHOW_VULN_FALLBACK(retbleed);
 -CPU_SHOW_VULN_FALLBACK(spec_rstack_overflow);
 -CPU_SHOW_VULN_FALLBACK(gather_data_sampling);
 +ssize_t __weak cpu_show_mmio_stale_data(struct device *dev,
 +					struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
 +ssize_t __weak cpu_show_retbleed(struct device *dev,
 +				 struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
  
- ssize_t __weak cpu_show_gds(struct device *dev,
- 			    struct device_attribute *attr, char *buf)
- {
- 	return sysfs_emit(buf, "Not affected\n");
- }
- 
  static DEVICE_ATTR(meltdown, 0444, cpu_show_meltdown, NULL);
  static DEVICE_ATTR(spectre_v1, 0444, cpu_show_spectre_v1, NULL);
  static DEVICE_ATTR(spectre_v2, 0444, cpu_show_spectre_v2, NULL);
@@@ -592,7 -545,8 +590,12 @@@ static DEVICE_ATTR(itlb_multihit, 0444
  static DEVICE_ATTR(srbds, 0444, cpu_show_srbds, NULL);
  static DEVICE_ATTR(mmio_stale_data, 0444, cpu_show_mmio_stale_data, NULL);
  static DEVICE_ATTR(retbleed, 0444, cpu_show_retbleed, NULL);
++<<<<<<< HEAD
 +static DEVICE_ATTR(gather_data_sampling, 0444, cpu_show_gds, NULL);
++=======
+ static DEVICE_ATTR(spec_rstack_overflow, 0444, cpu_show_spec_rstack_overflow, NULL);
+ static DEVICE_ATTR(gather_data_sampling, 0444, cpu_show_gather_data_sampling, NULL);
++>>>>>>> 6524c798b727 (driver core: cpu: Make cpu_show_not_affected() static)
  
  static struct attribute *cpu_root_vulnerabilities_attrs[] = {
  	&dev_attr_meltdown.attr,
* Unmerged path drivers/base/cpu.c
