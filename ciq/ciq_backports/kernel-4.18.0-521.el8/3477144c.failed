driver core: cpu: Fix the fallback cpu_show_gds() name

jira LE-1907
cve CVE-2023-20569
Rebuild_History Non-Buildable kernel-4.18.0-521.el8
commit-author Borislav Petkov (AMD) <bp@alien8.de>
commit 3477144c878a52fc3938a529186e81ea030e7779
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-521.el8/3477144c.failed

In

  6524c798b727 ("driver core: cpu: Make cpu_show_not_affected() static")

I fat-fingered the name of cpu_show_gds(). Usually, I'd rebase but since
those are extraordinary embargoed times, the commit above was already
pulled into another tree so no no.

Therefore, fix it ontop.

Fixes: 6524c798b727 ("driver core: cpu: Make cpu_show_not_affected() static")
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
Link: https://lore.kernel.org/r/20230811095831.27513-1-bp@alien8.de
(cherry picked from commit 3477144c878a52fc3938a529186e81ea030e7779)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/cpu.c
diff --cc drivers/base/cpu.c
index 87400da7f43b,fe6690ecf563..000000000000
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@@ -563,23 -515,24 +563,39 @@@ ssize_t __weak cpu_show_srbds(struct de
  	return sysfs_emit(buf, "Not affected\n");
  }
  
 -#define CPU_SHOW_VULN_FALLBACK(func)					\
 -	ssize_t cpu_show_##func(struct device *,			\
 -				  struct device_attribute *, char *)	\
 -		 __attribute__((weak, alias("cpu_show_not_affected")))
 +ssize_t __weak cpu_show_mmio_stale_data(struct device *dev,
 +					struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
 +
++<<<<<<< HEAD
 +ssize_t __weak cpu_show_retbleed(struct device *dev,
 +				 struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
  
 +ssize_t __weak cpu_show_gds(struct device *dev,
 +			    struct device_attribute *attr, char *buf)
 +{
 +	return sysfs_emit(buf, "Not affected\n");
 +}
++=======
+ CPU_SHOW_VULN_FALLBACK(meltdown);
+ CPU_SHOW_VULN_FALLBACK(spectre_v1);
+ CPU_SHOW_VULN_FALLBACK(spectre_v2);
+ CPU_SHOW_VULN_FALLBACK(spec_store_bypass);
+ CPU_SHOW_VULN_FALLBACK(l1tf);
+ CPU_SHOW_VULN_FALLBACK(mds);
+ CPU_SHOW_VULN_FALLBACK(tsx_async_abort);
+ CPU_SHOW_VULN_FALLBACK(itlb_multihit);
+ CPU_SHOW_VULN_FALLBACK(srbds);
+ CPU_SHOW_VULN_FALLBACK(mmio_stale_data);
+ CPU_SHOW_VULN_FALLBACK(retbleed);
+ CPU_SHOW_VULN_FALLBACK(spec_rstack_overflow);
+ CPU_SHOW_VULN_FALLBACK(gds);
++>>>>>>> 3477144c878a (driver core: cpu: Fix the fallback cpu_show_gds() name)
  
  static DEVICE_ATTR(meltdown, 0444, cpu_show_meltdown, NULL);
  static DEVICE_ATTR(spectre_v1, 0444, cpu_show_spectre_v1, NULL);
@@@ -592,6 -545,7 +608,10 @@@ static DEVICE_ATTR(itlb_multihit, 0444
  static DEVICE_ATTR(srbds, 0444, cpu_show_srbds, NULL);
  static DEVICE_ATTR(mmio_stale_data, 0444, cpu_show_mmio_stale_data, NULL);
  static DEVICE_ATTR(retbleed, 0444, cpu_show_retbleed, NULL);
++<<<<<<< HEAD
++=======
+ static DEVICE_ATTR(spec_rstack_overflow, 0444, cpu_show_spec_rstack_overflow, NULL);
++>>>>>>> 3477144c878a (driver core: cpu: Fix the fallback cpu_show_gds() name)
  static DEVICE_ATTR(gather_data_sampling, 0444, cpu_show_gds, NULL);
  
  static struct attribute *cpu_root_vulnerabilities_attrs[] = {
* Unmerged path drivers/base/cpu.c
