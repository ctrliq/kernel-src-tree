x86/srso: Don't probe microcode in a guest

jira LE-1907
cve CVE-2023-20569
Rebuild_History Non-Buildable kernel-4.18.0-521.el8
commit-author Josh Poimboeuf <jpoimboe@kernel.org>
commit 02428d0366a27c2f33bc4361eb10467777804f29
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-521.el8/02428d03.failed

To support live migration, the hypervisor sets the "lowest common
denominator" of features.  Probing the microcode isn't allowed because
any detected features might go away after a migration.

As Andy Cooper states:

  "Linux must not probe microcode when virtualised.Â  What it may see
  instantaneously on boot (owing to MSR_PRED_CMD being fully passed
  through) is not accurate for the lifetime of the VM."

Rely on the hypervisor to set the needed IBPB_BRTYPE and SBPB bits.

Fixes: 1b5277c0ea0b ("x86/srso: Add SRSO_NO support")
	Suggested-by: Andrew Cooper <andrew.cooper3@citrix.com>
	Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
	Reviewed-by: Andrew Cooper <andrew.cooper3@citrix.com>
	Acked-by: Borislav Petkov (AMD) <bp@alien8.de>
Link: https://lore.kernel.org/r/3938a7209606c045a3f50305d201d840e8c834c7.1693889988.git.jpoimboe@kernel.org
(cherry picked from commit 02428d0366a27c2f33bc4361eb10467777804f29)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
diff --cc arch/x86/kernel/cpu/amd.c
index 446d0438e49b,03ef962a6992..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -807,6 -766,15 +807,18 @@@ static void early_init_amd(struct cpuin
  
  	if (cpu_has(c, X86_FEATURE_TOPOEXT))
  		smp_num_siblings = ((cpuid_ebx(0x8000001e) >> 8) & 0xff) + 1;
++<<<<<<< HEAD
++=======
+ 
+ 	if (!cpu_has(c, X86_FEATURE_HYPERVISOR) && !cpu_has(c, X86_FEATURE_IBPB_BRTYPE)) {
+ 		if (c->x86 == 0x17 && boot_cpu_has(X86_FEATURE_AMD_IBPB))
+ 			setup_force_cpu_cap(X86_FEATURE_IBPB_BRTYPE);
+ 		else if (c->x86 >= 0x19 && !wrmsrl_safe(MSR_IA32_PRED_CMD, PRED_CMD_SBPB)) {
+ 			setup_force_cpu_cap(X86_FEATURE_IBPB_BRTYPE);
+ 			setup_force_cpu_cap(X86_FEATURE_SBPB);
+ 		}
+ 	}
++>>>>>>> 02428d0366a2 (x86/srso: Don't probe microcode in a guest)
  }
  
  static void init_amd_k8(struct cpuinfo_x86 *c)
* Unmerged path arch/x86/kernel/cpu/amd.c
