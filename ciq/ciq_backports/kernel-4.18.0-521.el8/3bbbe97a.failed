x86/srso: Add a forgotten NOENDBR annotation

jira LE-1907
cve CVE-2023-20569
Rebuild_History Non-Buildable kernel-4.18.0-521.el8
commit-author Borislav Petkov (AMD) <bp@alien8.de>
commit 3bbbe97ad83db8d9df06daf027b0840188de625d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-521.el8/3bbbe97a.failed

Fix:

  vmlinux.o: warning: objtool: .export_symbol+0x29e40: data relocation to !ENDBR: srso_untrain_ret_alias+0x0

	Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
(cherry picked from commit 3bbbe97ad83db8d9df06daf027b0840188de625d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/lib/retpoline.S
diff --cc arch/x86/lib/retpoline.S
index ce2b806fe45d,2cff585f22f2..000000000000
--- a/arch/x86/lib/retpoline.S
+++ b/arch/x86/lib/retpoline.S
@@@ -53,6 -132,46 +53,49 @@@ GENERATE_THUNK(r15
   */
  #ifdef CONFIG_RETHUNK
  
++<<<<<<< HEAD
++=======
+ /*
+  * srso_untrain_ret_alias() and srso_safe_ret_alias() are placed at
+  * special addresses:
+  *
+  * - srso_untrain_ret_alias() is 2M aligned
+  * - srso_safe_ret_alias() is also in the same 2M page but bits 2, 8, 14
+  * and 20 in its virtual address are set (while those bits in the
+  * srso_untrain_ret_alias() function are cleared).
+  *
+  * This guarantees that those two addresses will alias in the branch
+  * target buffer of Zen3/4 generations, leading to any potential
+  * poisoned entries at that BTB slot to get evicted.
+  *
+  * As a result, srso_safe_ret_alias() becomes a safe return.
+  */
+ #ifdef CONFIG_CPU_SRSO
+ 	.section .text.__x86.rethunk_untrain
+ 
+ SYM_START(srso_untrain_ret_alias, SYM_L_GLOBAL, SYM_A_NONE)
+ 	ANNOTATE_NOENDBR
+ 	ASM_NOP2
+ 	lfence
+ 	jmp __x86_return_thunk
+ SYM_FUNC_END(srso_untrain_ret_alias)
+ __EXPORT_THUNK(srso_untrain_ret_alias)
+ 
+ 	.section .text.__x86.rethunk_safe
+ #endif
+ 
+ /* Needs a definition for the __x86_return_thunk alternative below. */
+ SYM_START(srso_safe_ret_alias, SYM_L_GLOBAL, SYM_A_NONE)
+ #ifdef CONFIG_CPU_SRSO
+ 	add $8, %_ASM_SP
+ 	UNWIND_HINT_FUNC
+ #endif
+ 	ANNOTATE_UNRET_SAFE
+ 	ret
+ 	int3
+ SYM_FUNC_END(srso_safe_ret_alias)
+ 
++>>>>>>> 3bbbe97ad83d (x86/srso: Add a forgotten NOENDBR annotation)
  	.section .text.__x86.return_thunk
  
  /*
* Unmerged path arch/x86/lib/retpoline.S
