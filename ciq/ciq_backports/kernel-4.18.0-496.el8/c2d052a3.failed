wifi: mac80211: Process association status for affiliated links

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-496.el8
commit-author Ilan Peer <ilan.peer@intel.com>
commit c2d052a3c41aa7815714a18911819efde0d7d384
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-496.el8/c2d052a3.failed

In case the AP returned a non success status for one of the links,
do not activate the link.

	Signed-off-by: Ilan Peer <ilan.peer@intel.com>
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit c2d052a3c41aa7815714a18911819efde0d7d384)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/mlme.c
diff --cc net/mac80211/mlme.c
index 0125b3e6175b,2e4bb75c68c0..000000000000
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@@ -3942,8 -3945,35 +3944,40 @@@ static bool ieee80211_assoc_config_link
  	if (!elems)
  		return false;
  
++<<<<<<< HEAD
 +	/* FIXME: use from STA profile element after parsing that */
 +	capab_info = le16_to_cpu(mgmt->u.assoc_resp.capab_info);
++=======
+ 	if (link_id == assoc_data->assoc_link_id) {
+ 		capab_info = le16_to_cpu(mgmt->u.assoc_resp.capab_info);
+ 
+ 		/*
+ 		 * we should not get to this flow unless the association was
+ 		 * successful, so set the status directly to success
+ 		 */
+ 		assoc_data->link[link_id].status = WLAN_STATUS_SUCCESS;
+ 	} else if (!elems->prof) {
+ 		ret = false;
+ 		goto out;
+ 	} else {
+ 		const u8 *ptr = elems->prof->variable +
+ 				elems->prof->sta_info_len - 1;
+ 
+ 		/*
+ 		 * During parsing, we validated that these fields exist,
+ 		 * otherwise elems->prof would have been set to NULL.
+ 		 */
+ 		capab_info = get_unaligned_le16(ptr);
+ 		assoc_data->link[link_id].status = get_unaligned_le16(ptr + 2);
+ 
+ 		if (assoc_data->link[link_id].status != WLAN_STATUS_SUCCESS) {
+ 			link_info(link, "association response status code=%u\n",
+ 				  assoc_data->link[link_id].status);
+ 			ret = true;
+ 			goto out;
+ 		}
+ 	}
++>>>>>>> c2d052a3c41a (wifi: mac80211: Process association status for affiliated links)
  
  	if (!is_s1g && !elems->supp_rates) {
  		sdata_info(sdata, "no SuppRates element in AssocResp\n");
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index f9001c90abd9..069ed577909b 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -413,6 +413,8 @@ struct ieee80211_mgd_assoc_data {
 		u8 *elems; /* pointing to inside ie[] below */
 
 		ieee80211_conn_flags_t conn_flags;
+
+		u16 status;
 	} link[IEEE80211_MLD_MAX_NUM_LINKS];
 
 	u8 ap_addr[ETH_ALEN] __aligned(2);
* Unmerged path net/mac80211/mlme.c
