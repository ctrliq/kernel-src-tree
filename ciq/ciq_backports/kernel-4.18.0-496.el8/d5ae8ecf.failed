Documentation: networking: TC queue based filtering

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-496.el8
commit-author Amritha Nambiar <amritha.nambiar@intel.com>
commit d5ae8ecf38322f2072bbd46ffd0d0adf309c11f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-496.el8/d5ae8ecf.failed

Add tc-queue-filters.rst with notes on TC filters for
selecting a set of queues and/or a queue.

	Signed-off-by: Amritha Nambiar <amritha.nambiar@intel.com>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit d5ae8ecf38322f2072bbd46ffd0d0adf309c11f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/index.rst
diff --cc Documentation/networking/index.rst
index 6e4f6dcc09bb,4f2d1f682a18..000000000000
--- a/Documentation/networking/index.rst
+++ b/Documentation/networking/index.rst
@@@ -11,27 -13,115 +11,36 @@@ Contents
     batman-adv
     can
     can_ucan_protocol
 -   device_drivers/index
 -   dsa/index
 -   devlink/index
 -   caif/index
 +   dpaa2/index
 +   e100
 +   e1000
 +   device_drivers/google/gve.rst
     ethtool-netlink
 -   ieee802154
 -   j1939
     kapi
 +   z8530book
     msg_zerocopy
 -   failover
 -   net_dim
 -   net_failover
 -   page_pool
     phy
     sfp-phylink
 -   alias
     bridge
 -   snmp_counter
 -   checksum-offloads
 -   segmentation-offloads
 -   scaling
     tls
     tls-offload
 -   nfc
 -   6lowpan
 -   6pack
 -   arcnet-hardware
 -   arcnet
 -   atm
 -   ax25
 -   bonding
 -   cdc_mbim
 -   dccp
 -   dctcp
 -   dns_resolver
 -   driver
 -   eql
 -   fib_trie
     filter
 -   generic-hdlc
 -   generic_netlink
 -   gen_stats
 -   gtp
 -   ila
 -   ioam6-sysctl
 -   ipddp
 -   ip_dynaddr
 -   ipsec
 -   ip-sysctl
 -   ipv6
 -   ipvlan
 -   ipvs-sysctl
 -   kcm
 -   l2tp
 -   lapb-module
 -   mac80211-injection
 -   mctp
 -   mpls-sysctl
     mptcp-sysctl
 -   multiqueue
 -   netconsole
 -   netdev-features
 -   netdevices
 -   netfilter-sysctl
 -   netif-msg
 -   nexthop-group-resilient
 -   nf_conntrack-sysctl
 -   nf_flowtable
 -   openvswitch
 -   operstates
 -   packet_mmap
 -   phonet
 -   pktgen
 -   plip
 -   ppp_generic
 -   proc_net_tcp
 -   radiotap-headers
 -   rds
 -   regulatory
 -   representors
 -   rxrpc
 -   sctp
 -   secid
 -   seg6-sysctl
 -   skbuff
 -   smc-sysctl
     statistics
 -   strparser
     switchdev
++<<<<<<< HEAD
++=======
+    sysfs-tagging
+    tc-actions-env-rules
+    tc-queue-filters
+    tcp-thin
+    team
+    timestamping
++>>>>>>> d5ae8ecf3832 (Documentation: networking: TC queue based filtering)
     tipc
 -   tproxy
 -   tuntap
 -   udplite
 -   vrf
     vxlan
 -   x25-iface
 -   x25
 -   xfrm_device
 -   xfrm_proc
 -   xfrm_sync
 -   xfrm_sysctl
  
 -.. only::  subproject and html
 +.. only::  subproject
  
     Indices
     =======
* Unmerged path Documentation/networking/index.rst
diff --git a/Documentation/networking/tc-queue-filters.rst b/Documentation/networking/tc-queue-filters.rst
new file mode 100644
index 000000000000..6b417092276f
--- /dev/null
+++ b/Documentation/networking/tc-queue-filters.rst
@@ -0,0 +1,37 @@
+.. SPDX-License-Identifier: GPL-2.0
+
+=========================
+TC queue based filtering
+=========================
+
+TC can be used for directing traffic to either a set of queues or
+to a single queue on both the transmit and receive side.
+
+On the transmit side:
+
+1) TC filter directing traffic to a set of queues is achieved
+   using the action skbedit priority for Tx priority selection,
+   the priority maps to a traffic class (set of queues) when
+   the queue-sets are configured using mqprio.
+
+2) TC filter directs traffic to a transmit queue with the action
+   skbedit queue_mapping $tx_qid. The action skbedit queue_mapping
+   for transmit queue is executed in software only and cannot be
+   offloaded.
+
+Likewise, on the receive side, the two filters for selecting set of
+queues and/or a single queue are supported as below:
+
+1) TC flower filter directs incoming traffic to a set of queues using
+   the 'hw_tc' option.
+   hw_tc $TCID - Specify a hardware traffic class to pass matching
+   packets on to. TCID is in the range 0 through 15.
+
+2) TC filter with action skbedit queue_mapping $rx_qid selects a
+   receive queue. The action skbedit queue_mapping for receive queue
+   is supported only in hardware. Multiple filters may compete in
+   the hardware for queue selection. In such case, the hardware
+   pipeline resolves conflicts based on priority. On Intel E810
+   devices, TC filter directing traffic to a queue have higher
+   priority over flow director filter assigning a queue. The hash
+   filter has lowest priority.
