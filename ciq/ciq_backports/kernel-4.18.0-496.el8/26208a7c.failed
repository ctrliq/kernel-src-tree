md/raid10: fix leak of 'r10bio->remaining' for recovery

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-496.el8
commit-author Yu Kuai <yukuai3@huawei.com>
commit 26208a7cffd0c7cbf14237ccd20c7270b3ffeb7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-496.el8/26208a7c.failed

raid10_sync_request() will add 'r10bio->remaining' for both rdev and
replacement rdev. However, if the read io fails, recovery_request_write()
returns without issuing the write io, in this case, end_sync_request()
is only called once and 'remaining' is leaked, cause an io hang.

Fix the problem by decreasing 'remaining' according to if 'bio' and
'repl_bio' is valid.

Fixes: 24afd80d99f8 ("md/raid10: handle recovery of replacement devices.")
	Signed-off-by: Yu Kuai <yukuai3@huawei.com>
	Signed-off-by: Song Liu <song@kernel.org>
Link: https://lore.kernel.org/r/20230310073855.1337560-5-yukuai1@huaweicloud.com
(cherry picked from commit 26208a7cffd0c7cbf14237ccd20c7270b3ffeb7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid10.c
diff --cc drivers/md/raid10.c
index cc154921bcab,82f2277d7bcf..000000000000
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@@ -2681,14 -2639,6 +2692,17 @@@ static void recovery_request_write(stru
  	 * and submit the write request
  	 */
  	d = r10_bio->devs[1].devnum;
++<<<<<<< HEAD
 +	wbio = r10_bio->devs[1].bio;
 +	wbio2 = r10_bio->devs[1].repl_bio;
 +	/* Need to test wbio2->bi_end_io before we call
 +	 * generic_make_request as if the former is NULL,
 +	 * the latter is free to free wbio2.
 +	 */
 +	if (wbio2 && !wbio2->bi_end_io)
 +		wbio2 = NULL;
++=======
++>>>>>>> 26208a7cffd0 (md/raid10: fix leak of 'r10bio->remaining' for recovery)
  	if (wbio->bi_end_io) {
  		atomic_inc(&conf->mirrors[d].rdev->nr_pending);
  		md_sync_acct(conf->mirrors[d].rdev->bdev, bio_sectors(wbio));
* Unmerged path drivers/md/raid10.c
