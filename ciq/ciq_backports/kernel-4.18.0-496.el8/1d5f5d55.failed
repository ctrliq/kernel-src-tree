wifi: mt76: dma: add reset to mt76_dma_wed_setup signature

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-496.el8
commit-author Sujuan Chen <sujuan.chen@mediatek.com>
commit 1d5f5d55ef08b91e7ada0488733cb4af4bbcd538
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-496.el8/1d5f5d55.failed

Export mt76_dma_wed_setup routine. This is a preliminary patch to
introduce proper wed reset support.

	Tested-by: Daniel Golle <daniel@makrotopia.org>
Co-developed-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
	Signed-off-by: Sujuan Chen <sujuan.chen@mediatek.com>
	Signed-off-by: Felix Fietkau <nbd@nbd.name>
(cherry picked from commit 1d5f5d55ef08b91e7ada0488733cb4af4bbcd538)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/mediatek/mt76/dma.c
diff --cc drivers/net/wireless/mediatek/mt76/dma.c
index 9d738bdc4bc2,b3965ed1f4e5..000000000000
--- a/drivers/net/wireless/mediatek/mt76/dma.c
+++ b/drivers/net/wireless/mediatek/mt76/dma.c
@@@ -627,7 -648,7 +630,11 @@@ int mt76_dma_wed_setup(struct mt76_dev 
  
  	switch (type) {
  	case MT76_WED_Q_TX:
++<<<<<<< HEAD
 +		ret = mtk_wed_device_tx_ring_setup(wed, ring, q->regs);
++=======
+ 		ret = mtk_wed_device_tx_ring_setup(wed, ring, q->regs, reset);
++>>>>>>> 1d5f5d55ef08 (wifi: mt76: dma: add reset to mt76_dma_wed_setup signature)
  		if (!ret)
  			q->wed_regs = wed->tx_ring[ring].reg_base;
  		break;
@@@ -643,7 -664,7 +650,11 @@@
  			q->wed_regs = wed->txfree_ring.reg_base;
  		break;
  	case MT76_WED_Q_RX:
++<<<<<<< HEAD
 +		ret = mtk_wed_device_rx_ring_setup(wed, ring, q->regs);
++=======
+ 		ret = mtk_wed_device_rx_ring_setup(wed, ring, q->regs, reset);
++>>>>>>> 1d5f5d55ef08 (wifi: mt76: dma: add reset to mt76_dma_wed_setup signature)
  		if (!ret)
  			q->wed_regs = wed->rx_ring[ring].reg_base;
  		break;
@@@ -682,7 -704,11 +694,15 @@@ mt76_dma_alloc_queue(struct mt76_dev *d
  	if (!q->entry)
  		return -ENOMEM;
  
++<<<<<<< HEAD
 +	ret = mt76_dma_wed_setup(dev, q);
++=======
+ 	ret = mt76_create_page_pool(dev, q);
+ 	if (ret)
+ 		return ret;
+ 
+ 	ret = mt76_dma_wed_setup(dev, q, false);
++>>>>>>> 1d5f5d55ef08 (wifi: mt76: dma: add reset to mt76_dma_wed_setup signature)
  	if (ret)
  		return ret;
  
* Unmerged path drivers/net/wireless/mediatek/mt76/dma.c
diff --git a/drivers/net/wireless/mediatek/mt76/dma.h b/drivers/net/wireless/mediatek/mt76/dma.h
index 53c6ce2528b2..4b9bc7f462b8 100644
--- a/drivers/net/wireless/mediatek/mt76/dma.h
+++ b/drivers/net/wireless/mediatek/mt76/dma.h
@@ -56,5 +56,6 @@ enum mt76_mcu_evt_type {
 int mt76_dma_rx_poll(struct napi_struct *napi, int budget);
 void mt76_dma_attach(struct mt76_dev *dev);
 void mt76_dma_cleanup(struct mt76_dev *dev);
+int mt76_dma_wed_setup(struct mt76_dev *dev, struct mt76_queue *q, bool reset);
 
 #endif
