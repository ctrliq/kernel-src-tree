net/sched: taprio: fix calculation of maximum gate durations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-496.el8
commit-author Vladimir Oltean <vladimir.oltean@nxp.com>
commit 09dbdf28f9f9fa27e16895c67fbd94ff36124766
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-496.el8/09dbdf28.failed

taprio_calculate_gate_durations() depends on netdev_get_num_tc() and
this returns 0. So it calculates the maximum gate durations for no
traffic class.

I had tested the blamed commit only with another patch in my tree, one
which in the end I decided isn't valuable enough to submit ("net/sched:
taprio: mask off bits in gate mask that exceed number of TCs").

The problem is that having this patch threw off my testing. By moving
the netdev_set_num_tc() call earlier, we implicitly gave to
taprio_calculate_gate_durations() the information it needed.

Extract only the portion from the unsubmitted change which applies the
mqprio configuration to the netdev earlier.

Link: https://patchwork.kernel.org/project/netdevbpf/patch/20230130173145.475943-15-vladimir.oltean@nxp.com/
Fixes: a306a90c8ffe ("net/sched: taprio: calculate tc gate durations")
	Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
	Reviewed-by: Kurt Kanzenbach <kurt@linutronix.de>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit 09dbdf28f9f9fa27e16895c67fbd94ff36124766)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/sch_taprio.c
diff --cc net/sched/sch_taprio.c
index 45d4da9669a4,556e72ec0f38..000000000000
--- a/net/sched/sch_taprio.c
+++ b/net/sched/sch_taprio.c
@@@ -1606,22 -1833,6 +1606,25 @@@ static int taprio_change(struct Qdisc *
  		goto free_sched;
  	}
  
++<<<<<<< HEAD
 +	err = parse_taprio_schedule(q, tb, new_admin, extack);
 +	if (err < 0)
 +		goto free_sched;
 +
 +	if (new_admin->num_entries == 0) {
 +		NL_SET_ERR_MSG(extack, "There should be at least one entry in the schedule");
 +		err = -EINVAL;
 +		goto free_sched;
 +	}
 +
 +	err = taprio_parse_clockid(sch, tb, extack);
 +	if (err < 0)
 +		goto free_sched;
 +
 +	taprio_set_picos_per_byte(dev, q);
 +
++=======
++>>>>>>> 09dbdf28f9f9 (net/sched: taprio: fix calculation of maximum gate durations)
  	if (mqprio) {
  		err = netdev_set_num_tc(dev, mqprio->num_tc);
  		if (err)
* Unmerged path net/sched/sch_taprio.c
