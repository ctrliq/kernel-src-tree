cifs: handle cache lookup errors different than -ENOENT

jira LE-3201
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.32.1.rt7.373.el8_10
commit-author Paulo Alcantara <pc@cjr.nz>
commit 3deddb77fdd932df92f3b6a27a9cffed82c4fe1a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.32.1.rt7.373.el8_10/3deddb77.failed

lookup_cache_entry() might return an error different than -ENOENT
(e.g. from ->char2uni), so handle those as well in
cache_refresh_path().

	Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 3deddb77fdd932df92f3b6a27a9cffed82c4fe1a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/dfs_cache.c
diff --cc fs/cifs/dfs_cache.c
index 1a7da7901e28,308101d90006..000000000000
--- a/fs/cifs/dfs_cache.c
+++ b/fs/cifs/dfs_cache.c
@@@ -662,7 -644,9 +662,13 @@@ static struct cache_entry *__lookup_cac
   *
   * Use whole path components in the match.  Must be called with htable_rw_lock held.
   *
++<<<<<<< HEAD
 + * Return ERR_PTR(-EEXIST) if the entry is not found.
++=======
+  * Return cached entry if successful.
+  * Return ERR_PTR(-ENOENT) if the entry is not found.
+  * Return error ptr otherwise.
++>>>>>>> 3deddb77fdd9 (cifs: handle cache lookup errors different than -ENOENT)
   */
  static struct cache_entry *lookup_cache_entry(const char *path)
  {
@@@ -806,8 -791,13 +812,17 @@@ static struct cache_entry *cache_refres
  	down_read(&htable_rw_lock);
  
  	ce = lookup_cache_entry(path);
++<<<<<<< HEAD
 +	if (!IS_ERR(ce) && !cache_entry_expired(ce))
++=======
+ 	if (!IS_ERR(ce)) {
+ 		if (!force_refresh && !cache_entry_expired(ce))
+ 			return ce;
+ 	} else if (PTR_ERR(ce) != -ENOENT) {
+ 		up_read(&htable_rw_lock);
++>>>>>>> 3deddb77fdd9 (cifs: handle cache lookup errors different than -ENOENT)
  		return ce;
+ 	}
  
  	/*
  	 * Unlock shared access as we don't want to hold any locks while getting
* Unmerged path fs/cifs/dfs_cache.c
