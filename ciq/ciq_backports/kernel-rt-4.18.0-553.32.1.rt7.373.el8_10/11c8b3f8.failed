cifs: don't take exclusive lock for updating target hints

jira LE-3201
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.32.1.rt7.373.el8_10
commit-author Paulo Alcantara <pc@cjr.nz>
commit 11c8b3f8493cb5253da42fcd178d9b4630063f96
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.32.1.rt7.373.el8_10/11c8b3f8.failed

Avoid contention while updating dfs target hints.  This should be
perfectly fine to update them under shared locks.

	Signed-off-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 11c8b3f8493cb5253da42fcd178d9b4630063f96)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/dfs_cache.c
diff --cc fs/cifs/dfs_cache.c
index 1a7da7901e28,19847f9114ba..000000000000
--- a/fs/cifs/dfs_cache.c
+++ b/fs/cifs/dfs_cache.c
@@@ -1128,16 -1100,13 +1122,24 @@@ int dfs_cache_noreq_update_tgthint(cons
  
  	cifs_dbg(FYI, "%s: path: %s\n", __func__, path);
  
++<<<<<<< HEAD
 +	down_write(&htable_rw_lock);
++=======
+ 	down_read(&htable_rw_lock);
++>>>>>>> 11c8b3f8493c (cifs: don't take exclusive lock for updating target hints)
  
  	ce = lookup_cache_entry(path);
 -	if (IS_ERR(ce))
 +	if (IS_ERR(ce)) {
 +		rc = PTR_ERR(ce);
  		goto out_unlock;
 +	}
  
++<<<<<<< HEAD
 +	rc = 0;
 +	t = ce->tgthint;
++=======
+ 	t = READ_ONCE(ce->tgthint);
++>>>>>>> 11c8b3f8493c (cifs: don't take exclusive lock for updating target hints)
  
  	if (unlikely(!strcasecmp(it->it_name, t->name)))
  		goto out_unlock;
@@@ -1152,8 -1121,7 +1154,12 @@@
  	}
  
  out_unlock:
++<<<<<<< HEAD
 +	up_write(&htable_rw_lock);
 +	return rc;
++=======
+ 	up_read(&htable_rw_lock);
++>>>>>>> 11c8b3f8493c (cifs: don't take exclusive lock for updating target hints)
  }
  
  /**
* Unmerged path fs/cifs/dfs_cache.c
