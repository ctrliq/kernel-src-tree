x86/perf: Fix snapshot_branch_stack warning in VM

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Song Liu <songliubraving@fb.com>
commit f3fd84a3b7754b60df67ebfe64e1d90623895111
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/f3fd84a3.failed

When running in VM intel_pmu_snapshot_branch_stack triggers WRMSR warning
like:

 [ ] unchecked MSR access error: WRMSR to 0x3f1 (tried to write 0x0000000000000000) at rIP: 0xffffffff81011a5b (intel_pmu_snapshot_branch_stack+0x3b/0xd0)

This can be triggered with BPF selftests:

  tools/testing/selftests/bpf/test_progs -t get_branch_snapshot

This warning is caused by __intel_pmu_pebs_disable_all() in the VM.
Since it is not necessary to disable PEBS for LBR, remove it from
intel_pmu_snapshot_branch_stack and intel_pmu_snapshot_arch_branch_stack.

Fixes: c22ac2a3d4bd ("perf: Enable branch record for software events")
	Signed-off-by: Song Liu <songliubraving@fb.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Tested-by: Like Xu <likexu@tencent.com>
Link: https://lore.kernel.org/r/20211112054510.2667030-1-songliubraving@fb.com
(cherry picked from commit f3fd84a3b7754b60df67ebfe64e1d90623895111)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/core.c
diff --cc arch/x86/events/intel/core.c
index 909814c9414a,ec6444f2c9dc..000000000000
--- a/arch/x86/events/intel/core.c
+++ b/arch/x86/events/intel/core.c
@@@ -2194,6 -2188,47 +2194,50 @@@ static void intel_pmu_enable_all(int ad
  	__intel_pmu_enable_all(added, false);
  }
  
++<<<<<<< HEAD
++=======
+ static noinline int
+ __intel_pmu_snapshot_branch_stack(struct perf_branch_entry *entries,
+ 				  unsigned int cnt, unsigned long flags)
+ {
+ 	struct cpu_hw_events *cpuc = this_cpu_ptr(&cpu_hw_events);
+ 
+ 	intel_pmu_lbr_read();
+ 	cnt = min_t(unsigned int, cnt, x86_pmu.lbr_nr);
+ 
+ 	memcpy(entries, cpuc->lbr_entries, sizeof(struct perf_branch_entry) * cnt);
+ 	intel_pmu_enable_all(0);
+ 	local_irq_restore(flags);
+ 	return cnt;
+ }
+ 
+ static int
+ intel_pmu_snapshot_branch_stack(struct perf_branch_entry *entries, unsigned int cnt)
+ {
+ 	unsigned long flags;
+ 
+ 	/* must not have branches... */
+ 	local_irq_save(flags);
+ 	__intel_pmu_disable_all(false); /* we don't care about BTS */
+ 	__intel_pmu_lbr_disable();
+ 	/*            ... until here */
+ 	return __intel_pmu_snapshot_branch_stack(entries, cnt, flags);
+ }
+ 
+ static int
+ intel_pmu_snapshot_arch_branch_stack(struct perf_branch_entry *entries, unsigned int cnt)
+ {
+ 	unsigned long flags;
+ 
+ 	/* must not have branches... */
+ 	local_irq_save(flags);
+ 	__intel_pmu_disable_all(false); /* we don't care about BTS */
+ 	__intel_pmu_arch_lbr_disable();
+ 	/*            ... until here */
+ 	return __intel_pmu_snapshot_branch_stack(entries, cnt, flags);
+ }
+ 
++>>>>>>> f3fd84a3b775 (x86/perf: Fix snapshot_branch_stack warning in VM)
  /*
   * Workaround for:
   *   Intel Errata AAK100 (model 26)
* Unmerged path arch/x86/events/intel/core.c
