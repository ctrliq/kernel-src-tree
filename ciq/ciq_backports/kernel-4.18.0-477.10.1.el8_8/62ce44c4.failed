netfilter: ebtables: fix memory leak when blob is malformed

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Florian Westphal <fw@strlen.de>
commit 62ce44c4fff947eebdf10bb582267e686e6835c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/62ce44c4.failed

The bug fix was incomplete, it "replaced" crash with a memory leak.
The old code had an assignment to "ret" embedded into the conditional,
restore this.

Fixes: 7997eff82828 ("netfilter: ebtables: reject blobs that don't provide all entry points")
Reported-and-tested-by: syzbot+a24c5252f3e3ab733464@syzkaller.appspotmail.com
	Signed-off-by: Florian Westphal <fw@strlen.de>
(cherry picked from commit 62ce44c4fff947eebdf10bb582267e686e6835c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bridge/netfilter/ebtables.c
diff --cc net/bridge/netfilter/ebtables.c
index 660f15d17935,4f385d52a1c4..000000000000
--- a/net/bridge/netfilter/ebtables.c
+++ b/net/bridge/netfilter/ebtables.c
@@@ -1033,12 -1040,12 +1033,18 @@@ static int do_replace_finish(struct ne
  		goto free_iterate;
  	}
  
++<<<<<<< HEAD
 +	/* the table doesn't like it */
 +	if (t->check && (ret = t->check(newinfo, repl->valid_hooks)))
++=======
+ 	if (repl->valid_hooks != t->valid_hooks) {
+ 		ret = -EINVAL;
++>>>>>>> 62ce44c4fff9 (netfilter: ebtables: fix memory leak when blob is malformed)
  		goto free_unlock;
+ 	}
  
  	if (repl->num_counters && repl->num_counters != t->private->nentries) {
 +		BUGPRINT("Wrong nr. of counters requested\n");
  		ret = -EINVAL;
  		goto free_unlock;
  	}
* Unmerged path net/bridge/netfilter/ebtables.c
