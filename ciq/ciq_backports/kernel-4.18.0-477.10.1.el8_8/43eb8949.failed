netfilter: nf_tables: do not leave chain stats enabled on error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 43eb8949cfdffa764b92bc6c54b87cbe5b0003fe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/43eb8949.failed

Error might occur later in the nf_tables_addchain() codepath, enable
static key only after transaction has been created.

Fixes: 9f08ea848117 ("netfilter: nf_tables: keep chain counters away from hot path")
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit 43eb8949cfdffa764b92bc6c54b87cbe5b0003fe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index f8960d4da250,72c066a33416..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -1966,17 -2174,36 +1966,17 @@@ static int nft_basechain_init(struct nf
  	return 0;
  }
  
 -static int nft_chain_add(struct nft_table *table, struct nft_chain *chain)
 -{
 -	int err;
 -
 -	err = rhltable_insert_key(&table->chains_ht, chain->name,
 -				  &chain->rhlhead, nft_chain_ht_params);
 -	if (err)
 -		return err;
 -
 -	list_add_tail_rcu(&chain->list, &table->chains);
 -
 -	return 0;
 -}
 -
 -static u64 chain_id;
 -
  static int nf_tables_addchain(struct nft_ctx *ctx, u8 family, u8 genmask,
 -			      u8 policy, u32 flags,
 -			      struct netlink_ext_ack *extack)
 +			      u8 policy, u32 flags)
  {
  	const struct nlattr * const *nla = ctx->nla;
+ 	struct nft_stats __percpu *stats = NULL;
  	struct nft_table *table = ctx->table;
  	struct nft_base_chain *basechain;
- 	struct nft_stats __percpu *stats;
  	struct net *net = ctx->net;
 -	char name[NFT_NAME_MAXLEN];
 -	struct nft_rule_blob *blob;
  	struct nft_trans *trans;
  	struct nft_chain *chain;
 -	unsigned int data_size;
 +	struct nft_rule **rules;
  	int err;
  
  	if (table->use == UINT_MAX)
@@@ -2061,13 -2311,21 +2060,25 @@@
  	if (nft_is_base_chain(chain))
  		nft_trans_chain_policy(trans) = policy;
  
++<<<<<<< HEAD
++=======
+ 	err = nft_chain_add(table, chain);
+ 	if (err < 0) {
+ 		nft_trans_destroy(trans);
+ 		goto err_unregister_hook;
+ 	}
+ 
+ 	if (stats)
+ 		static_branch_inc(&nft_counters_enabled);
+ 
++>>>>>>> 43eb8949cfdf (netfilter: nf_tables: do not leave chain stats enabled on error)
  	table->use++;
 +	list_add_tail_rcu(&chain->list, &table->chains);
  
  	return 0;
 -err_unregister_hook:
 +err2:
  	nf_tables_unregister_hook(net, table, chain);
 -err_destroy_chain:
 +err1:
  	nf_tables_chain_destroy(ctx);
  
  	return err;
* Unmerged path net/netfilter/nf_tables_api.c
