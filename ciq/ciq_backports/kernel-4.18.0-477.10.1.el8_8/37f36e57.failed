crypto: hmac - disallow keys < 112 bits in FIPS mode

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Stephan MÃ¼ller <smueller@chronox.de>
commit 37f36e5717869a69775ecb23baedf0f06ea940b4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/37f36e57.failed

FIPS 140 requires a minimum security strength of 112 bits. This implies
that the HMAC key must not be smaller than 112 in FIPS mode.

This restriction implies that the test vectors for HMAC that have a key
that is smaller than 112 bits must be disabled when FIPS support is
compiled.

	Signed-off-by: Stephan Mueller <smueller@chronox.de>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 37f36e5717869a69775ecb23baedf0f06ea940b4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	crypto/testmgr.h
diff --cc crypto/testmgr.h
index 56ca4be833d8,85ccf811f5e7..000000000000
--- a/crypto/testmgr.h
+++ b/crypto/testmgr.h
@@@ -4047,8 -5715,7 +4047,12 @@@ static const struct hash_testvec hmac_s
  		.psize	= 28,
  		.digest	= "\xef\xfc\xdf\x6a\xe5\xeb\x2f\xa2\xd2\x74"
  			  "\x16\xd5\xf1\x84\xdf\x9c\x25\x9a\x7c\x79",
++<<<<<<< HEAD
 +		.np	= 2,
 +		.tap	= { 14, 14 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa",
  		.ksize	= 20,
@@@ -4138,8 -5805,7 +4142,12 @@@ static const struct hash_testvec hmac_s
  			"\x45\x69\x0f\x3a\x7e\x9e\x6d\x0f"
  			"\x8b\xbe\xa2\xa3\x9e\x61\x48\x00"
  			"\x8f\xd0\x5e\x44",
++<<<<<<< HEAD
 +		.np = 4,
 +		.tap    = { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key    = "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			"\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -4283,8 -5949,7 +4291,12 @@@ static const struct hash_testvec hmac_s
  			  "\x6a\x04\x24\x26\x08\x95\x75\xc7"
  			  "\x5a\x00\x3f\x08\x9d\x27\x39\x83"
  			  "\x9d\xec\x58\xb9\x64\xec\x38\x43",
++<<<<<<< HEAD
 +		.np	= 2,
 +		.tap	= { 14, 14 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			"\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -4738,8 -6448,7 +4750,12 @@@ static const struct hash_testvec hmac_s
  			  "\xe4\x2e\xc3\x73\x63\x22\x44\x5e"
  			  "\x8e\x22\x40\xca\x5e\x69\xe2\xc7"
  			  "\x8b\x32\x39\xec\xfa\xb2\x16\x49",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -4840,8 -6549,7 +4856,12 @@@ static const struct hash_testvec hmac_s
  			  "\x6d\x03\x4f\x65\xf8\xf0\xe6\xfd"
  			  "\xca\xea\xb1\xa3\x4d\x4a\x6b\x4b"
  			  "\x63\x6e\x07\x0a\x38\xbc\xe7\x37",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -4937,8 -6645,7 +4957,12 @@@ static const struct hash_testvec hmac_s
  			  "\x1b\x79\x86\x34\xad\x38\x68\x11"
  			  "\xc2\xcf\xc8\x5b\xfa\xf5\xd5\x2b"
  			  "\xba\xce\x5e\x66",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -5026,8 -6733,7 +5050,12 @@@ static const struct hash_testvec hmac_s
  			  "\x35\x96\xbb\xb0\xda\x73\xb8\x87"
  			  "\xc9\x17\x1f\x93\x09\x5b\x29\x4a"
  			  "\xe8\x57\xfb\xe2\x64\x5e\x1b\xa5",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -5119,8 -6825,7 +5147,12 @@@ static const struct hash_testvec hmac_s
  			  "\x3c\xa1\x35\x08\xa9\x32\x43\xce"
  			  "\x48\xc0\x45\xdc\x00\x7f\x26\xa2"
  			  "\x1b\x3f\x5e\x0e\x9d\xf4\xc2\x0a",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
@@@ -5220,8 -6925,7 +5252,12 @@@ static const struct hash_testvec hmac_s
  			  "\xee\x7a\x0c\x31\xd0\x22\xa9\x5e"
  			  "\x1f\xc9\x2b\xa9\xd7\x7d\xf8\x83"
  			  "\x96\x02\x75\xbe\xb4\xe6\x20\x24",
++<<<<<<< HEAD
 +		.np	= 4,
 +		.tap	= { 7, 7, 7, 7 }
++=======
+ 		.fips_skip = 1,
++>>>>>>> 37f36e571786 (crypto: hmac - disallow keys < 112 bits in FIPS mode)
  	}, {
  		.key	= "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
  			  "\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
diff --git a/crypto/hmac.c b/crypto/hmac.c
index c623778b36ba..637e64739e07 100644
--- a/crypto/hmac.c
+++ b/crypto/hmac.c
@@ -20,6 +20,7 @@
 #include <crypto/internal/hash.h>
 #include <crypto/scatterwalk.h>
 #include <linux/err.h>
+#include <linux/fips.h>
 #include <linux/init.h>
 #include <linux/kernel.h>
 #include <linux/module.h>
@@ -56,6 +57,9 @@ static int hmac_setkey(struct crypto_shash *parent,
 	SHASH_DESC_ON_STACK(shash, hash);
 	unsigned int i;
 
+	if (fips_enabled && (keylen < 112 / 8))
+		return -EINVAL;
+
 	shash->tfm = hash;
 	shash->flags = crypto_shash_get_flags(parent)
 		& CRYPTO_TFM_REQ_MAY_SLEEP;
* Unmerged path crypto/testmgr.h
