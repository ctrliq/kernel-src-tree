RDMA/mlx5: Remove duplicate pointer assignment in mlx5_ib_alloc_implicit_mr()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Daisuke Matsuda <matsuda-daisuke@fujitsu.com>
commit 988d74deaa46a9c63d2061c270692d6e6192c6c1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/988d74de.failed

The pointer imr->umem is assigned twice. Fix this by removing the
redundant one.

Link: https://lore.kernel.org/r/20220518044914.1903125-1-matsuda-daisuke@fujitsu.com
	Signed-off-by: Daisuke Matsuda <matsuda-daisuke@fujitsu.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 988d74deaa46a9c63d2061c270692d6e6192c6c1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 446d722140da,84da5674e1ab..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -492,17 -509,15 +492,21 @@@ struct mlx5_ib_mr *mlx5_ib_alloc_implic
  	imr->ibmr.lkey = imr->mmkey.key;
  	imr->ibmr.rkey = imr->mmkey.key;
  	imr->ibmr.device = &dev->ib_dev;
++<<<<<<< HEAD
 +	imr->umem = &umem_odp->umem;
++=======
+ 	imr->is_odp_implicit = true;
++>>>>>>> 988d74deaa46 (RDMA/mlx5: Remove duplicate pointer assignment in mlx5_ib_alloc_implicit_mr())
  	xa_init(&imr->implicit_children);
  
 -	err = mlx5r_umr_update_xlt(imr, 0,
 -				   mlx5_imr_ksm_entries,
 -				   MLX5_KSM_PAGE_SHIFT,
 -				   MLX5_IB_UPD_XLT_INDIRECT |
 -				   MLX5_IB_UPD_XLT_ZAP |
 -				   MLX5_IB_UPD_XLT_ENABLE);
 +	imr->is_odp_implicit = true;
 +
 +	err = mlx5_ib_update_xlt(imr, 0,
 +				 mlx5_imr_ksm_entries,
 +				 MLX5_KSM_PAGE_SHIFT,
 +				 MLX5_IB_UPD_XLT_INDIRECT |
 +				 MLX5_IB_UPD_XLT_ZAP |
 +				 MLX5_IB_UPD_XLT_ENABLE);
  	if (err)
  		goto out_mr;
  
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
