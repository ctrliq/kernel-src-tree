arm64: kdump: Provide default size when crashkernel=Y,low is not specified

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Zhen Lei <thunder.leizhen@huawei.com>
commit a149cf00b158e1793a8dd89ca492379c366300d2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/a149cf00.failed

Try to allocate at least 128 MiB low memory automatically for the case
that crashkernel=,high is explicitly specified, while crashkenrel=,low
is omitted. This allows users to focus more on the high memory
requirements of their business rather than the low memory requirements
of the crash kernel booting.

	Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
	Acked-by: Baoquan He <bhe@redhat.com>
	Reviewed-by: Catalin Marinas <catalin.marinas@arm.com>
Link: https://lore.kernel.org/r/20221116121044.1690-2-thunder.leizhen@huawei.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit a149cf00b158e1793a8dd89ca492379c366300d2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/admin-guide/kernel-parameters.txt
#	arch/arm64/mm/init.c
diff --cc Documentation/admin-guide/kernel-parameters.txt
index f1cd78b7b989,6c6fafc3fba9..000000000000
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@@ -744,25 -851,23 +744,40 @@@
  			available.
  			It will be ignored if crashkernel=X is specified.
  	crashkernel=size[KMG],low
++<<<<<<< HEAD
 +			[KNL, x86_64] range under 4G. When crashkernel=X,high
++=======
+ 			[KNL, X86-64, ARM64] range under 4G. When crashkernel=X,high
++>>>>>>> a149cf00b158 (arm64: kdump: Provide default size when crashkernel=Y,low is not specified)
  			is passed, kernel could allocate physical memory region
  			above 4G, that cause second kernel crash on system
  			that require some amount of low memory, e.g. swiotlb
  			requires at least 64M+32K low memory, also enough extra
  			low memory is needed to make sure DMA buffers for 32-bit
  			devices won't run out. Kernel would try to allocate
++<<<<<<< HEAD
 +			at least 256M below 4G automatically.
 +			This one let user to specify own low range under 4G
++=======
+ 			default	size of memory below 4G automatically. The default
+ 			size is	platform dependent.
+ 			  --> x86: max(swiotlb_size_or_default() + 8MiB, 256MiB)
+ 			  --> arm64: 128MiB
+ 			This one lets the user specify own low range under 4G
++>>>>>>> a149cf00b158 (arm64: kdump: Provide default size when crashkernel=Y,low is not specified)
  			for second kernel instead.
  			0: to disable low allocation.
  			It will be ignored when crashkernel=X,high is not used
  			or memory reserved is below 4G.
  
++<<<<<<< HEAD
 +			[KNL, ARM64] range in low memory.
 +			This one lets the user specify a low range in the
 +			DMA zone for the crash dump kernel.
 +			It will be ignored when crashkernel=X,high is not used.
 +
++=======
++>>>>>>> a149cf00b158 (arm64: kdump: Provide default size when crashkernel=Y,low is not specified)
  	cryptomgr.notests
  			[KNL] Disable crypto self-tests
  
diff --cc arch/arm64/mm/init.c
index 16152fb8191b,ba7227179822..000000000000
--- a/arch/arm64/mm/init.c
+++ b/arch/arm64/mm/init.c
@@@ -87,9 -93,11 +87,11 @@@ early_param("initrd", early_initrd)
  /* Current arm64 boot protocol requires 2MB alignment */
  #define CRASH_ALIGN			SZ_2M
  
 -#define CRASH_ADDR_LOW_MAX		arm64_dma_phys_limit
 +#define CRASH_ADDR_LOW_MAX		arm64_dma32_phys_limit
  #define CRASH_ADDR_HIGH_MAX		(PHYS_MASK + 1)
  
+ #define DEFAULT_CRASH_KERNEL_LOW_SIZE	(128UL << 20)
+ 
  static int __init reserve_crashkernel_low(unsigned long long low_size)
  {
  	unsigned long long low_base;
@@@ -163,8 -174,9 +167,14 @@@ static void __init reserve_crashkernel(
  		return;
  	}
  
++<<<<<<< HEAD
 +	if (crash_low_size && reserve_crashkernel_low(crash_low_size)) {
 +		memblock_free(crash_base, crash_size);
++=======
+ 	if ((crash_base > CRASH_ADDR_LOW_MAX - crash_low_size) &&
+ 	     crash_low_size && reserve_crashkernel_low(crash_low_size)) {
+ 		memblock_phys_free(crash_base, crash_size);
++>>>>>>> a149cf00b158 (arm64: kdump: Provide default size when crashkernel=Y,low is not specified)
  		return;
  	}
  
* Unmerged path Documentation/admin-guide/kernel-parameters.txt
* Unmerged path arch/arm64/mm/init.c
