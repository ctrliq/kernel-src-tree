x86/tdx: Exclude shared bit from __PHYSICAL_MASK

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
commit 65fab5bc033aad1a9faf976caec46558c2f88319
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/65fab5bc.failed

In TDX guests, by default memory is protected from host access. If a
guest needs to communicate with the VMM (like the I/O use case), it uses
a single bit in the physical address to communicate the protected/shared
attribute of the given page.

In the x86 ARCH code, __PHYSICAL_MASK macro represents the width of the
physical address in the given architecture. It is used in creating
physical PAGE_MASK for address bits in the kernel. Since in TDX guest,
a single bit is used as metadata, it needs to be excluded from valid
physical address bits to avoid using incorrect addresses bits in the
kernel.

Enable DYNAMIC_PHYSICAL_MASK to support updating the __PHYSICAL_MASK.

Co-developed-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
	Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Reviewed-by: Andi Kleen <ak@linux.intel.com>
	Reviewed-by: Tony Luck <tony.luck@intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20220405232939.73860-6-kirill.shutemov@linux.intel.com
(cherry picked from commit 65fab5bc033aad1a9faf976caec46558c2f88319)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/Kconfig
#	arch/x86/coco/tdx/tdx.c
diff --cc arch/x86/Kconfig
index 970d47f5992e,aea4cc404c31..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -847,6 -867,31 +847,34 @@@ config JAILHOUSE_GUES
  	  cell. You can leave this option disabled if you only want to start
  	  Jailhouse and run Linux afterwards in the root cell.
  
++<<<<<<< HEAD
++=======
+ config ACRN_GUEST
+ 	bool "ACRN Guest support"
+ 	depends on X86_64
+ 	select X86_HV_CALLBACK_VECTOR
+ 	help
+ 	  This option allows to run Linux as guest in the ACRN hypervisor. ACRN is
+ 	  a flexible, lightweight reference open-source hypervisor, built with
+ 	  real-time and safety-criticality in mind. It is built for embedded
+ 	  IOT with small footprint and real-time features. More details can be
+ 	  found in https://projectacrn.org/.
+ 
+ config INTEL_TDX_GUEST
+ 	bool "Intel TDX (Trust Domain Extensions) - Guest Support"
+ 	depends on X86_64 && CPU_SUP_INTEL
+ 	depends on X86_X2APIC
+ 	select ARCH_HAS_CC_PLATFORM
+ 	select DYNAMIC_PHYSICAL_MASK
+ 	help
+ 	  Support running as a guest under Intel TDX.  Without this support,
+ 	  the guest kernel can not boot or run under TDX.
+ 	  TDX includes memory encryption and integrity capabilities
+ 	  which protect the confidentiality and integrity of guest
+ 	  memory contents and CPU state. TDX guests are protected from
+ 	  some attacks from the VMM.
+ 
++>>>>>>> 65fab5bc033a (x86/tdx: Exclude shared bit from __PHYSICAL_MASK)
  endif #HYPERVISOR_GUEST
  
  source "arch/x86/Kconfig.cpu"
* Unmerged path arch/x86/coco/tdx/tdx.c
* Unmerged path arch/x86/Kconfig
* Unmerged path arch/x86/coco/tdx/tdx.c
