stmmac: intel: prepare to support 1000BASE-X phy interface setting

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Ong Boon Leong <boon.leong.ong@intel.com>
commit c82386310d957260948828b4236acc5bda819352
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/c8238631.failed

Currently, intel_speed_mode_2500() redundantly fix-up phy_interface to
PHY_INTERFACE_MODE_SGMII if the underlying controller is in 1000Mbps
SGMII mode. The value of phy_interface has been initialized earlier.

This patch removes such redundancy to prepare for setting 1000BASE-X
mode for certain hardware platform configuration.

Also update the intel_mgbe_common_data() to include 1000BASE-X setup.

	Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit c82386310d957260948828b4236acc5bda819352)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
diff --cc drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
index caece177274d,675dfb89b765..000000000000
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
@@@ -214,6 -230,31 +214,34 @@@ static void intel_serdes_powerdown(stru
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void intel_speed_mode_2500(struct net_device *ndev, void *intel_data)
+ {
+ 	struct intel_priv_data *intel_priv = intel_data;
+ 	struct stmmac_priv *priv = netdev_priv(ndev);
+ 	int serdes_phy_addr = 0;
+ 	u32 data = 0;
+ 
+ 	serdes_phy_addr = intel_priv->mdio_adhoc_addr;
+ 
+ 	/* Determine the link speed mode: 2.5Gbps/1Gbps */
+ 	data = mdiobus_read(priv->mii, serdes_phy_addr,
+ 			    SERDES_GCR);
+ 
+ 	if (((data & SERDES_LINK_MODE_MASK) >> SERDES_LINK_MODE_SHIFT) ==
+ 	    SERDES_LINK_MODE_2G5) {
+ 		dev_info(priv->device, "Link Speed Mode: 2.5Gbps\n");
+ 		priv->plat->max_speed = 2500;
+ 		priv->plat->phy_interface = PHY_INTERFACE_MODE_2500BASEX;
+ 		priv->plat->mdio_bus_data->xpcs_an_inband = false;
+ 	} else {
+ 		priv->plat->max_speed = 1000;
+ 		priv->plat->mdio_bus_data->xpcs_an_inband = true;
+ 	}
+ }
+ 
++>>>>>>> c82386310d95 (stmmac: intel: prepare to support 1000BASE-X phy interface setting)
  /* Program PTP Clock Frequency for different variant of
   * Intel mGBE that has slightly different GPO mapping
   */
* Unmerged path drivers/net/ethernet/stmicro/stmmac/dwmac-intel.c
