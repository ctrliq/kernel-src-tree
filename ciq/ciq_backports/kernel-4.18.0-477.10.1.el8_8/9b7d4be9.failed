RDMA/mlx5: Fix UMR cleanup on error flow of driver init

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.10.1.el8_8
commit-author Maor Gottlieb <maorg@nvidia.com>
commit 9b7d4be967f16f79a2283b2338709fcc750313ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.10.1.el8_8/9b7d4be9.failed

The cited commit removed from the cleanup flow of umr the checks
if the resources were created. This could lead to null-ptr-deref
in case that we had failure in mlx5_ib_stage_ib_reg_init stage.

Fix it by adding new state to the umr that can say if the resources
were created or not and check it in the umr cleanup flow before
destroying the resources.

Fixes: 04876c12c19e ("RDMA/mlx5: Move init and cleanup of UMR to umr.c")
	Reviewed-by: Michael Guralnik <michaelgur@nvidia.com>
	Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
Link: https://lore.kernel.org/r/4cfa61386cf202e9ce330e8d228ce3b25a36326e.1661763459.git.leonro@nvidia.com
	Signed-off-by: Leon Romanovsky <leon@kernel.org>
(cherry picked from commit 9b7d4be967f16f79a2283b2338709fcc750313ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
#	drivers/infiniband/hw/mlx5/umr.c
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index bc16ce369c59,e66bf72f1f04..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -744,6 -707,13 +744,16 @@@ struct mlx5_ib_umr_context 
  	struct completion	done;
  };
  
++<<<<<<< HEAD
++=======
+ enum {
+ 	MLX5_UMR_STATE_UNINIT,
+ 	MLX5_UMR_STATE_ACTIVE,
+ 	MLX5_UMR_STATE_RECOVER,
+ 	MLX5_UMR_STATE_ERR,
+ };
+ 
++>>>>>>> 9b7d4be967f1 (RDMA/mlx5: Fix UMR cleanup on error flow of driver init)
  struct umr_common {
  	struct ib_pd	*pd;
  	struct ib_cq	*cq;
diff --cc drivers/infiniband/hw/mlx5/umr.c
index 46eaf919eb49,d5105b5c9979..000000000000
--- a/drivers/infiniband/hw/mlx5/umr.c
+++ b/drivers/infiniband/hw/mlx5/umr.c
@@@ -86,6 -176,8 +86,11 @@@ int mlx5r_umr_resource_init(struct mlx5
  	dev->umrc.pd = pd;
  
  	sema_init(&dev->umrc.sem, MAX_UMR_WR);
++<<<<<<< HEAD
++=======
+ 	mutex_init(&dev->umrc.lock);
+ 	dev->umrc.state = MLX5_UMR_STATE_ACTIVE;
++>>>>>>> 9b7d4be967f1 (RDMA/mlx5: Fix UMR cleanup on error flow of driver init)
  
  	return 0;
  
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
* Unmerged path drivers/infiniband/hw/mlx5/umr.c
