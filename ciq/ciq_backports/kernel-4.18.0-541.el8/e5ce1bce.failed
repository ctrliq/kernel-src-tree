mxser: extract mxser_receive_chars_new

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit e5ce1bcedac6875ce9d1ff4bafdf150a899a5694
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/e5ce1bce.failed

Extract the new handling of receive chars (using the MUST chip
enhancements) into a separate function. This eliminates the need for the
intr_old label and makes the code of mxser_receive_chars more compact.
In the next step, we will extract the old handling too.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-16-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit e5ce1bcedac6875ce9d1ff4bafdf150a899a5694)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index 399fb247a605,a321aba24d58..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -2187,10 -2055,41 +2187,46 @@@ static int mxser_rs_break(struct tty_st
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void mxser_receive_chars(struct tty_struct *tty,
 +				struct mxser_port *port, int *status)
++=======
+ static bool mxser_receive_chars_new(struct tty_struct *tty,
+ 		struct mxser_port *port, u8 status, int *cnt)
  {
- 	unsigned char ch, gdl;
+ 	enum mxser_must_hwid hwid = port->board->must_hwid;
+ 	u8 gdl;
+ 
+ 	if (hwid == MOXA_OTHER_UART)
+ 		return false;
+ 	if (status & UART_LSR_SPECIAL)
+ 		return false;
+ 	if (hwid == MOXA_MUST_MU860_HWID && (status & MOXA_MUST_LSR_RERR))
+ 		return false;
+ 	if (status & MOXA_MUST_LSR_RERR)
+ 		return false;
+ 
+ 	gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
+ 	if (hwid == MOXA_MUST_MU150_HWID)
+ 		gdl &= MOXA_MUST_GDL_MASK;
+ 
+ 	if (gdl >= tty->receive_room && !port->ldisc_stop_rx)
+ 		mxser_stoprx(tty);
+ 
+ 	while (gdl--) {
+ 		u8 ch = inb(port->ioaddr + UART_RX);
+ 		tty_insert_flip_char(&port->port, ch, 0);
+ 		(*cnt)++;
+ 	}
+ 
+ 	return true;
+ }
+ 
+ static u8 mxser_receive_chars(struct tty_struct *tty,
+ 		struct mxser_port *port, u8 status)
++>>>>>>> e5ce1bcedac6 (mxser: extract mxser_receive_chars_new)
+ {
+ 	unsigned char ch;
  	int ignored = 0;
  	int cnt = 0;
  	int recv_room;
@@@ -2199,32 -2098,9 +2235,35 @@@
  	recv_room = tty->receive_room;
  	if (recv_room == 0 && !port->ldisc_stop_rx)
  		mxser_stoprx(tty);
++<<<<<<< HEAD
 +	if (port->board->chip_flag != MOXA_OTHER_UART) {
 +
 +		if (*status & UART_LSR_SPECIAL)
 +			goto intr_old;
 +		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 +				(*status & MOXA_MUST_LSR_RERR))
 +			goto intr_old;
 +		if (*status & MOXA_MUST_LSR_RERR)
 +			goto intr_old;
 +
 +		gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
 +
 +		if (port->board->chip_flag == MOXA_MUST_MU150_HWID)
 +			gdl &= MOXA_MUST_GDL_MASK;
 +		if (gdl >= recv_room) {
 +			if (!port->ldisc_stop_rx)
 +				mxser_stoprx(tty);
 +		}
 +		while (gdl--) {
 +			ch = inb(port->ioaddr + UART_RX);
 +			tty_insert_flip_char(&port->port, ch, 0);
 +			cnt++;
 +		}
++=======
+ 
+ 	if (mxser_receive_chars_new(tty, port, status, &cnt))
++>>>>>>> e5ce1bcedac6 (mxser: extract mxser_receive_chars_new)
  		goto end_intr;
- 	}
- intr_old:
  
  	do {
  		if (max-- < 0)
* Unmerged path drivers/tty/mxser.c
