mxser: remove MOXA_GETDATACOUNT ioctl

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 476c351db8f0e8a837c144a916b23b3abf5a655b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/476c351d.failed

1) MOXA_GETDATACOUNT is broken at least since commit ecbbfd44a08f (TTY:
   move tty buffers to tty_port) in 2012.
   Even though it's mentioned in the mon_p moxa utility, obviously noone
   ever tried that in that timeframe.
2) The ioctl definition was never exposed to userspace, so noone should
   actually be reliably using this.

Provided the above, remove this mxser-special ioctl.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-28-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 476c351db8f0e8a837c144a916b23b3abf5a655b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index ff7a0e941388,9e241f8bd814..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -305,37 -267,6 +304,40 @@@ MODULE_PARM_DESC(ioaddr, "ISA io addres
  module_param(ttymajor, int, 0);
  MODULE_LICENSE("GPL");
  
++<<<<<<< HEAD
 +struct mxser_log {
 +	int tick;
 +	unsigned long rxcnt[MXSER_PORTS];
 +	unsigned long txcnt[MXSER_PORTS];
 +};
 +
 +struct mxser_mon {
 +	unsigned long rxcnt;
 +	unsigned long txcnt;
 +	unsigned long up_rxcnt;
 +	unsigned long up_txcnt;
 +	int modem_status;
 +	unsigned char hold_reason;
 +};
 +
 +struct mxser_mon_ext {
 +	unsigned long rx_cnt[32];
 +	unsigned long tx_cnt[32];
 +	unsigned long up_rxcnt[32];
 +	unsigned long up_txcnt[32];
 +	int modem_status[32];
 +
 +	long baudrate[32];
 +	int databits[32];
 +	int stopbits[32];
 +	int parity[32];
 +	int flowctrl[32];
 +	int fifo[32];
 +	int iftype[32];
 +};
 +
++=======
++>>>>>>> 476c351db8f0 (mxser: remove MOXA_GETDATACOUNT ioctl)
  struct mxser_board;
  
  struct mxser_port {
@@@ -2240,18 -1899,29 +2234,21 @@@ intr_old
  
  		}
  
 -		if (hwid)
 +		if (port->board->chip_flag)
  			break;
  
 -		status = inb(port->ioaddr + UART_LSR);
 -	} while (status & UART_LSR_DR);
 -
 -	return status;
 -}
 -
 -static u8 mxser_receive_chars(struct tty_struct *tty,
 -		struct mxser_port *port, u8 status)
 -{
 -	int cnt = 0;
 -
 -	if (tty->receive_room == 0 && !port->ldisc_stop_rx)
 -		mxser_stoprx(tty);
 +		*status = inb(port->ioaddr + UART_LSR);
 +	} while (*status & UART_LSR_DR);
  
 -	if (!mxser_receive_chars_new(tty, port, status, &cnt))
 -		status = mxser_receive_chars_old(tty, port, status, &cnt);
++<<<<<<< HEAD
 +end_intr:
 +	mxvar_log.rxcnt[tty->index] += cnt;
 +	port->mon_data.rxcnt += cnt;
 +	port->mon_data.up_rxcnt += cnt;
  
++=======
++>>>>>>> 476c351db8f0 (mxser: remove MOXA_GETDATACOUNT ioctl)
  	tty_flip_buffer_push(&port->port);
 -
 -	return status;
  }
  
  static void mxser_transmit_chars(struct tty_struct *tty, struct mxser_port *port)
@@@ -2261,9 -1931,6 +2258,12 @@@
  	if (port->x_char) {
  		outb(port->x_char, port->ioaddr + UART_TX);
  		port->x_char = 0;
++<<<<<<< HEAD
 +		mxvar_log.txcnt[tty->index]++;
 +		port->mon_data.txcnt++;
 +		port->mon_data.up_txcnt++;
++=======
++>>>>>>> 476c351db8f0 (mxser: remove MOXA_GETDATACOUNT ioctl)
  		port->icount.tx++;
  		return;
  	}
@@@ -2289,10 -1956,7 +2289,9 @@@
  		if (--port->xmit_cnt <= 0)
  			break;
  	} while (--count > 0);
- 	mxvar_log.txcnt[tty->index] += (cnt - port->xmit_cnt);
  
 +	port->mon_data.txcnt += (cnt - port->xmit_cnt);
 +	port->mon_data.up_txcnt += (cnt - port->xmit_cnt);
  	port->icount.tx += (cnt - port->xmit_cnt);
  
  	if (port->xmit_cnt < WAKEUP_CHARS)
* Unmerged path drivers/tty/mxser.c
