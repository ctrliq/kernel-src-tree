mxser: drop mxser_port::baud_base

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit a6970c39c311f393c2a2b43733e1b4ce2b241f53
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/a6970c39.failed

It's an once-set constant, so define a macro for the constant
(MXSER_BAUD_BASE) and use it in the code instead.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-36-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a6970c39c311f393c2a2b43733e1b4ce2b241f53)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index b5f4f2beb09c,204b71c4d1ae..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -175,15 -154,9 +175,19 @@@
  #define MXSER_PORTS		(MXSER_BOARDS * MXSER_PORTS_PER_BOARD)
  #define MXSER_ISR_PASS_LIMIT	100
  
 +/*CheckIsMoxaMust return value*/
 +#define MOXA_OTHER_UART		0x00
 +#define MOXA_MUST_MU150_HWID	0x01
 +#define MOXA_MUST_MU860_HWID	0x02
 +
  #define WAKEUP_CHARS		256
  
++<<<<<<< HEAD
 +#define UART_MCR_AFE		0x20
 +#define UART_LSR_SPECIAL	0x1E
++=======
+ #define MXSER_BAUD_BASE		921600
++>>>>>>> a6970c39c311 (mxser: drop mxser_port::baud_base)
  
  #define PCI_DEVICE_ID_POS104UL	0x1044
  #define PCI_DEVICE_ID_CB108	0x1080
@@@ -348,12 -276,11 +352,11 @@@ struct mxser_port 
  
  	u8 rx_high_water;
  	u8 rx_low_water;
- 	int baud_base;		/* max. speed */
  	int type;		/* UART type */
  
 -	unsigned char x_char;	/* xon/xoff character */
 -	u8 IER;			/* Interrupt Enable Register */
 -	u8 MCR;			/* Modem control register */
 +	int x_char;		/* xon/xoff character */
 +	int IER;		/* Interrupt Enable Register */
 +	int MCR;		/* Modem control register */
  
  	unsigned char ldisc_stop_rx;
  
@@@ -1386,8 -1264,9 +1389,8 @@@ static int mxser_set_serial_info(struc
  		closing_wait = msecs_to_jiffies(closing_wait * 10);
  
  	if (!capable(CAP_SYS_ADMIN)) {
- 		if ((ss->baud_base != info->baud_base) ||
+ 		if ((ss->baud_base != MXSER_BAUD_BASE) ||
  				(close_delay != info->port.close_delay) ||
 -				(closing_wait != info->port.closing_wait) ||
  				((ss->flags & ~ASYNC_USR_MASK) != (info->port.flags & ~ASYNC_USR_MASK))) {
  			mutex_unlock(&port->mutex);
  			return -EPERM;
@@@ -2485,12 -2019,9 +2488,12 @@@ static int mxser_initbrd(struct mxser_b
  
  		process_txrx_fifo(info);
  
- 		info->custom_divisor = info->baud_base * 16;
+ 		info->custom_divisor = MXSER_BAUD_BASE * 16;
  		info->port.close_delay = 5 * HZ / 10;
  		info->port.closing_wait = 30 * HZ;
 +		info->normal_termios = mxvar_sdriver->init_termios;
 +		memset(&info->mon_data, 0, sizeof(struct mxser_mon));
 +		info->err_shadow = 0;
  		spin_lock_init(&info->slock);
  
  		/* before set INT ISR, disable all int */
@@@ -2718,11 -2128,6 +2721,14 @@@ static int mxser_probe(struct pci_dev *
  		outb(0, ioaddress + 0x0c);	/* default set to RS232 mode */
  	}
  
++<<<<<<< HEAD
 +	for (i = 0; i < brd->info->nports; i++) {
 +		brd->vector_mask |= (1 << i);
 +		brd->ports[i].baud_base = 921600;
 +	}
 +
++=======
++>>>>>>> a6970c39c311 (mxser: drop mxser_port::baud_base)
  	/* mxser_initbrd will hook ISR. */
  	retval = mxser_initbrd(brd);
  	if (retval)
* Unmerged path drivers/tty/mxser.c
