s390/ipl: add missing intersection check to ipl_report handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Sven Schnelle <svens@linux.ibm.com>
commit a52e5cdbe8016d4e3e6322fd93d71afddb9a5af9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/a52e5cdb.failed

The code which handles the ipl report is searching for a free location
in memory where it could copy the component and certificate entries to.
It checks for intersection between the sections required for the kernel
and the component/certificate data area, but fails to check whether
the data structures linking these data areas together intersect.

This might cause the iplreport copy code to overwrite the iplreport
itself. Fix this by adding two addtional intersection checks.

	Cc: <stable@vger.kernel.org>
Fixes: 9641b8cc733f ("s390/ipl: read IPL report at early boot")
	Signed-off-by: Sven Schnelle <svens@linux.ibm.com>
	Reviewed-by: Vasily Gorbik <gor@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit a52e5cdbe8016d4e3e6322fd93d71afddb9a5af9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/boot/ipl_report.c
diff --cc arch/s390/boot/ipl_report.c
index 0b4965573656,74b5cd264862..000000000000
--- a/arch/s390/boot/ipl_report.c
+++ b/arch/s390/boot/ipl_report.c
@@@ -54,9 -54,13 +54,19 @@@ static unsigned long find_bootdata_spac
  	 * not overlap with any component or any certificate.
  	 */
  repeat:
++<<<<<<< HEAD
 +	if (IS_ENABLED(CONFIG_BLK_DEV_INITRD) && INITRD_START && INITRD_SIZE &&
 +	    intersects(INITRD_START, INITRD_SIZE, safe_addr, size))
 +		safe_addr = INITRD_START + INITRD_SIZE;
++=======
+ 	if (IS_ENABLED(CONFIG_BLK_DEV_INITRD) && initrd_data.start && initrd_data.size &&
+ 	    intersects(initrd_data.start, initrd_data.size, safe_addr, size))
+ 		safe_addr = initrd_data.start + initrd_data.size;
+ 	if (intersects(safe_addr, size, (unsigned long)comps, comps->len)) {
+ 		safe_addr = (unsigned long)comps + comps->len;
+ 		goto repeat;
+ 	}
++>>>>>>> a52e5cdbe801 (s390/ipl: add missing intersection check to ipl_report handling)
  	for_each_rb_entry(comp, comps)
  		if (intersects(safe_addr, size, comp->addr, comp->len)) {
  			safe_addr = comp->addr + comp->len;
* Unmerged path arch/s390/boot/ipl_report.c
