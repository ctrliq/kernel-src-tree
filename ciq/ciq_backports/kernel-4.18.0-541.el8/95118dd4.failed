Bluetooth: hci_event: Use of a function table to handle LE subevents

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
commit 95118dd4edfec950898a00180c6f998df0a6406d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/95118dd4.failed

This change the use of switch statement to a function table which is
easier to extend and can include min/max length of each subevent.

	Signed-off-by: Luiz Augusto von Dentz <luiz.von.dentz@intel.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit 95118dd4edfec950898a00180c6f998df0a6406d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_event.c
diff --cc net/bluetooth/hci_event.c
index 497a6d0d4521,cecd81e0504c..000000000000
--- a/net/bluetooth/hci_event.c
+++ b/net/bluetooth/hci_event.c
@@@ -6687,13 -6681,17 +6650,24 @@@ static void hci_le_remote_conn_param_re
  	hci_send_cmd(hdev, HCI_OP_LE_CONN_PARAM_REQ_REPLY, sizeof(cp), &cp);
  }
  
- static void hci_le_direct_adv_report_evt(struct hci_dev *hdev,
+ static void hci_le_direct_adv_report_evt(struct hci_dev *hdev, void *data,
  					 struct sk_buff *skb)
  {
++<<<<<<< HEAD
 +	u8 num_reports = skb->data[0];
 +	struct hci_ev_le_direct_adv_info *ev = (void *)&skb->data[1];
 +
 +	if (!num_reports || skb->len < num_reports * sizeof(*ev) + 1)
++=======
+ 	struct hci_ev_le_direct_adv_report *ev = data;
+ 	int i;
+ 
+ 	if (!hci_le_ev_skb_pull(hdev, skb, HCI_EV_LE_DIRECT_ADV_REPORT,
+ 				flex_array_size(ev, info, ev->num)))
+ 		return;
+ 
+ 	if (!ev->num)
++>>>>>>> 95118dd4edfe (Bluetooth: hci_event: Use of a function table to handle LE subevents)
  		return;
  
  	hci_dev_lock(hdev);
* Unmerged path net/bluetooth/hci_event.c
