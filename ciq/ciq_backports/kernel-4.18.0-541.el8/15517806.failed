mxser: cleanup LSR handling in mxser_receive_chars

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 15517806037c8633ff44e6cd2099d3de22233b4a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/15517806.failed

mxser_interrupt is a bit confusing as it passes a pointer to LSR
variable ("status") to mxser_receive_chars. That function can indeed
update the LCR variable. Make this clear by not passing a variable by
reference, instead, return updated status. And change its type
accordingly -- to u8.

Note that the next patches will rework ISR so that even the definition
of status will be u8 soon too.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-13-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 15517806037c8633ff44e6cd2099d3de22233b4a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index 399fb247a605,9ba3af4626c6..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -2199,14 -2068,14 +2199,19 @@@ static u8 mxser_receive_chars(struct tt
  	recv_room = tty->receive_room;
  	if (recv_room == 0 && !port->ldisc_stop_rx)
  		mxser_stoprx(tty);
 -	if (port->board->must_hwid != MOXA_OTHER_UART) {
 +	if (port->board->chip_flag != MOXA_OTHER_UART) {
  
- 		if (*status & UART_LSR_SPECIAL)
+ 		if (status & UART_LSR_SPECIAL)
  			goto intr_old;
++<<<<<<< HEAD
 +		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 +				(*status & MOXA_MUST_LSR_RERR))
++=======
+ 		if (port->board->must_hwid == MOXA_MUST_MU860_HWID &&
+ 				(status & MOXA_MUST_LSR_RERR))
++>>>>>>> 15517806037c (mxser: cleanup LSR handling in mxser_receive_chars)
  			goto intr_old;
- 		if (*status & MOXA_MUST_LSR_RERR)
+ 		if (status & MOXA_MUST_LSR_RERR)
  			goto intr_old;
  
  		gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
@@@ -2231,10 -2100,10 +2236,14 @@@ intr_old
  			break;
  
  		ch = inb(port->ioaddr + UART_RX);
++<<<<<<< HEAD
 +		if (port->board->chip_flag && (*status & UART_LSR_OE))
++=======
+ 		if (port->board->must_hwid && (status & UART_LSR_OE))
++>>>>>>> 15517806037c (mxser: cleanup LSR handling in mxser_receive_chars)
  			outb(0x23, port->ioaddr + UART_FCR);
- 		*status &= port->read_status_mask;
- 		if (*status & port->ignore_status_mask) {
+ 		status &= port->read_status_mask;
+ 		if (status & port->ignore_status_mask) {
  			if (++ignored > 100)
  				break;
  		} else {
@@@ -2268,11 -2137,11 +2277,11 @@@
  
  		}
  
 -		if (port->board->must_hwid)
 +		if (port->board->chip_flag)
  			break;
  
- 		*status = inb(port->ioaddr + UART_LSR);
- 	} while (*status & UART_LSR_DR);
+ 		status = inb(port->ioaddr + UART_LSR);
+ 	} while (status & UART_LSR_DR);
  
  end_intr:
  	mxvar_log.rxcnt[tty->index] += cnt;
* Unmerged path drivers/tty/mxser.c
