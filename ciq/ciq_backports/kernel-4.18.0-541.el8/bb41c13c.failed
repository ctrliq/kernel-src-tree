r8169: fix dmar pte write access is not set error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Chunhao Lin <hau@realtek.com>
commit bb41c13c05c23d9bc46b4e37d8914078c6a40e3a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/bb41c13c.failed

When close device, if wol is enabled, rx will be enabled. When open
device it will cause rx packet to be dma to the wrong memory address
after pci_set_master() and system log will show blow messages.

DMAR: DRHD: handling fault status reg 3
DMAR: [DMA Write] Request device [02:00.0] PASID ffffffff fault addr
ffdd4000 [fault reason 05] PTE Write access is not set

In this patch, driver disable tx/rx when close device. If wol is
enabled, only enable rx filter and disable rxdv_gate(if support) to
let hardware only receive packet to fifo but not to dma it.

	Signed-off-by: Chunhao Lin <hau@realtek.com>
	Reviewed-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bb41c13c05c23d9bc46b4e37d8914078c6a40e3a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/realtek/r8169_main.c
diff --cc drivers/net/ethernet/realtek/r8169_main.c
index a78c1deaf485,24592d972523..000000000000
--- a/drivers/net/ethernet/realtek/r8169_main.c
+++ b/drivers/net/ethernet/realtek/r8169_main.c
@@@ -3985,11 -3887,7 +3988,8 @@@ static void rtl8169_cleanup(struct rtl8
  
  	rtl_rx_close(tp);
  
- 	if (going_down && tp->dev->wol_enabled)
- 		goto no_reset;
- 
  	switch (tp->mac_version) {
 +	case RTL_GIGA_MAC_VER_27:
  	case RTL_GIGA_MAC_VER_28:
  	case RTL_GIGA_MAC_VER_31:
  		rtl_loop_wait_low(tp, &rtl_npq_cond, 20, 2000);
@@@ -4737,12 -4605,9 +4737,17 @@@ static void rtl8169_down(struct rtl8169
  	pci_clear_master(tp->pci_dev);
  	rtl_pci_commit(tp);
  
++<<<<<<< HEAD
 +	rtl8169_cleanup(tp, true);
 +
++=======
+ 	rtl8169_cleanup(tp);
+ 	rtl_disable_exit_l1(tp);
++>>>>>>> bb41c13c05c2 (r8169: fix dmar pte write access is not set error)
  	rtl_prepare_power_down(tp);
 +
 +	if (tp->dash_type != RTL_DASH_NONE)
 +		rtl8168_driver_stop(tp);
  }
  
  static void rtl8169_up(struct rtl8169_private *tp)
* Unmerged path drivers/net/ethernet/realtek/r8169_main.c
