mxser: drop UART_MCR_AFE and UART_LSR_SPECIAL defines

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 70640052324b69de70711c2a3e43bb0a8cff5f7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/70640052.failed

* UART_MCR_AFE is a redefinition of serial_reg.h's one.
* UART_LSR_SPECIAL is a redefinition of serial_reg.h's
  UART_LSR_BRK_ERROR_BITS.

So remove both and replace the latter uses by already defined
UART_LSR_BRK_ERROR_BITS.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-21-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 70640052324b69de70711c2a3e43bb0a8cff5f7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index a5fd31f9f12c,79d7cecb7765..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -179,16 -178,8 +179,13 @@@
  #define MXSER_PORTS		(MXSER_BOARDS * MXSER_PORTS_PER_BOARD)
  #define MXSER_ISR_PASS_LIMIT	100
  
 +/*CheckIsMoxaMust return value*/
 +#define MOXA_OTHER_UART		0x00
 +#define MOXA_MUST_MU150_HWID	0x01
 +#define MOXA_MUST_MU860_HWID	0x02
 +
  #define WAKEUP_CHARS		256
  
- #define UART_MCR_AFE		0x20
- #define UART_LSR_SPECIAL	0x1E
- 
  #define PCI_DEVICE_ID_POS104UL	0x1044
  #define PCI_DEVICE_ID_CB108	0x1080
  #define PCI_DEVICE_ID_CP102UF	0x1023
@@@ -2187,44 -2052,45 +2184,80 @@@ static int mxser_rs_break(struct tty_st
  	return 0;
  }
  
 -static bool mxser_receive_chars_new(struct tty_struct *tty,
 -		struct mxser_port *port, u8 status, int *cnt)
 +static void mxser_receive_chars(struct tty_struct *tty,
 +				struct mxser_port *port, int *status)
  {
++<<<<<<< HEAD
 +	unsigned char ch, gdl;
++=======
+ 	enum mxser_must_hwid hwid = port->board->must_hwid;
+ 	u8 gdl;
+ 
+ 	if (hwid == MOXA_OTHER_UART)
+ 		return false;
+ 	if (status & UART_LSR_BRK_ERROR_BITS)
+ 		return false;
+ 	if (hwid == MOXA_MUST_MU860_HWID && (status & MOXA_MUST_LSR_RERR))
+ 		return false;
+ 	if (status & MOXA_MUST_LSR_RERR)
+ 		return false;
+ 
+ 	gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
+ 	if (hwid == MOXA_MUST_MU150_HWID)
+ 		gdl &= MOXA_MUST_GDL_MASK;
+ 
+ 	if (gdl >= tty->receive_room && !port->ldisc_stop_rx)
+ 		mxser_stoprx(tty);
+ 
+ 	while (gdl--) {
+ 		u8 ch = inb(port->ioaddr + UART_RX);
+ 		tty_insert_flip_char(&port->port, ch, 0);
+ 		(*cnt)++;
+ 	}
+ 
+ 	return true;
+ }
+ 
+ static u8 mxser_receive_chars_old(struct tty_struct *tty,
+ 		                struct mxser_port *port, u8 status, int *cnt)
+ {
+ 	enum mxser_must_hwid hwid = port->board->must_hwid;
+ 	int recv_room = tty->receive_room;
++>>>>>>> 70640052324b (mxser: drop UART_MCR_AFE and UART_LSR_SPECIAL defines)
  	int ignored = 0;
 +	int cnt = 0;
 +	int recv_room;
  	int max = 256;
 -	u8 ch;
 +
 +	recv_room = tty->receive_room;
 +	if (recv_room == 0 && !port->ldisc_stop_rx)
 +		mxser_stoprx(tty);
 +	if (port->board->chip_flag != MOXA_OTHER_UART) {
 +
 +		if (*status & UART_LSR_SPECIAL)
 +			goto intr_old;
 +		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 +				(*status & MOXA_MUST_LSR_RERR))
 +			goto intr_old;
 +		if (*status & MOXA_MUST_LSR_RERR)
 +			goto intr_old;
 +
 +		gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
 +
 +		if (port->board->chip_flag == MOXA_MUST_MU150_HWID)
 +			gdl &= MOXA_MUST_GDL_MASK;
 +		if (gdl >= recv_room) {
 +			if (!port->ldisc_stop_rx)
 +				mxser_stoprx(tty);
 +		}
 +		while (gdl--) {
 +			ch = inb(port->ioaddr + UART_RX);
 +			tty_insert_flip_char(&port->port, ch, 0);
 +			cnt++;
 +		}
 +		goto end_intr;
 +	}
 +intr_old:
  
  	do {
  		if (max-- < 0)
@@@ -2239,8 -2105,8 +2272,13 @@@
  				break;
  		} else {
  			char flag = 0;
++<<<<<<< HEAD
 +			if (*status & UART_LSR_SPECIAL) {
 +				if (*status & UART_LSR_BI) {
++=======
+ 			if (status & UART_LSR_BRK_ERROR_BITS) {
+ 				if (status & UART_LSR_BI) {
++>>>>>>> 70640052324b (mxser: drop UART_MCR_AFE and UART_LSR_SPECIAL defines)
  					flag = TTY_BREAK;
  					port->icount.brk++;
  
* Unmerged path drivers/tty/mxser.c
