mxser: simplify mxser_interrupt and drop mxser_board::vector_mask

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 9cb5c9c3226ba78e33169721f31b459e6791d6ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/9cb5c9c3.failed

mxser_board::vector_mask is just a bitfield with bits set for all
available ports.  We can obtain this value simply by
"BIT(brd->info->nports) - 1" directly in the ISR. So remove vector_mask
and simplify the code a bit.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-15-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9cb5c9c3226ba78e33169721f31b459e6791d6ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index 399fb247a605,df59ca88acab..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -388,10 -368,9 +388,9 @@@ struct mxser_board 
  	int irq;
  	const struct mxser_cardinfo *info;
  	unsigned long vector;
- 	unsigned long vector_mask;
  
 -	enum mxser_must_hwid must_hwid;
 -	speed_t max_baud;
 +	int chip_flag;
 +	int uart_type;
  
  	struct mxser_port ports[MXSER_PORTS_PER_BOARD];
  };
@@@ -2337,18 -2269,16 +2336,23 @@@ static void mxser_transmit_chars(struc
   */
  static irqreturn_t mxser_interrupt(int irq, void *dev_id)
  {
 +	int status, iir, i;
  	struct mxser_board *brd = dev_id;
  	struct mxser_port *port;
 +	int max, irqbits, bits, msr;
  	unsigned int int_cnt, pass_counter = 0;
++<<<<<<< HEAD
 +	int handled = IRQ_NONE;
 +	struct tty_struct *tty;
++=======
+ 	unsigned int i, max = brd->info->nports;
+ 	int handled = IRQ_NONE;
+ 	u8 irqbits, bits, mask = BIT(max) - 1;
++>>>>>>> 9cb5c9c3226b (mxser: simplify mxser_interrupt and drop mxser_board::vector_mask)
  
- 	max = brd->info->nports;
  	while (pass_counter++ < MXSER_ISR_PASS_LIMIT) {
- 		irqbits = inb(brd->vector) & brd->vector_mask;
- 		if (irqbits == brd->vector_mask)
+ 		irqbits = inb(brd->vector) & mask;
+ 		if (irqbits == mask)
  			break;
  
  		handled = IRQ_HANDLED;
@@@ -2719,21 -2448,16 +2723,25 @@@ static int mxser_probe(struct pci_dev *
  	/* irq */
  	brd->irq = pdev->irq;
  
++<<<<<<< HEAD
 +	brd->chip_flag = CheckIsMoxaMust(brd->ports[0].ioaddr);
 +	brd->uart_type = PORT_16550A;
 +	brd->vector_mask = 0;
++=======
+ 	brd->must_hwid = mxser_must_get_hwid(brd->ports[0].ioaddr);
++>>>>>>> 9cb5c9c3226b (mxser: simplify mxser_interrupt and drop mxser_board::vector_mask)
  
 -	for (j = 0; j < UART_INFO_NUM; j++) {
 -		if (Gpci_uart_info[j].type == brd->must_hwid) {
 -			brd->max_baud = Gpci_uart_info[j].max_baud;
 -
 -			/* exception....CP-102 */
 -			if (brd->info->flags & MXSER_HIGHBAUD)
 -				brd->max_baud = 921600;
 -			break;
 +	for (i = 0; i < brd->info->nports; i++) {
 +		for (j = 0; j < UART_INFO_NUM; j++) {
 +			if (Gpci_uart_info[j].type == brd->chip_flag) {
 +				brd->ports[i].max_baud =
 +					Gpci_uart_info[j].max_baud;
 +
 +				/* exception....CP-102 */
 +				if (brd->info->flags & MXSER_HIGHBAUD)
 +					brd->ports[i].max_baud = 921600;
 +				break;
 +			}
  		}
  	}
  
* Unmerged path drivers/tty/mxser.c
