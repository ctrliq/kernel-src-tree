mxser: rename mxser_board::chip_flag to must_hwid

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 292955a7c011e2351a7ed6f8d7e418d4f3fdd585
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/292955a7.failed

It is named IsMoxaMustChipFlag in the original Moxa's driver. Over the
time, it was reduced to chip_flag which doesn't make much sense. So dub
it again by what it is: must_hwid (mxser_must_get_hwid assigns to it).

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-8-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 292955a7c011e2351a7ed6f8d7e418d4f3fdd585)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index d6e332ef223d,1865f965334a..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -1243,10 -1214,10 +1243,10 @@@ static int mxser_write(struct tty_struc
  		total += c;
  	}
  
 -	if (info->xmit_cnt && !tty->flow.stopped) {
 +	if (info->xmit_cnt && !tty->stopped) {
  		if (!tty->hw_stopped ||
  				(info->type == PORT_16550A) ||
- 				(info->board->chip_flag)) {
+ 				(info->board->must_hwid)) {
  			spin_lock_irqsave(&info->slock, flags);
  			outb(info->IER & ~UART_IER_THRI, info->ioaddr +
  					UART_IER);
@@@ -1274,10 -1245,10 +1274,10 @@@ static int mxser_put_char(struct tty_st
  	info->xmit_head &= SERIAL_XMIT_SIZE - 1;
  	info->xmit_cnt++;
  	spin_unlock_irqrestore(&info->slock, flags);
 -	if (!tty->flow.stopped) {
 +	if (!tty->stopped) {
  		if (!tty->hw_stopped ||
  				(info->type == PORT_16550A) ||
- 				info->board->chip_flag) {
+ 				info->board->must_hwid) {
  			spin_lock_irqsave(&info->slock, flags);
  			outb(info->IER & ~UART_IER_THRI, info->ioaddr + UART_IER);
  			info->IER |= UART_IER_THRI;
@@@ -1294,9 -1265,9 +1294,9 @@@ static void mxser_flush_chars(struct tt
  	struct mxser_port *info = tty->driver_data;
  	unsigned long flags;
  
 -	if (info->xmit_cnt <= 0 || tty->flow.stopped || !info->port.xmit_buf ||
 +	if (info->xmit_cnt <= 0 || tty->stopped || !info->port.xmit_buf ||
  			(tty->hw_stopped && info->type != PORT_16550A &&
- 			 !info->board->chip_flag))
+ 			 !info->board->must_hwid))
  		return;
  
  	spin_lock_irqsave(&info->slock, flags);
@@@ -2087,9 -1956,9 +2087,9 @@@ static void mxser_set_termios(struct tt
  
  	/* Handle sw stopped */
  	if ((old_termios->c_iflag & IXON) && !I_IXON(tty)) {
 -		tty->flow.stopped = 0;
 +		tty->stopped = 0;
  
- 		if (info->board->chip_flag) {
+ 		if (info->board->must_hwid) {
  			spin_lock_irqsave(&info->slock, flags);
  			mxser_disable_must_rx_software_flow_control(
  					info->ioaddr);
@@@ -2299,10 -2168,10 +2299,10 @@@ static void mxser_transmit_chars(struc
  	if (port->port.xmit_buf == NULL)
  		return;
  
 -	if (port->xmit_cnt <= 0 || tty->flow.stopped ||
 +	if (port->xmit_cnt <= 0 || tty->stopped ||
  			(tty->hw_stopped &&
  			(port->type != PORT_16550A) &&
- 			(!port->board->chip_flag))) {
+ 			(!port->board->must_hwid))) {
  		port->IER &= ~UART_IER_THRI;
  		outb(port->IER, port->ioaddr + UART_IER);
  		return;
@@@ -2730,7 -2452,7 +2730,11 @@@ static int mxser_probe(struct pci_dev *
  	/* irq */
  	brd->irq = pdev->irq;
  
++<<<<<<< HEAD
 +	brd->chip_flag = CheckIsMoxaMust(brd->ports[0].ioaddr);
++=======
+ 	brd->must_hwid = mxser_must_get_hwid(brd->ports[0].ioaddr);
++>>>>>>> 292955a7c011 (mxser: rename mxser_board::chip_flag to must_hwid)
  	brd->uart_type = PORT_16550A;
  	brd->vector_mask = 0;
  
* Unmerged path drivers/tty/mxser.c
