Bluetooth: hci_sock: fix endian bug in hci_sock_setsockopt()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit b9f9dbad0bd1c302d357fdd327c398f51f5fc2b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/b9f9dbad.failed

This copies a u16 into the high bits of an int, which works on a big
endian system but not on a little endian system.

Fixes: 09572fca7223 ("Bluetooth: hci_sock: Add support for BT_{SND,RCV}BUF")
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit b9f9dbad0bd1c302d357fdd327c398f51f5fc2b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/bluetooth/hci_sock.c
diff --cc net/bluetooth/hci_sock.c
index 8a2e7c651abb,33b3c0ffc339..000000000000
--- a/net/bluetooth/hci_sock.c
+++ b/net/bluetooth/hci_sock.c
@@@ -1914,10 -1908,11 +1914,11 @@@ done
  }
  
  static int hci_sock_setsockopt(struct socket *sock, int level, int optname,
 -			       sockptr_t optval, unsigned int len)
 +			       char __user *optval, unsigned int len)
  {
  	struct sock *sk = sock->sk;
- 	int err = 0, opt = 0;
+ 	int err = 0;
+ 	u16 opt;
  
  	BT_DBG("sk %p, opt %d", sk, optname);
  
@@@ -1943,7 -1938,7 +1944,11 @@@
  			goto done;
  		}
  
++<<<<<<< HEAD
 +		if (copy_from_user((char *) &opt, optval, sizeof(u16))) {
++=======
+ 		if (copy_from_sockptr(&opt, optval, sizeof(opt))) {
++>>>>>>> b9f9dbad0bd1 (Bluetooth: hci_sock: fix endian bug in hci_sock_setsockopt())
  			err = -EFAULT;
  			break;
  		}
* Unmerged path net/bluetooth/hci_sock.c
