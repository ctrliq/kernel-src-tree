mxser: drop mxser_port::custom_divisor

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit d811b26ba3a78d45ccfc8e562323d9104d321c87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/d811b26b.failed

It's an once-set constant, so define a macro for the constant
(MXSER_CUSTOM_DIVISOR) and use it in the code instead.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210618061516.662-37-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit d811b26ba3a78d45ccfc8e562323d9104d321c87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index b5f4f2beb09c,c4ee5cb6952e..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -175,15 -154,10 +175,20 @@@
  #define MXSER_PORTS		(MXSER_BOARDS * MXSER_PORTS_PER_BOARD)
  #define MXSER_ISR_PASS_LIMIT	100
  
 +/*CheckIsMoxaMust return value*/
 +#define MOXA_OTHER_UART		0x00
 +#define MOXA_MUST_MU150_HWID	0x01
 +#define MOXA_MUST_MU860_HWID	0x02
 +
  #define WAKEUP_CHARS		256
  
++<<<<<<< HEAD
 +#define UART_MCR_AFE		0x20
 +#define UART_LSR_SPECIAL	0x1E
++=======
+ #define MXSER_BAUD_BASE		921600
+ #define MXSER_CUSTOM_DIVISOR	(MXSER_BAUD_BASE * 16)
++>>>>>>> d811b26ba3a7 (mxser: drop mxser_port::custom_divisor)
  
  #define PCI_DEVICE_ID_POS104UL	0x1044
  #define PCI_DEVICE_ID_CB108	0x1080
@@@ -357,9 -285,6 +362,12 @@@ struct mxser_port 
  
  	unsigned char ldisc_stop_rx;
  
++<<<<<<< HEAD
 +	int custom_divisor;
 +	unsigned char err_shadow;
 +
++=======
++>>>>>>> d811b26ba3a7 (mxser: drop mxser_port::custom_divisor)
  	struct async_icount icount; /* kernel counters for 4 input interrupts */
  	unsigned int timeout;
  
@@@ -1343,10 -1222,10 +1351,10 @@@ static int mxser_get_serial_info(struc
  	ss->port = info->ioaddr,
  	ss->irq = info->board->irq,
  	ss->flags = info->port.flags,
 -	ss->baud_base = MXSER_BAUD_BASE,
 +	ss->baud_base = info->baud_base,
  	ss->close_delay = close_delay;
  	ss->closing_wait = closing_wait;
- 	ss->custom_divisor = info->custom_divisor,
+ 	ss->custom_divisor = MXSER_CUSTOM_DIVISOR,
  	mutex_unlock(&port->mutex);
  	return 0;
  }
@@@ -1404,9 -1282,9 +1412,9 @@@ static int mxser_set_serial_info(struc
  		port->close_delay = close_delay;
  		port->closing_wait = closing_wait;
  		if ((port->flags & ASYNC_SPD_MASK) == ASYNC_SPD_CUST &&
 -				(ss->baud_base != MXSER_BAUD_BASE ||
 +				(ss->baud_base != info->baud_base ||
  				ss->custom_divisor !=
- 				info->custom_divisor)) {
+ 				MXSER_CUSTOM_DIVISOR)) {
  			if (ss->custom_divisor == 0) {
  				mutex_unlock(&port->mutex);
  				return -EINVAL;
@@@ -2485,12 -2018,8 +2493,15 @@@ static int mxser_initbrd(struct mxser_b
  
  		process_txrx_fifo(info);
  
++<<<<<<< HEAD
 +		info->custom_divisor = info->baud_base * 16;
++=======
++>>>>>>> d811b26ba3a7 (mxser: drop mxser_port::custom_divisor)
  		info->port.close_delay = 5 * HZ / 10;
  		info->port.closing_wait = 30 * HZ;
 +		info->normal_termios = mxvar_sdriver->init_termios;
 +		memset(&info->mon_data, 0, sizeof(struct mxser_mon));
 +		info->err_shadow = 0;
  		spin_lock_init(&info->slock);
  
  		/* before set INT ISR, disable all int */
* Unmerged path drivers/tty/mxser.c
