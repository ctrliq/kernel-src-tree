tty: n_gsm: fix deadlock in gsmtty_open()

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author daniel.starke@siemens.com <daniel.starke@siemens.com>
commit a2ab75b8e76e455af7867e3835fd9cdf386b508f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/a2ab75b8.failed

In the current implementation the user may open a virtual tty which then
could fail to establish the underlying DLCI. The function gsmtty_open()
gets stuck in tty_port_block_til_ready() while waiting for a carrier rise.
This happens if the remote side fails to acknowledge the link establishment
request in time or completely. At some point gsm_dlci_close() is called
to abort the link establishment attempt. The function tries to inform the
associated virtual tty by performing a hangup. But the blocking loop within
tty_port_block_til_ready() is not informed about this event.
The patch proposed here fixes this by resetting the initialization state of
the virtual tty to ensure the loop exits and triggering it to make
tty_port_block_til_ready() return.

Fixes: e1eaea46bb40 ("tty: n_gsm line discipline")
	Cc: stable@vger.kernel.org
	Signed-off-by: Daniel Starke <daniel.starke@siemens.com>
Link: https://lore.kernel.org/r/20220218073123.2121-7-daniel.starke@siemens.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a2ab75b8e76e455af7867e3835fd9cdf386b508f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/n_gsm.c
diff --cc drivers/tty/n_gsm.c
index 65861bd541fc,fa92f727fdf8..000000000000
--- a/drivers/tty/n_gsm.c
+++ b/drivers/tty/n_gsm.c
@@@ -1454,7 -1456,10 +1454,14 @@@ static void gsm_dlci_close(struct gsm_d
  	dlci->state = DLCI_CLOSED;
  	if (dlci->addr != 0) {
  		tty_port_tty_hangup(&dlci->port, false);
++<<<<<<< HEAD
 +		kfifo_reset(dlci->fifo);
++=======
+ 		kfifo_reset(&dlci->fifo);
+ 		/* Ensure that gsmtty_open() can return. */
+ 		tty_port_set_initialized(&dlci->port, 0);
+ 		wake_up_interruptible(&dlci->port.open_wait);
++>>>>>>> a2ab75b8e76e (tty: n_gsm: fix deadlock in gsmtty_open())
  	} else
  		dlci->gsm->dead = true;
  	/* Unregister gsmtty driver,report gsmtty dev remove uevent for user */
* Unmerged path drivers/tty/n_gsm.c
