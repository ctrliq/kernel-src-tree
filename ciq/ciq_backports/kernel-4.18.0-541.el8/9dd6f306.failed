mxser: remove tty parameter from mxser_receive_chars_new()

jira LE-1907
cve CVE-2023-6546
Rebuild_History Non-Buildable kernel-4.18.0-541.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 9dd6f3063a733e0df2ff66f9c35419eb217d9af5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-541.el8/9dd6f306.failed

After the previous change (no plays with of tty->receive_room), the tty
parameter is unused.

	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20211118073125.12283-16-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9dd6f3063a733e0df2ff66f9c35419eb217d9af5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/mxser.c
diff --cc drivers/tty/mxser.c
index edf10c6c8cf9,10862d4bb885..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -2159,44 -1490,36 +2159,48 @@@ static int mxser_rs_break(struct tty_st
  	return 0;
  }
  
++<<<<<<< HEAD
 +static void mxser_receive_chars(struct tty_struct *tty,
 +				struct mxser_port *port, int *status)
++=======
+ static bool mxser_receive_chars_new(struct mxser_port *port, u8 status)
++>>>>>>> 9dd6f3063a73 (mxser: remove tty parameter from mxser_receive_chars_new())
  {
 -	enum mxser_must_hwid hwid = port->board->must_hwid;
 -	u8 gdl;
 -
 -	if (hwid == MOXA_OTHER_UART)
 -		return false;
 -	if (status & (UART_LSR_BRK_ERROR_BITS | MOXA_MUST_LSR_RERR))
 -		return false;
 -
 -	gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
 -	if (hwid == MOXA_MUST_MU150_HWID)
 -		gdl &= MOXA_MUST_GDL_MASK;
 -
 -	while (gdl--) {
 -		u8 ch = inb(port->ioaddr + UART_RX);
 -		tty_insert_flip_char(&port->port, ch, 0);
 -	}
 -
 -	return true;
 -}
 -
 -static u8 mxser_receive_chars_old(struct tty_struct *tty,
 -		                struct mxser_port *port, u8 status)
 -{
 -	enum mxser_must_hwid hwid = port->board->must_hwid;
 +	unsigned char ch, gdl;
  	int ignored = 0;
 +	int cnt = 0;
 +	int recv_room;
  	int max = 256;
 -	u8 ch;
 +
 +	recv_room = tty->receive_room;
 +	if (recv_room == 0 && !port->ldisc_stop_rx)
 +		mxser_stoprx(tty);
 +	if (port->board->chip_flag != MOXA_OTHER_UART) {
 +
 +		if (*status & UART_LSR_SPECIAL)
 +			goto intr_old;
 +		if (port->board->chip_flag == MOXA_MUST_MU860_HWID &&
 +				(*status & MOXA_MUST_LSR_RERR))
 +			goto intr_old;
 +		if (*status & MOXA_MUST_LSR_RERR)
 +			goto intr_old;
 +
 +		gdl = inb(port->ioaddr + MOXA_MUST_GDL_REGISTER);
 +
 +		if (port->board->chip_flag == MOXA_MUST_MU150_HWID)
 +			gdl &= MOXA_MUST_GDL_MASK;
 +		if (gdl >= recv_room) {
 +			if (!port->ldisc_stop_rx)
 +				mxser_stoprx(tty);
 +		}
 +		while (gdl--) {
 +			ch = inb(port->ioaddr + UART_RX);
 +			tty_insert_flip_char(&port->port, ch, 0);
 +			cnt++;
 +		}
 +		goto end_intr;
 +	}
 +intr_old:
  
  	do {
  		if (max-- < 0)
@@@ -2229,28 -1553,28 +2233,39 @@@
  					port->icount.overrun++;
  				}
  			}
 -			if (!tty_insert_flip_char(&port->port, ch, flag))
 +			tty_insert_flip_char(&port->port, ch, flag);
 +			cnt++;
 +			if (cnt >= recv_room) {
 +				if (!port->ldisc_stop_rx)
 +					mxser_stoprx(tty);
  				break;
 +			}
 +
  		}
  
 -		if (hwid)
 +		if (port->board->chip_flag)
  			break;
  
 -		status = inb(port->ioaddr + UART_LSR);
 -	} while (status & UART_LSR_DR);
 +		*status = inb(port->ioaddr + UART_LSR);
 +	} while (*status & UART_LSR_DR);
  
++<<<<<<< HEAD
 +end_intr:
 +	mxvar_log.rxcnt[tty->index] += cnt;
 +	port->mon_data.rxcnt += cnt;
 +	port->mon_data.up_rxcnt += cnt;
++=======
+ 	return status;
+ }
+ 
+ static u8 mxser_receive_chars(struct tty_struct *tty,
+ 		struct mxser_port *port, u8 status)
+ {
+ 	if (!mxser_receive_chars_new(port, status))
+ 		status = mxser_receive_chars_old(tty, port, status);
++>>>>>>> 9dd6f3063a73 (mxser: remove tty parameter from mxser_receive_chars_new())
  
  	tty_flip_buffer_push(&port->port);
 -
 -	return status;
  }
  
  static void mxser_transmit_chars(struct tty_struct *tty, struct mxser_port *port)
* Unmerged path drivers/tty/mxser.c
