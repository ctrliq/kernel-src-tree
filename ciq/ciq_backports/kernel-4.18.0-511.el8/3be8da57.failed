kernel/resource.c: fix kernel-doc markups

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-511.el8
commit-author Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
commit 3be8da570868a7989f1a0c11820ee1413877fa8c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-511.el8/3be8da57.failed

Kernel-doc markups should use this format:
        identifier - description

While here, fix a kernel-doc tag that was using, instead,
a normal comment block.

[akpm@linux-foundation.org: coding style fixes]

Link: https://lkml.kernel.org/r/c5e38e1070f8dbe2f9607a10b44afe2875bd966c.1605521731.git.mchehab+huawei@kernel.org
	Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
	Cc: "Jonathan Corbet" <corbet@lwn.net>
	Cc: Matthew Wilcox <willy@infradead.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3be8da570868a7989f1a0c11820ee1413877fa8c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/resource.c
diff --cc kernel/resource.c
index 3daca456921b,833394f9c608..000000000000
--- a/kernel/resource.c
+++ b/kernel/resource.c
@@@ -1336,6 -1366,66 +1340,69 @@@ int release_mem_region_adjustable(struc
  }
  #endif	/* CONFIG_MEMORY_HOTREMOVE */
  
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_MEMORY_HOTPLUG
+ static bool system_ram_resources_mergeable(struct resource *r1,
+ 					   struct resource *r2)
+ {
+ 	/* We assume either r1 or r2 is IORESOURCE_SYSRAM_MERGEABLE. */
+ 	return r1->flags == r2->flags && r1->end + 1 == r2->start &&
+ 	       r1->name == r2->name && r1->desc == r2->desc &&
+ 	       !r1->child && !r2->child;
+ }
+ 
+ /**
+  * merge_system_ram_resource - mark the System RAM resource mergeable and try to
+  *	merge it with adjacent, mergeable resources
+  * @res: resource descriptor
+  *
+  * This interface is intended for memory hotplug, whereby lots of contiguous
+  * system ram resources are added (e.g., via add_memory*()) by a driver, and
+  * the actual resource boundaries are not of interest (e.g., it might be
+  * relevant for DIMMs). Only resources that are marked mergeable, that have the
+  * same parent, and that don't have any children are considered. All mergeable
+  * resources must be immutable during the request.
+  *
+  * Note:
+  * - The caller has to make sure that no pointers to resources that are
+  *   marked mergeable are used anymore after this call - the resource might
+  *   be freed and the pointer might be stale!
+  * - release_mem_region_adjustable() will split on demand on memory hotunplug
+  */
+ void merge_system_ram_resource(struct resource *res)
+ {
+ 	const unsigned long flags = IORESOURCE_SYSTEM_RAM | IORESOURCE_BUSY;
+ 	struct resource *cur;
+ 
+ 	if (WARN_ON_ONCE((res->flags & flags) != flags))
+ 		return;
+ 
+ 	write_lock(&resource_lock);
+ 	res->flags |= IORESOURCE_SYSRAM_MERGEABLE;
+ 
+ 	/* Try to merge with next item in the list. */
+ 	cur = res->sibling;
+ 	if (cur && system_ram_resources_mergeable(res, cur)) {
+ 		res->end = cur->end;
+ 		res->sibling = cur->sibling;
+ 		free_resource(cur);
+ 	}
+ 
+ 	/* Try to merge with previous item in the list. */
+ 	cur = res->parent->child;
+ 	while (cur && cur->sibling != res)
+ 		cur = cur->sibling;
+ 	if (cur && system_ram_resources_mergeable(cur, res)) {
+ 		cur->end = res->end;
+ 		cur->sibling = res->sibling;
+ 		free_resource(res);
+ 	}
+ 	write_unlock(&resource_lock);
+ }
+ #endif	/* CONFIG_MEMORY_HOTPLUG */
+ 
++>>>>>>> 3be8da570868 (kernel/resource.c: fix kernel-doc markups)
  /*
   * Managed region resource
   */
* Unmerged path kernel/resource.c
