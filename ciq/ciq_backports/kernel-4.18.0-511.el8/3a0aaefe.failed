mm/memory_hotplug: guard more declarations by CONFIG_MEMORY_HOTPLUG

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-511.el8
commit-author David Hildenbrand <david@redhat.com>
commit 3a0aaefe4134951b4e89feb873c457428154530c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-511.el8/3a0aaefe.failed

We soon want to pass flags via a new type to add_memory() and friends.
That revealed that we currently don't guard some declarations by
CONFIG_MEMORY_HOTPLUG.

While some definitions could be moved to different places, let's keep it
minimal for now and use CONFIG_MEMORY_HOTPLUG for all functions only
compiled with CONFIG_MEMORY_HOTPLUG.

Wrap sparse_decode_mem_map() into CONFIG_MEMORY_HOTPLUG, it's only called
from CONFIG_MEMORY_HOTPLUG code.

While at it, remove allow_online_pfn_range(), which is no longer around,
and mhp_notimplemented(), which is unused.

	Signed-off-by: David Hildenbrand <david@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Pankaj Gupta <pankaj.gupta.linux@gmail.com>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Wei Yang <richardw.yang@linux.intel.com>
	Cc: Anton Blanchard <anton@ozlabs.org>
	Cc: Ard Biesheuvel <ardb@kernel.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: Dave Jiang <dave.jiang@intel.com>
	Cc: Eric Biederman <ebiederm@xmission.com>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Heiko Carstens <hca@linux.ibm.com>
	Cc: Jason Gunthorpe <jgg@ziepe.ca>
	Cc: Jason Wang <jasowang@redhat.com>
	Cc: Juergen Gross <jgross@suse.com>
	Cc: Julien Grall <julien@xen.org>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Len Brown <lenb@kernel.org>
	Cc: Leonardo Bras <leobras.c@gmail.com>
	Cc: Libor Pechacek <lpechacek@suse.cz>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: "Michael S. Tsirkin" <mst@redhat.com>
	Cc: Nathan Lynch <nathanl@linux.ibm.com>
	Cc: "Oliver O'Halloran" <oohall@gmail.com>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Pingfan Liu <kernelfans@gmail.com>
	Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
	Cc: Roger Pau Monn√© <roger.pau@citrix.com>
	Cc: Stefano Stabellini <sstabellini@kernel.org>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Cc: Wei Liu <wei.liu@kernel.org>
Link: https://lkml.kernel.org/r/20200911103459.10306-4-david@redhat.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 3a0aaefe4134951b4e89feb873c457428154530c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/memory_hotplug.h
diff --cc include/linux/memory_hotplug.h
index 9f9deec9dd0c,1504b4d5ae6c..000000000000
--- a/include/linux/memory_hotplug.h
+++ b/include/linux/memory_hotplug.h
@@@ -332,7 -334,11 +325,15 @@@ static inline int remove_memory(int nid
  static inline void __remove_memory(int nid, u64 start, u64 size) {}
  #endif /* CONFIG_MEMORY_HOTREMOVE */
  
++<<<<<<< HEAD
 +extern void __ref free_area_init_core_hotplug(struct pglist_data *pgdat);
++=======
+ extern void set_zone_contiguous(struct zone *zone);
+ extern void clear_zone_contiguous(struct zone *zone);
+ 
+ #ifdef CONFIG_MEMORY_HOTPLUG
+ extern void __ref free_area_init_core_hotplug(int nid);
++>>>>>>> 3a0aaefe4134 (mm/memory_hotplug: guard more declarations by CONFIG_MEMORY_HOTPLUG)
  extern int __add_memory(int nid, u64 start, u64 size);
  extern int add_memory(int nid, u64 start, u64 size);
  extern int add_memory_resource(int nid, struct resource *resource);
* Unmerged path include/linux/memory_hotplug.h
diff --git a/mm/sparse.c b/mm/sparse.c
index fdc42d42fd19..a45cddf0a51c 100644
--- a/mm/sparse.c
+++ b/mm/sparse.c
@@ -265,6 +265,7 @@ static unsigned long sparse_encode_mem_map(struct page *mem_map, unsigned long p
 	return coded_mem_map;
 }
 
+#ifdef CONFIG_MEMORY_HOTPLUG
 /*
  * Decode mem_map from the coded memmap
  */
@@ -274,6 +275,7 @@ struct page *sparse_decode_mem_map(unsigned long coded_mem_map, unsigned long pn
 	coded_mem_map &= SECTION_MAP_MASK;
 	return ((struct page *)coded_mem_map) + section_nr_to_pfn(pnum);
 }
+#endif /* CONFIG_MEMORY_HOTPLUG */
 
 static void __meminit sparse_init_one_section(struct mem_section *ms,
 		unsigned long pnum, struct page *mem_map,
