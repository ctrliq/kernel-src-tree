virtio-mem: Big Block Mode (BBM) - safe memory hotunplug

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-511.el8
commit-author David Hildenbrand <david@redhat.com>
commit 3711387a7543f2716e52ce5a5d92e3d580423a40
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-511.el8/3711387a.failed

Let's add a safe mechanism to unplug memory, avoiding long/endless loops
when trying to offline memory - similar to in SBM.

Fake-offline all memory (via alloc_contig_range()) before trying to
offline+remove it. Use this mode as default, but allow to enable the other
mode explicitly (which could give better memory hotunplug guarantees in
some environments).

The "unsafe" mode can be enabled e.g., via virtio_mem.bbm_safe_unplug=0
on the cmdline.

	Reviewed-by: Wei Yang <richard.weiyang@linux.alibaba.com>
	Cc: "Michael S. Tsirkin" <mst@redhat.com>
	Cc: Jason Wang <jasowang@redhat.com>
	Cc: Pankaj Gupta <pankaj.gupta.linux@gmail.com>
	Cc: Michal Hocko <mhocko@kernel.org>
	Cc: Oscar Salvador <osalvador@suse.de>
	Cc: Wei Yang <richard.weiyang@linux.alibaba.com>
	Cc: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: David Hildenbrand <david@redhat.com>
Link: https://lore.kernel.org/r/20201112133815.13332-30-david@redhat.com
	Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
(cherry picked from commit 3711387a7543f2716e52ce5a5d92e3d580423a40)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/virtio/virtio_mem.c
* Unmerged path drivers/virtio/virtio_mem.c
* Unmerged path drivers/virtio/virtio_mem.c
