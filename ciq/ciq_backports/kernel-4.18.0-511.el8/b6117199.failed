mm/memory_hotplug: prepare passing flags to add_memory() and friends

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-511.el8
commit-author David Hildenbrand <david@redhat.com>
commit b6117199787c60539105d2de0d010146e8396fc3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-511.el8/b6117199.failed

We soon want to pass flags, e.g., to mark added System RAM resources.
mergeable.  Prepare for that.

This patch is based on a similar patch by Oscar Salvador:

https://lkml.kernel.org/r/20190625075227.15193-3-osalvador@suse.de

	Signed-off-by: David Hildenbrand <david@redhat.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Reviewed-by: Juergen Gross <jgross@suse.com> # Xen related part
	Reviewed-by: Pankaj Gupta <pankaj.gupta.linux@gmail.com>
	Acked-by: Wei Liu <wei.liu@kernel.org>
	Cc: Michal Hocko <mhocko@suse.com>
	Cc: Dan Williams <dan.j.williams@intel.com>
	Cc: Jason Gunthorpe <jgg@ziepe.ca>
	Cc: Baoquan He <bhe@redhat.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
	Cc: Len Brown <lenb@kernel.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Vishal Verma <vishal.l.verma@intel.com>
	Cc: Dave Jiang <dave.jiang@intel.com>
	Cc: "K. Y. Srinivasan" <kys@microsoft.com>
	Cc: Haiyang Zhang <haiyangz@microsoft.com>
	Cc: Stephen Hemminger <sthemmin@microsoft.com>
	Cc: Wei Liu <wei.liu@kernel.org>
	Cc: Heiko Carstens <hca@linux.ibm.com>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: "Michael S. Tsirkin" <mst@redhat.com>
	Cc: Jason Wang <jasowang@redhat.com>
	Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
	Cc: Stefano Stabellini <sstabellini@kernel.org>
	Cc: "Oliver O'Halloran" <oohall@gmail.com>
	Cc: Pingfan Liu <kernelfans@gmail.com>
	Cc: Nathan Lynch <nathanl@linux.ibm.com>
	Cc: Libor Pechacek <lpechacek@suse.cz>
	Cc: Anton Blanchard <anton@ozlabs.org>
	Cc: Leonardo Bras <leobras.c@gmail.com>
	Cc: Ard Biesheuvel <ardb@kernel.org>
	Cc: Eric Biederman <ebiederm@xmission.com>
	Cc: Julien Grall <julien@xen.org>
	Cc: Kees Cook <keescook@chromium.org>
	Cc: Roger Pau Monn√© <roger.pau@citrix.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Wei Yang <richardw.yang@linux.intel.com>
Link: https://lkml.kernel.org/r/20200911103459.10306-5-david@redhat.com
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit b6117199787c60539105d2de0d010146e8396fc3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/hotplug-memory.c
#	drivers/dax/kmem.c
#	drivers/s390/char/sclp_cmd.c
#	drivers/virtio/virtio_mem.c
#	include/linux/memory_hotplug.h
diff --cc arch/powerpc/platforms/pseries/hotplug-memory.c
index c8e2b49386df,d8bbf0cc1601..000000000000
--- a/arch/powerpc/platforms/pseries/hotplug-memory.c
+++ b/arch/powerpc/platforms/pseries/hotplug-memory.c
@@@ -627,15 -602,11 +627,19 @@@ static int dlpar_add_lmb(struct drmem_l
  		return rc;
  	}
  
 -	lmb_set_nid(lmb);
  	block_sz = memory_block_size_bytes();
  
 +	/* Find the node id for this LMB.  Fake one if necessary. */
 +	nid = of_drconf_to_nid_single(lmb);
 +	if (nid < 0 || !node_possible(nid))
 +		nid = first_online_node;
 +
  	/* Add the memory */
++<<<<<<< HEAD
 +	rc = __add_memory(nid, lmb->base_addr, block_sz);
++=======
+ 	rc = __add_memory(lmb->nid, lmb->base_addr, block_sz, MHP_NONE);
++>>>>>>> b6117199787c (mm/memory_hotplug: prepare passing flags to add_memory() and friends)
  	if (rc) {
  		invalidate_lmb_associativity_index(lmb);
  		return rc;
diff --cc drivers/s390/char/sclp_cmd.c
index 293751fb36cd,f6e97f0830f6..000000000000
--- a/drivers/s390/char/sclp_cmd.c
+++ b/drivers/s390/char/sclp_cmd.c
@@@ -410,7 -406,7 +410,11 @@@ static void __init add_memory_merged(u1
  	if (!size)
  		goto skip_add;
  	for (addr = start; addr < start + size; addr += block_size)
++<<<<<<< HEAD
 +		add_memory(numa_pfn_to_nid(PFN_DOWN(addr)), addr, block_size);
++=======
+ 		add_memory(0, addr, block_size, MHP_NONE);
++>>>>>>> b6117199787c (mm/memory_hotplug: prepare passing flags to add_memory() and friends)
  skip_add:
  	first_rn = rn;
  	num = 1;
diff --cc include/linux/memory_hotplug.h
index 9f9deec9dd0c,33eb80fdba22..000000000000
--- a/include/linux/memory_hotplug.h
+++ b/include/linux/memory_hotplug.h
@@@ -332,12 -340,18 +338,25 @@@ static inline int remove_memory(int nid
  static inline void __remove_memory(int nid, u64 start, u64 size) {}
  #endif /* CONFIG_MEMORY_HOTREMOVE */
  
++<<<<<<< HEAD
 +extern void __ref free_area_init_core_hotplug(struct pglist_data *pgdat);
 +extern int __add_memory(int nid, u64 start, u64 size);
 +extern int add_memory(int nid, u64 start, u64 size);
 +extern int add_memory_resource(int nid, struct resource *resource);
++=======
+ extern void set_zone_contiguous(struct zone *zone);
+ extern void clear_zone_contiguous(struct zone *zone);
+ 
+ #ifdef CONFIG_MEMORY_HOTPLUG
+ extern void __ref free_area_init_core_hotplug(int nid);
+ extern int __add_memory(int nid, u64 start, u64 size, mhp_t mhp_flags);
+ extern int add_memory(int nid, u64 start, u64 size, mhp_t mhp_flags);
+ extern int add_memory_resource(int nid, struct resource *resource,
+ 			       mhp_t mhp_flags);
++>>>>>>> b6117199787c (mm/memory_hotplug: prepare passing flags to add_memory() and friends)
  extern int add_memory_driver_managed(int nid, u64 start, u64 size,
- 				     const char *resource_name);
+ 				     const char *resource_name,
+ 				     mhp_t mhp_flags);
  extern void move_pfn_range_to_zone(struct zone *zone, unsigned long start_pfn,
  				   unsigned long nr_pages,
  				   struct vmem_altmap *altmap, int migratetype);
* Unmerged path drivers/dax/kmem.c
* Unmerged path drivers/virtio/virtio_mem.c
diff --git a/arch/powerpc/platforms/powernv/memtrace.c b/arch/powerpc/platforms/powernv/memtrace.c
index 0dc7ef95edbb..6acff97bf7f4 100644
--- a/arch/powerpc/platforms/powernv/memtrace.c
+++ b/arch/powerpc/platforms/powernv/memtrace.c
@@ -228,7 +228,7 @@ static int memtrace_online(void)
 			ent->mem = 0;
 		}
 
-		if (add_memory(ent->nid, ent->start, ent->size)) {
+		if (add_memory(ent->nid, ent->start, ent->size, MHP_NONE)) {
 			pr_err("Failed to add trace memory to node %d\n",
 				ent->nid);
 			ret += 1;
* Unmerged path arch/powerpc/platforms/pseries/hotplug-memory.c
diff --git a/drivers/acpi/acpi_memhotplug.c b/drivers/acpi/acpi_memhotplug.c
index b5b92cb65d63..e71aeaabc68c 100644
--- a/drivers/acpi/acpi_memhotplug.c
+++ b/drivers/acpi/acpi_memhotplug.c
@@ -204,7 +204,8 @@ static int acpi_memory_enable_device(struct acpi_memory_device *mem_device)
 		if (node < 0)
 			node = memory_add_physaddr_to_nid(info->start_addr);
 
-		result = __add_memory(node, info->start_addr, info->length);
+		result = __add_memory(node, info->start_addr, info->length,
+				      MHP_NONE);
 
 		/*
 		 * If the memory block has been used by the kernel, add_memory()
diff --git a/drivers/base/memory.c b/drivers/base/memory.c
index 7a112f4e3663..e91a97017b86 100644
--- a/drivers/base/memory.c
+++ b/drivers/base/memory.c
@@ -453,7 +453,8 @@ static ssize_t probe_store(struct device *dev, struct device_attribute *attr,
 
 	nid = memory_add_physaddr_to_nid(phys_addr);
 	ret = __add_memory(nid, phys_addr,
-			   MIN_MEMORY_BLOCK_SIZE * sections_per_block);
+			   MIN_MEMORY_BLOCK_SIZE * sections_per_block,
+			   MHP_NONE);
 
 	if (ret)
 		goto out;
* Unmerged path drivers/dax/kmem.c
diff --git a/drivers/hv/hv_balloon.c b/drivers/hv/hv_balloon.c
index ca15067d41ec..2361fd89472a 100644
--- a/drivers/hv/hv_balloon.c
+++ b/drivers/hv/hv_balloon.c
@@ -746,7 +746,7 @@ static void hv_mem_hot_add(unsigned long start, unsigned long size,
 
 		nid = memory_add_physaddr_to_nid(PFN_PHYS(start_pfn));
 		ret = add_memory(nid, PFN_PHYS((start_pfn)),
-				(HA_CHUNK << PAGE_SHIFT));
+				(HA_CHUNK << PAGE_SHIFT), MHP_NONE);
 
 		if (ret) {
 			pr_err("hot_add memory failed error is %d\n", ret);
* Unmerged path drivers/s390/char/sclp_cmd.c
* Unmerged path drivers/virtio/virtio_mem.c
diff --git a/drivers/xen/balloon.c b/drivers/xen/balloon.c
index b32d3f322e0d..4c125b072e3e 100644
--- a/drivers/xen/balloon.c
+++ b/drivers/xen/balloon.c
@@ -397,7 +397,7 @@ static enum bp_state reserve_additional_memory(void)
 	mutex_unlock(&balloon_mutex);
 	/* add_memory_resource() requires the device_hotplug lock */
 	lock_device_hotplug();
-	rc = add_memory_resource(nid, resource);
+	rc = add_memory_resource(nid, resource, MHP_NONE);
 	unlock_device_hotplug();
 	mutex_lock(&balloon_mutex);
 
* Unmerged path include/linux/memory_hotplug.h
diff --git a/mm/memory_hotplug.c b/mm/memory_hotplug.c
index 80f0508943e1..fe5865b693ea 100644
--- a/mm/memory_hotplug.c
+++ b/mm/memory_hotplug.c
@@ -1032,7 +1032,7 @@ static int online_memory_block(struct memory_block *mem, void *arg)
  *
  * we are OK calling __meminit stuff here - we have CONFIG_MEMORY_HOTPLUG
  */
-int __ref add_memory_resource(int nid, struct resource *res)
+int __ref add_memory_resource(int nid, struct resource *res, mhp_t mhp_flags)
 {
 	struct mhp_params params = { .pgprot = PAGE_KERNEL };
 	u64 start, size;
@@ -1107,7 +1107,7 @@ int __ref add_memory_resource(int nid, struct resource *res)
 }
 
 /* requires device_hotplug_lock, see add_memory_resource() */
-int __ref __add_memory(int nid, u64 start, u64 size)
+int __ref __add_memory(int nid, u64 start, u64 size, mhp_t mhp_flags)
 {
 	struct resource *res;
 	int ret;
@@ -1116,18 +1116,18 @@ int __ref __add_memory(int nid, u64 start, u64 size)
 	if (IS_ERR(res))
 		return PTR_ERR(res);
 
-	ret = add_memory_resource(nid, res);
+	ret = add_memory_resource(nid, res, mhp_flags);
 	if (ret < 0)
 		release_memory_resource(res);
 	return ret;
 }
 
-int add_memory(int nid, u64 start, u64 size)
+int add_memory(int nid, u64 start, u64 size, mhp_t mhp_flags)
 {
 	int rc;
 
 	lock_device_hotplug();
-	rc = __add_memory(nid, start, size);
+	rc = __add_memory(nid, start, size, mhp_flags);
 	unlock_device_hotplug();
 
 	return rc;
@@ -1156,7 +1156,7 @@ EXPORT_SYMBOL_GPL(add_memory);
  * "System RAM ($DRIVER)".
  */
 int add_memory_driver_managed(int nid, u64 start, u64 size,
-			      const char *resource_name)
+			      const char *resource_name, mhp_t mhp_flags)
 {
 	struct resource *res;
 	int rc;
@@ -1174,7 +1174,7 @@ int add_memory_driver_managed(int nid, u64 start, u64 size,
 		goto out_unlock;
 	}
 
-	rc = add_memory_resource(nid, res);
+	rc = add_memory_resource(nid, res, mhp_flags);
 	if (rc < 0)
 		release_memory_resource(res);
 
