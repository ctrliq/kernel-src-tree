ipvlan: hold lower dev to avoid possible use-after-free

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-492.el8
commit-author Mahesh Bandewar <maheshb@google.com>
commit 40b9d1ab63f5c4f3cb69450044d07b45e5af72e1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-492.el8/40b9d1ab.failed

Recently syzkaller discovered the issue of disappearing lower
device (NETDEV_UNREGISTER) while the virtual device (like
macvlan) is still having it as a lower device. So it's just
a matter of time similar discovery will be made for IPvlan
device setup. So fixing it preemptively. Also while at it,
add a refcount tracker.

Fixes: 2ad7bf363841 ("ipvlan: Initial check-in of the IPVLAN driver.")
	Signed-off-by: Mahesh Bandewar <maheshb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 40b9d1ab63f5c4f3cb69450044d07b45e5af72e1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ipvlan/ipvlan_main.c
diff --cc drivers/net/ipvlan/ipvlan_main.c
index 7923dadc881a,796a38f9d7b2..000000000000
--- a/drivers/net/ipvlan/ipvlan_main.c
+++ b/drivers/net/ipvlan/ipvlan_main.c
@@@ -166,11 -96,9 +167,17 @@@ static void ipvlan_port_destroy(struct 
  	struct ipvl_port *port = ipvlan_port_get_rtnl(dev);
  	struct sk_buff *skb;
  
++<<<<<<< HEAD
 +	if (port->mode == IPVLAN_MODE_L3S) {
 +		dev->priv_flags &= ~IFF_L3MDEV_RX_HANDLER;
 +		ipvlan_unregister_nf_hook(dev_net(dev));
 +		dev->l3mdev_ops = NULL;
 +	}
++=======
+ 	netdev_put(dev, &port->dev_tracker);
+ 	if (port->mode == IPVLAN_MODE_L3S)
+ 		ipvlan_l3s_unregister(port);
++>>>>>>> 40b9d1ab63f5 (ipvlan: hold lower dev to avoid possible use-after-free)
  	netdev_rx_handler_unregister(dev);
  	cancel_work_sync(&port->wq);
  	while ((skb = __skb_dequeue(&port->backlog)) != NULL) {
diff --git a/drivers/net/ipvlan/ipvlan.h b/drivers/net/ipvlan/ipvlan.h
index adb826f55e60..d4c8823bdf34 100644
--- a/drivers/net/ipvlan/ipvlan.h
+++ b/drivers/net/ipvlan/ipvlan.h
@@ -103,6 +103,7 @@ struct ipvl_port {
 	struct sk_buff_head	backlog;
 	int			count;
 	struct ida		ida;
+	netdevice_tracker	dev_tracker;
 };
 
 struct ipvl_skb_cb {
* Unmerged path drivers/net/ipvlan/ipvlan_main.c
