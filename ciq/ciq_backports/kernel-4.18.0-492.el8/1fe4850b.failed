bpf: bpf_fib_lookup should not return neigh in NUD_FAILED state

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-492.el8
commit-author Martin KaFai Lau <martin.lau@kernel.org>
commit 1fe4850b34ab512ff911e2c035c75fb6438f7307
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-492.el8/1fe4850b.failed

The bpf_fib_lookup() helper does not only look up the fib (ie. route)
but it also looks up the neigh. Before returning the neigh, the helper
does not check for NUD_VALID. When a neigh state (neigh->nud_state)
is in NUD_FAILED, its dmac (neigh->ha) could be all zeros. The helper
still returns SUCCESS instead of NO_NEIGH in this case. Because of the
SUCCESS return value, the bpf prog directly uses the returned dmac
and ends up filling all zero in the eth header.

This patch checks for NUD_VALID and returns NO_NEIGH if the neigh is
not valid.

	Signed-off-by: Martin KaFai Lau <martin.lau@kernel.org>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20230217004150.2980689-3-martin.lau@linux.dev
(cherry picked from commit 1fe4850b34ab512ff911e2c035c75fb6438f7307)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/filter.c
diff --cc net/core/filter.c
index 3017322e6dcf,8daaaf76ab15..000000000000
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@@ -5408,8 -5835,21 +5408,26 @@@ static int bpf_ipv4_fib_lookup(struct n
  	/* xdp and cls_bpf programs are run in RCU-bh so
  	 * rcu_read_lock_bh is not needed here
  	 */
++<<<<<<< HEAD
 +	neigh = __ipv4_neigh_lookup_noref(dev, (__force u32)params->ipv4_dst);
 +	if (!neigh)
++=======
+ 	if (likely(nhc->nhc_gw_family != AF_INET6)) {
+ 		if (nhc->nhc_gw_family)
+ 			params->ipv4_dst = nhc->nhc_gw.ipv4;
+ 
+ 		neigh = __ipv4_neigh_lookup_noref(dev,
+ 						 (__force u32)params->ipv4_dst);
+ 	} else {
+ 		struct in6_addr *dst = (struct in6_addr *)params->ipv6_dst;
+ 
+ 		params->family = AF_INET6;
+ 		*dst = nhc->nhc_gw.ipv6;
+ 		neigh = __ipv6_neigh_lookup_noref_stub(dev, dst);
+ 	}
+ 
+ 	if (!neigh || !(neigh->nud_state & NUD_VALID))
++>>>>>>> 1fe4850b34ab (bpf: bpf_fib_lookup should not return neigh in NUD_FAILED state)
  		return BPF_FIB_LKUP_RET_NO_NEIGH;
  
  	return bpf_fib_set_fwd_params(params, neigh, dev, mtu);
* Unmerged path net/core/filter.c
