devlink: introduce framework for selftests

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Vikas Gupta <vikas.gupta@broadcom.com>
commit 08f588fa301bef264576fc915da6bf31b585a824
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/08f588fa.failed

Add a framework for running selftests.
Framework exposes devlink commands and test suite(s) to the user
to execute and query the supported tests by the driver.

Below are new entries in devlink_nl_ops
devlink_nl_cmd_selftests_show_doit/dumpit: To query the supported
selftests by the drivers.
devlink_nl_cmd_selftests_run: To execute selftests. Users can
provide a test mask for executing group tests or standalone tests.

Documentation/networking/devlink/ path is already part of MAINTAINERS &
the new files come under this path. Hence no update needed to the
MAINTAINERS

	Signed-off-by: Vikas Gupta <vikas.gupta@broadcom.com>
	Reviewed-by: Andy Gospodarek <gospo@broadcom.com>
	Reviewed-by: Jiri Pirko <jiri@nvidia.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 08f588fa301bef264576fc915da6bf31b585a824)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/devlink.h
#	net/core/devlink.c
diff --cc include/uapi/linux/devlink.h
index b897b80770f6,2f24b53a87a5..000000000000
--- a/include/uapi/linux/devlink.h
+++ b/include/uapi/linux/devlink.h
@@@ -131,6 -131,14 +131,17 @@@ enum devlink_command 
  	DEVLINK_CMD_RATE_NEW,
  	DEVLINK_CMD_RATE_DEL,
  
++<<<<<<< HEAD
++=======
+ 	DEVLINK_CMD_LINECARD_GET,		/* can dump */
+ 	DEVLINK_CMD_LINECARD_SET,
+ 	DEVLINK_CMD_LINECARD_NEW,
+ 	DEVLINK_CMD_LINECARD_DEL,
+ 
+ 	DEVLINK_CMD_SELFTESTS_GET,	/* can dump */
+ 	DEVLINK_CMD_SELFTESTS_RUN,
+ 
++>>>>>>> 08f588fa301b (devlink: introduce framework for selftests)
  	/* add new commands above here */
  	__DEVLINK_CMD_MAX,
  	DEVLINK_CMD_MAX = __DEVLINK_CMD_MAX - 1
@@@ -553,6 -598,15 +588,18 @@@ enum devlink_attr 
  
  	DEVLINK_ATTR_REGION_MAX_SNAPSHOTS,	/* u32 */
  
++<<<<<<< HEAD
++=======
+ 	DEVLINK_ATTR_LINECARD_INDEX,		/* u32 */
+ 	DEVLINK_ATTR_LINECARD_STATE,		/* u8 */
+ 	DEVLINK_ATTR_LINECARD_TYPE,		/* string */
+ 	DEVLINK_ATTR_LINECARD_SUPPORTED_TYPES,	/* nested */
+ 
+ 	DEVLINK_ATTR_NESTED_DEVLINK,		/* nested */
+ 
+ 	DEVLINK_ATTR_SELFTESTS,			/* nested */
+ 
++>>>>>>> 08f588fa301b (devlink: introduce framework for selftests)
  	/* add new attributes above here, update the policy in devlink.c */
  
  	__DEVLINK_ATTR_MAX,
diff --cc net/core/devlink.c
index 571e4c3d21fd,efeba223b9b8..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -8598,6 -9171,9 +8802,12 @@@ static const struct nla_policy devlink_
  	[DEVLINK_ATTR_RATE_TX_MAX] = { .type = NLA_U64 },
  	[DEVLINK_ATTR_RATE_NODE_NAME] = { .type = NLA_NUL_STRING },
  	[DEVLINK_ATTR_RATE_PARENT_NODE_NAME] = { .type = NLA_NUL_STRING },
++<<<<<<< HEAD
++=======
+ 	[DEVLINK_ATTR_LINECARD_INDEX] = { .type = NLA_U32 },
+ 	[DEVLINK_ATTR_LINECARD_TYPE] = { .type = NLA_NUL_STRING },
+ 	[DEVLINK_ATTR_SELFTESTS] = { .type = NLA_NESTED },
++>>>>>>> 08f588fa301b (devlink: introduce framework for selftests)
  };
  
  static const struct genl_small_ops devlink_nl_ops[] = {
diff --git a/Documentation/networking/devlink/devlink-selftests.rst b/Documentation/networking/devlink/devlink-selftests.rst
new file mode 100644
index 000000000000..c0aa1f3aef0d
--- /dev/null
+++ b/Documentation/networking/devlink/devlink-selftests.rst
@@ -0,0 +1,38 @@
+.. SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
+
+=================
+Devlink Selftests
+=================
+
+The ``devlink-selftests`` API allows executing selftests on the device.
+
+Tests Mask
+==========
+The ``devlink-selftests`` command should be run with a mask indicating
+the tests to be executed.
+
+Tests Description
+=================
+The following is a list of tests that drivers may execute.
+
+.. list-table:: List of tests
+   :widths: 5 90
+
+   * - Name
+     - Description
+   * - ``DEVLINK_SELFTEST_FLASH``
+     - Devices may have the firmware on non-volatile memory on the board, e.g.
+       flash. This particular test helps to run a flash selftest on the device.
+       Implementation of the test is left to the driver/firmware.
+
+example usage
+-------------
+
+.. code:: shell
+
+    # Query selftests supported on the devlink device
+    $ devlink dev selftests show DEV
+    # Query selftests supported on all devlink devices
+    $ devlink dev selftests show
+    # Executes selftests on the device
+    $ devlink dev selftests run DEV id flash
diff --git a/include/net/devlink.h b/include/net/devlink.h
index f7e21a59492e..3164225cf628 100644
--- a/include/net/devlink.h
+++ b/include/net/devlink.h
@@ -1473,6 +1473,27 @@ struct devlink_ops {
 				    struct devlink_rate *parent,
 				    void *priv_child, void *priv_parent,
 				    struct netlink_ext_ack *extack);
+	/**
+	 * selftests_check() - queries if selftest is supported
+	 * @devlink: devlink instance
+	 * @id: test index
+	 * @extack: extack for reporting error messages
+	 *
+	 * Return: true if test is supported by the driver
+	 */
+	bool (*selftest_check)(struct devlink *devlink, unsigned int id,
+			       struct netlink_ext_ack *extack);
+	/**
+	 * selftest_run() - Runs a selftest
+	 * @devlink: devlink instance
+	 * @id: test index
+	 * @extack: extack for reporting error messages
+	 *
+	 * Return: status of the test
+	 */
+	enum devlink_selftest_status
+	(*selftest_run)(struct devlink *devlink, unsigned int id,
+			struct netlink_ext_ack *extack);
 };
 
 void *devlink_priv(struct devlink *devlink);
* Unmerged path include/uapi/linux/devlink.h
* Unmerged path net/core/devlink.c
