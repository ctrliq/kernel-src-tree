x86/compressed/64: Add identity mappings for setup_data entries

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Michael Roth <michael.roth@amd.com>
commit b57feed2cc2622ae14b2fa62f19e973e5e0a60cf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/b57feed2.failed

The decompressed kernel initially relies on the identity map set up by
the boot/compressed kernel for accessing things like boot_params. With
the recent introduction of SEV-SNP support, the decompressed kernel
also needs to access the setup_data entries pointed to by
boot_params->hdr.setup_data.

This can lead to a crash in the kexec kernel during early boot due to
these entries not currently being included in the initial identity map,
see thread at Link below.

Include mappings for the setup_data entries in the initial identity map.

  [ bp: Massage commit message and use a helper var for better readability. ]

Fixes: b190a043c49a ("x86/sev: Add SEV-SNP feature detection/setup")
	Reported-by: Jun'ichi Nomura <junichi.nomura@nec.com>
	Signed-off-by: Michael Roth <michael.roth@amd.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
Link: https://lore.kernel.org/r/TYCPR01MB694815CD815E98945F63C99183B49@TYCPR01MB6948.jpnprd01.prod.outlook.com
(cherry picked from commit b57feed2cc2622ae14b2fa62f19e973e5e0a60cf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/boot/compressed/ident_map_64.c
diff --cc arch/x86/boot/compressed/ident_map_64.c
index 5750f2c39e3c,d4a314cc50d6..000000000000
--- a/arch/x86/boot/compressed/ident_map_64.c
+++ b/arch/x86/boot/compressed/ident_map_64.c
@@@ -163,18 -164,21 +164,35 @@@ void initialize_identity_maps(void *rmo
  	cmdline = get_cmd_line_ptr();
  	kernel_add_identity_map(cmdline, cmdline + COMMAND_LINE_SIZE);
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * Also map the setup_data entries passed via boot_params in case they
+ 	 * need to be accessed by uncompressed kernel via the identity mapping.
+ 	 */
+ 	sd = (struct setup_data *)boot_params->hdr.setup_data;
+ 	while (sd) {
+ 		unsigned long sd_addr = (unsigned long)sd;
+ 
+ 		kernel_add_identity_map(sd_addr, sd_addr + sizeof(*sd) + sd->len);
+ 		sd = (struct setup_data *)sd->next;
+ 	}
+ 
+ 	sev_prep_identity_maps(top_level_pgt);
+ 
++>>>>>>> b57feed2cc26 (x86/compressed/64: Add identity mappings for setup_data entries)
  	/* Load the new page-table. */
 +	sev_verify_cbit(top_level_pgt);
 +	write_cr3(top_level_pgt);
 +}
 +
 +/*
 + * This switches the page tables to the new level4 that has been built
 + * via calls to add_identity_map() above. If booted via startup_32(),
 + * this is effectively a no-op.
 + */
 +void finalize_identity_maps(void)
 +{
  	write_cr3(top_level_pgt);
  }
  
* Unmerged path arch/x86/boot/compressed/ident_map_64.c
