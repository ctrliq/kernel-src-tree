x86/sev: Make sure IRQs are disabled while GHCB is active

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Joerg Roedel <jroedel@suse.de>
commit d187f217335dba2b49fc9002aab2004e04acddee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/d187f217.failed

The #VC handler only cares about IRQs being disabled while the GHCB is
active, as it must not be interrupted by something which could cause
another #VC while it holds the GHCB (NMI is the exception for which the
backup GHCB exits).

Make sure nothing interrupts the code path while the GHCB is active
by making sure that callers of __sev_{get,put}_ghcb() have disabled
interrupts upfront.

 [ bp: Massage commit message. ]

	Signed-off-by: Joerg Roedel <jroedel@suse.de>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20210618115409.22735-2-joro@8bytes.org
(cherry picked from commit d187f217335dba2b49fc9002aab2004e04acddee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/sev.c
diff --cc arch/x86/kernel/sev.c
index a33087d3168c,9f32cbb773d9..000000000000
--- a/arch/x86/kernel/sev.c
+++ b/arch/x86/kernel/sev.c
@@@ -11,8 -11,7 +11,12 @@@
  
  #include <linux/sched/debug.h>	/* For show_regs() */
  #include <linux/percpu-defs.h>
++<<<<<<< HEAD
 +#include <linux/lockdep.h>
 +#include <linux/cc_platform.h>
++=======
+ #include <linux/mem_encrypt.h>
++>>>>>>> d187f217335d (x86/sev: Make sure IRQs are disabled while GHCB is active)
  #include <linux/printk.h>
  #include <linux/mm_types.h>
  #include <linux/set_memory.h>
@@@ -1382,6 -1361,7 +1398,10 @@@ __visible noinstr void safe_stack_exc_v
  		return;
  	}
  
++<<<<<<< HEAD
++=======
+ 	irq_state = irqentry_nmi_enter(regs);
++>>>>>>> d187f217335d (x86/sev: Make sure IRQs are disabled while GHCB is active)
  	instrumentation_begin();
  
  	/*
* Unmerged path arch/x86/kernel/sev.c
