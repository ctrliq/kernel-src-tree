net/mlx5: Cleanup XFRM attributes struct

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Leon Romanovsky <leonro@nvidia.com>
commit 6cd2126ac602305f52e43666400b135b20b46b07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/6cd2126a.failed

Remove everything that is not used or from mlx5_accel_esp_xfrm_attrs,
together with change type of spi to store proper type from the beginning.

	Reviewed-by: Raed Salem <raeds@nvidia.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 6cd2126ac602305f52e43666400b135b20b46b07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_offload.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
index 45f71910d196,16bcceec16c4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
@@@ -45,6 -43,53 +45,56 @@@
  #define MLX5E_IPSEC_SADB_RX_BITS 10
  #define MLX5E_IPSEC_ESN_SCOPE_MID 0x80000000L
  
++<<<<<<< HEAD
++=======
+ enum mlx5_accel_esp_flags {
+ 	MLX5_ACCEL_ESP_FLAGS_TUNNEL            = 0,    /* Default */
+ 	MLX5_ACCEL_ESP_FLAGS_TRANSPORT         = 1UL << 0,
+ 	MLX5_ACCEL_ESP_FLAGS_ESN_TRIGGERED     = 1UL << 1,
+ 	MLX5_ACCEL_ESP_FLAGS_ESN_STATE_OVERLAP = 1UL << 2,
+ };
+ 
+ enum mlx5_accel_esp_action {
+ 	MLX5_ACCEL_ESP_ACTION_DECRYPT,
+ 	MLX5_ACCEL_ESP_ACTION_ENCRYPT,
+ };
+ 
+ struct aes_gcm_keymat {
+ 	u64   seq_iv;
+ 
+ 	u32   salt;
+ 	u32   icv_len;
+ 
+ 	u32   key_len;
+ 	u32   aes_key[256 / 32];
+ };
+ 
+ struct mlx5_accel_esp_xfrm_attrs {
+ 	enum mlx5_accel_esp_action action;
+ 	u32   esn;
+ 	u32   spi;
+ 	u32   flags;
+ 	struct aes_gcm_keymat aes_gcm;
+ 
+ 	union {
+ 		__be32 a4;
+ 		__be32 a6[4];
+ 	} saddr;
+ 
+ 	union {
+ 		__be32 a4;
+ 		__be32 a6[4];
+ 	} daddr;
+ 
+ 	u8 is_ipv6;
+ };
+ 
+ enum mlx5_ipsec_cap {
+ 	MLX5_IPSEC_CAP_CRYPTO		= 1 << 0,
+ 	MLX5_IPSEC_CAP_ESN		= 1 << 1,
+ };
+ 
++>>>>>>> 6cd2126ac602 (net/mlx5: Cleanup XFRM attributes struct)
  struct mlx5e_priv;
  
  struct mlx5e_ipsec_sw_stats {
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_offload.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
index 027d80b77b28..d1fa6e18e00f 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
@@ -148,7 +148,7 @@ mlx5e_ipsec_build_accel_xfrm_attrs(struct mlx5e_ipsec_sa_entry *sa_entry,
 				   struct mlx5_accel_esp_xfrm_attrs *attrs)
 {
 	struct xfrm_state *x = sa_entry->x;
-	struct aes_gcm_keymat *aes_gcm = &attrs->keymat.aes_gcm;
+	struct aes_gcm_keymat *aes_gcm = &attrs->aes_gcm;
 	struct aead_geniv_ctx *geniv_ctx;
 	struct crypto_aead *aead;
 	unsigned int crypto_data_len, key_len;
@@ -182,12 +182,6 @@ mlx5e_ipsec_build_accel_xfrm_attrs(struct mlx5e_ipsec_sa_entry *sa_entry,
 			attrs->flags |= MLX5_ACCEL_ESP_FLAGS_ESN_STATE_OVERLAP;
 	}
 
-	/* rx handle */
-	attrs->sa_handle = sa_entry->handle;
-
-	/* algo type */
-	attrs->keymat_type = MLX5_ACCEL_ESP_KEYMAT_AES_GCM;
-
 	/* action */
 	attrs->action = (!(x->xso.flags & XFRM_OFFLOAD_INBOUND)) ?
 			MLX5_ACCEL_ESP_ACTION_ENCRYPT :
@@ -198,7 +192,7 @@ mlx5e_ipsec_build_accel_xfrm_attrs(struct mlx5e_ipsec_sa_entry *sa_entry,
 			MLX5_ACCEL_ESP_FLAGS_TUNNEL;
 
 	/* spi */
-	attrs->spi = x->id.spi;
+	attrs->spi = be32_to_cpu(x->id.spi);
 
 	/* source , destination ips */
 	memcpy(&attrs->saddr, x->props.saddr.a6, sizeof(attrs->saddr));
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_fs.c b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_fs.c
index 16bbf5ba1ee4..bd1695f763b8 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_fs.c
@@ -424,8 +424,8 @@ static void setup_fte_common(struct mlx5_accel_esp_xfrm_attrs *attrs,
 
 	/* SPI number */
 	MLX5_SET_TO_ONES(fte_match_param, spec->match_criteria, misc_parameters.outer_esp_spi);
-	MLX5_SET(fte_match_param, spec->match_value, misc_parameters.outer_esp_spi,
-		 be32_to_cpu(attrs->spi));
+	MLX5_SET(fte_match_param, spec->match_value,
+		 misc_parameters.outer_esp_spi, attrs->spi);
 
 	if (ip_version == 4) {
 		memcpy(MLX5_ADDR_OF(fte_match_param, spec->match_value,
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_offload.c
