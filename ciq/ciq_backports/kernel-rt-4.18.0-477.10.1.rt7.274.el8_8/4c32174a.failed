Documentation: dd: Use ReST lists for return values of driver_deferred_probe_check_state()

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Bagas Sanjaya <bagasdotme@gmail.com>
commit 4c32174a24759d5ac6dc42b508fcec2afb8b9602
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/4c32174a.failed

Sphinx reported build warnings mentioning drivers/base/dd.c:

</path/to/linux>/Documentation/driver-api/infrastructure:35:
./drivers/base/dd.c:280: WARNING: Unexpected indentation.
</path/to/linux>/Documentation/driver-api/infrastructure:35:
./drivers/base/dd.c:281: WARNING: Block quote ends without a blank line;
unexpected unindent.

The warnings above is due to syntax error in the "Return" section of driver_deferred_probe_check_state() which messed up with desired line breaks.

Fix the issue by using ReST lists syntax.

Fixes: c8c43cee29f6ca ("driver core: Fix driver_deferred_probe_check_state() logic")
	Cc: linux-pm@vger.kernel.org
	Cc: stable@vger.kernel.org
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Linus Walleij <linus.walleij@linaro.org>
	Cc: Thierry Reding <treding@nvidia.com>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: Liam Girdwood <lgirdwood@gmail.com>
	Cc: Bjorn Andersson <bjorn.andersson@linaro.org>
	Cc: Saravana Kannan <saravanak@google.com>
	Cc: Todd Kjos <tkjos@google.com>
	Cc: Len Brown <len.brown@intel.com>
	Cc: Pavel Machek <pavel@ucw.cz>
	Cc: Ulf Hansson <ulf.hansson@linaro.org>
	Cc: Kevin Hilman <khilman@kernel.org>
	Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
	Cc: Rob Herring <robh@kernel.org>
	Cc: John Stultz <john.stultz@linaro.org>
	Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
Link: https://lore.kernel.org/r/20220416071137.19512-1-bagasdotme@gmail.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 4c32174a24759d5ac6dc42b508fcec2afb8b9602)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/dd.c
diff --cc drivers/base/dd.c
index d0dc8eebfb71,923dbc2927b5..000000000000
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@@ -300,9 -273,11 +300,17 @@@ static int __driver_deferred_probe_chec
   * driver_deferred_probe_check_state() - Check deferred probe state
   * @dev: device to check
   *
++<<<<<<< HEAD
 + * Returns -ENODEV if init is done and all built-in drivers have had a chance
 + * to probe (i.e. initcalls are done), -ETIMEDOUT if deferred probe debug
 + * timeout has expired, or -EPROBE_DEFER if none of those conditions are met.
++=======
+  * Return:
+  * * -ENODEV if initcalls have completed and modules are disabled.
+  * * -ETIMEDOUT if the deferred probe timeout was set and has expired
+  *   and modules are enabled.
+  * * -EPROBE_DEFER in other cases.
++>>>>>>> 4c32174a2475 (Documentation: dd: Use ReST lists for return values of driver_deferred_probe_check_state())
   *
   * Drivers or subsystems can opt-in to calling this function instead of directly
   * returning -EPROBE_DEFER.
* Unmerged path drivers/base/dd.c
