wifi: move from strlcpy with unused retval to strscpy

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Wolfram Sang <wsa+renesas@sang-engineering.com>
commit bf99f11df4de45fcba6f6c441b411a16bccaccf6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/bf99f11d.failed

Follow the advice of the below link and prefer 'strscpy' in this
subsystem. Conversion is 1:1 because the return value is not used.
Generated by a coccinelle script.

Link: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
	Signed-off-by: Wolfram Sang <wsa+renesas@sang-engineering.com>
	Signed-off-by: Kalle Valo <kvalo@kernel.org>
Link: https://lore.kernel.org/r/20220830201457.7984-2-wsa+renesas@sang-engineering.com
(cherry picked from commit bf99f11df4de45fcba6f6c441b411a16bccaccf6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/wireless/ath/wil6210/main.c
#	drivers/net/wireless/atmel/atmel.c
#	drivers/net/wireless/broadcom/b43/leds.c
#	drivers/net/wireless/broadcom/b43legacy/leds.c
#	drivers/net/wireless/quantenna/qtnfmac/cfg80211.c
#	drivers/net/wireless/realtek/rtl818x/rtl8187/leds.c
#	drivers/staging/wilc1000/linux_mon.c
diff --cc drivers/net/wireless/ath/wil6210/main.c
index fe2d509b84ed,94e61dbe94f8..000000000000
--- a/drivers/net/wireless/ath/wil6210/main.c
+++ b/drivers/net/wireless/ath/wil6210/main.c
@@@ -945,6 -1286,28 +945,31 @@@ void wil_mbox_ring_le2cpus(struct wil62
  	le32_to_cpus(&r->head);
  }
  
++<<<<<<< HEAD
++=======
+ /* construct actual board file name to use */
+ void wil_get_board_file(struct wil6210_priv *wil, char *buf, size_t len)
+ {
+ 	const char *board_file;
+ 	const char *wil_talyn_fw_name = ftm_mode ? WIL_FW_NAME_FTM_TALYN :
+ 			      WIL_FW_NAME_TALYN;
+ 
+ 	if (wil->board_file) {
+ 		board_file = wil->board_file;
+ 	} else {
+ 		/* If specific FW file is used for Talyn,
+ 		 * use specific board file
+ 		 */
+ 		if (strcmp(wil->wil_fw_name, wil_talyn_fw_name) == 0)
+ 			board_file = WIL_BRD_NAME_TALYN;
+ 		else
+ 			board_file = WIL_BOARD_FILE_NAME;
+ 	}
+ 
+ 	strscpy(buf, board_file, len);
+ }
+ 
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  static int wil_get_bl_info(struct wil6210_priv *wil)
  {
  	struct net_device *ndev = wil->main_ndev;
diff --cc drivers/net/wireless/atmel/atmel.c
index 62b1f72c118a,45d079b93384..000000000000
--- a/drivers/net/wireless/atmel/atmel.c
+++ b/drivers/net/wireless/atmel/atmel.c
@@@ -1515,10 -1516,9 +1515,14 @@@ struct net_device *init_atmel_card(unsi
  	priv->present_callback = card_present;
  	priv->card = card;
  	priv->firmware = NULL;
 +	priv->firmware_id[0] = '\0';
  	priv->firmware_type = fw_type;
  	if (firmware) /* module parameter */
++<<<<<<< HEAD
 +		strcpy(priv->firmware_id, firmware);
++=======
+ 		strscpy(priv->firmware_id, firmware, sizeof(priv->firmware_id));
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  	priv->bus_type = card_present ? BUS_TYPE_PCCARD : BUS_TYPE_PCI;
  	priv->station_state = STATION_STATE_DOWN;
  	priv->do_rx_crc = 0;
diff --cc drivers/net/wireless/broadcom/b43/leds.c
index cb987c2ecc6b,bfe1be345844..000000000000
--- a/drivers/net/wireless/broadcom/b43/leds.c
+++ b/drivers/net/wireless/broadcom/b43/leds.c
@@@ -131,7 -118,7 +131,11 @@@ static int b43_register_led(struct b43_
  	led->wl = dev->wl;
  	led->index = led_index;
  	led->activelow = activelow;
++<<<<<<< HEAD
 +	strncpy(led->name, name, sizeof(led->name));
++=======
+ 	strscpy(led->name, name, sizeof(led->name));
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  	atomic_set(&led->state, 0);
  
  	led->led_dev.name = led->name;
diff --cc drivers/net/wireless/broadcom/b43legacy/leds.c
index fd4565389c77,79e6fd205bfb..000000000000
--- a/drivers/net/wireless/broadcom/b43legacy/leds.c
+++ b/drivers/net/wireless/broadcom/b43legacy/leds.c
@@@ -101,7 -88,7 +101,11 @@@ static int b43legacy_register_led(struc
  	led->dev = dev;
  	led->index = led_index;
  	led->activelow = activelow;
++<<<<<<< HEAD
 +	strncpy(led->name, name, sizeof(led->name));
++=======
+ 	strscpy(led->name, name, sizeof(led->name));
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  
  	led->led_dev.name = led->name;
  	led->led_dev.default_trigger = default_trigger;
diff --cc drivers/net/wireless/quantenna/qtnfmac/cfg80211.c
index c274ba2e4dae,bfdf03bfa6c5..000000000000
--- a/drivers/net/wireless/quantenna/qtnfmac/cfg80211.c
+++ b/drivers/net/wireless/quantenna/qtnfmac/cfg80211.c
@@@ -1025,7 -1214,16 +1025,20 @@@ int qtnf_wiphy_register(struct qtnf_hw_
  		wiphy->regulatory_flags |= REGULATORY_WIPHY_SELF_MANAGED;
  	}
  
++<<<<<<< HEAD
 +	strlcpy(wiphy->fw_version, hw_info->fw_version,
++=======
+ 	if (mac->macinfo.extended_capabilities_len) {
+ 		wiphy->extended_capabilities =
+ 			mac->macinfo.extended_capabilities;
+ 		wiphy->extended_capabilities_mask =
+ 			mac->macinfo.extended_capabilities_mask;
+ 		wiphy->extended_capabilities_len =
+ 			mac->macinfo.extended_capabilities_len;
+ 	}
+ 
+ 	strscpy(wiphy->fw_version, hw_info->fw_version,
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  		sizeof(wiphy->fw_version));
  	wiphy->hw_version = hw_info->hw_version;
  
diff --cc drivers/net/wireless/realtek/rtl818x/rtl8187/leds.c
index 1725b2a939a1,f7d95c9624a0..000000000000
--- a/drivers/net/wireless/realtek/rtl818x/rtl8187/leds.c
+++ b/drivers/net/wireless/realtek/rtl818x/rtl8187/leds.c
@@@ -143,7 -143,7 +143,11 @@@ static int rtl8187_register_led(struct 
  	led->dev = dev;
  	led->ledpin = ledpin;
  	led->is_radio = is_radio;
++<<<<<<< HEAD
 +	strncpy(led->name, name, sizeof(led->name));
++=======
+ 	strscpy(led->name, name, sizeof(led->name));
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy)
  
  	led->led_dev.name = led->name;
  	led->led_dev.default_trigger = default_trigger;
diff --cc drivers/staging/wilc1000/linux_mon.c
index 1c7e6e15809c,03b7229a0ff5..000000000000
--- a/drivers/staging/wilc1000/linux_mon.c
+++ b/drivers/staging/wilc1000/linux_mon.c
@@@ -223,25 -220,25 +223,34 @@@ struct net_device *wilc_wfi_init_mon_in
  {
  	struct wilc_wfi_mon_priv *priv;
  
 -	/* If monitor interface is already initialized, return it */
 -	if (wl->monitor_dev)
 -		return wl->monitor_dev;
 +	/*If monitor interface is already initialized, return it*/
 +	if (wilc_wfi_mon)
 +		return wilc_wfi_mon;
  
 -	wl->monitor_dev = alloc_etherdev(sizeof(struct wilc_wfi_mon_priv));
 -	if (!wl->monitor_dev)
 +	wilc_wfi_mon = alloc_etherdev(sizeof(struct wilc_wfi_mon_priv));
 +	if (!wilc_wfi_mon)
  		return NULL;
 -
 +	wilc_wfi_mon->type = ARPHRD_IEEE80211_RADIOTAP;
 +	strncpy(wilc_wfi_mon->name, name, IFNAMSIZ);
 +	wilc_wfi_mon->name[IFNAMSIZ - 1] = 0;
 +	wilc_wfi_mon->netdev_ops = &wilc_wfi_netdev_ops;
 +
++<<<<<<< HEAD:drivers/staging/wilc1000/linux_mon.c
 +	if (register_netdevice(wilc_wfi_mon)) {
++=======
+ 	wl->monitor_dev->type = ARPHRD_IEEE80211_RADIOTAP;
+ 	strscpy(wl->monitor_dev->name, name, IFNAMSIZ);
+ 	wl->monitor_dev->netdev_ops = &wilc_wfi_netdev_ops;
+ 	wl->monitor_dev->needs_free_netdev = true;
+ 
+ 	if (register_netdevice(wl->monitor_dev)) {
++>>>>>>> bf99f11df4de (wifi: move from strlcpy with unused retval to strscpy):drivers/net/wireless/microchip/wilc1000/mon.c
  		netdev_err(real_dev, "register_netdevice failed\n");
 -		free_netdev(wl->monitor_dev);
  		return NULL;
  	}
 -	priv = netdev_priv(wl->monitor_dev);
 +	priv = netdev_priv(wilc_wfi_mon);
 +	if (!priv)
 +		return NULL;
  
  	priv->real_ndev = real_dev;
  
diff --git a/drivers/net/wireless/ath/ath6kl/init.c b/drivers/net/wireless/ath/ath6kl/init.c
index 58fb227a849f..d6bdab6b0908 100644
--- a/drivers/net/wireless/ath/ath6kl/init.c
+++ b/drivers/net/wireless/ath/ath6kl/init.c
@@ -1014,7 +1014,7 @@ static int ath6kl_fetch_fw_apin(struct ath6kl *ar, const char *name)
 
 		switch (ie_id) {
 		case ATH6KL_FW_IE_FW_VERSION:
-			strlcpy(ar->wiphy->fw_version, data,
+			strscpy(ar->wiphy->fw_version, data,
 				min(sizeof(ar->wiphy->fw_version), ie_len+1));
 
 			ath6kl_dbg(ATH6KL_DBG_BOOT,
diff --git a/drivers/net/wireless/ath/carl9170/fw.c b/drivers/net/wireless/ath/carl9170/fw.c
index 88045f93a76c..1e06eb4a8c1a 100644
--- a/drivers/net/wireless/ath/carl9170/fw.c
+++ b/drivers/net/wireless/ath/carl9170/fw.c
@@ -118,7 +118,7 @@ static void carl9170_fw_info(struct ar9170 *ar)
 			 CARL9170FW_GET_MONTH(fw_date),
 			 CARL9170FW_GET_DAY(fw_date));
 
-		strlcpy(ar->hw->wiphy->fw_version, motd_desc->release,
+		strscpy(ar->hw->wiphy->fw_version, motd_desc->release,
 			sizeof(ar->hw->wiphy->fw_version));
 	}
 }
* Unmerged path drivers/net/wireless/ath/wil6210/main.c
diff --git a/drivers/net/wireless/ath/wil6210/netdev.c b/drivers/net/wireless/ath/wil6210/netdev.c
index eb6c14ed65a4..11c7f8b19432 100644
--- a/drivers/net/wireless/ath/wil6210/netdev.c
+++ b/drivers/net/wireless/ath/wil6210/netdev.c
@@ -409,7 +409,7 @@ int wil_if_add(struct wil6210_priv *wil)
 
 	wil_dbg_misc(wil, "entered");
 
-	strlcpy(wiphy->fw_version, wil->fw_version, sizeof(wiphy->fw_version));
+	strscpy(wiphy->fw_version, wil->fw_version, sizeof(wiphy->fw_version));
 
 	rc = wiphy_register(wiphy);
 	if (rc < 0) {
diff --git a/drivers/net/wireless/ath/wil6210/wmi.c b/drivers/net/wireless/ath/wil6210/wmi.c
index 5d991243cdb5..30ac37b0ddde 100644
--- a/drivers/net/wireless/ath/wil6210/wmi.c
+++ b/drivers/net/wireless/ath/wil6210/wmi.c
@@ -673,7 +673,7 @@ static void wmi_evt_ready(struct wil6210_vif *vif, int id, void *d, int len)
 		return; /* FW load will fail after timeout */
 	}
 	/* ignore MAC address, we already have it from the boot loader */
-	strlcpy(wiphy->fw_version, wil->fw_version, sizeof(wiphy->fw_version));
+	strscpy(wiphy->fw_version, wil->fw_version, sizeof(wiphy->fw_version));
 
 	if (len > offsetof(struct wmi_ready_event, rfc_read_calib_result)) {
 		wil_dbg_wmi(wil, "rfc calibration result %d\n",
* Unmerged path drivers/net/wireless/atmel/atmel.c
* Unmerged path drivers/net/wireless/broadcom/b43/leds.c
* Unmerged path drivers/net/wireless/broadcom/b43legacy/leds.c
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/common.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/common.c
index 7485e784be2a..372deeb69477 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/common.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/common.c
@@ -261,7 +261,7 @@ int brcmf_c_preinit_dcmds(struct brcmf_if *ifp)
 				     &revinfo, sizeof(revinfo));
 	if (err < 0) {
 		bphy_err(drvr, "retrieving revision info failed, %d\n", err);
-		strlcpy(ri->chipname, "UNKNOWN", sizeof(ri->chipname));
+		strscpy(ri->chipname, "UNKNOWN", sizeof(ri->chipname));
 	} else {
 		ri->vendorid = le32_to_cpu(revinfo.vendorid);
 		ri->deviceid = le32_to_cpu(revinfo.deviceid);
@@ -314,7 +314,7 @@ int brcmf_c_preinit_dcmds(struct brcmf_if *ifp)
 
 	/* locate firmware version number for ethtool */
 	ptr = strrchr(buf, ' ') + 1;
-	strlcpy(ifp->drvr->fwver, ptr, sizeof(ifp->drvr->fwver));
+	strscpy(ifp->drvr->fwver, ptr, sizeof(ifp->drvr->fwver));
 
 	/* Query for 'clmver' to get CLM version info from firmware */
 	memset(buf, 0, sizeof(buf));
@@ -424,11 +424,11 @@ static void brcmf_mp_attach(void)
 	 * if not set then if available use the platform data version. To make
 	 * sure it gets initialized at all, always copy the module param version
 	 */
-	strlcpy(brcmf_mp_global.firmware_path, brcmf_firmware_path,
+	strscpy(brcmf_mp_global.firmware_path, brcmf_firmware_path,
 		BRCMF_FW_ALTPATH_LEN);
 	if ((brcmfmac_pdata) && (brcmfmac_pdata->fw_alternative_path) &&
 	    (brcmf_mp_global.firmware_path[0] == '\0')) {
-		strlcpy(brcmf_mp_global.firmware_path,
+		strscpy(brcmf_mp_global.firmware_path,
 			brcmfmac_pdata->fw_alternative_path,
 			BRCMF_FW_ALTPATH_LEN);
 	}
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c
index a646ed441ff4..35e7d86bbebf 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/core.c
@@ -569,10 +569,10 @@ static void brcmf_ethtool_get_drvinfo(struct net_device *ndev,
 
 	if (drvr->revinfo.result == 0)
 		brcmu_dotrev_str(drvr->revinfo.driverrev, drev);
-	strlcpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
-	strlcpy(info->version, drev, sizeof(info->version));
-	strlcpy(info->fw_version, drvr->fwver, sizeof(info->fw_version));
-	strlcpy(info->bus_info, dev_name(drvr->bus_if->dev),
+	strscpy(info->driver, KBUILD_MODNAME, sizeof(info->driver));
+	strscpy(info->version, drev, sizeof(info->version));
+	strscpy(info->fw_version, drvr->fwver, sizeof(info->fw_version));
+	strscpy(info->bus_info, dev_name(drvr->bus_if->dev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
index dcbe55b56e43..75cc4bab7a00 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
@@ -778,7 +778,7 @@ brcmf_fw_alloc_request(u32 chip, u32 chiprev,
 		fwnames[j].path[0] = '\0';
 		/* check if firmware path is provided by module parameter */
 		if (brcmf_mp_global.firmware_path[0] != '\0') {
-			strlcpy(fwnames[j].path, mp_path,
+			strscpy(fwnames[j].path, mp_path,
 				BRCMF_FW_NAME_LEN);
 
 			if (end != '/') {
diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
index c67b6e36ab30..8ac5857f8568 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c
@@ -688,7 +688,7 @@ static void brcmf_fws_macdesc_set_name(struct brcmf_fws_info *fws,
 				       struct brcmf_fws_mac_descriptor *desc)
 {
 	if (desc == &fws->desc.other)
-		strlcpy(desc->name, "MAC-OTHER", sizeof(desc->name));
+		strscpy(desc->name, "MAC-OTHER", sizeof(desc->name));
 	else if (desc->mac_handle)
 		scnprintf(desc->name, sizeof(desc->name), "MAC-%d:%d",
 			  desc->mac_handle, desc->interface_id);
diff --git a/drivers/net/wireless/intel/ipw2x00/ipw2100.c b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
index de01e31cf352..799ad88ea336 100644
--- a/drivers/net/wireless/intel/ipw2x00/ipw2100.c
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
@@ -5917,8 +5917,8 @@ static void ipw_ethtool_get_drvinfo(struct net_device *dev,
 	struct ipw2100_priv *priv = libipw_priv(dev);
 	char fw_ver[64], ucode_ver[64];
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 
 	ipw2100_get_fwversion(priv, fw_ver, sizeof(fw_ver));
 	ipw2100_get_ucodeversion(priv, ucode_ver, sizeof(ucode_ver));
@@ -5926,7 +5926,7 @@ static void ipw_ethtool_get_drvinfo(struct net_device *dev,
 	snprintf(info->fw_version, sizeof(info->fw_version), "%s:%d:%s",
 		 fw_ver, priv->eeprom_version, ucode_ver);
 
-	strlcpy(info->bus_info, pci_name(priv->pci_dev),
+	strscpy(info->bus_info, pci_name(priv->pci_dev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/wireless/intel/ipw2x00/ipw2200.c b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
index 03e59019a657..9540dd75622a 100644
--- a/drivers/net/wireless/intel/ipw2x00/ipw2200.c
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
@@ -10433,8 +10433,8 @@ static void ipw_ethtool_get_drvinfo(struct net_device *dev,
 	char date[32];
 	u32 len;
 
-	strlcpy(info->driver, DRV_NAME, sizeof(info->driver));
-	strlcpy(info->version, DRV_VERSION, sizeof(info->version));
+	strscpy(info->driver, DRV_NAME, sizeof(info->driver));
+	strscpy(info->version, DRV_VERSION, sizeof(info->version));
 
 	len = sizeof(vers);
 	ipw_get_ordinal(p, IPW_ORD_STAT_FW_VERSION, vers, &len);
@@ -10443,7 +10443,7 @@ static void ipw_ethtool_get_drvinfo(struct net_device *dev,
 
 	snprintf(info->fw_version, sizeof(info->fw_version), "%s (%s)",
 		 vers, date);
-	strlcpy(info->bus_info, pci_name(p->pci_dev),
+	strscpy(info->bus_info, pci_name(p->pci_dev),
 		sizeof(info->bus_info));
 }
 
diff --git a/drivers/net/wireless/intel/iwlegacy/3945-mac.c b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
index 4b376cb0d0c9..81a7e6234535 100644
--- a/drivers/net/wireless/intel/iwlegacy/3945-mac.c
+++ b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
@@ -3282,7 +3282,7 @@ il3945_store_measurement(struct device *d, struct device_attribute *attr,
 
 	if (count) {
 		char *p = buffer;
-		strlcpy(buffer, buf, sizeof(buffer));
+		strscpy(buffer, buf, sizeof(buffer));
 		channel = simple_strtoul(p, NULL, 0);
 		if (channel)
 			params.channel = channel;
diff --git a/drivers/net/wireless/intersil/hostap/hostap_ioctl.c b/drivers/net/wireless/intersil/hostap/hostap_ioctl.c
index 1ca9731d9b14..46cfad456d86 100644
--- a/drivers/net/wireless/intersil/hostap/hostap_ioctl.c
+++ b/drivers/net/wireless/intersil/hostap/hostap_ioctl.c
@@ -3860,7 +3860,7 @@ static void prism2_get_drvinfo(struct net_device *dev,
 	iface = netdev_priv(dev);
 	local = iface->local;
 
-	strlcpy(info->driver, "hostap", sizeof(info->driver));
+	strscpy(info->driver, "hostap", sizeof(info->driver));
 	snprintf(info->fw_version, sizeof(info->fw_version),
 		 "%d.%d.%d", (local->sta_fw_ver >> 16) & 0xff,
 		 (local->sta_fw_ver >> 8) & 0xff,
diff --git a/drivers/net/wireless/marvell/libertas/ethtool.c b/drivers/net/wireless/marvell/libertas/ethtool.c
index 1bb8746a0b23..d580e6a95d7a 100644
--- a/drivers/net/wireless/marvell/libertas/ethtool.c
+++ b/drivers/net/wireless/marvell/libertas/ethtool.c
@@ -20,8 +20,8 @@ static void lbs_ethtool_get_drvinfo(struct net_device *dev,
 		priv->fwrelease >> 16 & 0xff,
 		priv->fwrelease >>  8 & 0xff,
 		priv->fwrelease       & 0xff);
-	strlcpy(info->driver, "libertas", sizeof(info->driver));
-	strlcpy(info->version, lbs_driver_version, sizeof(info->version));
+	strscpy(info->driver, "libertas", sizeof(info->driver));
+	strscpy(info->version, lbs_driver_version, sizeof(info->version));
 }
 
 /*
* Unmerged path drivers/net/wireless/quantenna/qtnfmac/cfg80211.c
diff --git a/drivers/net/wireless/quantenna/qtnfmac/commands.c b/drivers/net/wireless/quantenna/qtnfmac/commands.c
index d74b72367adc..410de019d9c1 100644
--- a/drivers/net/wireless/quantenna/qtnfmac/commands.c
+++ b/drivers/net/wireless/quantenna/qtnfmac/commands.c
@@ -1130,7 +1130,7 @@ qtnf_cmd_resp_proc_hw_info(struct qtnf_bus *bus,
 		(unsigned long)plat_id,
 		hw_id, calibration_ver, uboot_ver, hw_ver);
 
-	strlcpy(hwinfo->fw_version, bld_label, sizeof(hwinfo->fw_version));
+	strscpy(hwinfo->fw_version, bld_label, sizeof(hwinfo->fw_version));
 	hwinfo->hw_version = hw_ver;
 
 	return 0;
* Unmerged path drivers/net/wireless/realtek/rtl818x/rtl8187/leds.c
diff --git a/drivers/net/wireless/wl3501_cs.c b/drivers/net/wireless/wl3501_cs.c
index 3da01a5166e3..db89d1268d94 100644
--- a/drivers/net/wireless/wl3501_cs.c
+++ b/drivers/net/wireless/wl3501_cs.c
@@ -1444,7 +1444,7 @@ static void wl3501_detach(struct pcmcia_device *link)
 static int wl3501_get_name(struct net_device *dev, struct iw_request_info *info,
 			   union iwreq_data *wrqu, char *extra)
 {
-	strlcpy(wrqu->name, "IEEE 802.11-DS", sizeof(wrqu->name));
+	strscpy(wrqu->name, "IEEE 802.11-DS", sizeof(wrqu->name));
 	return 0;
 }
 
@@ -1655,7 +1655,7 @@ static int wl3501_set_nick(struct net_device *dev, struct iw_request_info *info,
 
 	if (wrqu->data.length > sizeof(this->nick))
 		return -E2BIG;
-	strlcpy(this->nick, extra, wrqu->data.length);
+	strscpy(this->nick, extra, wrqu->data.length);
 	return 0;
 }
 
@@ -1664,7 +1664,7 @@ static int wl3501_get_nick(struct net_device *dev, struct iw_request_info *info,
 {
 	struct wl3501_card *this = netdev_priv(dev);
 
-	strlcpy(extra, this->nick, 32);
+	strscpy(extra, this->nick, 32);
 	wrqu->data.length = strlen(extra);
 	return 0;
 }
@@ -1968,7 +1968,7 @@ static int wl3501_config(struct pcmcia_device *link)
 	this->firmware_date[0]	= '\0';
 	this->rssi		= 255;
 	this->chan		= iw_default_channel(this->reg_domain);
-	strlcpy(this->nick, "Planet WL3501", sizeof(this->nick));
+	strscpy(this->nick, "Planet WL3501", sizeof(this->nick));
 	spin_lock_init(&this->lock);
 	init_waitqueue_head(&this->wait);
 	netif_start_queue(dev);
* Unmerged path drivers/staging/wilc1000/linux_mon.c
