net: xpcs: add support for retrieving supported interface modes

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
commit be6ec5b7026620b931e0fa9287d24ad2cd2ab9b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/be6ec5b7.failed

Add a function to the xpcs driver to retrieve the supported PHY
interface modes, which can be used by drivers to fill in phylink's
supported_interfaces mask.

We validate the interface bit index to ensure that it fits within the
bitmap as xpcs lists PHY_INTERFACE_MODE_MAX in an entry.

	Tested-by: Wong Vee Khee <vee.khee.wong@linux.intel.com> # Intel EHL            Signed-off-by: Russell King (Oracle) <rmk+kernel@armlinux.org.uk>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit be6ec5b7026620b931e0fa9287d24ad2cd2ab9b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/pcs/pcs-xpcs.c
#	include/linux/pcs/pcs-xpcs.h
diff --cc drivers/net/pcs/pcs-xpcs.c
index 89a5f43612cf,f45821524fab..000000000000
--- a/drivers/net/pcs/pcs-xpcs.c
+++ b/drivers/net/pcs/pcs-xpcs.c
@@@ -719,8 -662,21 +719,26 @@@ void xpcs_validate(struct mdio_xpcs_arg
  }
  EXPORT_SYMBOL_GPL(xpcs_validate);
  
++<<<<<<< HEAD
 +int xpcs_config_eee(struct mdio_xpcs_args *xpcs, int mult_fact_100ns,
 +		    int enable)
++=======
+ void xpcs_get_interfaces(struct dw_xpcs *xpcs, unsigned long *interfaces)
+ {
+ 	int i, j;
+ 
+ 	for (i = 0; i < DW_XPCS_INTERFACE_MAX; i++) {
+ 		const struct xpcs_compat *compat = &xpcs->id->compat[i];
+ 
+ 		for (j = 0; j < compat->num_interfaces; j++)
+ 			if (compat->interface[j] < PHY_INTERFACE_MODE_MAX)
+ 				__set_bit(compat->interface[j], interfaces);
+ 	}
+ }
+ EXPORT_SYMBOL_GPL(xpcs_get_interfaces);
+ 
+ int xpcs_config_eee(struct dw_xpcs *xpcs, int mult_fact_100ns, int enable)
++>>>>>>> be6ec5b70266 (net: xpcs: add support for retrieving supported interface modes)
  {
  	int ret;
  
diff --cc include/linux/pcs/pcs-xpcs.h
index 57a199393d63,3126a4924d92..000000000000
--- a/include/linux/pcs/pcs-xpcs.h
+++ b/include/linux/pcs/pcs-xpcs.h
@@@ -16,28 -19,25 +16,33 @@@
  
  struct xpcs_id;
  
 -struct dw_xpcs {
 +struct mdio_xpcs_args {
  	struct mdio_device *mdiodev;
  	const struct xpcs_id *id;
 -	struct phylink_pcs pcs;
  };
  
 -int xpcs_get_an_mode(struct dw_xpcs *xpcs, phy_interface_t interface);
 -void xpcs_link_up(struct phylink_pcs *pcs, unsigned int mode,
 -		  phy_interface_t interface, int speed, int duplex);
 -int xpcs_do_config(struct dw_xpcs *xpcs, phy_interface_t interface,
 -		   unsigned int mode);
 -void xpcs_validate(struct dw_xpcs *xpcs, unsigned long *supported,
 +struct mdio_xpcs_ops {
 +	int (*config)(struct mdio_xpcs_args *xpcs,
 +		      const struct phylink_link_state *state);
 +	int (*get_state)(struct mdio_xpcs_args *xpcs,
 +			 struct phylink_link_state *state);
 +	int (*link_up)(struct mdio_xpcs_args *xpcs, int speed,
 +		       phy_interface_t interface);
 +};
 +
 +int xpcs_get_an_mode(struct mdio_xpcs_args *xpcs, phy_interface_t interface);
 +struct mdio_xpcs_ops *mdio_xpcs_get_ops(void);
 +void xpcs_validate(struct mdio_xpcs_args *xpcs, unsigned long *supported,
  		   struct phylink_link_state *state);
++<<<<<<< HEAD
 +int xpcs_config_eee(struct mdio_xpcs_args *xpcs, int mult_fact_100ns,
++=======
+ void xpcs_get_interfaces(struct dw_xpcs *xpcs, unsigned long *interfaces);
+ int xpcs_config_eee(struct dw_xpcs *xpcs, int mult_fact_100ns,
++>>>>>>> be6ec5b70266 (net: xpcs: add support for retrieving supported interface modes)
  		    int enable);
 -struct dw_xpcs *xpcs_create(struct mdio_device *mdiodev,
 -			    phy_interface_t interface);
 -void xpcs_destroy(struct dw_xpcs *xpcs);
 +struct mdio_xpcs_args *xpcs_create(struct mdio_device *mdiodev,
 +				   phy_interface_t interface);
 +void xpcs_destroy(struct mdio_xpcs_args *xpcs);
  
  #endif /* __LINUX_PCS_XPCS_H */
* Unmerged path drivers/net/pcs/pcs-xpcs.c
* Unmerged path include/linux/pcs/pcs-xpcs.h
