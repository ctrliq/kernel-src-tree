net: switch to netif_napi_add_tx()

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Jakub Kicinski <kuba@kernel.org>
commit 16d083e28f1a4f6deef82be92d6a0f5aa2fe7e08
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/16d083e2.failed

Switch net callers to the new API not requiring
the NAPI_POLL_WEIGHT argument.

	Acked-by: Florian Fainelli <f.fainelli@gmail.com>
	Reviewed-by: Alex Elder <elder@linaro.org>
	Acked-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Acked-by: Alexandra Winter <wintera@linux.ibm.com>
Link: https://lore.kernel.org/r/20220504163725.550782-1-kuba@kernel.org
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 16d083e28f1a4f6deef82be92d6a0f5aa2fe7e08)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bcm4908_enet.c
#	drivers/net/ethernet/broadcom/genet/bcmgenet.c
#	drivers/net/ethernet/fungible/funeth/funeth_main.c
#	drivers/net/ethernet/lantiq_xrx200.c
#	drivers/net/ethernet/socionext/sni_ave.c
#	drivers/net/ethernet/ti/am65-cpsw-nuss.c
#	drivers/net/ethernet/ti/cpsw.c
#	drivers/net/ethernet/ti/cpsw_new.c
#	drivers/net/ethernet/ti/netcp_core.c
#	drivers/net/ipa/gsi.c
diff --cc drivers/net/ethernet/broadcom/genet/bcmgenet.c
index 116c5aeea2f7,65606351634e..000000000000
--- a/drivers/net/ethernet/broadcom/genet/bcmgenet.c
+++ b/drivers/net/ethernet/broadcom/genet/bcmgenet.c
@@@ -2169,8 -2671,7 +2169,12 @@@ static void bcmgenet_init_tx_ring(struc
  				  DMA_END_ADDR);
  
  	/* Initialize Tx NAPI */
++<<<<<<< HEAD
 +	netif_napi_add(priv->dev, &ring->napi, bcmgenet_tx_poll,
 +		       NAPI_POLL_WEIGHT);
++=======
+ 	netif_napi_add_tx(priv->dev, &ring->napi, bcmgenet_tx_poll);
++>>>>>>> 16d083e28f1a (net: switch to netif_napi_add_tx())
  }
  
  /* Initialize a RDMA ring */
diff --cc drivers/net/ethernet/socionext/sni_ave.c
index 4d0244d7b05b,f0c8de2c6075..000000000000
--- a/drivers/net/ethernet/socionext/sni_ave.c
+++ b/drivers/net/ethernet/socionext/sni_ave.c
@@@ -1685,9 -1687,9 +1685,15 @@@ static int ave_probe(struct platform_de
  		 pdev->name, pdev->id);
  
  	/* Register as a NAPI supported driver */
++<<<<<<< HEAD
 +	netif_napi_add(ndev, &priv->napi_rx, ave_napi_poll_rx, priv->rx.ndesc);
 +	netif_tx_napi_add(ndev, &priv->napi_tx, ave_napi_poll_tx,
 +			  priv->tx.ndesc);
++=======
+ 	netif_napi_add(ndev, &priv->napi_rx, ave_napi_poll_rx,
+ 		       NAPI_POLL_WEIGHT);
+ 	netif_napi_add_tx(ndev, &priv->napi_tx, ave_napi_poll_tx);
++>>>>>>> 16d083e28f1a (net: switch to netif_napi_add_tx())
  
  	platform_set_drvdata(pdev, ndev);
  
diff --cc drivers/net/ethernet/ti/cpsw.c
index d42bdcd3bf1c,ed66c4d4d830..000000000000
--- a/drivers/net/ethernet/ti/cpsw.c
+++ b/drivers/net/ethernet/ti/cpsw.c
@@@ -3195,19 -1639,18 +3195,25 @@@ static int cpsw_probe(struct platform_d
  	ndev->ethtool_ops = &cpsw_ethtool_ops;
  	netif_napi_add(ndev, &cpsw->napi_rx,
  		       cpsw->quirk_irq ? cpsw_rx_poll : cpsw_rx_mq_poll,
++<<<<<<< HEAD
 +		       CPSW_POLL_WEIGHT);
 +	netif_tx_napi_add(ndev, &cpsw->napi_tx,
 +			  cpsw->quirk_irq ? cpsw_tx_poll : cpsw_tx_mq_poll,
 +			  CPSW_POLL_WEIGHT);
 +	cpsw_split_res(ndev);
++=======
+ 		       NAPI_POLL_WEIGHT);
+ 	netif_napi_add_tx(ndev, &cpsw->napi_tx,
+ 			  cpsw->quirk_irq ? cpsw_tx_poll : cpsw_tx_mq_poll);
++>>>>>>> 16d083e28f1a (net: switch to netif_napi_add_tx())
  
  	/* register the network device */
 -	SET_NETDEV_DEV(ndev, dev);
 -	ndev->dev.of_node = cpsw->slaves[0].data->slave_node;
 +	SET_NETDEV_DEV(ndev, &pdev->dev);
  	ret = register_netdev(ndev);
  	if (ret) {
 -		dev_err(dev, "error registering net device\n");
 +		dev_err(priv->dev, "error registering net device\n");
  		ret = -ENODEV;
 -		goto clean_cpts;
 +		goto clean_dma_ret;
  	}
  
  	if (cpsw->data.dual_emac) {
diff --cc drivers/net/ethernet/ti/netcp_core.c
index e784f05c40fc,b15d44261e76..000000000000
--- a/drivers/net/ethernet/ti/netcp_core.c
+++ b/drivers/net/ethernet/ti/netcp_core.c
@@@ -2110,8 -2095,8 +2110,13 @@@ static int netcp_create_interface(struc
  	}
  
  	/* NAPI register */
++<<<<<<< HEAD
 +	netif_napi_add(ndev, &netcp->rx_napi, netcp_rx_poll, NETCP_NAPI_WEIGHT);
 +	netif_tx_napi_add(ndev, &netcp->tx_napi, netcp_tx_poll, NETCP_NAPI_WEIGHT);
++=======
+ 	netif_napi_add(ndev, &netcp->rx_napi, netcp_rx_poll, NAPI_POLL_WEIGHT);
+ 	netif_napi_add_tx(ndev, &netcp->tx_napi, netcp_tx_poll);
++>>>>>>> 16d083e28f1a (net: switch to netif_napi_add_tx())
  
  	/* Register the network device */
  	ndev->dev_id		= 0;
* Unmerged path drivers/net/ethernet/broadcom/bcm4908_enet.c
* Unmerged path drivers/net/ethernet/fungible/funeth/funeth_main.c
* Unmerged path drivers/net/ethernet/lantiq_xrx200.c
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-nuss.c
* Unmerged path drivers/net/ethernet/ti/cpsw_new.c
* Unmerged path drivers/net/ipa/gsi.c
* Unmerged path drivers/net/ethernet/broadcom/bcm4908_enet.c
diff --git a/drivers/net/ethernet/broadcom/bcmsysport.c b/drivers/net/ethernet/broadcom/bcmsysport.c
index 558f39fe3bac..692aedf9537e 100644
--- a/drivers/net/ethernet/broadcom/bcmsysport.c
+++ b/drivers/net/ethernet/broadcom/bcmsysport.c
@@ -1481,7 +1481,7 @@ static int bcm_sysport_init_tx_ring(struct bcm_sysport_priv *priv,
 	/* Initialize SW view of the ring */
 	spin_lock_init(&ring->lock);
 	ring->priv = priv;
-	netif_tx_napi_add(priv->netdev, &ring->napi, bcm_sysport_tx_poll, 64);
+	netif_napi_add_tx(priv->netdev, &ring->napi, bcm_sysport_tx_poll);
 	ring->index = index;
 	ring->size = size;
 	ring->clean_index = 0;
* Unmerged path drivers/net/ethernet/broadcom/genet/bcmgenet.c
* Unmerged path drivers/net/ethernet/fungible/funeth/funeth_main.c
* Unmerged path drivers/net/ethernet/lantiq_xrx200.c
diff --git a/drivers/net/ethernet/mellanox/mlx4/en_cq.c b/drivers/net/ethernet/mellanox/mlx4/en_cq.c
index d5fc72b1a36f..6affbd241264 100644
--- a/drivers/net/ethernet/mellanox/mlx4/en_cq.c
+++ b/drivers/net/ethernet/mellanox/mlx4/en_cq.c
@@ -147,8 +147,7 @@ int mlx4_en_activate_cq(struct mlx4_en_priv *priv, struct mlx4_en_cq *cq,
 	switch (cq->type) {
 	case TX:
 		cq->mcq.comp = mlx4_en_tx_irq;
-		netif_tx_napi_add(cq->dev, &cq->napi, mlx4_en_poll_tx_cq,
-				  NAPI_POLL_WEIGHT);
+		netif_napi_add_tx(cq->dev, &cq->napi, mlx4_en_poll_tx_cq);
 		napi_enable(&cq->napi);
 		break;
 	case RX:
diff --git a/drivers/net/ethernet/microsoft/mana/mana_en.c b/drivers/net/ethernet/microsoft/mana/mana_en.c
index 0bdbcbe67966..5289a498b126 100644
--- a/drivers/net/ethernet/microsoft/mana/mana_en.c
+++ b/drivers/net/ethernet/microsoft/mana/mana_en.c
@@ -1499,7 +1499,7 @@ static int mana_create_txq(struct mana_port_context *apc,
 
 		gc->cq_table[cq->gdma_id] = cq->gdma_cq;
 
-		netif_tx_napi_add(net, &cq->napi, mana_poll, NAPI_POLL_WEIGHT);
+		netif_napi_add_tx(net, &cq->napi, mana_poll);
 		napi_enable(&cq->napi);
 
 		mana_gd_ring_cq(cq->gdma_cq, SET_ARM_BIT);
diff --git a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
index faa324a75890..41ded13a06c3 100644
--- a/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
+++ b/drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c
@@ -1605,8 +1605,8 @@ int qlcnic_82xx_napi_add(struct qlcnic_adapter *adapter,
 	if (qlcnic_check_multi_tx(adapter) && !adapter->ahw->diag_test) {
 		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
 			tx_ring = &adapter->tx_ring[ring];
-			netif_tx_napi_add(netdev, &tx_ring->napi, qlcnic_tx_poll,
-				       NAPI_POLL_WEIGHT);
+			netif_napi_add_tx(netdev, &tx_ring->napi,
+					  qlcnic_tx_poll);
 		}
 	}
 
@@ -2135,9 +2135,8 @@ int qlcnic_83xx_napi_add(struct qlcnic_adapter *adapter,
 	    !(adapter->flags & QLCNIC_TX_INTR_SHARED)) {
 		for (ring = 0; ring < adapter->drv_tx_rings; ring++) {
 			tx_ring = &adapter->tx_ring[ring];
-			netif_tx_napi_add(netdev, &tx_ring->napi,
-				       qlcnic_83xx_msix_tx_poll,
-				       NAPI_POLL_WEIGHT);
+			netif_napi_add_tx(netdev, &tx_ring->napi,
+					  qlcnic_83xx_msix_tx_poll);
 		}
 	}
 
diff --git a/drivers/net/ethernet/rocker/rocker_main.c b/drivers/net/ethernet/rocker/rocker_main.c
index fbd127ea6ae3..5863104b98c1 100644
--- a/drivers/net/ethernet/rocker/rocker_main.c
+++ b/drivers/net/ethernet/rocker/rocker_main.c
@@ -2569,8 +2569,7 @@ static int rocker_probe_port(struct rocker *rocker, unsigned int port_number)
 	rocker_port_dev_addr_init(rocker_port);
 	dev->netdev_ops = &rocker_port_netdev_ops;
 	dev->ethtool_ops = &rocker_port_ethtool_ops;
-	netif_tx_napi_add(dev, &rocker_port->napi_tx, rocker_port_poll_tx,
-			  NAPI_POLL_WEIGHT);
+	netif_napi_add_tx(dev, &rocker_port->napi_tx, rocker_port_poll_tx);
 	netif_napi_add(dev, &rocker_port->napi_rx, rocker_port_poll_rx,
 		       NAPI_POLL_WEIGHT);
 	rocker_carrier_init(rocker_port);
* Unmerged path drivers/net/ethernet/socionext/sni_ave.c
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 196dcbbca40c..41c00608d10a 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -5407,9 +5407,8 @@ static void stmmac_napi_add(struct net_device *dev)
 				       NAPI_POLL_WEIGHT);
 		}
 		if (queue < priv->plat->tx_queues_to_use) {
-			netif_tx_napi_add(dev, &ch->tx_napi,
-					  stmmac_napi_poll_tx,
-					  NAPI_POLL_WEIGHT);
+			netif_napi_add_tx(dev, &ch->tx_napi,
+					  stmmac_napi_poll_tx);
 		}
 	}
 }
* Unmerged path drivers/net/ethernet/ti/am65-cpsw-nuss.c
* Unmerged path drivers/net/ethernet/ti/cpsw.c
* Unmerged path drivers/net/ethernet/ti/cpsw_new.c
* Unmerged path drivers/net/ethernet/ti/netcp_core.c
* Unmerged path drivers/net/ipa/gsi.c
diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index 9459f7caf456..2f110e663cff 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -293,8 +293,7 @@ static void tun_napi_init(struct tun_struct *tun, struct tun_file *tfile,
 	tfile->napi_enabled = napi_en;
 	tfile->napi_frags_enabled = napi_en && napi_frags;
 	if (napi_en) {
-		netif_tx_napi_add(tun->dev, &tfile->napi, tun_napi_poll,
-				  NAPI_POLL_WEIGHT);
+		netif_napi_add_tx(tun->dev, &tfile->napi, tun_napi_poll);
 		napi_enable(&tfile->napi);
 	}
 }
diff --git a/drivers/s390/net/qeth_core_main.c b/drivers/s390/net/qeth_core_main.c
index 3a22f605cee1..28c1873ddb64 100644
--- a/drivers/s390/net/qeth_core_main.c
+++ b/drivers/s390/net/qeth_core_main.c
@@ -7140,8 +7140,7 @@ int qeth_open(struct net_device *dev)
 
 	local_bh_disable();
 	qeth_for_each_output_queue(card, queue, i) {
-		netif_tx_napi_add(dev, &queue->napi, qeth_tx_poll,
-				  NAPI_POLL_WEIGHT);
+		netif_napi_add_tx(dev, &queue->napi, qeth_tx_poll);
 		napi_enable(&queue->napi);
 		napi_schedule(&queue->napi);
 	}
diff --git a/net/mptcp/protocol.c b/net/mptcp/protocol.c
index c82e67db5aad..235f6c6f03b1 100644
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@ -3563,8 +3563,8 @@ void __init mptcp_proto_init(void)
 	for_each_possible_cpu(cpu) {
 		delegated = per_cpu_ptr(&mptcp_delegated_actions, cpu);
 		INIT_LIST_HEAD(&delegated->head);
-		netif_tx_napi_add(&mptcp_napi_dev, &delegated->napi, mptcp_napi_poll,
-				  NAPI_POLL_WEIGHT);
+		netif_napi_add_tx(&mptcp_napi_dev, &delegated->napi,
+				  mptcp_napi_poll);
 		napi_enable(&delegated->napi);
 	}
 
