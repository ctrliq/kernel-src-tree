cpuidle: haltpoll: Add trace points for guest_halt_poll_ns grow/shrink

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Eiichi Tsukata <eiichi.tsukata@nutanix.com>
commit 0da11bf0cab9029db8b85e48d962ff05c00a4faa
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/0da11bf0.failed

Add trace points as are implemented in KVM host halt polling.
This helps tune guest halt polling params.

	Signed-off-by: Eiichi Tsukata <eiichi.tsukata@nutanix.com>
	Acked-by: Marcelo Tosatti <mtosatti@redhat.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 0da11bf0cab9029db8b85e48d962ff05c00a4faa)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/governors/haltpoll.c
diff --cc drivers/cpuidle/governors/haltpoll.c
index cfe7738e0d7c,1dff3a52917d..000000000000
--- a/drivers/cpuidle/governors/haltpoll.c
+++ b/drivers/cpuidle/governors/haltpoll.c
@@@ -90,7 -91,8 +91,12 @@@ static void adjust_poll_limit(struct cp
  		if (val > guest_halt_poll_ns)
  			val = guest_halt_poll_ns;
  
++<<<<<<< HEAD
 +		dev->rh_cpuidle_dev.poll_limit_ns = val;
++=======
+ 		trace_guest_halt_poll_ns_grow(val, dev->poll_limit_ns);
+ 		dev->poll_limit_ns = val;
++>>>>>>> 0da11bf0cab9 (cpuidle: haltpoll: Add trace points for guest_halt_poll_ns grow/shrink)
  	} else if (block_ns > guest_halt_poll_ns &&
  		   guest_halt_poll_allow_shrink) {
  		unsigned int shrink = guest_halt_poll_shrink;
@@@ -100,7 -102,8 +106,12 @@@
  			val = 0;
  		else
  			val /= shrink;
++<<<<<<< HEAD
 +		dev->rh_cpuidle_dev.poll_limit_ns = val;
++=======
+ 		trace_guest_halt_poll_ns_shrink(val, dev->poll_limit_ns);
+ 		dev->poll_limit_ns = val;
++>>>>>>> 0da11bf0cab9 (cpuidle: haltpoll: Add trace points for guest_halt_poll_ns grow/shrink)
  	}
  }
  
* Unmerged path drivers/cpuidle/governors/haltpoll.c
diff --git a/include/trace/events/power.h b/include/trace/events/power.h
index af5018aa9517..c708521e4ed5 100644
--- a/include/trace/events/power.h
+++ b/include/trace/events/power.h
@@ -500,6 +500,35 @@ DEFINE_EVENT(dev_pm_qos_request, dev_pm_qos_remove_request,
 
 	TP_ARGS(name, type, new_value)
 );
+
+TRACE_EVENT(guest_halt_poll_ns,
+
+	TP_PROTO(bool grow, unsigned int new, unsigned int old),
+
+	TP_ARGS(grow, new, old),
+
+	TP_STRUCT__entry(
+		__field(bool, grow)
+		__field(unsigned int, new)
+		__field(unsigned int, old)
+	),
+
+	TP_fast_assign(
+		__entry->grow   = grow;
+		__entry->new    = new;
+		__entry->old    = old;
+	),
+
+	TP_printk("halt_poll_ns %u (%s %u)",
+		__entry->new,
+		__entry->grow ? "grow" : "shrink",
+		__entry->old)
+);
+
+#define trace_guest_halt_poll_ns_grow(new, old) \
+	trace_guest_halt_poll_ns(true, new, old)
+#define trace_guest_halt_poll_ns_shrink(new, old) \
+	trace_guest_halt_poll_ns(false, new, old)
 #endif /* _TRACE_POWER_H */
 
 /* This part must be outside protection */
