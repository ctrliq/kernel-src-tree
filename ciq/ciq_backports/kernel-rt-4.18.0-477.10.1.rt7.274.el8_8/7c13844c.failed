wifi: mac80211: fix potential deadlock in ieee80211_key_link()

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-477.10.1.rt7.274.el8_8
commit-author Sun Ke <sunke32@huawei.com>
commit 7c13844c3b7662976270996552eee3a0849afc3f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-477.10.1.rt7.274.el8_8/7c13844c.failed

Add the missing unlock before return in the error handling case.

Fixes: ccdde7c74ffd ("wifi: mac80211: properly implement MLO key handling")
	Signed-off-by: Sun Ke <sunke32@huawei.com>
Link: https://lore.kernel.org/r/20220827022452.823381-1-sunke32@huawei.com
	Signed-off-by: Johannes Berg <johannes.berg@intel.com>
(cherry picked from commit 7c13844c3b7662976270996552eee3a0849afc3f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mac80211/key.c
diff --cc net/mac80211/key.c
index 6befb578ed9e,d89ec93b243b..000000000000
--- a/net/mac80211/key.c
+++ b/net/mac80211/key.c
@@@ -827,8 -859,19 +827,24 @@@ int ieee80211_key_link(struct ieee80211
  		    (old_key && old_key->conf.cipher != key->conf.cipher))
  			goto out;
  	} else if (sta) {
++<<<<<<< HEAD
 +		old_key = key_mtx_dereference(sdata->local,
 +					      sta->deflink.gtk[idx]);
++=======
+ 		struct link_sta_info *link_sta = &sta->deflink;
+ 		int link_id = key->conf.link_id;
+ 
+ 		if (link_id >= 0) {
+ 			link_sta = rcu_dereference_protected(sta->link[link_id],
+ 							     lockdep_is_held(&sta->local->sta_mtx));
+ 			if (!link_sta) {
+ 				ret = -ENOLINK;
+ 				goto out;
+ 			}
+ 		}
+ 
+ 		old_key = key_mtx_dereference(sdata->local, link_sta->gtk[idx]);
++>>>>>>> 7c13844c3b76 (wifi: mac80211: fix potential deadlock in ieee80211_key_link())
  	} else {
  		if (idx < NUM_DEFAULT_KEYS)
  			old_key = key_mtx_dereference(sdata->local,
* Unmerged path net/mac80211/key.c
