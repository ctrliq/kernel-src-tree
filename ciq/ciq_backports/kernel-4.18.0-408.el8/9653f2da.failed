KVM: x86/mmu: Drop 'shared' param from tdp_mmu_link_page()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 9653f2da7522c5e762e2edd2beb53170669d0a2b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/9653f2da.failed

Drop @shared from tdp_mmu_link_page() and hardcode it to work for
mmu_lock being held for read.  The helper has exactly one caller and
in all likelihood will only ever have exactly one caller.  Even if KVM
adds a path to install translations without an initiating page fault,
odds are very, very good that the path will just be a wrapper to the
"page fault" handler (both SNP and TDX RFCs propose patches to do
exactly that).

No functional change intended.

	Cc: Ben Gardon <bgardon@google.com>
	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20210810224554.2978735-3-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 9653f2da7522c5e762e2edd2beb53170669d0a2b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/tdp_mmu.c
diff --cc arch/x86/kvm/mmu/tdp_mmu.c
index 506d3bdb9486,64ccfc1fa553..000000000000
--- a/arch/x86/kvm/mmu/tdp_mmu.c
+++ b/arch/x86/kvm/mmu/tdp_mmu.c
@@@ -985,9 -1052,8 +976,14 @@@ int kvm_tdp_mmu_map(struct kvm_vcpu *vc
  			new_spte = make_nonleaf_spte(child_pt,
  						     !shadow_accessed_mask);
  
++<<<<<<< HEAD
 +			if (tdp_mmu_set_spte_atomic(vcpu->kvm, &iter,
 +						    new_spte)) {
 +				tdp_mmu_link_page(vcpu->kvm, sp, true,
++=======
+ 			if (tdp_mmu_set_spte_atomic_no_dirty_log(vcpu->kvm, &iter, new_spte)) {
+ 				tdp_mmu_link_page(vcpu->kvm, sp,
++>>>>>>> 9653f2da7522 (KVM: x86/mmu: Drop 'shared' param from tdp_mmu_link_page())
  						  huge_page_disallowed &&
  						  req_level >= iter.level);
  
* Unmerged path arch/x86/kvm/mmu/tdp_mmu.c
