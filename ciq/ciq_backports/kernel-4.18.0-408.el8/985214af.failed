s390/zcrypt: CEX8S exploitation support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Harald Freudenberger <freude@linux.ibm.com>
commit 985214af939b9935dac94aa6fb56c85039fb77e8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/985214af.failed

This patch adds CEX8 exploitation support for the AP bus code,
the zcrypt device driver zoo and the vfio device driver.

	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Reviewed-by: JÃ¼rgen Christ <jchrist@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit 985214af939b9935dac94aa6fb56c85039fb77e8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/zcrypt_cex4.c
diff --cc drivers/s390/crypto/zcrypt_cex4.c
index d3a3a6ed5244,fe5664c7589e..000000000000
--- a/drivers/s390/crypto/zcrypt_cex4.c
+++ b/drivers/s390/crypto/zcrypt_cex4.c
@@@ -394,8 -398,8 +398,13 @@@ static const struct attribute_group ep1
  	.attrs = ep11_queue_attrs,
  };
  
++<<<<<<< HEAD
 +/**
 + * Probe function for CEX4/CEX5/CEX6/CEX7 card device. It always
++=======
+ /*
+  * Probe function for CEX[45678] card device. It always
++>>>>>>> 985214af939b (s390/zcrypt: CEX8S exploitation support)
   * accepts the AP device since the bus_match already checked
   * the hardware type.
   * @ap_dev: pointer to the AP device.
@@@ -565,8 -593,8 +601,13 @@@ static int zcrypt_cex4_card_probe(struc
  	return rc;
  }
  
++<<<<<<< HEAD
 +/**
 + * This is called to remove the CEX4/CEX5/CEX6/CEX7 card driver
++=======
+ /*
+  * This is called to remove the CEX[45678] card driver
++>>>>>>> 985214af939b (s390/zcrypt: CEX8S exploitation support)
   * information if an AP card device is removed.
   */
  static void zcrypt_cex4_card_remove(struct ap_device *ap_dev)
@@@ -589,8 -617,8 +630,13 @@@ static struct ap_driver zcrypt_cex4_car
  	.flags = AP_DRIVER_FLAG_DEFAULT,
  };
  
++<<<<<<< HEAD
 +/**
 + * Probe function for CEX4/CEX5/CEX6/CEX7 queue device. It always
++=======
+ /*
+  * Probe function for CEX[45678] queue device. It always
++>>>>>>> 985214af939b (s390/zcrypt: CEX8S exploitation support)
   * accepts the AP device since the bus_match already checked
   * the hardware type.
   * @ap_dev: pointer to the AP device.
@@@ -658,8 -683,8 +704,13 @@@ static int zcrypt_cex4_queue_probe(stru
  	return rc;
  }
  
++<<<<<<< HEAD
 +/**
 + * This is called to remove the CEX4/CEX5/CEX6/CEX7 queue driver
++=======
+ /*
+  * This is called to remove the CEX[45678] queue driver
++>>>>>>> 985214af939b (s390/zcrypt: CEX8S exploitation support)
   * information if an AP queue device is removed.
   */
  static void zcrypt_cex4_queue_remove(struct ap_device *ap_dev)
diff --git a/arch/s390/include/uapi/asm/zcrypt.h b/arch/s390/include/uapi/asm/zcrypt.h
index 22fd202856bc..2f04a5499d74 100644
--- a/arch/s390/include/uapi/asm/zcrypt.h
+++ b/arch/s390/include/uapi/asm/zcrypt.h
@@ -288,7 +288,7 @@ struct zcrypt_device_matrix_ext {
  *	 0x08: CEX3A
  *	 0x0a: CEX4
  *	 0x0b: CEX5
- *	 0x0c: CEX6 and CEX7
+ *	 0x0c: CEX6, CEX7 or CEX8
  *	 0x0d: device is disabled
  *
  *   ZCRYPT_QDEPTH_MASK
diff --git a/drivers/s390/crypto/ap_bus.c b/drivers/s390/crypto/ap_bus.c
index 8f97606e23f2..32665811853a 100644
--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@ -1558,24 +1558,24 @@ static int ap_get_compatible_type(ap_qid_t qid, int rawtype, unsigned int func)
 			    AP_QID_CARD(qid), AP_QID_QUEUE(qid), rawtype);
 		return 0;
 	}
-	/* up to CEX7 known and fully supported */
-	if (rawtype <= AP_DEVICE_TYPE_CEX7)
+	/* up to CEX8 known and fully supported */
+	if (rawtype <= AP_DEVICE_TYPE_CEX8)
 		return rawtype;
 	/*
-	 * unknown new type > CEX7, check for compatibility
+	 * unknown new type > CEX8, check for compatibility
 	 * to the highest known and supported type which is
-	 * currently CEX7 with the help of the QACT function.
+	 * currently CEX8 with the help of the QACT function.
 	 */
 	if (ap_qact_available()) {
 		struct ap_queue_status status;
 		union ap_qact_ap_info apinfo = {0};
 
 		apinfo.mode = (func >> 26) & 0x07;
-		apinfo.cat = AP_DEVICE_TYPE_CEX7;
+		apinfo.cat = AP_DEVICE_TYPE_CEX8;
 		status = ap_qact(qid, 0, &apinfo);
 		if (status.response_code == AP_RESPONSE_NORMAL
 		    && apinfo.cat >= AP_DEVICE_TYPE_CEX2A
-		    && apinfo.cat <= AP_DEVICE_TYPE_CEX7)
+		    && apinfo.cat <= AP_DEVICE_TYPE_CEX8)
 			comp_type = apinfo.cat;
 	}
 	if (!comp_type)
diff --git a/drivers/s390/crypto/ap_bus.h b/drivers/s390/crypto/ap_bus.h
index 5ee06be1d3b0..99221ec5a181 100644
--- a/drivers/s390/crypto/ap_bus.h
+++ b/drivers/s390/crypto/ap_bus.h
@@ -69,6 +69,7 @@ static inline int ap_test_bit(unsigned int *ptr, unsigned int nr)
 #define AP_DEVICE_TYPE_CEX5	11
 #define AP_DEVICE_TYPE_CEX6	12
 #define AP_DEVICE_TYPE_CEX7	13
+#define AP_DEVICE_TYPE_CEX8	14
 
 /*
  * Known function facilities
diff --git a/drivers/s390/crypto/vfio_ap_drv.c b/drivers/s390/crypto/vfio_ap_drv.c
index 2753e77ffee0..62f7f58d12ee 100644
--- a/drivers/s390/crypto/vfio_ap_drv.c
+++ b/drivers/s390/crypto/vfio_ap_drv.c
@@ -38,6 +38,8 @@ static struct ap_device_id ap_queue_ids[] = {
 	  .match_flags = AP_DEVICE_ID_MATCH_QUEUE_TYPE },
 	{ .dev_type = AP_DEVICE_TYPE_CEX7,
 	  .match_flags = AP_DEVICE_ID_MATCH_QUEUE_TYPE },
+	{ .dev_type = AP_DEVICE_TYPE_CEX8,
+	  .match_flags = AP_DEVICE_ID_MATCH_QUEUE_TYPE },
 	{ /* end of sibling */ },
 };
 
* Unmerged path drivers/s390/crypto/zcrypt_cex4.c
