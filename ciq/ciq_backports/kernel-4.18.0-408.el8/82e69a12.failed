mm/fork: clear PASID for new mm

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Fenghua Yu <fenghua.yu@intel.com>
commit 82e69a121be4b1597ce758534816a8ee04c8b761
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/82e69a12.failed

When a new mm is created, its PASID should be cleared, i.e.  the PASID is
initialized to its init state 0 on both ARM and X86.

This patch was part of the series introducing mm->pasid, but got lost
along the way [1].  It still makes sense to have it, because each address
space has a different PASID.  And the IOMMU code in
iommu_sva_alloc_pasid() expects the pasid field of a new mm struct to be
cleared.

[1] https://lore.kernel.org/linux-iommu/YDgh53AcQHT+T3L0@otcwcpicx3.sc.intel.com/

Link: https://lkml.kernel.org/r/20210302103837.2562625-1-jean-philippe@linaro.org
	Signed-off-by: Fenghua Yu <fenghua.yu@intel.com>
	Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
	Reviewed-by: Tony Luck <tony.luck@intel.com>
	Cc: Jacob Pan <jacob.jun.pan@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 82e69a121be4b1597ce758534816a8ee04c8b761)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mm_types.h
diff --cc include/linux/mm_types.h
index 7ebd22569b35,6613b26a8894..000000000000
--- a/include/linux/mm_types.h
+++ b/include/linux/mm_types.h
@@@ -25,12 -23,7 +25,16 @@@
  #endif
  #define AT_VECTOR_SIZE (2*(AT_VECTOR_SIZE_ARCH + AT_VECTOR_SIZE_BASE + 1))
  
++<<<<<<< HEAD
 +#ifndef ORIG_AT_VECTOR_SIZE_ARCH
 +#define ORIG_AT_VECTOR_SIZE_ARCH AT_VECTOR_SIZE_ARCH
 +#endif
 +/* RH KABI check requires this to be this "string" rather than just "46". */
 +#define ORIG_AT_VECTOR_SIZE (2*(ORIG_AT_VECTOR_SIZE_ARCH + AT_VECTOR_SIZE_BASE + 1))
 +
++=======
+ #define INIT_PASID	0
++>>>>>>> 82e69a121be4 (mm/fork: clear PASID for new mm)
  
  struct address_space;
  struct mem_cgroup;
* Unmerged path include/linux/mm_types.h
diff --git a/kernel/fork.c b/kernel/fork.c
index 3a201a1bb372..c61ea94550fc 100644
--- a/kernel/fork.c
+++ b/kernel/fork.c
@@ -1010,6 +1010,13 @@ static void mm_init_owner(struct mm_struct *mm, struct task_struct *p)
 #endif
 }
 
+static void mm_init_pasid(struct mm_struct *mm)
+{
+#ifdef CONFIG_IOMMU_SUPPORT
+	mm->pasid = INIT_PASID;
+#endif
+}
+
 static void mm_init_uprobes_state(struct mm_struct *mm)
 {
 #ifdef CONFIG_UPROBES
@@ -1039,6 +1046,7 @@ static struct mm_struct *mm_init(struct mm_struct *mm, struct task_struct *p,
 	mm_init_cpumask(mm);
 	mm_init_aio(mm);
 	mm_init_owner(mm, p);
+	mm_init_pasid(mm);
 	RCU_INIT_POINTER(mm->exe_file, NULL);
 	mmu_notifier_subscriptions_init(mm);
 	init_tlb_flush_pending(mm);
