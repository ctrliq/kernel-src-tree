iomap: iomap_write_end cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit d74999c8c060dfeaf9977b91baa3c795fc183a84
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/d74999c8.failed

In iomap_write_end(), only call iomap_write_failed() on the byte range
that has failed.  This should improve code readability, but doesn't fix
an actual bug because iomap_write_failed() is called after updating the
file size here and it only affects the memory beyond the end of the
file.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
(cherry picked from commit d74999c8c060dfeaf9977b91baa3c795fc183a84)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/iomap/buffered-io.c
diff --cc fs/iomap/buffered-io.c
index 13044c54fc57,8fb9b2797fc5..000000000000
--- a/fs/iomap/buffered-io.c
+++ b/fs/iomap/buffered-io.c
@@@ -780,19 -722,19 +780,23 @@@ static size_t iomap_write_end(struct in
  	 * preferably after I/O completion so that no stale data is exposed.
  	 */
  	if (pos + ret > old_size) {
 -		i_size_write(iter->inode, pos + ret);
 -		iter->iomap.flags |= IOMAP_F_SIZE_CHANGED;
 +		i_size_write(inode, pos + ret);
 +		iomap->flags |= IOMAP_F_SIZE_CHANGED;
  	}
 -	folio_unlock(folio);
 +	unlock_page(page);
  
  	if (old_size < pos)
 -		pagecache_isize_extended(iter->inode, old_size, pos);
 +		pagecache_isize_extended(inode, old_size, pos);
  	if (page_ops && page_ops->page_done)
 -		page_ops->page_done(iter->inode, pos, ret, &folio->page);
 -	folio_put(folio);
 +		page_ops->page_done(inode, pos, ret, page);
 +	put_page(page);
  
  	if (ret < len)
++<<<<<<< HEAD
 +		iomap_write_failed(inode, pos, len);
++=======
+ 		iomap_write_failed(iter->inode, pos + ret, len - ret);
++>>>>>>> d74999c8c060 (iomap: iomap_write_end cleanup)
  	return ret;
  }
  
* Unmerged path fs/iomap/buffered-io.c
