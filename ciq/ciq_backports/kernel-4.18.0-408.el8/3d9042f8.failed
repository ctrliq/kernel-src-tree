KVM: s390: Add missing vm MEM_OP size check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Janis Schoetterl-Glausch <scgl@linux.ibm.com>
commit 3d9042f8b923810c169ece02d91c70ec498eff0b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/3d9042f8.failed

Check that size is not zero, preventing the following warning:

WARNING: CPU: 0 PID: 9692 at mm/vmalloc.c:3059 __vmalloc_node_range+0x528/0x648
Modules linked in:
CPU: 0 PID: 9692 Comm: memop Not tainted 5.17.0-rc3-e4+ #80
Hardware name: IBM 8561 T01 701 (LPAR)
Krnl PSW : 0704c00180000000 0000000082dc584c (__vmalloc_node_range+0x52c/0x648)
           R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3
Krnl GPRS: 0000000000000083 ffffffffffffffff 0000000000000000 0000000000000001
           0000038000000000 000003ff80000000 0000000000000cc0 000000008ebb8000
           0000000087a8a700 000000004040aeb1 000003ffd9f7dec8 000000008ebb8000
           000000009d9b8000 000000000102a1b4 00000380035afb68 00000380035afaa8
Krnl Code: 0000000082dc583e: d028a7f4ff80        trtr    2036(41,%r10),3968(%r15)
           0000000082dc5844: af000000            mc      0,0
          #0000000082dc5848: af000000            mc      0,0
          >0000000082dc584c: a7d90000            lghi    %r13,0
           0000000082dc5850: b904002d            lgr     %r2,%r13
           0000000082dc5854: eb6ff1080004        lmg     %r6,%r15,264(%r15)
           0000000082dc585a: 07fe                bcr     15,%r14
           0000000082dc585c: 47000700            bc      0,1792
Call Trace:
 [<0000000082dc584c>] __vmalloc_node_range+0x52c/0x648
 [<0000000082dc5b62>] vmalloc+0x5a/0x68
 [<000003ff8067f4ca>] kvm_arch_vm_ioctl+0x2da/0x2a30 [kvm]
 [<000003ff806705bc>] kvm_vm_ioctl+0x4ec/0x978 [kvm]
 [<0000000082e562fe>] __s390x_sys_ioctl+0xbe/0x100
 [<000000008360a9bc>] __do_syscall+0x1d4/0x200
 [<0000000083618bd2>] system_call+0x82/0xb0
Last Breaking-Event-Address:
 [<0000000082dc5348>] __vmalloc_node_range+0x28/0x648

Other than the warning, there is no ill effect from the missing check,
the condition is detected by subsequent code and causes a return
with ENOMEM.

Fixes: ef11c9463ae0 (KVM: s390: Add vm IOCTL for key checked guest absolute memory access)
	Signed-off-by: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
Link: https://lore.kernel.org/r/20220221163237.4122868-1-scgl@linux.ibm.com
	Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
(cherry picked from commit 3d9042f8b923810c169ece02d91c70ec498eff0b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/kvm/kvm-s390.c
diff --cc arch/s390/kvm/kvm-s390.c
index d74a232fd87a,e056ad86ccd2..000000000000
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@@ -2358,6 -2360,83 +2358,86 @@@ static int kvm_s390_handle_pv(struct kv
  	return r;
  }
  
++<<<<<<< HEAD
++=======
+ static bool access_key_invalid(u8 access_key)
+ {
+ 	return access_key > 0xf;
+ }
+ 
+ static int kvm_s390_vm_mem_op(struct kvm *kvm, struct kvm_s390_mem_op *mop)
+ {
+ 	void __user *uaddr = (void __user *)mop->buf;
+ 	u64 supported_flags;
+ 	void *tmpbuf = NULL;
+ 	int r, srcu_idx;
+ 
+ 	supported_flags = KVM_S390_MEMOP_F_SKEY_PROTECTION
+ 			  | KVM_S390_MEMOP_F_CHECK_ONLY;
+ 	if (mop->flags & ~supported_flags || !mop->size)
+ 		return -EINVAL;
+ 	if (mop->size > MEM_OP_MAX_SIZE)
+ 		return -E2BIG;
+ 	if (kvm_s390_pv_is_protected(kvm))
+ 		return -EINVAL;
+ 	if (mop->flags & KVM_S390_MEMOP_F_SKEY_PROTECTION) {
+ 		if (access_key_invalid(mop->key))
+ 			return -EINVAL;
+ 	} else {
+ 		mop->key = 0;
+ 	}
+ 	if (!(mop->flags & KVM_S390_MEMOP_F_CHECK_ONLY)) {
+ 		tmpbuf = vmalloc(mop->size);
+ 		if (!tmpbuf)
+ 			return -ENOMEM;
+ 	}
+ 
+ 	srcu_idx = srcu_read_lock(&kvm->srcu);
+ 
+ 	if (kvm_is_error_gpa(kvm, mop->gaddr)) {
+ 		r = PGM_ADDRESSING;
+ 		goto out_unlock;
+ 	}
+ 
+ 	switch (mop->op) {
+ 	case KVM_S390_MEMOP_ABSOLUTE_READ: {
+ 		if (mop->flags & KVM_S390_MEMOP_F_CHECK_ONLY) {
+ 			r = check_gpa_range(kvm, mop->gaddr, mop->size, GACC_FETCH, mop->key);
+ 		} else {
+ 			r = access_guest_abs_with_key(kvm, mop->gaddr, tmpbuf,
+ 						      mop->size, GACC_FETCH, mop->key);
+ 			if (r == 0) {
+ 				if (copy_to_user(uaddr, tmpbuf, mop->size))
+ 					r = -EFAULT;
+ 			}
+ 		}
+ 		break;
+ 	}
+ 	case KVM_S390_MEMOP_ABSOLUTE_WRITE: {
+ 		if (mop->flags & KVM_S390_MEMOP_F_CHECK_ONLY) {
+ 			r = check_gpa_range(kvm, mop->gaddr, mop->size, GACC_STORE, mop->key);
+ 		} else {
+ 			if (copy_from_user(tmpbuf, uaddr, mop->size)) {
+ 				r = -EFAULT;
+ 				break;
+ 			}
+ 			r = access_guest_abs_with_key(kvm, mop->gaddr, tmpbuf,
+ 						      mop->size, GACC_STORE, mop->key);
+ 		}
+ 		break;
+ 	}
+ 	default:
+ 		r = -EINVAL;
+ 	}
+ 
+ out_unlock:
+ 	srcu_read_unlock(&kvm->srcu, srcu_idx);
+ 
+ 	vfree(tmpbuf);
+ 	return r;
+ }
+ 
++>>>>>>> 3d9042f8b923 (KVM: s390: Add missing vm MEM_OP size check)
  long kvm_arch_vm_ioctl(struct file *filp,
  		       unsigned int ioctl, unsigned long arg)
  {
* Unmerged path arch/s390/kvm/kvm-s390.c
