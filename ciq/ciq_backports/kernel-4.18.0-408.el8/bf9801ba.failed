cpupower: Enable boost state support for AMD P-State module

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Huang Rui <ray.huang@amd.com>
commit bf9801baa81802dac7e2a5318944ca2f4bfa74ef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/bf9801ba.failed

The legacy ACPI hardware P-States function has 3 P-States on ACPI table,
the CPU frequency only can be switched between the 3 P-States. While the
processor supports the boost state, it will have another boost state
that the frequency can be higher than P0 state, and the state can be
decoded by the function of decode_pstates() and read by
amd_pci_get_num_boost_states().

However, the new AMD P-State function is different than legacy ACPI
hardware P-State on AMD processors. That has a finer grain frequency
range between the highest and lowest frequency. And boost frequency is
actually the frequency which is mapped on highest performance ratio. The
similar previous P0 frequency is mapped on nominal performance ratio.
If the highest performance on the processor is higher than nominal
performance, then we think the current processor supports the boost
state. And it uses amd_pstate_boost_init() to initialize boost for AMD
P-State function.

	Reviewed-by: Shuah Khan <skhan@linuxfoundation.org>
	Signed-off-by: Huang Rui <ray.huang@amd.com>
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit bf9801baa81802dac7e2a5318944ca2f4bfa74ef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/power/cpupower/utils/helpers/helpers.h
diff --cc tools/power/cpupower/utils/helpers/helpers.h
index 7347dd374daf,326491e11c6e..000000000000
--- a/tools/power/cpupower/utils/helpers/helpers.h
+++ b/tools/power/cpupower/utils/helpers/helpers.h
@@@ -136,6 -137,14 +136,17 @@@ extern int decode_pstates(unsigned int 
  
  extern int cpufreq_has_boost_support(unsigned int cpu, int *support,
  				     int *active, int * states);
++<<<<<<< HEAD
++=======
+ 
+ /* AMD P-State stuff **************************/
+ bool cpupower_amd_pstate_enabled(void);
+ void amd_pstate_boost_init(unsigned int cpu,
+ 			   int *support, int *active);
+ 
+ /* AMD P-State stuff **************************/
+ 
++>>>>>>> bf9801baa818 (cpupower: Enable boost state support for AMD P-State module)
  /*
   * CPUID functions returning a single datum
   */
@@@ -168,6 -177,12 +179,15 @@@ static inline int cpufreq_has_boost_sup
  					    int *active, int * states)
  { return -1; }
  
++<<<<<<< HEAD
++=======
+ static inline bool cpupower_amd_pstate_enabled(void)
+ { return false; }
+ static inline void amd_pstate_boost_init(unsigned int cpu, int *support,
+ 					 int *active)
+ {}
+ 
++>>>>>>> bf9801baa818 (cpupower: Enable boost state support for AMD P-State module)
  /* cpuid and cpuinfo helpers  **************************/
  
  static inline unsigned int cpuid_eax(unsigned int op) { return 0; };
diff --git a/tools/power/cpupower/utils/helpers/amd.c b/tools/power/cpupower/utils/helpers/amd.c
index 4d45d1b44164..f5ba528dc7db 100644
--- a/tools/power/cpupower/utils/helpers/amd.c
+++ b/tools/power/cpupower/utils/helpers/amd.c
@@ -175,5 +175,23 @@ static unsigned long amd_pstate_get_data(unsigned int cpu,
 						  MAX_AMD_PSTATE_VALUE_READ_FILES);
 }
 
+void amd_pstate_boost_init(unsigned int cpu, int *support, int *active)
+{
+	unsigned long highest_perf, nominal_perf, cpuinfo_min,
+		      cpuinfo_max, amd_pstate_max;
+
+	highest_perf = amd_pstate_get_data(cpu, AMD_PSTATE_HIGHEST_PERF);
+	nominal_perf = acpi_cppc_get_data(cpu, NOMINAL_PERF);
+
+	*support = highest_perf > nominal_perf ? 1 : 0;
+	if (!(*support))
+		return;
+
+	cpufreq_get_hardware_limits(cpu, &cpuinfo_min, &cpuinfo_max);
+	amd_pstate_max = amd_pstate_get_data(cpu, AMD_PSTATE_MAX_FREQ);
+
+	*active = cpuinfo_max == amd_pstate_max ? 1 : 0;
+}
+
 /* AMD P-State Helper Functions ************************************/
 #endif /* defined(__i386__) || defined(__x86_64__) */
* Unmerged path tools/power/cpupower/utils/helpers/helpers.h
diff --git a/tools/power/cpupower/utils/helpers/misc.c b/tools/power/cpupower/utils/helpers/misc.c
index 24f8bca5f1ee..692f726cc936 100644
--- a/tools/power/cpupower/utils/helpers/misc.c
+++ b/tools/power/cpupower/utils/helpers/misc.c
@@ -35,6 +35,8 @@ int cpufreq_has_boost_support(unsigned int cpu, int *support, int *active,
 			if (ret)
 				return ret;
 		}
+	} else if (cpupower_cpu_info.caps & CPUPOWER_CAP_AMD_PSTATE) {
+		amd_pstate_boost_init(cpu, support, active);
 	} else if (cpupower_cpu_info.caps & CPUPOWER_CAP_INTEL_IDA)
 		*support = *active = 1;
 	return 0;
