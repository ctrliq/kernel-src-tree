dm crypt: use dm_submit_bio_remap

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Mike Snitzer <snitzer@redhat.com>
commit e5524e128f6f80b7b8bb901465aded2518b44051
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/e5524e12.failed

Care was taken to support kcryptd_io_read being called from crypt_map
or workqueue.  Use of an intermediate CRYPT_MAP_READ_GFP gfp_t
(defined as GFP_NOWAIT) should protect from maintenance burden if that
flag were to change for some reason.

	Reviewed-by: Mikulas Patocka <mpatocka@redhat.com>
	Signed-off-by: Mike Snitzer <snitzer@redhat.com>
(cherry picked from commit e5524e128f6f80b7b8bb901465aded2518b44051)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-crypt.c
diff --cc drivers/md/dm-crypt.c
index 672465345fc8,f310f2ba8bad..000000000000
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@@ -1821,15 -1828,7 +1821,19 @@@ static void crypt_endio(struct bio *clo
  	crypt_dec_pending(io);
  }
  
++<<<<<<< HEAD
 +static void clone_init(struct dm_crypt_io *io, struct bio *clone)
 +{
 +	struct crypt_config *cc = io->cc;
 +
 +	clone->bi_private = io;
 +	clone->bi_end_io  = crypt_endio;
 +	bio_set_dev(clone, cc->dev->bdev);
 +	clone->bi_opf	  = io->base_bio->bi_opf;
 +}
++=======
+ #define CRYPT_MAP_READ_GFP GFP_NOWAIT
++>>>>>>> e5524e128f6f (dm crypt: use dm_submit_bio_remap)
  
  static int kcryptd_io_read(struct dm_crypt_io *io, gfp_t gfp)
  {
@@@ -1857,7 -1857,7 +1861,11 @@@
  		return 1;
  	}
  
++<<<<<<< HEAD
 +	generic_make_request(clone);
++=======
+ 	dm_submit_bio_remap(io->base_bio, clone, (gfp != CRYPT_MAP_READ_GFP));
++>>>>>>> e5524e128f6f (dm crypt: use dm_submit_bio_remap)
  	return 0;
  }
  
@@@ -1883,7 -1883,7 +1891,11 @@@ static void kcryptd_io_write(struct dm_
  {
  	struct bio *clone = io->ctx.bio_out;
  
++<<<<<<< HEAD
 +	generic_make_request(clone);
++=======
+ 	dm_submit_bio_remap(io->base_bio, clone, true);
++>>>>>>> e5524e128f6f (dm crypt: use dm_submit_bio_remap)
  }
  
  #define crypt_io_from_node(node) rb_entry((node), struct dm_crypt_io, rb_node)
@@@ -1962,7 -1962,7 +1974,11 @@@ static void kcryptd_crypt_write_io_subm
  
  	if ((likely(!async) && test_bit(DM_CRYPT_NO_OFFLOAD, &cc->flags)) ||
  	    test_bit(DM_CRYPT_NO_WRITE_WORKQUEUE, &cc->flags)) {
++<<<<<<< HEAD
 +		generic_make_request(clone);
++=======
+ 		dm_submit_bio_remap(io->base_bio, clone, true);
++>>>>>>> e5524e128f6f (dm crypt: use dm_submit_bio_remap)
  		return;
  	}
  
@@@ -3277,7 -3365,9 +3293,8 @@@ static int crypt_ctr(struct dm_target *
  
  	ti->num_flush_bios = 1;
  	ti->limit_swap_bios = true;
+ 	ti->accounts_remapped_io = true;
  
 -	dm_audit_log_ctr(DM_MSG_PREFIX, ti, 1);
  	return 0;
  
  bad:
* Unmerged path drivers/md/dm-crypt.c
