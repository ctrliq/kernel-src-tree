dmanegine: idxd: open code the dsa_drv registration

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Dave Jiang <dave.jiang@intel.com>
commit c05257b5600bb35a580ecdb25695efff26326d59
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/c05257b5.failed

Don't need a wrapper to register the driver. Just do it directly.

	Reviewed-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
Link: https://lore.kernel.org/r/162637465319.744545.16325178432532362906.stgit@djiang5-desk3.ch.intel.com
	Signed-off-by: Vinod Koul <vkoul@kernel.org>
(cherry picked from commit c05257b5600bb35a580ecdb25695efff26326d59)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/idxd/sysfs.c
diff --cc drivers/dma/idxd/sysfs.c
index e25f04f3917e,9f2d06c2aa98..000000000000
--- a/drivers/dma/idxd/sysfs.c
+++ b/drivers/dma/idxd/sysfs.c
@@@ -291,21 -50,41 +291,43 @@@ struct bus_type dsa_bus_type = 
  	.remove = idxd_config_bus_remove,
  };
  
++<<<<<<< HEAD
 +static struct idxd_device_driver dsa_drv = {
- 	.name = "dsa",
- };
- 
- /* IDXD generic driver setup */
- int idxd_register_driver(void)
++=======
+ static int idxd_dsa_drv_probe(struct idxd_dev *idxd_dev)
  {
- 	return idxd_driver_register(&dsa_drv);
+ 	if (is_idxd_dev(idxd_dev))
+ 		return idxd_device_drv_probe(idxd_dev);
+ 
+ 	if (is_idxd_wq_dev(idxd_dev)) {
+ 		struct idxd_wq *wq = idxd_dev_to_wq(idxd_dev);
+ 
+ 		return drv_enable_wq(wq);
+ 	}
+ 
+ 	return -ENODEV;
  }
  
- void idxd_unregister_driver(void)
+ static void idxd_dsa_drv_remove(struct idxd_dev *idxd_dev)
  {
- 	idxd_driver_unregister(&dsa_drv);
+ 	if (is_idxd_dev(idxd_dev)) {
+ 		idxd_device_drv_remove(idxd_dev);
+ 		return;
+ 	}
+ 
+ 	if (is_idxd_wq_dev(idxd_dev)) {
+ 		struct idxd_wq *wq = idxd_dev_to_wq(idxd_dev);
+ 
+ 		drv_disable_wq(wq);
+ 		return;
+ 	}
  }
  
+ struct idxd_device_driver dsa_drv = {
++>>>>>>> c05257b5600b (dmanegine: idxd: open code the dsa_drv registration)
+ 	.name = "dsa",
 -	.probe = idxd_dsa_drv_probe,
 -	.remove = idxd_dsa_drv_remove,
+ };
+ 
  /* IDXD engine attributes */
  static ssize_t engine_group_id_show(struct device *dev,
  				    struct device_attribute *attr, char *buf)
diff --git a/drivers/dma/idxd/idxd.h b/drivers/dma/idxd/idxd.h
index 813e19b4ecc8..9c5115fd94dc 100644
--- a/drivers/dma/idxd/idxd.h
+++ b/drivers/dma/idxd/idxd.h
@@ -38,6 +38,8 @@ struct idxd_device_driver {
 	struct device_driver drv;
 };
 
+extern struct idxd_device_driver dsa_drv;
+
 struct idxd_irq_entry {
 	struct idxd_device *idxd;
 	int id;
diff --git a/drivers/dma/idxd/init.c b/drivers/dma/idxd/init.c
index 20eae71edab4..22f15b3cd931 100644
--- a/drivers/dma/idxd/init.c
+++ b/drivers/dma/idxd/init.c
@@ -820,9 +820,9 @@ static int __init idxd_init_module(void)
 	if (err < 0)
 		return err;
 
-	err = idxd_register_driver();
+	err = idxd_driver_register(&dsa_drv);
 	if (err < 0)
-		goto err_idxd_driver_register;
+		goto err_dsa_driver_register;
 
 	err = idxd_cdev_register();
 	if (err)
@@ -837,8 +837,8 @@ static int __init idxd_init_module(void)
 err_pci_register:
 	idxd_cdev_remove();
 err_cdev_register:
-	idxd_unregister_driver();
-err_idxd_driver_register:
+	idxd_driver_unregister(&dsa_drv);
+err_dsa_driver_register:
 	idxd_unregister_bus_type();
 	return err;
 }
@@ -846,7 +846,7 @@ module_init(idxd_init_module);
 
 static void __exit idxd_exit_module(void)
 {
-	idxd_unregister_driver();
+	idxd_driver_unregister(&dsa_drv);
 	pci_unregister_driver(&idxd_pci_driver);
 	idxd_cdev_remove();
 	idxd_unregister_bus_type();
* Unmerged path drivers/dma/idxd/sysfs.c
