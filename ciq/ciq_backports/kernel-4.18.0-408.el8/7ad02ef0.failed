KVM: x86: Use static_call() for copy/move encryption context ioctls()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 7ad02ef0da25fd87b2c10e1eb75e02855b506b30
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/7ad02ef0.failed

Define and use static_call()s for .vm_{copy,move}_enc_context_from(),
mostly so that the op is defined in kvm-x86-ops.h.  This will allow using
KVM_X86_OP in vendor code to wire up the implementation.  Any performance
gains eeked out by using static_call() is a happy bonus and not the
primary motiviation.

Opportunistically refactor the code to reduce indentation and keep line
lengths reasonable, and to be consistent when wrapping versus running
a bit over the 80 char soft limit.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20220128005208.4008533-12-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 7ad02ef0da25fd87b2c10e1eb75e02855b506b30)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index cf29a0160107,59957e633098..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -5944,9 -5975,18 +5944,24 @@@ split_irqchip_unlock
  #endif
  	case KVM_CAP_VM_COPY_ENC_CONTEXT_FROM:
  		r = -EINVAL;
++<<<<<<< HEAD
 +		if (kvm_x86_ops.vm_copy_enc_context_from)
 +			r = kvm_x86_ops.vm_copy_enc_context_from(kvm, cap->args[0]);
 +		return r;
++=======
+ 		if (!kvm_x86_ops.vm_copy_enc_context_from)
+ 			break;
+ 
+ 		r = static_call(kvm_x86_vm_copy_enc_context_from)(kvm, cap->args[0]);
+ 		break;
+ 	case KVM_CAP_VM_MOVE_ENC_CONTEXT_FROM:
+ 		r = -EINVAL;
+ 		if (!kvm_x86_ops.vm_move_enc_context_from)
+ 			break;
+ 
+ 		r = static_call(kvm_x86_vm_move_enc_context_from)(kvm, cap->args[0]);
+ 		break;
++>>>>>>> 7ad02ef0da25 (KVM: x86: Use static_call() for copy/move encryption context ioctls())
  	case KVM_CAP_EXIT_HYPERCALL:
  		if (cap->args[0] & ~KVM_EXIT_HYPERCALL_VALID_MASK) {
  			r = -EINVAL;
diff --git a/arch/x86/include/asm/kvm-x86-ops.h b/arch/x86/include/asm/kvm-x86-ops.h
index ab393e44c1e3..0cc04cb7c0de 100644
--- a/arch/x86/include/asm/kvm-x86-ops.h
+++ b/arch/x86/include/asm/kvm-x86-ops.h
@@ -117,6 +117,8 @@ KVM_X86_OP(enable_smi_window)
 KVM_X86_OP_NULL(mem_enc_op)
 KVM_X86_OP_NULL(mem_enc_reg_region)
 KVM_X86_OP_NULL(mem_enc_unreg_region)
+KVM_X86_OP_NULL(vm_copy_enc_context_from)
+KVM_X86_OP_NULL(vm_move_enc_context_from)
 KVM_X86_OP(get_msr_feature)
 KVM_X86_OP(can_emulate_instruction)
 KVM_X86_OP(apic_init_signal_blocked)
* Unmerged path arch/x86/kvm/x86.c
