cachefiles: Drop superfluous readpages aops NULL check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit db58465f1121086b524be80be39d1fedbe5387f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/db58465f.failed

After the recent actions to convert readpages aops to readahead, the
NULL checks of readpages aops in cachefiles_read_or_alloc_page() may
hit falsely.  More badly, it's an ASSERT() call, and this panics.

Drop the superfluous NULL checks for fixing this regression.

[DH: Note that cachefiles never actually used readpages, so this check was
 never actually necessary]

BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=208883
BugLink: https://bugzilla.opensuse.org/show_bug.cgi?id=1175245
Fixes: 9ae326a69004 ("CacheFiles: A cache that backs onto a mounted filesystem")
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
	Signed-off-by: David Howells <dhowells@redhat.com>
	Acked-by: Matthew Wilcox (Oracle) <willy@infradead.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit db58465f1121086b524be80be39d1fedbe5387f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cachefiles/rdwr.c
diff --cc fs/cachefiles/rdwr.c
index f822ac9e3cb0,e027c718ca01..000000000000
--- a/fs/cachefiles/rdwr.c
+++ b/fs/cachefiles/rdwr.c
@@@ -416,8 -413,6 +416,11 @@@ int cachefiles_read_or_alloc_page(struc
  
  	inode = d_backing_inode(object->backer);
  	ASSERT(S_ISREG(inode->i_mode));
++<<<<<<< HEAD
 +	ASSERT(inode->i_mapping->a_ops->bmap);
 +	ASSERT(inode->i_mapping->a_ops->readpages);
++=======
++>>>>>>> db58465f1121 (cachefiles: Drop superfluous readpages aops NULL check)
  
  	/* calculate the shift required to use bmap */
  	shift = PAGE_SHIFT - inode->i_sb->s_blocksize_bits;
@@@ -715,8 -712,6 +718,11 @@@ int cachefiles_read_or_alloc_pages(stru
  
  	inode = d_backing_inode(object->backer);
  	ASSERT(S_ISREG(inode->i_mode));
++<<<<<<< HEAD
 +	ASSERT(inode->i_mapping->a_ops->bmap);
 +	ASSERT(inode->i_mapping->a_ops->readpages);
++=======
++>>>>>>> db58465f1121 (cachefiles: Drop superfluous readpages aops NULL check)
  
  	/* calculate the shift required to use bmap */
  	shift = PAGE_SHIFT - inode->i_sb->s_blocksize_bits;
* Unmerged path fs/cachefiles/rdwr.c
