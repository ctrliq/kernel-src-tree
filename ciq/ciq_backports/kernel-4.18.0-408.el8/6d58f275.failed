KVM: x86/mmu: clear MMIO cache when unloading the MMU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 6d58f275e6dcded101bd7e6688bf308d3385e238
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6d58f275.failed

For cleanliness, do not leave a stale GVA in the cache after all the roots are
cleared.  In practice, kvm_mmu_load will go through kvm_mmu_sync_roots if
paging is on, and will not use vcpu_match_mmio_gva at all if paging is off.
However, leaving data in the cache might cause bugs in the future.

	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 6d58f275e6dcded101bd7e6688bf308d3385e238)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/mmu.c
diff --cc arch/x86/kvm/mmu/mmu.c
index 8286e4fdd9e2,b2c1c4eb6007..000000000000
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@@ -5045,10 -5076,13 +5045,20 @@@ out
  
  void kvm_mmu_unload(struct kvm_vcpu *vcpu)
  {
++<<<<<<< HEAD
 +	kvm_mmu_free_roots(vcpu, &vcpu->arch.root_mmu, KVM_MMU_ROOTS_ALL);
 +	WARN_ON(VALID_PAGE(vcpu->arch.root_mmu.root_hpa));
 +	kvm_mmu_free_roots(vcpu, &vcpu->arch.guest_mmu, KVM_MMU_ROOTS_ALL);
 +	WARN_ON(VALID_PAGE(vcpu->arch.guest_mmu.root_hpa));
++=======
+ 	struct kvm *kvm = vcpu->kvm;
+ 
+ 	kvm_mmu_free_roots(kvm, &vcpu->arch.root_mmu, KVM_MMU_ROOTS_ALL);
+ 	WARN_ON(VALID_PAGE(vcpu->arch.root_mmu.root.hpa));
+ 	kvm_mmu_free_roots(kvm, &vcpu->arch.guest_mmu, KVM_MMU_ROOTS_ALL);
+ 	WARN_ON(VALID_PAGE(vcpu->arch.guest_mmu.root.hpa));
+ 	vcpu_clear_mmio_info(vcpu, MMIO_GVA_ANY);
++>>>>>>> 6d58f275e6dc (KVM: x86/mmu: clear MMIO cache when unloading the MMU)
  }
  
  static bool need_remote_flush(u64 old, u64 new)
* Unmerged path arch/x86/kvm/mmu/mmu.c
