KVM: selftests: Move per-VM GPA into perf_test_args

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit b91b637f4a595c5be435e215f78b1a3bd8c252b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/b91b637f.failed

Move the per-VM GPA into perf_test_args instead of storing it as a
separate global variable.  It's not obvious that guest_test_phys_mem
holds a GPA, nor that it's connected/coupled with per_vcpu->gpa.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Ben Gardon <bgardon@google.com>
	Signed-off-by: David Matlack <dmatlack@google.com>
Message-Id: <20211111000310.1435032-9-dmatlack@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit b91b637f4a595c5be435e215f78b1a3bd8c252b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/perf_test_util.c
diff --cc tools/testing/selftests/kvm/lib/perf_test_util.c
index 0ef80dbdc116,0fc2d834c1c7..000000000000
--- a/tools/testing/selftests/kvm/lib/perf_test_util.c
+++ b/tools/testing/selftests/kvm/lib/perf_test_util.c
@@@ -90,20 -95,18 +88,32 @@@ struct kvm_vm *perf_test_create_vm(enu
  		    guest_num_pages, vm_get_max_gfn(vm), vcpus,
  		    vcpu_memory_bytes);
  
++<<<<<<< HEAD
 +	guest_test_phys_mem = (vm_get_max_gfn(vm) - guest_num_pages) *
 +			      perf_test_args.guest_page_size;
 +	guest_test_phys_mem &= ~(perf_test_args.host_page_size - 1);
 +#ifdef __s390x__
 +	/* Align to 1M (segment size) */
 +	guest_test_phys_mem &= ~((1 << 20) - 1);
++=======
+ 	pta->gpa = (vm_get_max_gfn(vm) - guest_num_pages) * pta->guest_page_size;
+ 	pta->gpa = align_down(pta->gpa, backing_src_pagesz);
+ #ifdef __s390x__
+ 	/* Align to 1M (segment size) */
+ 	pta->gpa = align_down(pta->gpa, 1 << 20);
++>>>>>>> b91b637f4a59 (KVM: selftests: Move per-VM GPA into perf_test_args)
  #endif
- 	pr_info("guest physical test memory offset: 0x%lx\n", guest_test_phys_mem);
+ 	pr_info("guest physical test memory offset: 0x%lx\n", pta->gpa);
  
  	/* Add extra memory slots for testing */
  	for (i = 0; i < slots; i++) {
  		uint64_t region_pages = guest_num_pages / slots;
++<<<<<<< HEAD
 +		vm_paddr_t region_start = guest_test_phys_mem +
 +			region_pages * perf_test_args.guest_page_size * i;
++=======
+ 		vm_paddr_t region_start = pta->gpa + region_pages * pta->guest_page_size * i;
++>>>>>>> b91b637f4a59 (KVM: selftests: Move per-VM GPA into perf_test_args)
  
  		vm_userspace_mem_region_add(vm, backing_src, region_start,
  					    PERF_TEST_MEM_SLOT_INDEX + i,
@@@ -140,14 -143,13 +150,24 @@@ void perf_test_setup_vcpus(struct kvm_v
  			vcpu_args->gva = guest_test_virt_mem +
  					 (vcpu_id * vcpu_memory_bytes);
  			vcpu_args->pages = vcpu_memory_bytes /
++<<<<<<< HEAD
 +					   perf_test_args.guest_page_size;
 +			vcpu_gpa = guest_test_phys_mem +
 +				   (vcpu_id * vcpu_memory_bytes);
 +		} else {
 +			vcpu_args->gva = guest_test_virt_mem;
 +			vcpu_args->pages = (vcpus * vcpu_memory_bytes) /
 +					   perf_test_args.guest_page_size;
 +			vcpu_gpa = guest_test_phys_mem;
++=======
+ 					   pta->guest_page_size;
+ 			vcpu_args->gpa = pta->gpa + (vcpu_id * vcpu_memory_bytes);
+ 		} else {
+ 			vcpu_args->gva = guest_test_virt_mem;
+ 			vcpu_args->pages = (vcpus * vcpu_memory_bytes) /
+ 					   pta->guest_page_size;
+ 			vcpu_args->gpa = pta->gpa;
++>>>>>>> b91b637f4a59 (KVM: selftests: Move per-VM GPA into perf_test_args)
  		}
  
  		vcpu_args_set(vm, vcpu_id, 1, vcpu_id);
diff --git a/tools/testing/selftests/kvm/include/perf_test_util.h b/tools/testing/selftests/kvm/include/perf_test_util.h
index df9f1a3a3ffb..002348cb41c2 100644
--- a/tools/testing/selftests/kvm/include/perf_test_util.h
+++ b/tools/testing/selftests/kvm/include/perf_test_util.h
@@ -28,6 +28,7 @@ struct perf_test_vcpu_args {
 struct perf_test_args {
 	struct kvm_vm *vm;
 	uint64_t host_page_size;
+	uint64_t gpa;
 	uint64_t guest_page_size;
 	int wr_fract;
 
@@ -36,13 +37,6 @@ struct perf_test_args {
 
 extern struct perf_test_args perf_test_args;
 
-/*
- * Guest physical memory offset of the testing memory slot.
- * This will be set to the topmost valid physical address minus
- * the test memory size.
- */
-extern uint64_t guest_test_phys_mem;
-
 struct kvm_vm *perf_test_create_vm(enum vm_guest_mode mode, int vcpus,
 				   uint64_t vcpu_memory_bytes, int slots,
 				   enum vm_mem_backing_src_type backing_src);
* Unmerged path tools/testing/selftests/kvm/lib/perf_test_util.c
diff --git a/tools/testing/selftests/kvm/memslot_modification_stress_test.c b/tools/testing/selftests/kvm/memslot_modification_stress_test.c
index 4cfcafea9f5a..d105180d5e8c 100644
--- a/tools/testing/selftests/kvm/memslot_modification_stress_test.c
+++ b/tools/testing/selftests/kvm/memslot_modification_stress_test.c
@@ -80,7 +80,7 @@ static void add_remove_memslot(struct kvm_vm *vm, useconds_t delay,
 	 * Add the dummy memslot just below the perf_test_util memslot, which is
 	 * at the top of the guest physical address space.
 	 */
-	gpa = guest_test_phys_mem - pages * vm_get_page_size(vm);
+	gpa = perf_test_args.gpa - pages * vm_get_page_size(vm);
 
 	for (i = 0; i < nr_modifications; i++) {
 		usleep(delay);
