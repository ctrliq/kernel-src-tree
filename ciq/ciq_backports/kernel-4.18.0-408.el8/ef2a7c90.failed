rtnetlink: return ENODEV when ifname does not exist and group is given

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Florent Fourcot <florent.fourcot@wifirst.fr>
commit ef2a7c9065cea4e3fbc0390e82d05141abbccd7f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/ef2a7c90.failed

When the interface does not exist, and a group is given, the given
parameters are being set to all interfaces of the given group. The given
IFNAME/ALT_IF_NAME are being ignored in that case.

That can be dangerous since a typo (or a deleted interface) can produce
weird side effects for caller:

Case 1:

 IFLA_IFNAME=valid_interface
 IFLA_GROUP=1
 MTU=1234

Case 1 will update MTU and group of the given interface "valid_interface".

Case 2:

 IFLA_IFNAME=doesnotexist
 IFLA_GROUP=1
 MTU=1234

Case 2 will update MTU of all interfaces in group 1. IFLA_IFNAME is
ignored in this case

This behaviour is not consistent and dangerous. In order to fix this issue,
we now return ENODEV when the given IFNAME does not exist.

	Signed-off-by: Florent Fourcot <florent.fourcot@wifirst.fr>
	Signed-off-by: Brian Baboch <brian.baboch@wifirst.fr>
	Reviewed-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit ef2a7c9065cea4e3fbc0390e82d05141abbccd7f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 44c8ff2718d2,2f538ab512d0..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -3127,12 -3347,16 +3128,22 @@@ replay
  		ifname[0] = '\0';
  
  	ifm = nlmsg_data(nlh);
- 	if (ifm->ifi_index > 0)
+ 	if (ifm->ifi_index > 0) {
+ 		link_specified = true;
  		dev = __dev_get_by_index(net, ifm->ifi_index);
++<<<<<<< HEAD
 +	else if (tb[IFLA_IFNAME])
 +		dev = __dev_get_by_name(net, ifname);
 +	else
++=======
+ 	} else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME]) {
+ 		link_specified = true;
+ 		dev = rtnl_dev_get(net, NULL, tb[IFLA_ALT_IFNAME], ifname);
+ 	} else {
+ 		link_specified = false;
++>>>>>>> ef2a7c9065ce (rtnetlink: return ENODEV when ifname does not exist and group is given)
  		dev = NULL;
+ 	}
  
  	master_dev = NULL;
  	m_ops = NULL;
* Unmerged path net/core/rtnetlink.c
