KVM: PPC: Avoid referencing userspace memory region in memslot updates

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit eaaaed137eccb9e8f3a88f6297e214f53885196f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/eaaaed13.failed

For PPC HV, get the number of pages directly from the new memslot instead
of computing the same from the userspace memory region, and explicitly
check for !DELETE instead of inferring the same when toggling mmio_update.
The motivation for these changes is to avoid referencing the @mem param
so that it can be dropped in a future commit.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Signed-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
Message-Id: <1e97fb5198be25f98ef82e63a8d770c682264cc9.1638817639.git.maciej.szmigiero@oracle.com>
(cherry picked from commit eaaaed137eccb9e8f3a88f6297e214f53885196f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/kvm_ppc.h
#	arch/powerpc/kvm/book3s.c
#	arch/powerpc/kvm/book3s_hv.c
#	arch/powerpc/kvm/book3s_pr.c
#	arch/powerpc/kvm/booke.c
#	arch/powerpc/kvm/powerpc.c
diff --cc arch/powerpc/include/asm/kvm_ppc.h
index fdabac2f2cdb,935c58dc38c4..000000000000
--- a/arch/powerpc/include/asm/kvm_ppc.h
+++ b/arch/powerpc/include/asm/kvm_ppc.h
@@@ -210,12 -200,11 +210,20 @@@ extern void kvmppc_core_destroy_vm(stru
  extern void kvmppc_core_free_memslot(struct kvm *kvm,
  				     struct kvm_memory_slot *slot);
  extern int kvmppc_core_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				struct kvm_memory_slot *memslot,
 +				const struct kvm_userspace_memory_region *mem,
 +				enum kvm_mr_change change);
 +extern void kvmppc_core_commit_memory_region(struct kvm *kvm,
 +				const struct kvm_userspace_memory_region *mem,
 +				const struct kvm_memory_slot *old,
++=======
+ 				const struct kvm_memory_slot *old,
+ 				struct kvm_memory_slot *new,
+ 				enum kvm_mr_change change);
+ extern void kvmppc_core_commit_memory_region(struct kvm *kvm,
+ 				struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change);
  extern int kvm_vm_ioctl_get_smmu_info(struct kvm *kvm,
@@@ -284,12 -273,11 +292,20 @@@ struct kvmppc_ops 
  	int (*get_dirty_log)(struct kvm *kvm, struct kvm_dirty_log *log);
  	void (*flush_memslot)(struct kvm *kvm, struct kvm_memory_slot *memslot);
  	int (*prepare_memory_region)(struct kvm *kvm,
++<<<<<<< HEAD
 +				     struct kvm_memory_slot *memslot,
 +				     const struct kvm_userspace_memory_region *mem,
 +				     enum kvm_mr_change change);
 +	void (*commit_memory_region)(struct kvm *kvm,
 +				     const struct kvm_userspace_memory_region *mem,
 +				     const struct kvm_memory_slot *old,
++=======
+ 				     const struct kvm_memory_slot *old,
+ 				     struct kvm_memory_slot *new,
+ 				     enum kvm_mr_change change);
+ 	void (*commit_memory_region)(struct kvm *kvm,
+ 				     struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				     const struct kvm_memory_slot *new,
  				     enum kvm_mr_change change);
  	bool (*unmap_gfn_range)(struct kvm *kvm, struct kvm_gfn_range *range);
diff --cc arch/powerpc/kvm/book3s.c
index d7d1329bd6b3,6d525285dbe8..000000000000
--- a/arch/powerpc/kvm/book3s.c
+++ b/arch/powerpc/kvm/book3s.c
@@@ -845,17 -847,15 +845,29 @@@ void kvmppc_core_flush_memslot(struct k
  }
  
  int kvmppc_core_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				struct kvm_memory_slot *memslot,
 +				const struct kvm_userspace_memory_region *mem,
 +				enum kvm_mr_change change)
 +{
 +	return kvm->arch.kvm_ops->prepare_memory_region(kvm, memslot, mem,
 +							change);
 +}
 +
 +void kvmppc_core_commit_memory_region(struct kvm *kvm,
 +				const struct kvm_userspace_memory_region *mem,
 +				const struct kvm_memory_slot *old,
++=======
+ 				      const struct kvm_memory_slot *old,
+ 				      struct kvm_memory_slot *new,
+ 				      enum kvm_mr_change change)
+ {
+ 	return kvm->arch.kvm_ops->prepare_memory_region(kvm, old, new, change);
+ }
+ 
+ void kvmppc_core_commit_memory_region(struct kvm *kvm,
+ 				struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change)
  {
diff --cc arch/powerpc/kvm/book3s_hv.c
index fbfb23772025,2b59ecc5f8c6..000000000000
--- a/arch/powerpc/kvm/book3s_hv.c
+++ b/arch/powerpc/kvm/book3s_hv.c
@@@ -4632,25 -4854,24 +4632,39 @@@ static void kvmppc_core_free_memslot_hv
  }
  
  static int kvmppc_core_prepare_memory_region_hv(struct kvm *kvm,
++<<<<<<< HEAD
 +					struct kvm_memory_slot *slot,
 +					const struct kvm_userspace_memory_region *mem,
 +					enum kvm_mr_change change)
++=======
+ 				const struct kvm_memory_slot *old,
+ 				struct kvm_memory_slot *new,
+ 				enum kvm_mr_change change)
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  {
- 	unsigned long npages = mem->memory_size >> PAGE_SHIFT;
- 
  	if (change == KVM_MR_CREATE) {
++<<<<<<< HEAD
 +		slot->arch.rmap = vzalloc(array_size(npages,
 +					  sizeof(*slot->arch.rmap)));
 +		if (!slot->arch.rmap)
++=======
+ 		new->arch.rmap = vzalloc(array_size(new->npages,
+ 					  sizeof(*new->arch.rmap)));
+ 		if (!new->arch.rmap)
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  			return -ENOMEM;
 -	} else if (change != KVM_MR_DELETE) {
 -		new->arch.rmap = old->arch.rmap;
  	}
  
  	return 0;
  }
  
  static void kvmppc_core_commit_memory_region_hv(struct kvm *kvm,
++<<<<<<< HEAD
 +				const struct kvm_userspace_memory_region *mem,
 +				const struct kvm_memory_slot *old,
++=======
+ 				struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change)
  {
diff --cc arch/powerpc/kvm/book3s_pr.c
index 0c3232959abe,30426e8c8cf6..000000000000
--- a/arch/powerpc/kvm/book3s_pr.c
+++ b/arch/powerpc/kvm/book3s_pr.c
@@@ -1901,16 -1899,15 +1901,26 @@@ static void kvmppc_core_flush_memslot_p
  }
  
  static int kvmppc_core_prepare_memory_region_pr(struct kvm *kvm,
++<<<<<<< HEAD
 +					struct kvm_memory_slot *memslot,
 +					const struct kvm_userspace_memory_region *mem,
 +					enum kvm_mr_change change)
++=======
+ 				const struct kvm_memory_slot *old,
+ 				struct kvm_memory_slot *new,
+ 				enum kvm_mr_change change)
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  {
  	return 0;
  }
  
  static void kvmppc_core_commit_memory_region_pr(struct kvm *kvm,
++<<<<<<< HEAD
 +				const struct kvm_userspace_memory_region *mem,
 +				const struct kvm_memory_slot *old,
++=======
+ 				struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change)
  {
diff --cc arch/powerpc/kvm/booke.c
index 04b5b34a163b,53b4c9597c30..000000000000
--- a/arch/powerpc/kvm/booke.c
+++ b/arch/powerpc/kvm/booke.c
@@@ -1831,16 -1821,15 +1831,25 @@@ void kvmppc_core_free_memslot(struct kv
  }
  
  int kvmppc_core_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				      struct kvm_memory_slot *memslot,
 +				      const struct kvm_userspace_memory_region *mem,
++=======
+ 				      const struct kvm_memory_slot *old,
+ 				      struct kvm_memory_slot *new,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				      enum kvm_mr_change change)
  {
  	return 0;
  }
  
  void kvmppc_core_commit_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				const struct kvm_userspace_memory_region *mem,
 +				const struct kvm_memory_slot *old,
++=======
+ 				struct kvm_memory_slot *old,
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change)
  {
diff --cc arch/powerpc/kvm/powerpc.c
index 98100c4b560f,575140ecb23c..000000000000
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@@ -713,11 -698,12 +713,15 @@@ void kvm_arch_free_memslot(struct kvm *
  }
  
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
 +				   struct kvm_memory_slot *memslot,
  				   const struct kvm_userspace_memory_region *mem,
 -				   const struct kvm_memory_slot *old,
 -				   struct kvm_memory_slot *new,
  				   enum kvm_mr_change change)
  {
++<<<<<<< HEAD
 +	return kvmppc_core_prepare_memory_region(kvm, memslot, mem, change);
++=======
+ 	return kvmppc_core_prepare_memory_region(kvm, old, new, change);
++>>>>>>> eaaaed137ecc (KVM: PPC: Avoid referencing userspace memory region in memslot updates)
  }
  
  void kvm_arch_commit_memory_region(struct kvm *kvm,
* Unmerged path arch/powerpc/include/asm/kvm_ppc.h
* Unmerged path arch/powerpc/kvm/book3s.c
* Unmerged path arch/powerpc/kvm/book3s_hv.c
* Unmerged path arch/powerpc/kvm/book3s_pr.c
* Unmerged path arch/powerpc/kvm/booke.c
* Unmerged path arch/powerpc/kvm/powerpc.c
