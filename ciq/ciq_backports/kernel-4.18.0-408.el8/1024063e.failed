s390/zcrypt: Provide target domain for EP11 cprbs to scheduling function

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jürgen Christ <jchrist@linux.ibm.com>
commit 1024063effc3ba86d1fec0f2ee0a9259a1065ed5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/1024063e.failed

The scheduling function will get an extension which will
process the target_id value from an EP11 cprb. This patch
extracts the value during preparation of the ap message.

	Signed-off-by: Jürgen Christ <jchrist@linux.ibm.com>
	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit 1024063effc3ba86d1fec0f2ee0a9259a1065ed5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/zcrypt_api.c
#	drivers/s390/crypto/zcrypt_msgtype6.c
#	drivers/s390/crypto/zcrypt_msgtype6.h
diff --cc drivers/s390/crypto/zcrypt_api.c
index 41beb6a25160,80e2a306709a..000000000000
--- a/drivers/s390/crypto/zcrypt_api.c
+++ b/drivers/s390/crypto/zcrypt_api.c
@@@ -1063,7 -1058,7 +1063,11 @@@ static long _zcrypt_send_ep11_cprb(boo
  		}
  	}
  
++<<<<<<< HEAD
 +	rc = get_ep11cprb_fc(userspace, xcrb, &ap_msg, &func_code);
++=======
+ 	rc = prep_ep11_ap_msg(userspace, xcrb, &ap_msg, &func_code, &domain);
++>>>>>>> 1024063effc3 (s390/zcrypt: Provide target domain for EP11 cprbs to scheduling function)
  	if (rc)
  		goto out_free;
  
diff --cc drivers/s390/crypto/zcrypt_msgtype6.c
index ac841d50e557,57d885158cf0..000000000000
--- a/drivers/s390/crypto/zcrypt_msgtype6.c
+++ b/drivers/s390/crypto/zcrypt_msgtype6.c
@@@ -568,6 -587,14 +569,17 @@@ static int xcrb_msg_to_type6_ep11cprb_m
  		ap_msg->flags ^= AP_MSG_FLAG_SPECIAL;
  #endif
  
++<<<<<<< HEAD
++=======
+ 	/* set info bits in ap_message flag field */
+ 	if (msg->cprbx.flags & 0x80)
+ 		ap_msg->flags |= AP_MSG_FLAG_ADMIN;
+ 	else
+ 		ap_msg->flags |= AP_MSG_FLAG_USAGE;
+ 
+ 	*domain = msg->cprbx.target_id;
+ 
++>>>>>>> 1024063effc3 (s390/zcrypt: Provide target domain for EP11 cprbs to scheduling function)
  	return 0;
  }
  
@@@ -1199,9 -1245,9 +1211,15 @@@ out
   * by the caller with ap_init_message(). Also the caller has to
   * make sure ap_release_message() is always called even on failure.
   */
++<<<<<<< HEAD
 +unsigned int get_ep11cprb_fc(bool userspace, struct ep11_urb *xcrb,
 +			     struct ap_message *ap_msg,
 +			     unsigned int *func_code)
++=======
+ int prep_ep11_ap_msg(bool userspace, struct ep11_urb *xcrb,
+ 		     struct ap_message *ap_msg,
+ 		     unsigned int *func_code, unsigned int *domain)
++>>>>>>> 1024063effc3 (s390/zcrypt: Provide target domain for EP11 cprbs to scheduling function)
  {
  	struct response_type resp_type = {
  		.type = CEXXC_RESPONSE_TYPE_EP11,
@@@ -1217,10 -1263,11 +1235,11 @@@
  	ap_msg->private = kmemdup(&resp_type, sizeof(resp_type), GFP_KERNEL);
  	if (!ap_msg->private)
  		return -ENOMEM;
- 	return xcrb_msg_to_type6_ep11cprb_msgx(userspace, ap_msg, xcrb, func_code);
+ 	return xcrb_msg_to_type6_ep11cprb_msgx(userspace, ap_msg, xcrb,
+ 					       func_code, domain);
  }
  
 -/*
 +/**
   * The request distributor calls this function if it picked the CEX4P
   * device to handle a send_ep11_cprb request.
   * @zq: pointer to zcrypt_queue structure that identifies the
diff --cc drivers/s390/crypto/zcrypt_msgtype6.h
index 155c73514bac,9da4f4175c44..000000000000
--- a/drivers/s390/crypto/zcrypt_msgtype6.h
+++ b/drivers/s390/crypto/zcrypt_msgtype6.h
@@@ -94,11 -94,14 +94,22 @@@ struct type86_fmt2_ext 
  	unsigned int	  offset4;	/* 0x00000000			*/
  } __packed;
  
++<<<<<<< HEAD
 +unsigned int get_cprb_fc(bool userspace, struct ica_xcRB *, struct ap_message *,
 +			 unsigned int *, unsigned short **);
 +unsigned int get_ep11cprb_fc(bool userspace, struct ep11_urb *, struct ap_message *,
 +			     unsigned int *);
 +unsigned int get_rng_fc(struct ap_message *, int *, unsigned int *);
++=======
+ int prep_cca_ap_msg(bool userspace, struct ica_xcRB *xcrb,
+ 		    struct ap_message *ap_msg,
+ 		    unsigned int *fc, unsigned short **dom);
+ int prep_ep11_ap_msg(bool userspace, struct ep11_urb *xcrb,
+ 		     struct ap_message *ap_msg,
+ 		     unsigned int *fc, unsigned int *dom);
+ int prep_rng_ap_msg(struct ap_message *ap_msg,
+ 		    int *fc, unsigned int *dom);
++>>>>>>> 1024063effc3 (s390/zcrypt: Provide target domain for EP11 cprbs to scheduling function)
  
  #define LOW	10
  #define MEDIUM	100
* Unmerged path drivers/s390/crypto/zcrypt_api.c
* Unmerged path drivers/s390/crypto/zcrypt_msgtype6.c
* Unmerged path drivers/s390/crypto/zcrypt_msgtype6.h
