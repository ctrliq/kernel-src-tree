ext4: annotate data race in jbd2_journal_dirty_metadata()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jan Kara <jack@suse.cz>
commit 83fe6b18b8d04c6c849379005e1679bac9752466
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/83fe6b18.failed

Assertion checks in jbd2_journal_dirty_metadata() are known to be racy
but we don't want to be grabbing locks just for them.  We thus recheck
them under b_state_lock only if it looks like they would fail. Annotate
the checks with data_race().

	Cc: stable@kernel.org
	Reported-by: Hao Sun <sunhao.th@gmail.com>
	Signed-off-by: Jan Kara <jack@suse.cz>
Link: https://lore.kernel.org/r/20210406161804.20150-2-jack@suse.cz
	Signed-off-by: Theodore Ts'o <tytso@mit.edu>
(cherry picked from commit 83fe6b18b8d04c6c849379005e1679bac9752466)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/jbd2/transaction.c
diff --cc fs/jbd2/transaction.c
index a5971f2bcec8,e8fc45fd751f..000000000000
--- a/fs/jbd2/transaction.c
+++ b/fs/jbd2/transaction.c
@@@ -1478,18 -1479,18 +1478,30 @@@ int jbd2_journal_dirty_metadata(handle_
  	 * crucial to catch bugs so let's do a reliable check until the
  	 * lockless handling is fully proven.
  	 */
++<<<<<<< HEAD
 +	if (jh->b_transaction != transaction &&
 +	    jh->b_next_transaction != transaction) {
 +		jbd_lock_bh_state(bh);
++=======
+ 	if (data_race(jh->b_transaction != transaction &&
+ 	    jh->b_next_transaction != transaction)) {
+ 		spin_lock(&jh->b_state_lock);
++>>>>>>> 83fe6b18b8d0 (ext4: annotate data race in jbd2_journal_dirty_metadata())
  		J_ASSERT_JH(jh, jh->b_transaction == transaction ||
  				jh->b_next_transaction == transaction);
 -		spin_unlock(&jh->b_state_lock);
 +		jbd_unlock_bh_state(bh);
  	}
  	if (jh->b_modified == 1) {
  		/* If it's in our transaction it must be in BJ_Metadata list. */
++<<<<<<< HEAD
 +		if (jh->b_transaction == transaction &&
 +		    jh->b_jlist != BJ_Metadata) {
 +			jbd_lock_bh_state(bh);
++=======
+ 		if (data_race(jh->b_transaction == transaction &&
+ 		    jh->b_jlist != BJ_Metadata)) {
+ 			spin_lock(&jh->b_state_lock);
++>>>>>>> 83fe6b18b8d0 (ext4: annotate data race in jbd2_journal_dirty_metadata())
  			if (jh->b_transaction == transaction &&
  			    jh->b_jlist != BJ_Metadata)
  				pr_err("JBD2: assertion failure: h_type=%u "
* Unmerged path fs/jbd2/transaction.c
