dmaengine: idxd: fix descriptor flushing locking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
Rebuild_CHGLOG: - edmaengine: idxd: fix descriptor flushing locking (Jerry Snitselaar) [2040495]
Rebuild_FUZZ: 98.97%
commit-author Dave Jiang <dave.jiang@intel.com>
commit 23a50c8035655c5a1d9b52c878b3ebf7b6b83eea
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/23a50c80.failed

The descriptor flushing for shutdown is not holding the irq_entry list
lock. If there's ongoing interrupt completion handling, this can corrupt
the list. Add locking to protect list walking. Also refactor the code so
it's more compact.

Fixes: 8f47d1a5e545 ("dmaengine: idxd: connect idxd to dmaengine subsystem")
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
Link: https://lore.kernel.org/r/163942148935.2412839.18282664745572777280.stgit@djiang5-desk3.ch.intel.com
	Signed-off-by: Vinod Koul <vkoul@kernel.org>
(cherry picked from commit 23a50c8035655c5a1d9b52c878b3ebf7b6b83eea)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/idxd/init.c
diff --cc drivers/dma/idxd/init.c
index b9299e45c20d,03c735727f68..000000000000
--- a/drivers/dma/idxd/init.c
+++ b/drivers/dma/idxd/init.c
@@@ -691,25 -693,24 +691,37 @@@ static void idxd_flush_pending_descs(st
  {
  	struct idxd_desc *desc, *itr;
  	struct llist_node *head;
+ 	LIST_HEAD(flist);
+ 	enum idxd_complete_type ctype;
  
+ 	spin_lock(&ie->list_lock);
  	head = llist_del_all(&ie->pending_llist);
- 	if (!head)
- 		return;
+ 	if (head) {
+ 		llist_for_each_entry_safe(desc, itr, head, llnode)
+ 			list_add_tail(&desc->list, &ie->work_list);
+ 	}
  
++<<<<<<< HEAD
 +	llist_for_each_entry_safe(desc, itr, head, llnode) {
 +		idxd_dma_complete_txd(desc, IDXD_COMPLETE_ABORT);
 +		idxd_free_desc(desc->wq, desc);
 +	}
 +}
++=======
+ 	list_for_each_entry_safe(desc, itr, &ie->work_list, list)
+ 		list_move_tail(&desc->list, &flist);
+ 	spin_unlock(&ie->list_lock);
++>>>>>>> 23a50c803565 (dmaengine: idxd: fix descriptor flushing locking)
  
- static void idxd_flush_work_list(struct idxd_irq_entry *ie)
- {
- 	struct idxd_desc *desc, *iter;
- 
- 	list_for_each_entry_safe(desc, iter, &ie->work_list, list) {
+ 	list_for_each_entry_safe(desc, itr, &flist, list) {
  		list_del(&desc->list);
++<<<<<<< HEAD
 +		idxd_dma_complete_txd(desc, IDXD_COMPLETE_ABORT);
 +		idxd_free_desc(desc->wq, desc);
++=======
+ 		ctype = desc->completion->status ? IDXD_COMPLETE_NORMAL : IDXD_COMPLETE_ABORT;
+ 		idxd_dma_complete_txd(desc, ctype, true);
++>>>>>>> 23a50c803565 (dmaengine: idxd: fix descriptor flushing locking)
  	}
  }
  
* Unmerged path drivers/dma/idxd/init.c
