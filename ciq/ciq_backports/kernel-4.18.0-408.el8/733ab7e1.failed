scsi: fnic: Finish scsi_cmnd before dropping the spinlock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author David Jeffery <djeffery@redhat.com>
commit 733ab7e1b5d1041204c4ca7373f6e6f9d08e3283
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/733ab7e1.failed

When aborting a SCSI command through fnic, there is a race with the fnic
interrupt handler which can result in the SCSI command and its request
being completed twice. If the interrupt handler claims the command by
setting CMD_SP to NULL first, the abort handler assumes the interrupt
handler has completed the command and returns SUCCESS, causing the request
for the scsi_cmnd to be re-queued.

But the interrupt handler may not have finished the command yet. After it
drops the spinlock protecting CMD_SP, it does memory cleanup before finally
calling scsi_done() to complete the scsi_cmnd. If the call to scsi_done
occurs after the abort handler finishes and re-queues the request, the
completion of the scsi_cmnd will advance and try to double complete a
request already queued for retry.

This patch fixes the issue by moving scsi_done() and any other use of
scsi_cmnd to before the spinlock is released by the interrupt handler.

Link: https://lore.kernel.org/r/20220311184359.2345319-1-djeffery@redhat.com
	Reviewed-by: Laurence Oberman <loberman@redhat.com>
	Reviewed-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: David Jeffery <djeffery@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 733ab7e1b5d1041204c4ca7373f6e6f9d08e3283)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/fnic/fnic_scsi.c
diff --cc drivers/scsi/fnic/fnic_scsi.c
index 930cdb58e519,40a52feb315d..000000000000
--- a/drivers/scsi/fnic/fnic_scsi.c
+++ b/drivers/scsi/fnic/fnic_scsi.c
@@@ -1049,10 -1051,6 +1051,13 @@@ static void fnic_fcpio_icmnd_cmpl_handl
  		if(io_duration_time > atomic64_read(&fnic_stats->io_stats.current_max_io_time))
  			atomic64_set(&fnic_stats->io_stats.current_max_io_time, io_duration_time);
  	}
++<<<<<<< HEAD
 +
 +	/* Call SCSI completion function to complete the IO */
 +	if (sc->scsi_done)
 +		sc->scsi_done(sc);
++=======
++>>>>>>> 733ab7e1b5d1 (scsi: fnic: Finish scsi_cmnd before dropping the spinlock)
  }
  
  /* fnic_fcpio_itmf_cmpl_handler
* Unmerged path drivers/scsi/fnic/fnic_scsi.c
