KVM: SVM: extract avic_ring_doorbell

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Maxim Levitsky <mlevitsk@redhat.com>
commit 0a5f784273aad41a22963fc8b818ead3c892c97a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/0a5f7842.failed

The check on the current CPU adds an extra level of indentation to
svm_deliver_avic_intr and conflates documentation on what happens
if the vCPU exits (of interest to svm_deliver_avic_intr) and migrates
(only of interest to avic_ring_doorbell, which calls get/put_cpu()).
Extract the wrmsr to a separate function and rewrite the
comment in svm_deliver_avic_intr().

Co-developed-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
	Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 0a5f784273aad41a22963fc8b818ead3c892c97a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/avic.c
diff --cc arch/x86/kvm/svm/avic.c
index 7f3e850e749a,242cb220893a..000000000000
--- a/arch/x86/kvm/svm/avic.c
+++ b/arch/x86/kvm/svm/avic.c
@@@ -689,19 -685,12 +705,18 @@@ int svm_deliver_avic_intr(struct kvm_vc
  	 * automatically process AVIC interrupts at VMRUN.
  	 */
  	if (vcpu->mode == IN_GUEST_MODE) {
- 		int cpu = READ_ONCE(vcpu->cpu);
- 
  		/*
- 		 * Note, the vCPU could get migrated to a different pCPU at any
- 		 * point, which could result in signalling the wrong/previous
- 		 * pCPU.  But if that happens the vCPU is guaranteed to do a
- 		 * VMRUN (after being migrated) and thus will process pending
- 		 * interrupts, i.e. a doorbell is not needed (and the spurious
- 		 * one is harmless).
+ 		 * Signal the doorbell to tell hardware to inject the IRQ.  If
+ 		 * the vCPU exits the guest before the doorbell chimes, hardware
+ 		 * will automatically process AVIC interrupts at the next VMRUN.
  		 */
++<<<<<<< HEAD
 +		if (cpu != get_cpu())
 +			wrmsrl(SVM_AVIC_DOORBELL, kvm_cpu_get_apicid(cpu));
 +		put_cpu();
++=======
+ 		avic_ring_doorbell(vcpu);
++>>>>>>> 0a5f784273aa (KVM: SVM: extract avic_ring_doorbell)
  	} else {
  		/*
  		 * Wake the vCPU if it was blocking.  KVM will then detect the
* Unmerged path arch/x86/kvm/svm/avic.c
