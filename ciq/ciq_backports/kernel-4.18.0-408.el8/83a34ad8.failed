selftests: kvm/x86: Fix the warning in lib/x86_64/processor.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jinrong Liang <cloudliang@tencent.com>
commit 83a34ad848937462aa64fa3d48f8c0b4034f2503
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/83a34ad8.failed

The following warning appears when executing
make -C tools/testing/selftests/kvm

include/x86_64/processor.h:290:2: warning: 'ecx' may be used uninitialized in this
function [-Wmaybe-uninitialized]
  asm volatile("cpuid"
  ^~~
lib/x86_64/processor.c:1523:21: note: 'ecx' was declared here
  uint32_t eax, ebx, ecx, edx, max_ext_leaf;

Just initialize ecx to remove this warning.

Fixes: c8cc43c1eae2 ("selftests: KVM: avoid failures due to reserved HyperTransport region")
	Signed-off-by: Jinrong Liang <cloudliang@tencent.com>
Message-Id: <20220119140325.59369-1-cloudliang@tencent.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 83a34ad848937462aa64fa3d48f8c0b4034f2503)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/x86_64/processor.c
diff --cc tools/testing/selftests/kvm/lib/x86_64/processor.c
index 8faa2b8d982a,5f9d7e91dc69..000000000000
--- a/tools/testing/selftests/kvm/lib/x86_64/processor.c
+++ b/tools/testing/selftests/kvm/lib/x86_64/processor.c
@@@ -1509,3 -1515,52 +1509,55 @@@ struct kvm_cpuid2 *vcpu_get_supported_h
  
  	return cpuid;
  }
++<<<<<<< HEAD
++=======
+ 
+ unsigned long vm_compute_max_gfn(struct kvm_vm *vm)
+ {
+ 	const unsigned long num_ht_pages = 12 << (30 - vm->page_shift); /* 12 GiB */
+ 	unsigned long ht_gfn, max_gfn, max_pfn;
+ 	uint32_t eax, ebx, ecx, edx, max_ext_leaf;
+ 
+ 	max_gfn = (1ULL << (vm->pa_bits - vm->page_shift)) - 1;
+ 
+ 	/* Avoid reserved HyperTransport region on AMD processors.  */
+ 	if (!is_amd_cpu())
+ 		return max_gfn;
+ 
+ 	/* On parts with <40 physical address bits, the area is fully hidden */
+ 	if (vm->pa_bits < 40)
+ 		return max_gfn;
+ 
+ 	/* Before family 17h, the HyperTransport area is just below 1T.  */
+ 	ht_gfn = (1 << 28) - num_ht_pages;
+ 	eax = 1;
+ 	ecx = 0;
+ 	cpuid(&eax, &ebx, &ecx, &edx);
+ 	if (x86_family(eax) < 0x17)
+ 		goto done;
+ 
+ 	/*
+ 	 * Otherwise it's at the top of the physical address space, possibly
+ 	 * reduced due to SME by bits 11:6 of CPUID[0x8000001f].EBX.  Use
+ 	 * the old conservative value if MAXPHYADDR is not enumerated.
+ 	 */
+ 	eax = 0x80000000;
+ 	cpuid(&eax, &ebx, &ecx, &edx);
+ 	max_ext_leaf = eax;
+ 	if (max_ext_leaf < 0x80000008)
+ 		goto done;
+ 
+ 	eax = 0x80000008;
+ 	cpuid(&eax, &ebx, &ecx, &edx);
+ 	max_pfn = (1ULL << ((eax & 0xff) - vm->page_shift)) - 1;
+ 	if (max_ext_leaf >= 0x8000001f) {
+ 		eax = 0x8000001f;
+ 		cpuid(&eax, &ebx, &ecx, &edx);
+ 		max_pfn >>= (ebx >> 6) & 0x3f;
+ 	}
+ 
+ 	ht_gfn = max_pfn - num_ht_pages;
+ done:
+ 	return min(max_gfn, ht_gfn - 1);
+ }
++>>>>>>> 83a34ad84893 (selftests: kvm/x86: Fix the warning in lib/x86_64/processor.c)
* Unmerged path tools/testing/selftests/kvm/lib/x86_64/processor.c
