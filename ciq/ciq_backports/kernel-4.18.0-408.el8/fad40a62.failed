ACPI: power: Use acpi_handle_debug() to print debug messages

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit fad40a624854ad14a88ee0277b9e8207bfc6d95a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/fad40a62.failed

Use acpi_handle_debug() to print diagnostic messages regarding ACPI
power resources so as to make it easier to correlate the kernel
messages with the power resource objects in the ACPI namespace that
they are about.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit fad40a624854ad14a88ee0277b9e8207bfc6d95a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/power.c
diff --cc drivers/acpi/power.c
index 349a6d8f2586,21d42804b2c1..000000000000
--- a/drivers/acpi/power.c
+++ b/drivers/acpi/power.c
@@@ -386,8 -368,7 +387,12 @@@ static int __acpi_power_on(struct acpi_
  
  	resource->state = ACPI_POWER_RESOURCE_STATE_ON;
  
++<<<<<<< HEAD
 +	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Power resource [%s] turned on\n",
 +			  resource->name));
++=======
+ 	acpi_handle_debug(handle, "Power resource turned on\n");
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  
  	/*
  	 * If there are other dependents on this power resource we need to
@@@ -412,9 -393,8 +417,14 @@@ static int acpi_power_on_unlocked(struc
  	int result = 0;
  
  	if (resource->ref_count++) {
++<<<<<<< HEAD
 +		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 +				  "Power resource [%s] already on\n",
 +				  resource->name));
++=======
+ 		acpi_handle_debug(resource->device.handle,
+ 				  "Power resource already on\n");
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  	} else {
  		result = __acpi_power_on(resource);
  		if (result)
@@@ -446,8 -426,8 +456,13 @@@ static int __acpi_power_off(struct acpi
  
  	resource->state = ACPI_POWER_RESOURCE_STATE_OFF;
  
++<<<<<<< HEAD
 +	ACPI_DEBUG_PRINT((ACPI_DB_INFO, "Power resource [%s] turned off\n",
 +			  resource->name));
++=======
+ 	acpi_handle_debug(handle, "Power resource turned off\n");
+ 
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  	return 0;
  }
  
@@@ -456,16 -436,14 +471,26 @@@ static int acpi_power_off_unlocked(stru
  	int result = 0;
  
  	if (!resource->ref_count) {
++<<<<<<< HEAD
 +		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 +				  "Power resource [%s] already off\n",
 +				  resource->name));
++=======
+ 		acpi_handle_debug(resource->device.handle,
+ 				  "Power resource already off\n");
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  		return 0;
  	}
  
  	if (--resource->ref_count) {
++<<<<<<< HEAD
 +		ACPI_DEBUG_PRINT((ACPI_DB_INFO,
 +				  "Power resource [%s] still in use\n",
 +				  resource->name));
++=======
+ 		acpi_handle_debug(resource->device.handle,
+ 				  "Power resource still in use\n");
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  	} else {
  		result = __acpi_power_off(resource);
  		if (result)
@@@ -1054,9 -1031,14 +1079,14 @@@ void acpi_turn_off_unused_power_resourc
  	list_for_each_entry_reverse(resource, &acpi_power_resource_list, list_node) {
  		mutex_lock(&resource->resource_lock);
  
 -		/*
 -		 * Turn off power resources in an unknown state too, because the
 -		 * platform firmware on some system expects the OS to turn off
 -		 * power resources without any users unconditionally.
 -		 */
  		if (!resource->ref_count &&
++<<<<<<< HEAD
 +		    resource->state == ACPI_POWER_RESOURCE_STATE_ON) {
 +			dev_dbg(&resource->device.dev, "Turning OFF\n");
++=======
+ 		    resource->state != ACPI_POWER_RESOURCE_STATE_OFF) {
+ 			acpi_handle_debug(resource->device.handle, "Turning OFF\n");
++>>>>>>> fad40a624854 (ACPI: power: Use acpi_handle_debug() to print debug messages)
  			__acpi_power_off(resource);
  		}
  
* Unmerged path drivers/acpi/power.c
