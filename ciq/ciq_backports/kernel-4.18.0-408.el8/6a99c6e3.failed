KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 6a99c6e3f52a6f0d4c6ebcfa7359c718a19ffbe6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6a99c6e3.failed

Drop the @mem param from kvm_arch_{prepare,commit}_memory_region() now
that its use has been removed in all architectures.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
	Signed-off-by: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
Message-Id: <aa5ed3e62c27e881d0d8bc0acbc1572bc336dc19.1638817640.git.maciej.szmigiero@oracle.com>
(cherry picked from commit 6a99c6e3f52a6f0d4c6ebcfa7359c718a19ffbe6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/mmu.c
#	arch/mips/kvm/mips.c
#	arch/powerpc/kvm/powerpc.c
#	arch/riscv/kvm/mmu.c
#	arch/s390/kvm/kvm-s390.c
#	arch/x86/kvm/x86.c
#	include/linux/kvm_host.h
#	virt/kvm/kvm_main.c
diff --cc arch/arm64/kvm/mmu.c
index 60713ffdcad4,9b2d881ccf49..000000000000
--- a/arch/arm64/kvm/mmu.c
+++ b/arch/arm64/kvm/mmu.c
@@@ -2291,13 -1485,11 +2290,18 @@@ void kvm_arch_commit_memory_region(stru
  }
  
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				   struct kvm_memory_slot *memslot,
 +				   const struct kvm_userspace_memory_region *mem,
++=======
+ 				   const struct kvm_memory_slot *old,
+ 				   struct kvm_memory_slot *new,
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  				   enum kvm_mr_change change)
  {
 -	hva_t hva, reg_end;
 +	hva_t hva = mem->userspace_addr;
 +	hva_t reg_end = hva + mem->memory_size;
 +	bool writable = !(mem->flags & KVM_MEM_READONLY);
  	int ret = 0;
  
  	if (change != KVM_MR_CREATE && change != KVM_MR_MOVE &&
diff --cc arch/mips/kvm/mips.c
index 33056cb2d37e,e59cb6246f76..000000000000
--- a/arch/mips/kvm/mips.c
+++ b/arch/mips/kvm/mips.c
@@@ -269,8 -214,8 +269,13 @@@ void kvm_arch_flush_shadow_memslot(stru
  }
  
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				   struct kvm_memory_slot *memslot,
 +				   const struct kvm_userspace_memory_region *mem,
++=======
+ 				   const struct kvm_memory_slot *old,
+ 				   struct kvm_memory_slot *new,
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  				   enum kvm_mr_change change)
  {
  	return 0;
diff --cc arch/powerpc/kvm/powerpc.c
index 98100c4b560f,f1233500f4dc..000000000000
--- a/arch/powerpc/kvm/powerpc.c
+++ b/arch/powerpc/kvm/powerpc.c
@@@ -713,11 -698,11 +713,16 @@@ void kvm_arch_free_memslot(struct kvm *
  }
  
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				   struct kvm_memory_slot *memslot,
 +				   const struct kvm_userspace_memory_region *mem,
++=======
+ 				   const struct kvm_memory_slot *old,
+ 				   struct kvm_memory_slot *new,
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  				   enum kvm_mr_change change)
  {
 -	return kvmppc_core_prepare_memory_region(kvm, old, new, change);
 +	return kvmppc_core_prepare_memory_region(kvm, memslot, mem, change);
  }
  
  void kvm_arch_commit_memory_region(struct kvm *kvm,
diff --cc arch/s390/kvm/kvm-s390.c
index 45ca4f9acf2d,5dddd7817905..000000000000
--- a/arch/s390/kvm/kvm-s390.c
+++ b/arch/s390/kvm/kvm-s390.c
@@@ -4989,8 -5007,8 +4989,13 @@@ vm_fault_t kvm_arch_vcpu_fault(struct k
  
  /* Section: memory related */
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				   struct kvm_memory_slot *memslot,
 +				   const struct kvm_userspace_memory_region *mem,
++=======
+ 				   const struct kvm_memory_slot *old,
+ 				   struct kvm_memory_slot *new,
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  				   enum kvm_mr_change change)
  {
  	gpa_t size = new->npages * PAGE_SIZE;
diff --cc arch/x86/kvm/x86.c
index 91e139cea33b,f862c514c2c0..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -11825,13 -11674,18 +11825,19 @@@ void kvm_arch_memslots_updated(struct k
  }
  
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				struct kvm_memory_slot *memslot,
 +				const struct kvm_userspace_memory_region *mem,
 +				enum kvm_mr_change change)
++=======
+ 				   const struct kvm_memory_slot *old,
+ 				   struct kvm_memory_slot *new,
+ 				   enum kvm_mr_change change)
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  {
  	if (change == KVM_MR_CREATE || change == KVM_MR_MOVE)
 -		return kvm_alloc_memslot_metadata(kvm, new);
 -
 -	if (change == KVM_MR_FLAGS_ONLY)
 -		memcpy(&new->arch, &old->arch, sizeof(old->arch));
 -	else if (WARN_ON_ONCE(change != KVM_MR_DELETE))
 -		return -EIO;
 -
 +		return kvm_alloc_memslot_metadata(kvm, memslot,
 +						  mem->memory_size >> PAGE_SHIFT);
  	return 0;
  }
  
diff --cc include/linux/kvm_host.h
index 5a84e8a20ec4,da0d4f21a150..000000000000
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@@ -780,11 -833,10 +780,15 @@@ int __kvm_set_memory_region(struct kvm 
  void kvm_arch_free_memslot(struct kvm *kvm, struct kvm_memory_slot *slot);
  void kvm_arch_memslots_updated(struct kvm *kvm, u64 gen);
  int kvm_arch_prepare_memory_region(struct kvm *kvm,
++<<<<<<< HEAD
 +				struct kvm_memory_slot *memslot,
 +				const struct kvm_userspace_memory_region *mem,
++=======
+ 				const struct kvm_memory_slot *old,
+ 				struct kvm_memory_slot *new,
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  				enum kvm_mr_change change);
  void kvm_arch_commit_memory_region(struct kvm *kvm,
- 				const struct kvm_userspace_memory_region *mem,
  				struct kvm_memory_slot *old,
  				const struct kvm_memory_slot *new,
  				enum kvm_mr_change change);
diff --cc virt/kvm/kvm_main.c
index 84c0bcfed6e7,373079a03710..000000000000
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@@ -1474,10 -1635,7 +1473,14 @@@ static int kvm_set_memslot(struct kvm *
  		old.as_id = new->as_id;
  	}
  
++<<<<<<< HEAD
 +	/* Copy the arch-specific data, again after (re)acquiring slots_arch_lock. */
 +	memcpy(&new->arch, &old.arch, sizeof(old.arch));
 +
 +	r = kvm_arch_prepare_memory_region(kvm, new, mem, change);
++=======
+ 	r = kvm_arch_prepare_memory_region(kvm, &old, new, change);
++>>>>>>> 6a99c6e3f52a (KVM: Stop passing kvm_userspace_memory_region to arch memslot hooks)
  	if (r)
  		goto out_slots;
  
* Unmerged path arch/riscv/kvm/mmu.c
* Unmerged path arch/arm64/kvm/mmu.c
* Unmerged path arch/mips/kvm/mips.c
* Unmerged path arch/powerpc/kvm/powerpc.c
* Unmerged path arch/riscv/kvm/mmu.c
* Unmerged path arch/s390/kvm/kvm-s390.c
* Unmerged path arch/x86/kvm/x86.c
* Unmerged path include/linux/kvm_host.h
* Unmerged path virt/kvm/kvm_main.c
