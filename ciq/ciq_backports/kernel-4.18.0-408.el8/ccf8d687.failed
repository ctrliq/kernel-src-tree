KVM: VMX: Fold fallback path into triggering posted IRQ helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit ccf8d687542f6a7288b79727bec1cc084b3771b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/ccf8d687.failed

Move the fallback "wake_up" path into the helper to trigger posted
interrupt helper now that the nested and non-nested paths are identical.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20211208015236.1616697-20-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit ccf8d687542f6a7288b79727bec1cc084b3771b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index fa7a11f6f244,a02a28ce7cc3..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -3930,12 -3931,10 +3930,17 @@@ static void vmx_msr_filter_changed(stru
  	pt_update_intercept_for_msr(vcpu);
  }
  
++<<<<<<< HEAD
 +static inline bool kvm_vcpu_trigger_posted_interrupt(struct kvm_vcpu *vcpu,
 +						     bool nested)
++=======
+ static inline void kvm_vcpu_trigger_posted_interrupt(struct kvm_vcpu *vcpu,
+ 						     int pi_vec)
++>>>>>>> ccf8d687542f (KVM: VMX: Fold fallback path into triggering posted IRQ helper)
  {
  #ifdef CONFIG_SMP
 +	int pi_vec = nested ? POSTED_INTR_NESTED_VECTOR : POSTED_INTR_VECTOR;
 +
  	if (vcpu->mode == IN_GUEST_MODE) {
  		/*
  		 * The vector of interrupt to be delivered to vcpu had
@@@ -3996,8 -4000,7 +4006,12 @@@ static int vmx_deliver_nested_posted_in
  		smp_mb__after_atomic();
  
  		/* the PIR and ON have been set by L1. */
++<<<<<<< HEAD
 +		if (!kvm_vcpu_trigger_posted_interrupt(vcpu, true))
 +			kvm_vcpu_kick(vcpu);
++=======
+ 		kvm_vcpu_trigger_posted_interrupt(vcpu, POSTED_INTR_NESTED_VECTOR);
++>>>>>>> ccf8d687542f (KVM: VMX: Fold fallback path into triggering posted IRQ helper)
  		return 0;
  	}
  	return -1;
@@@ -4034,10 -4037,7 +4048,14 @@@ static int vmx_deliver_posted_interrupt
  	 * guaranteed to see PID.ON=1 and sync the PIR to IRR if triggering a
  	 * posted interrupt "fails" because vcpu->mode != IN_GUEST_MODE.
  	 */
++<<<<<<< HEAD
 +	if (vcpu != kvm_get_running_vcpu() &&
 +	    !kvm_vcpu_trigger_posted_interrupt(vcpu, false))
 +		kvm_vcpu_kick(vcpu);
 +
++=======
+ 	kvm_vcpu_trigger_posted_interrupt(vcpu, POSTED_INTR_VECTOR);
++>>>>>>> ccf8d687542f (KVM: VMX: Fold fallback path into triggering posted IRQ helper)
  	return 0;
  }
  
* Unmerged path arch/x86/kvm/vmx/vmx.c
