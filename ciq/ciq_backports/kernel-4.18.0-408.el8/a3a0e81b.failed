net/smc: Introduce tracepoint for smcr link down

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Tony Lu <tonylu@linux.alibaba.com>
commit a3a0e81b6fd55745e100735c7667cd99a0650811
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/a3a0e81b.failed

SMC-R link down event is important to help us find links' issues, we
should track this event, especially in the single nic mode, which means
upper layer connection would be shut down. Then find out the direct
link-down reason in time, not only increased the counter, also the
location of the code who triggered this event.

	Signed-off-by: Tony Lu <tonylu@linux.alibaba.com>
	Reviewed-by: Wen Gu <guwen@linux.alibaba.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a3a0e81b6fd55745e100735c7667cd99a0650811)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/smc/smc_tracepoint.c
#	net/smc/smc_tracepoint.h
* Unmerged path net/smc/smc_tracepoint.c
* Unmerged path net/smc/smc_tracepoint.h
diff --git a/net/smc/smc_core.c b/net/smc/smc_core.c
index 6e184c29e146..c4a64ab7c3f2 100644
--- a/net/smc/smc_core.c
+++ b/net/smc/smc_core.c
@@ -33,6 +33,7 @@
 #include "smc_ism.h"
 #include "smc_netlink.h"
 #include "smc_stats.h"
+#include "smc_tracepoint.h"
 
 #define SMC_LGR_NUM_INCR		256
 #define SMC_LGR_FREE_DELAY_SERV		(600 * HZ)
@@ -1617,15 +1618,19 @@ static void smcr_link_down(struct smc_link *lnk)
 /* must be called under lgr->llc_conf_mutex lock */
 void smcr_link_down_cond(struct smc_link *lnk)
 {
-	if (smc_link_downing(&lnk->state))
+	if (smc_link_downing(&lnk->state)) {
+		trace_smcr_link_down(lnk, __builtin_return_address(0));
 		smcr_link_down(lnk);
+	}
 }
 
 /* will get the lgr->llc_conf_mutex lock */
 void smcr_link_down_cond_sched(struct smc_link *lnk)
 {
-	if (smc_link_downing(&lnk->state))
+	if (smc_link_downing(&lnk->state)) {
+		trace_smcr_link_down(lnk, __builtin_return_address(0));
 		schedule_work(&lnk->link_down_wrk);
+	}
 }
 
 void smcr_port_err(struct smc_ib_device *smcibdev, u8 ibport)
* Unmerged path net/smc/smc_tracepoint.c
* Unmerged path net/smc/smc_tracepoint.h
