KVM: selftests: Remove perf_test_args.host_page_size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit a5ac0fd1b90ae811ba51da6a9928633bddefb792
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/a5ac0fd1.failed

Remove perf_test_args.host_page_size and instead use getpagesize() so
that it's somewhat obvious that, for tests that care about the host page
size, they care about the system page size, not the hardware page size,
e.g. that the logic is unchanged if hugepages are in play.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Ben Gardon <bgardon@google.com>
	Signed-off-by: David Matlack <dmatlack@google.com>
Message-Id: <20211111000310.1435032-10-dmatlack@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a5ac0fd1b90ae811ba51da6a9928633bddefb792)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/include/perf_test_util.h
#	tools/testing/selftests/kvm/lib/perf_test_util.c
diff --cc tools/testing/selftests/kvm/include/perf_test_util.h
index df9f1a3a3ffb,9348580dc5be..000000000000
--- a/tools/testing/selftests/kvm/include/perf_test_util.h
+++ b/tools/testing/selftests/kvm/include/perf_test_util.h
@@@ -27,7 -28,7 +27,11 @@@ struct perf_test_vcpu_args 
  
  struct perf_test_args {
  	struct kvm_vm *vm;
++<<<<<<< HEAD
 +	uint64_t host_page_size;
++=======
+ 	uint64_t gpa;
++>>>>>>> a5ac0fd1b90a (KVM: selftests: Remove perf_test_args.host_page_size)
  	uint64_t guest_page_size;
  	int wr_fract;
  
diff --cc tools/testing/selftests/kvm/lib/perf_test_util.c
index 0ef80dbdc116,a0aded8cfce3..000000000000
--- a/tools/testing/selftests/kvm/lib/perf_test_util.c
+++ b/tools/testing/selftests/kvm/lib/perf_test_util.c
@@@ -59,15 -60,18 +59,27 @@@ struct kvm_vm *perf_test_create_vm(enu
  
  	pr_info("Testing guest mode: %s\n", vm_guest_mode_string(mode));
  
++<<<<<<< HEAD
 +	perf_test_args.host_page_size = getpagesize();
 +	perf_test_args.guest_page_size = vm_guest_mode_params[mode].page_size;
++=======
+ 	/*
+ 	 * Snapshot the non-huge page size.  This is used by the guest code to
+ 	 * access/dirty pages at the logging granularity.
+ 	 */
+ 	pta->guest_page_size = vm_guest_mode_params[mode].page_size;
++>>>>>>> a5ac0fd1b90a (KVM: selftests: Remove perf_test_args.host_page_size)
  
  	guest_num_pages = vm_adjust_num_guest_pages(mode,
 -				(vcpus * vcpu_memory_bytes) / pta->guest_page_size);
 +				(vcpus * vcpu_memory_bytes) / perf_test_args.guest_page_size);
  
++<<<<<<< HEAD
 +	TEST_ASSERT(vcpu_memory_bytes % perf_test_args.host_page_size == 0,
++=======
+ 	TEST_ASSERT(vcpu_memory_bytes % getpagesize() == 0,
++>>>>>>> a5ac0fd1b90a (KVM: selftests: Remove perf_test_args.host_page_size)
  		    "Guest memory size is not host page size aligned.");
 -	TEST_ASSERT(vcpu_memory_bytes % pta->guest_page_size == 0,
 +	TEST_ASSERT(vcpu_memory_bytes % perf_test_args.guest_page_size == 0,
  		    "Guest memory size is not guest page size aligned.");
  	TEST_ASSERT(guest_num_pages % slots == 0,
  		    "Guest memory cannot be evenly divided into %d slots.",
* Unmerged path tools/testing/selftests/kvm/include/perf_test_util.h
* Unmerged path tools/testing/selftests/kvm/lib/perf_test_util.c
