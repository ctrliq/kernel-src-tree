KVM: VMX: Pass desired vector instead of bool for triggering posted IRQ

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 296aa26644d088d8ccf0d62b0a93443f7188d5e5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/296aa266.failed

Refactor the posted interrupt helper to take the desired notification
vector instead of a bool so that the callers are self-documenting.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20211208015236.1616697-19-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 296aa26644d088d8ccf0d62b0a93443f7188d5e5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/vmx.c
diff --cc arch/x86/kvm/vmx/vmx.c
index fa7a11f6f244,063c21559aa1..000000000000
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@@ -3996,8 -3995,8 +3994,13 @@@ static int vmx_deliver_nested_posted_in
  		smp_mb__after_atomic();
  
  		/* the PIR and ON have been set by L1. */
++<<<<<<< HEAD
 +		if (!kvm_vcpu_trigger_posted_interrupt(vcpu, true))
 +			kvm_vcpu_kick(vcpu);
++=======
+ 		if (!kvm_vcpu_trigger_posted_interrupt(vcpu, POSTED_INTR_NESTED_VECTOR))
+ 			kvm_vcpu_wake_up(vcpu);
++>>>>>>> 296aa26644d0 (KVM: VMX: Pass desired vector instead of bool for triggering posted IRQ)
  		return 0;
  	}
  	return -1;
@@@ -4034,9 -4033,8 +4037,14 @@@ static int vmx_deliver_posted_interrupt
  	 * guaranteed to see PID.ON=1 and sync the PIR to IRR if triggering a
  	 * posted interrupt "fails" because vcpu->mode != IN_GUEST_MODE.
  	 */
++<<<<<<< HEAD
 +	if (vcpu != kvm_get_running_vcpu() &&
 +	    !kvm_vcpu_trigger_posted_interrupt(vcpu, false))
 +		kvm_vcpu_kick(vcpu);
++=======
+ 	if (!kvm_vcpu_trigger_posted_interrupt(vcpu, POSTED_INTR_VECTOR))
+ 		kvm_vcpu_wake_up(vcpu);
++>>>>>>> 296aa26644d0 (KVM: VMX: Pass desired vector instead of bool for triggering posted IRQ)
  
  	return 0;
  }
* Unmerged path arch/x86/kvm/vmx/vmx.c
