ACPI: PM: Check states of power resources during initialization

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit a1224f34d72a103829d6953935d6c6621f135b83
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/a1224f34.failed

To avoid situations in which the actual states of certain ACPI power
resources are not known just because they have never been referenced
by any device configuration objects, check the initial states of all
power resources as soon as they are found in the ACPI namespace (and
fall back to turning them on if the state check fails).

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Tested-by: Andreas K. Huettel <andreas.huettel@ur.de>
(cherry picked from commit a1224f34d72a103829d6953935d6c6621f135b83)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/power.c
diff --cc drivers/acpi/power.c
index ac4a2c2d0944,bb03fb0eaa0e..000000000000
--- a/drivers/acpi/power.c
+++ b/drivers/acpi/power.c
@@@ -993,8 -972,11 +994,16 @@@ struct acpi_device *acpi_add_power_reso
  	resource->order = acpi_object.power_resource.resource_order;
  	resource->state = ACPI_POWER_RESOURCE_STATE_UNKNOWN;
  
++<<<<<<< HEAD
 +	printk(KERN_INFO PREFIX "%s [%s]\n", acpi_device_name(device),
 +	       acpi_device_bid(device));
++=======
+ 	/* Get the initial state or just flip it on if that fails. */
+ 	if (acpi_power_get_state(resource, &state_dummy))
+ 		__acpi_power_on(resource);
+ 
+ 	pr_info("%s [%s]\n", acpi_device_name(device), acpi_device_bid(device));
++>>>>>>> a1224f34d72a (ACPI: PM: Check states of power resources during initialization)
  
  	device->flags.match_driver = true;
  	result = acpi_device_add(device, acpi_release_power_resource);
* Unmerged path drivers/acpi/power.c
