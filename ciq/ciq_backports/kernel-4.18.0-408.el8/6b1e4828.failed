platform/x86: intel_speed_select_if: Move to intel sub-directory

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Kate Hsuan <hpa@redhat.com>
commit 6b1e482898e841b577d1d22b97fb65ac8ffacd9a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6b1e4828.failed

Move Intel Speed Select interface driver to intel sub-directory to improve
readability and rename it from intel_speed_select_if to speed_select_if.

	Signed-off-by: Kate Hsuan <hpa@redhat.com>
	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Link: https://lore.kernel.org/r/20210820110458.73018-14-andriy.shevchenko@linux.intel.com
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit 6b1e482898e841b577d1d22b97fb65ac8ffacd9a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
#	drivers/platform/x86/Kconfig
#	drivers/platform/x86/Makefile
#	drivers/platform/x86/intel/Kconfig
#	drivers/platform/x86/intel/Makefile
diff --cc MAINTAINERS
index daede1a933b0,cf29f7154889..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7585,6 -9523,106 +7585,109 @@@ M:	Jarkko Nikula <jarkko.nikula@linux.i
  L:	linux-iio@vger.kernel.org
  F:	drivers/counter/intel-qep.c
  
++<<<<<<< HEAD
++=======
+ INTEL SCU DRIVERS
+ M:	Mika Westerberg <mika.westerberg@linux.intel.com>
+ S:	Maintained
+ F:	arch/x86/include/asm/intel_scu_ipc.h
+ F:	drivers/platform/x86/intel_scu_*
+ 
+ INTEL SKYLAKE INT3472 ACPI DEVICE DRIVER
+ M:	Daniel Scally <djrscally@gmail.com>
+ S:	Maintained
+ F:	drivers/platform/x86/intel/int3472/
+ 
+ INTEL SPEED SELECT TECHNOLOGY
+ M:	Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel/speed_select_if/
+ F:	include/uapi/linux/isst_if.h
+ F:	tools/power/x86/intel-speed-select/
+ 
+ INTEL STRATIX10 FIRMWARE DRIVERS
+ M:	Richard Gong <richard.gong@linux.intel.com>
+ L:	linux-kernel@vger.kernel.org
+ S:	Maintained
+ F:	Documentation/ABI/testing/sysfs-devices-platform-stratix10-rsu
+ F:	Documentation/devicetree/bindings/firmware/intel,stratix10-svc.txt
+ F:	drivers/firmware/stratix10-rsu.c
+ F:	drivers/firmware/stratix10-svc.c
+ F:	include/linux/firmware/intel/stratix10-smc.h
+ F:	include/linux/firmware/intel/stratix10-svc-client.h
+ 
+ INTEL TELEMETRY DRIVER
+ M:	Rajneesh Bhardwaj <irenic.rajneesh@gmail.com>
+ M:	"David E. Box" <david.e.box@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	arch/x86/include/asm/intel_telemetry.h
+ F:	drivers/platform/x86/intel/telemetry/
+ 
+ INTEL UNCORE FREQUENCY CONTROL
+ M:	Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel/uncore-frequency.c
+ 
+ INTEL VIRTUAL BUTTON DRIVER
+ M:	AceLan Kao <acelan.kao@canonical.com>
+ L:	platform-driver-x86@vger.kernel.org
+ S:	Maintained
+ F:	drivers/platform/x86/intel-vbtn.c
+ 
+ INTEL WIRELESS 3945ABG/BG, 4965AGN (iwlegacy)
+ M:	Stanislaw Gruszka <stf_xl@wp.pl>
+ L:	linux-wireless@vger.kernel.org
+ S:	Supported
+ F:	drivers/net/wireless/intel/iwlegacy/
+ 
+ INTEL WIRELESS WIFI LINK (iwlwifi)
+ M:	Luca Coelho <luciano.coelho@intel.com>
+ L:	linux-wireless@vger.kernel.org
+ S:	Supported
+ W:	https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi
+ T:	git git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi.git
+ F:	drivers/net/wireless/intel/iwlwifi/
+ 
+ INTEL WMI SLIM BOOTLOADER (SBL) FIRMWARE UPDATE DRIVER
+ M:	Jithu Joseph <jithu.joseph@intel.com>
+ R:	Maurice Ma <maurice.ma@intel.com>
+ S:	Maintained
+ W:	https://slimbootloader.github.io/security/firmware-update.html
+ F:	drivers/platform/x86/intel-wmi-sbl-fw-update.c
+ 
+ INTEL WMI THUNDERBOLT FORCE POWER DRIVER
+ L:	Dell.Client.Kernel@dell.com
+ S:	Maintained
+ F:	drivers/platform/x86/intel-wmi-thunderbolt.c
+ 
+ INTEL WWAN IOSM DRIVER
+ M:	M Chetan Kumar <m.chetan.kumar@intel.com>
+ M:	Intel Corporation <linuxwwan@intel.com>
+ L:	netdev@vger.kernel.org
+ S:	Maintained
+ F:	drivers/net/wwan/iosm/
+ 
+ INTEL(R) TRACE HUB
+ M:	Alexander Shishkin <alexander.shishkin@linux.intel.com>
+ S:	Supported
+ F:	Documentation/trace/intel_th.rst
+ F:	drivers/hwtracing/intel_th/
+ F:	include/linux/intel_th.h
+ 
+ INTEL(R) TRUSTED EXECUTION TECHNOLOGY (TXT)
+ M:	Ning Sun <ning.sun@intel.com>
+ L:	tboot-devel@lists.sourceforge.net
+ S:	Supported
+ W:	http://tboot.sourceforge.net
+ T:	hg http://tboot.hg.sourceforge.net:8000/hgroot/tboot/tboot
+ F:	Documentation/x86/intel_txt.rst
+ F:	arch/x86/kernel/tboot.c
+ F:	include/linux/tboot.h
+ 
++>>>>>>> 6b1e482898e8 (platform/x86: intel_speed_select_if: Move to intel sub-directory)
  INTEL SGX
  M:	Jarkko Sakkinen <jarkko@kernel.org>
  R:	Dave Hansen <dave.hansen@linux.intel.com>
diff --cc drivers/platform/x86/Kconfig
index 9c719f85d968,935116ef2df9..000000000000
--- a/drivers/platform/x86/Kconfig
+++ b/drivers/platform/x86/Kconfig
@@@ -1053,281 -1100,62 +1053,330 @@@ config INTEL_IM
  
  	  If you are running on a Galileo/Quark say Y here.
  
 -config INTEL_IPS
 -	tristate "Intel Intelligent Power Sharing"
 +config IBM_RTL
 +	tristate "Device driver to enable PRTL support"
 +	depends on PCI
 +	---help---
 +	 Enable support for IBM Premium Real Time Mode (PRTM).
 +	 This module will allow you the enter and exit PRTM in the BIOS via
 +	 sysfs on platforms that support this feature.  System in PRTM will
 +	 not receive CPU-generated SMIs for recoverable errors.  Use of this
 +	 feature without proper support may void your hardware warranty.
 +
 +	 If the proper BIOS support is found the driver will load and create
 +	 /sys/devices/system/ibm_rtl/.  The "state" variable will indicate
 +	 whether or not the BIOS is in PRTM.
 +	 state = 0 (BIOS SMIs on)
 +	 state = 1 (BIOS SMIs off)
 +
 +config XO1_RFKILL
 +	tristate "OLPC XO-1 software RF kill switch"
 +	depends on OLPC || COMPILE_TEST
 +	depends on RFKILL
 +	---help---
 +	  Support for enabling/disabling the WLAN interface on the OLPC XO-1
 +	  laptop.
 +
 +config XO15_EBOOK
 +	tristate "OLPC XO-1.5 ebook switch"
 +	depends on OLPC || COMPILE_TEST
 +	depends on ACPI && INPUT
 +	---help---
 +	  Support for the ebook switch on the OLPC XO-1.5 laptop.
 +
 +	  This switch is triggered as the screen is rotated and folded down to
 +	  convert the device into ebook form.
 +
 +config SAMSUNG_LAPTOP
 +	tristate "Samsung Laptop driver"
 +	depends on RFKILL || RFKILL = n
 +	depends on ACPI_VIDEO || ACPI_VIDEO = n
 +	depends on BACKLIGHT_CLASS_DEVICE
 +	select LEDS_CLASS
 +	select NEW_LEDS
 +	---help---
 +	  This module implements a driver for a wide range of different
 +	  Samsung laptops.  It offers control over the different
 +	  function keys, wireless LED, LCD backlight level.
 +
 +	  It may also provide some sysfs files described in
 +	  <file:Documentation/ABI/testing/sysfs-driver-samsung-laptop>
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called samsung-laptop.
 +
 +config MXM_WMI
 +       tristate "WMI support for MXM Laptop Graphics"
 +       depends on ACPI_WMI
 +       ---help---
 +          MXM is a standard for laptop graphics cards, the WMI interface
 +	  is required for switchable nvidia graphics machines
 +
 +config INTEL_OAKTRAIL
 +	tristate "Intel Oaktrail Platform Extras"
 +	depends on ACPI
 +	depends on ACPI_VIDEO || ACPI_VIDEO = n
 +	depends on RFKILL && BACKLIGHT_CLASS_DEVICE && ACPI
 +	---help---
 +	  Intel Oaktrail platform need this driver to provide interfaces to
 +	  enable/disable the Camera, WiFi, BT etc. devices. If in doubt, say Y
 +	  here; it will only load on supported platforms.
 +
 +config SAMSUNG_Q10
 +	tristate "Samsung Q10 Extras"
 +	depends on ACPI
 +	select BACKLIGHT_CLASS_DEVICE
 +	---help---
 +	  This driver provides support for backlight control on Samsung Q10
 +	  and related laptops, including Dell Latitude X200.
 +
 +config AMD_PMC
 +	tristate "AMD SoC PMC driver"
 +	depends on ACPI && PCI && RTC_CLASS
 +	help
 +	  The driver provides support for AMD Power Management Controller
 +	  primarily responsible for S2Idle transactions that are driven from
 +	  a platform firmware running on SMU. This driver also provides a debug
 +	  mechanism to investigate the S2Idle transactions and failures.
 +
 +	  Say Y or M here if you have a notebook powered by AMD RYZEN CPU/APU.
 +
 +	  If you choose to compile this driver as a module the module will be
 +	  called amd-pmc.
 +
 +config APPLE_GMUX
 +	tristate "Apple Gmux Driver"
  	depends on ACPI && PCI
 +	depends on PNP
 +	depends on BACKLIGHT_CLASS_DEVICE
 +	depends on BACKLIGHT_APPLE=n || BACKLIGHT_APPLE
 +	depends on ACPI_VIDEO=n || ACPI_VIDEO
 +	---help---
 +	  This driver provides support for the gmux device found on many
 +	  Apple laptops, which controls the display mux for the hybrid
 +	  graphics as well as the backlight. Currently only backlight
 +	  control is supported by the driver.
 +
 +config INTEL_RST
 +        tristate "Intel Rapid Start Technology Driver"
 +	depends on ACPI
 +	---help---
 +	  This driver provides support for modifying paramaters on systems
 +	  equipped with Intel's Rapid Start Technology. When put in an ACPI
 +	  sleep state, these devices will wake after either a configured
 +	  timeout or when the system battery reaches a critical state,
 +	  automatically copying memory contents to disk. On resume, the
 +	  firmware will copy the memory contents back to RAM and resume the OS
 +	  as usual.
 +
 +config INTEL_SMARTCONNECT
 +        tristate "Intel Smart Connect disabling driver"
 +	depends on ACPI
 +	---help---
 +	  Intel Smart Connect is a technology intended to permit devices to
 +	  update state by resuming for a short period of time at regular
 +	  intervals. If a user enables this functionality under Windows and
 +	  then reboots into Linux, the system may remain configured to resume
 +	  on suspend. In the absence of any userspace to support it, the system
 +	  will then remain awake until something triggers another suspend.
 +
 +	  This driver checks to determine whether the device has Intel Smart
 +	  Connect enabled, and if so disables it.
 +
 +config PVPANIC
 +	tristate "pvpanic device support"
 +	depends on ACPI
 +	---help---
 +	  This driver provides support for the pvpanic device.  pvpanic is
 +	  a paravirtualized device provided by QEMU; it lets a virtual machine
 +	  (guest) communicate panic events to the host.
 +
 +config INTEL_PMC_IPC
 +	tristate "Intel PMC IPC Driver"
 +	depends on ACPI && PCI
 +	---help---
 +	This driver provides support for PMC control on some Intel platforms.
 +	The PMC is an ARC processor which defines IPC commands for communication
 +	with other entities in the CPU.
 +
 +config INTEL_BXTWC_PMIC_TMU
 +	tristate "Intel BXT Whiskey Cove TMU Driver"
 +	depends on REGMAP
 +	depends on INTEL_SOC_PMIC_BXTWC && INTEL_PMC_IPC
 +	---help---
 +	  Select this driver to use Intel BXT Whiskey Cove PMIC TMU feature.
 +	  This driver enables the alarm wakeup functionality in the TMU unit
 +	  of Whiskey Cove PMIC.
 +
 +config SURFACE_PRO3_BUTTON
 +	tristate "Power/home/volume buttons driver for Microsoft Surface Pro 3/4 tablet"
 +	depends on ACPI && INPUT
 +	---help---
 +	  This driver handles the power/home/volume buttons on the Microsoft Surface Pro 3/4 tablet.
 +
 +config SURFACE_3_BUTTON
 +	tristate "Power/home/volume buttons driver for Microsoft Surface 3 tablet"
 +	depends on ACPI && KEYBOARD_GPIO && I2C
 +	---help---
 +	  This driver handles the power/home/volume buttons on the Microsoft Surface 3 tablet.
 +
 +config INTEL_PMT_CLASS
 +	tristate
  	help
 -	  Intel Calpella platforms support dynamic power sharing between the
 -	  CPU and GPU, maximizing performance in a given TDP.  This driver,
 -	  along with the CPU frequency and i915 drivers, provides that
 -	  functionality.  If in doubt, say Y here; it will only load on
 -	  supported platforms.
 +	  The Intel Platform Monitoring Technology (PMT) class driver provides
 +	  the basic sysfs interface and file hierarchy uses by PMT devices.
 +
 +	  For more information, see:
 +	  <file:Documentation/ABI/testing/sysfs-class-intel_pmt>
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called intel_pmt_class.
 +
 +config INTEL_PMT_TELEMETRY
 +	tristate "Intel Platform Monitoring Technology (PMT) Telemetry driver"
 +	depends on MFD_INTEL_PMT
 +	select INTEL_PMT_CLASS
 +	help
 +	  The Intel Platform Monitory Technology (PMT) Telemetry driver provides
 +	  access to hardware telemetry metrics on devices that support the
 +	  feature.
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called intel_pmt_telemetry.
 +
 +config INTEL_PMT_CRASHLOG
 +	tristate "Intel Platform Monitoring Technology (PMT) Crashlog driver"
 +	depends on MFD_INTEL_PMT
 +	select INTEL_PMT_CLASS
 +	help
 +	  The Intel Platform Monitoring Technology (PMT) crashlog driver provides
 +	  access to hardware crashlog capabilities on devices that support the
 +	  feature.
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called intel_pmt_crashlog.
 +
 +config INTEL_PUNIT_IPC
 +	tristate "Intel P-Unit IPC Driver"
 +	---help---
 +	  This driver provides support for Intel P-Unit Mailbox IPC mechanism,
 +	  which is used to bridge the communications between kernel and P-Unit.
 +
 +config INTEL_TELEMETRY
 +	tristate "Intel SoC Telemetry Driver"
 +	depends on INTEL_PMC_IPC && INTEL_PUNIT_IPC && X86_64
 +	---help---
 +	  This driver provides interfaces to configure and use
 +	  telemetry for INTEL SoC from APL onwards. It is also
 +	  used to get various SoC events and parameters
 +	  directly via debugfs files. Various tools may use
 +	  this interface for SoC state monitoring.
 +
 +config MLX_PLATFORM
 +	tristate "Mellanox Technologies platform support"
 +	depends on I2C && REGMAP
 +	---help---
 +	  This option enables system support for the Mellanox Technologies
 +	  platform. The Mellanox systems provide data center networking
 +	  solutions based on Virtual Protocol Interconnect (VPI) technology
 +	  enable seamless connectivity to 56/100Gb/s InfiniBand or 10/40/56GbE
 +	  connection.
 +
 +	  If you have a Mellanox system, say Y or M here.
 +
 +config INTEL_TURBO_MAX_3
 +	bool "Intel Turbo Boost Max Technology 3.0 enumeration driver"
 +	depends on X86_64 && SCHED_MC_PRIO
 +	---help---
 +	  This driver reads maximum performance ratio of each CPU and set up
 +	  the scheduler priority metrics. In this way scheduler can prefer
 +	  CPU with higher performance to schedule tasks.
 +	  This driver is only required when the system is not using Hardware
 +	  P-States (HWP). In HWP mode, priority can be read from ACPI tables.
 +
 +config SILEAD_DMI
 +	bool "Tablets with Silead touchscreens"
 +	depends on ACPI && DMI && I2C=y && TOUCHSCREEN_SILEAD
 +	---help---
 +	  Certain ACPI based tablets with Silead touchscreens do not have
 +	  enough data in ACPI tables for the touchscreen driver to handle
 +	  the touchscreen properly, as OEMs expected the data to be baked
 +	  into the tablet model specific version of the driver shipped
 +	  with the OS-image for the device. This option supplies the missing
 +	  information. Enable this for x86 tablets with Silead touchscreens.
 +
 +config INTEL_CHTDC_TI_PWRBTN
 +	tristate "Intel Cherry Trail Dollar Cove TI power button driver"
 +	depends on INTEL_SOC_PMIC_CHTDC_TI
 +	depends on INPUT
 +	---help---
 +	  This option adds a power button driver driver for Dollar Cove TI
 +	  PMIC on Intel Cherry Trail devices.
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called intel_chtdc_ti_pwrbtn.
 +
 +config I2C_MULTI_INSTANTIATE
 +	tristate "I2C multi instantiate pseudo device driver"
 +	depends on I2C && ACPI
 +	help
 +	  Some ACPI-based systems list multiple i2c-devices in a single ACPI
 +	  firmware-node. This driver will instantiate separate i2c-clients
 +	  for each device in the firmware-node.
 +
 +	  To compile this driver as a module, choose M here: the module
 +	  will be called i2c-multi-instantiate.
  
++<<<<<<< HEAD
 +source "drivers/platform/x86/intel_speed_select_if/Kconfig"
++=======
+ config INTEL_SCU_IPC
+ 	bool
+ 
+ config INTEL_SCU
+ 	bool
+ 	select INTEL_SCU_IPC
+ 
+ config INTEL_SCU_PCI
+ 	bool "Intel SCU PCI driver"
+ 	depends on PCI
+ 	select INTEL_SCU
+ 	help
+ 	  This driver is used to bridge the communications between kernel
+ 	  and SCU on some embedded Intel x86 platforms. It also creates
+ 	  devices that are connected to the SoC through the SCU.
+ 	  Platforms supported:
+ 	    Medfield
+ 	    Clovertrail
+ 	    Merrifield
+ 	    Broxton
+ 	    Apollo Lake
+ 
+ config INTEL_SCU_PLATFORM
+ 	tristate "Intel SCU platform driver"
+ 	depends on ACPI
+ 	select INTEL_SCU
+ 	help
+ 	  This driver is used to bridge the communications between kernel
+ 	  and SCU (sometimes called PMC as well). The driver currently
+ 	  supports Intel Elkhart Lake and compatible platforms.
+ 
+ config INTEL_SCU_WDT
+ 	bool
+ 	default INTEL_SCU_PCI
+ 	depends on INTEL_MID_WATCHDOG
+ 	help
+ 	  This is a specific platform code to instantiate watchdog device
+ 	  on ACPI-based Intel MID platforms.
+ 
+ config INTEL_SCU_IPC_UTIL
+ 	tristate "Intel SCU IPC utility driver"
+ 	depends on INTEL_SCU
+ 	help
+ 	  The IPC Util driver provides an interface with the SCU enabling
+ 	  low level access for debug work and updating the firmware. Say
+ 	  N unless you will be doing this on an Intel MID platform.
++>>>>>>> 6b1e482898e8 (platform/x86: intel_speed_select_if: Move to intel sub-directory)
  
  endif # X86_PLATFORM_DEVICES
  
diff --cc drivers/platform/x86/Makefile
index 60d6c98f6767,dd3f1e683f0d..000000000000
--- a/drivers/platform/x86/Makefile
+++ b/drivers/platform/x86/Makefile
@@@ -61,47 -102,29 +61,64 @@@ obj-$(CONFIG_INTEL_WMI_THUNDERBOLT)	+= 
  # before toshiba_acpi initializes
  obj-$(CONFIG_ACPI_TOSHIBA)	+= toshiba_acpi.o
  
 -# Laptop drivers
 -obj-$(CONFIG_ACPI_CMPC)		+= classmate-laptop.o
 -obj-$(CONFIG_COMPAL_LAPTOP)	+= compal-laptop.o
 -obj-$(CONFIG_LG_LAPTOP)		+= lg-laptop.o
 -obj-$(CONFIG_PANASONIC_LAPTOP)	+= panasonic-laptop.o
 -obj-$(CONFIG_SONY_LAPTOP)	+= sony-laptop.o
 -obj-$(CONFIG_SYSTEM76_ACPI)	+= system76_acpi.o
 -obj-$(CONFIG_TOPSTAR_LAPTOP)	+= topstar-laptop.o
 -
 -# Platform drivers
 -obj-$(CONFIG_FW_ATTR_CLASS)		+= firmware_attributes_class.o
 +obj-$(CONFIG_TOSHIBA_BT_RFKILL)	+= toshiba_bluetooth.o
 +obj-$(CONFIG_TOSHIBA_HAPS)	+= toshiba_haps.o
 +obj-$(CONFIG_TOSHIBA_WMI)	+= toshiba-wmi.o
 +obj-$(CONFIG_INTEL_CHT_INT33FE)	+= intel_cht_int33fe.o
 +obj-$(CONFIG_INTEL_INT0002_VGPIO) += intel_int0002_vgpio.o
 +obj-$(CONFIG_INTEL_HID_EVENT)	+= intel-hid.o
 +obj-$(CONFIG_INTEL_VBTN)	+= intel-vbtn.o
 +obj-$(CONFIG_INTEL_SCU_IPC)	+= intel_scu_ipc.o
 +obj-$(CONFIG_INTEL_SCU_IPC_UTIL) += intel_scu_ipcutil.o
 +obj-$(CONFIG_INTEL_MFLD_THERMAL) += intel_mid_thermal.o
 +obj-$(CONFIG_INTEL_IPS)		+= intel_ips.o
 +obj-$(CONFIG_XO1_RFKILL)	+= xo1-rfkill.o
 +obj-$(CONFIG_XO15_EBOOK)	+= xo15-ebook.o
 +obj-$(CONFIG_IBM_RTL)		+= ibm_rtl.o
 +obj-$(CONFIG_SAMSUNG_LAPTOP)	+= samsung-laptop.o
 +obj-$(CONFIG_MXM_WMI)		+= mxm-wmi.o
 +obj-$(CONFIG_INTEL_MID_POWER_BUTTON)	+= intel_mid_powerbtn.o
 +obj-$(CONFIG_INTEL_OAKTRAIL)	+= intel_oaktrail.o
 +obj-$(CONFIG_SAMSUNG_Q10)	+= samsung-q10.o
 +obj-$(CONFIG_APPLE_GMUX)	+= apple-gmux.o
 +obj-$(CONFIG_INTEL_RST)		+= intel-rst.o
 +obj-$(CONFIG_INTEL_SMARTCONNECT)	+= intel-smartconnect.o
 +
 +obj-$(CONFIG_PVPANIC)           += pvpanic.o
 +obj-$(CONFIG_ALIENWARE_WMI)	+= alienware-wmi.o
 +obj-$(CONFIG_INTEL_PMC_IPC)	+= intel_pmc_ipc.o
 +obj-$(CONFIG_SILEAD_DMI)	+= silead_dmi.o
 +obj-$(CONFIG_SURFACE_PRO3_BUTTON)	+= surfacepro3_button.o
 +obj-$(CONFIG_SURFACE_3_BUTTON)	+= surface3_button.o
 +obj-$(CONFIG_INTEL_PUNIT_IPC)  += intel_punit_ipc.o
 +obj-$(CONFIG_INTEL_BXTWC_PMIC_TMU)	+= intel_bxtwc_tmu.o
 +obj-$(CONFIG_INTEL_TELEMETRY)	+= intel_telemetry_core.o \
 +				   intel_telemetry_pltdrv.o \
 +				   intel_telemetry_debugfs.o
 +obj-$(CONFIG_INTEL_PMT_CLASS)		+= intel_pmt_class.o
 +obj-$(CONFIG_INTEL_PMT_TELEMETRY)	+= intel_pmt_telemetry.o
 +obj-$(CONFIG_INTEL_PMT_CRASHLOG)	+= intel_pmt_crashlog.o
 +obj-$(CONFIG_PMC_ATOM)		+= pmc_atom.o
 +obj-$(CONFIG_MLX_PLATFORM)	+= mlx-platform.o
 +obj-$(CONFIG_INTEL_TURBO_MAX_3) += intel_turbo_max_3.o
 +obj-$(CONFIG_INTEL_CHTDC_TI_PWRBTN)	+= intel_chtdc_ti_pwrbtn.o
  obj-$(CONFIG_I2C_MULTI_INSTANTIATE)	+= i2c-multi-instantiate.o
++<<<<<<< HEAD
 +obj-$(CONFIG_INTEL_SPEED_SELECT_INTERFACE) += intel_speed_select_if/
 +obj-$(CONFIG_FW_ATTR_CLASS)		+= firmware_attributes_class.o
++=======
+ obj-$(CONFIG_MLX_PLATFORM)		+= mlx-platform.o
+ obj-$(CONFIG_TOUCHSCREEN_DMI)		+= touchscreen_dmi.o
+ obj-$(CONFIG_WIRELESS_HOTKEY)		+= wireless-hotkey.o
+ 
+ # Intel uncore drivers
+ obj-$(CONFIG_INTEL_IPS)				+= intel_ips.o
+ 
+ # Intel PMIC / PMC / P-Unit devices
+ obj-$(CONFIG_INTEL_SCU_IPC)		+= intel_scu_ipc.o
+ obj-$(CONFIG_INTEL_SCU_PCI)		+= intel_scu_pcidrv.o
+ obj-$(CONFIG_INTEL_SCU_PLATFORM)	+= intel_scu_pltdrv.o
+ obj-$(CONFIG_INTEL_SCU_WDT)		+= intel_scu_wdt.o
+ obj-$(CONFIG_INTEL_SCU_IPC_UTIL)	+= intel_scu_ipcutil.o
+ obj-$(CONFIG_PMC_ATOM)			+= pmc_atom.o
++>>>>>>> 6b1e482898e8 (platform/x86: intel_speed_select_if: Move to intel sub-directory)
diff --cc drivers/platform/x86/intel/Kconfig
index 1a3496800567,2622653af37a..000000000000
--- a/drivers/platform/x86/intel/Kconfig
+++ b/drivers/platform/x86/intel/Kconfig
@@@ -15,22 -15,100 +15,28 @@@ menuconfig X86_PLATFORM_DRIVERS_INTE
  	  and disabled.
  
  if X86_PLATFORM_DRIVERS_INTEL
 -
 -source "drivers/platform/x86/intel/int1092/Kconfig"
 -source "drivers/platform/x86/intel/int33fe/Kconfig"
 -source "drivers/platform/x86/intel/int3472/Kconfig"
  source "drivers/platform/x86/intel/pmc/Kconfig"
++<<<<<<< HEAD
++=======
+ source "drivers/platform/x86/intel/pmt/Kconfig"
+ source "drivers/platform/x86/intel/speed_select_if/Kconfig"
+ source "drivers/platform/x86/intel/telemetry/Kconfig"
++>>>>>>> 6b1e482898e8 (platform/x86: intel_speed_select_if: Move to intel sub-directory)
  
 -config INTEL_BXTWC_PMIC_TMU
 -	tristate "Intel Broxton Whiskey Cove TMU Driver"
 -	depends on INTEL_SOC_PMIC_BXTWC
 -	depends on MFD_INTEL_PMC_BXT
 -	select REGMAP
 -	help
 -	  Select this driver to use Intel Broxton Whiskey Cove PMIC TMU feature.
 -	  This driver enables the alarm wakeup functionality in the TMU unit of
 -	  Whiskey Cove PMIC.
 -
 -config INTEL_CHTDC_TI_PWRBTN
 -	tristate "Intel Cherry Trail Dollar Cove TI power button driver"
 -	depends on INTEL_SOC_PMIC_CHTDC_TI
 -	depends on INPUT
 -	help
 -	  This option adds a power button driver for Dollar Cove TI
 -	  PMIC on Intel Cherry Trail devices.
 -
 -	  To compile this driver as a module, choose M here: the module
 -	  will be called intel_chtdc_ti_pwrbtn.
 -
 -config INTEL_MRFLD_PWRBTN
 -	tristate "Intel Merrifield Basin Cove power button driver"
 -	depends on INTEL_SOC_PMIC_MRFLD
 -	depends on INPUT
 -	help
 -	  This option adds a power button driver for Basin Cove PMIC
 -	  on Intel Merrifield devices.
 -
 -	  To compile this driver as a module, choose M here: the module
 -	  will be called intel_mrfld_pwrbtn.
 -
 -config INTEL_PUNIT_IPC
 -	tristate "Intel P-Unit IPC Driver"
 -	help
 -	  This driver provides support for Intel P-Unit Mailbox IPC mechanism,
 -	  which is used to bridge the communications between kernel and P-Unit.
 -
 -config INTEL_RST
 -	tristate "Intel Rapid Start Technology Driver"
 -	depends on ACPI
 -	help
 -	  This driver provides support for modifying parameters on systems
 -	  equipped with Intel's Rapid Start Technology. When put in an ACPI
 -	  sleep state, these devices will wake after either a configured
 -	  timeout or when the system battery reaches a critical state,
 -	  automatically copying memory contents to disk. On resume, the
 -	  firmware will copy the memory contents back to RAM and resume the OS
 -	  as usual.
 -
 -config INTEL_SMARTCONNECT
 -	tristate "Intel Smart Connect disabling driver"
 +config INTEL_ISHTP_ECLITE
 +	tristate "Intel ISHTP eclite controller Driver"
 +	depends on INTEL_ISH_HID
  	depends on ACPI
  	help
 -	  Intel Smart Connect is a technology intended to permit devices to
 -	  update state by resuming for a short period of time at regular
 -	  intervals. If a user enables this functionality under Windows and
 -	  then reboots into Linux, the system may remain configured to resume
 -	  on suspend. In the absence of any userspace to support it, the system
 -	  will then remain awake until something triggers another suspend.
 -
 -	  This driver checks to determine whether the device has Intel Smart
 -	  Connect enabled, and if so disables it.
 -
 -config INTEL_TURBO_MAX_3
 -	bool "Intel Turbo Boost Max Technology 3.0 enumeration driver"
 -	depends on X86_64 && SCHED_MC_PRIO
 -	help
 -	  This driver reads maximum performance ratio of each CPU and set up
 -	  the scheduler priority metrics. In this way scheduler can prefer
 -	  CPU with higher performance to schedule tasks.
 -
 -	  This driver is only required when the system is not using Hardware
 -	  P-States (HWP). In HWP mode, priority can be read from ACPI tables.
 -
 -config INTEL_UNCORE_FREQ_CONTROL
 -	tristate "Intel Uncore frequency control driver"
 -	depends on X86_64
 -	help
 -	  This driver allows control of Uncore frequency limits on
 -	  supported server platforms.
 -
 -	  Uncore frequency controls RING/LLC (last-level cache) clocks.
 +	  This driver is for accessing the PSE (Programmable Service Engine) -
 +	  an Embedded Controller like IP - using ISHTP (Integrated Sensor Hub
 +	  Transport Protocol) to get battery, thermal and UCSI (USB Type-C
 +	  Connector System Software Interface) related data from the platform.
 +	  Users who don't want to use discrete Embedded Controller on Intel's
 +	  Elkhartlake platform can leverage this integrated solution of
 +	  ECLite which is part of PSE subsystem.
  
  	  To compile this driver as a module, choose M here: the module
 -	  will be called intel-uncore-frequency.
 +	  will be called intel_ishtp_eclite.
  
  endif # X86_PLATFORM_DRIVERS_INTEL
diff --cc drivers/platform/x86/intel/Makefile
index 620d6c974a88,f5ac4a5f953f..000000000000
--- a/drivers/platform/x86/intel/Makefile
+++ b/drivers/platform/x86/intel/Makefile
@@@ -3,7 -3,31 +3,13 @@@
  # Makefile for drivers/platform/x86/intel
  # Intel x86 Platform-Specific Drivers
  #
 -
 -obj-$(CONFIG_INTEL_SAR_INT1092)		+= int1092/
 -obj-$(CONFIG_INTEL_CHT_INT33FE)		+= int33fe/
 -obj-$(CONFIG_INTEL_SKL_INT3472)		+= int3472/
  obj-$(CONFIG_INTEL_PMC_CORE)		+= pmc/
++<<<<<<< HEAD
++=======
+ obj-$(CONFIG_INTEL_PMT_CLASS)		+= pmt/
+ obj-$(CONFIG_INTEL_SPEED_SELECT_INTERFACE) += speed_select_if/
+ obj-$(CONFIG_INTEL_TELEMETRY)		+= telemetry/
++>>>>>>> 6b1e482898e8 (platform/x86: intel_speed_select_if: Move to intel sub-directory)
  
 -# Intel PMIC / PMC / P-Unit drivers
 -intel_bxtwc_tmu-y			:= bxtwc_tmu.o
 -obj-$(CONFIG_INTEL_BXTWC_PMIC_TMU)	+= intel_bxtwc_tmu.o
 -intel_chtdc_ti_pwrbtn-y			:= chtdc_ti_pwrbtn.o
 -obj-$(CONFIG_INTEL_CHTDC_TI_PWRBTN)	+= intel_chtdc_ti_pwrbtn.o
 -intel_mrfld_pwrbtn-y			:= mrfld_pwrbtn.o
 -obj-$(CONFIG_INTEL_MRFLD_PWRBTN)	+= intel_mrfld_pwrbtn.o
 -intel_punit_ipc-y			:= punit_ipc.o
 -obj-$(CONFIG_INTEL_PUNIT_IPC)		+= intel_punit_ipc.o
 -
 -# Intel Uncore drivers
 -intel-rst-y				:= rst.o
 -obj-$(CONFIG_INTEL_RST)			+= intel-rst.o
 -intel-smartconnect-y			:= smartconnect.o
 -obj-$(CONFIG_INTEL_SMARTCONNECT)	+= intel-smartconnect.o
 -intel_turbo_max_3-y			:= turbo_max_3.o
 -obj-$(CONFIG_INTEL_TURBO_MAX_3)		+= intel_turbo_max_3.o
 -intel-uncore-frequency-y		:= uncore-frequency.o
 -obj-$(CONFIG_INTEL_UNCORE_FREQ_CONTROL)	+= intel-uncore-frequency.o
 +# Intel miscellaneous drivers
 +obj-$(CONFIG_INTEL_ISHTP_ECLITE)	+= ishtp_eclite.o
* Unmerged path MAINTAINERS
* Unmerged path drivers/platform/x86/Kconfig
* Unmerged path drivers/platform/x86/Makefile
* Unmerged path drivers/platform/x86/intel/Kconfig
* Unmerged path drivers/platform/x86/intel/Makefile
diff --git a/drivers/platform/x86/intel_speed_select_if/Kconfig b/drivers/platform/x86/intel/speed_select_if/Kconfig
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/Kconfig
rename to drivers/platform/x86/intel/speed_select_if/Kconfig
diff --git a/drivers/platform/x86/intel_speed_select_if/Makefile b/drivers/platform/x86/intel/speed_select_if/Makefile
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/Makefile
rename to drivers/platform/x86/intel/speed_select_if/Makefile
diff --git a/drivers/platform/x86/intel_speed_select_if/isst_if_common.c b/drivers/platform/x86/intel/speed_select_if/isst_if_common.c
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/isst_if_common.c
rename to drivers/platform/x86/intel/speed_select_if/isst_if_common.c
diff --git a/drivers/platform/x86/intel_speed_select_if/isst_if_common.h b/drivers/platform/x86/intel/speed_select_if/isst_if_common.h
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/isst_if_common.h
rename to drivers/platform/x86/intel/speed_select_if/isst_if_common.h
diff --git a/drivers/platform/x86/intel_speed_select_if/isst_if_mbox_msr.c b/drivers/platform/x86/intel/speed_select_if/isst_if_mbox_msr.c
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/isst_if_mbox_msr.c
rename to drivers/platform/x86/intel/speed_select_if/isst_if_mbox_msr.c
diff --git a/drivers/platform/x86/intel_speed_select_if/isst_if_mbox_pci.c b/drivers/platform/x86/intel/speed_select_if/isst_if_mbox_pci.c
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/isst_if_mbox_pci.c
rename to drivers/platform/x86/intel/speed_select_if/isst_if_mbox_pci.c
diff --git a/drivers/platform/x86/intel_speed_select_if/isst_if_mmio.c b/drivers/platform/x86/intel/speed_select_if/isst_if_mmio.c
similarity index 100%
rename from drivers/platform/x86/intel_speed_select_if/isst_if_mmio.c
rename to drivers/platform/x86/intel/speed_select_if/isst_if_mmio.c
