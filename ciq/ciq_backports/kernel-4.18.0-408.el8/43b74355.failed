KVM: MMU: change __direct_map() arguments to kvm_page_fault

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Paolo Bonzini <pbonzini@redhat.com>
commit 43b74355ef8ba815b6065bf15d3661b2685337b8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/43b74355.failed

Pass struct kvm_page_fault to __direct_map() instead of
extracting the arguments from the struct.

	Suggested-by: Isaku Yamahata <isaku.yamahata@intel.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 43b74355ef8ba815b6065bf15d3661b2685337b8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/mmu.c
diff --cc arch/x86/kvm/mmu/mmu.c
index bc36e41e904d,c84e978d76b0..000000000000
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@@ -3964,11 -3988,10 +3959,15 @@@ static int direct_page_fault(struct kvm
  		goto out_unlock;
  
  	if (is_tdp_mmu_fault)
 -		r = kvm_tdp_mmu_map(vcpu, gpa, error_code, fault->map_writable, fault->max_level,
 -				    fault->pfn, fault->prefault);
 +		r = kvm_tdp_mmu_map(vcpu, gpa, error_code, map_writable, fault->max_level,
 +				    pfn, fault->prefault);
  	else
++<<<<<<< HEAD
 +		r = __direct_map(vcpu, gpa, error_code, map_writable, fault->max_level, pfn,
 +				 fault->prefault, fault->is_tdp);
++=======
+ 		r = __direct_map(vcpu, fault);
++>>>>>>> 43b74355ef8b (KVM: MMU: change __direct_map() arguments to kvm_page_fault)
  
  out_unlock:
  	if (is_tdp_mmu_fault)
* Unmerged path arch/x86/kvm/mmu/mmu.c
