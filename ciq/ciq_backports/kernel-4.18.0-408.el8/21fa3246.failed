KVM: x86/mmu: Extract zapping of rmaps for gfn range to separate helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 21fa324654e4c733aa6538001194eac13d8bec07
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/21fa3246.failed

Extract the zapping of rmaps, a.k.a. legacy MMU, for a gfn range to a
separate helper to clean up the unholy mess that kvm_zap_gfn_range() has
become.  In addition to deep nesting, the rmaps zapping spreads out the
declaration of several variables and is generally a mess.  Clean up the
mess now so that future work to improve the memslots implementation
doesn't need to deal with it.

	Cc: Maciej S. Szmigiero <maciej.szmigiero@oracle.com>
	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20211022010005.1454978-4-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 21fa324654e4c733aa6538001194eac13d8bec07)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/mmu/mmu.c
diff --cc arch/x86/kvm/mmu/mmu.c
index b28cdd8aabba,354d2ca92df4..000000000000
--- a/arch/x86/kvm/mmu/mmu.c
+++ b/arch/x86/kvm/mmu/mmu.c
@@@ -5689,28 -5744,14 +5717,30 @@@ static bool __kvm_zap_rmaps(struct kvm 
   */
  void kvm_zap_gfn_range(struct kvm *kvm, gfn_t gfn_start, gfn_t gfn_end)
  {
- 	struct kvm_memslots *slots;
- 	struct kvm_memory_slot *memslot;
+ 	bool flush;
  	int i;
- 	bool flush = false;
  
  	write_lock(&kvm->mmu_lock);
 +	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++) {
 +		slots = __kvm_memslots(kvm, i);
 +		kvm_for_each_memslot(memslot, slots) {
 +			gfn_t start, end;
  
 -	kvm_inc_notifier_count(kvm, gfn_start, gfn_end);
 +			start = max(gfn_start, memslot->base_gfn);
 +			end = min(gfn_end, memslot->base_gfn + memslot->npages);
 +			if (start >= end)
 +				continue;
  
++<<<<<<< HEAD
 +			flush = slot_handle_level_range(kvm, memslot, kvm_zap_rmapp,
 +							PG_LEVEL_4K,
 +							KVM_MAX_HUGEPAGE_LEVEL,
 +							start, end - 1, true, flush);
 +		}
 +	}
++=======
+ 	flush = __kvm_zap_rmaps(kvm, gfn_start, gfn_end);
++>>>>>>> 21fa324654e4 (KVM: x86/mmu: Extract zapping of rmaps for gfn range to separate helper)
  
  	if (is_tdp_mmu_enabled(kvm)) {
  		for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++)
* Unmerged path arch/x86/kvm/mmu/mmu.c
