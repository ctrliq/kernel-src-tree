scsi: core: Reallocate device's budget map on queue depth change

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit edb854a3680bacc9ef9b91ec0c5ff6105886f6f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/edb854a3.failed

We currently use ->cmd_per_lun as initial queue depth for setting up the
budget_map. Martin Wilck reported that it is common for the queue_depth to
be subsequently updated in slave_configure() based on detected hardware
characteristics.

As a result, for some drivers, the static host template settings for
cmd_per_lun and can_queue won't actually get used in practice. And if the
default values are used to allocate the budget_map, memory may be consumed
unnecessarily.

Fix the issue by reallocating the budget_map after ->slave_configure()
returns. At that time the device queue_depth should accurately reflect what
the hardware needs.

Link: https://lore.kernel.org/r/20220127153733.409132-1-ming.lei@redhat.com
	Cc: Bart Van Assche <bvanassche@acm.org>
	Reported-by: Martin Wilck <martin.wilck@suse.com>
	Suggested-by: Martin Wilck <martin.wilck@suse.com>
	Tested-by: Martin Wilck <mwilck@suse.com>
	Reviewed-by: Martin Wilck <mwilck@suse.com>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit edb854a3680bacc9ef9b91ec0c5ff6105886f6f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/scsi_scan.c
diff --cc drivers/scsi/scsi_scan.c
index ea61a7307034,f4e6c68ac99e..000000000000
--- a/drivers/scsi/scsi_scan.c
+++ b/drivers/scsi/scsi_scan.c
@@@ -297,11 -348,7 +339,15 @@@ static struct scsi_device *scsi_alloc_s
  	 * default device queue depth to figure out sbitmap shift
  	 * since we use this queue depth most of times.
  	 */
++<<<<<<< HEAD
 +	if (sbitmap_init_node(sdev->budget_map,
 +				scsi_device_max_queue_depth(sdev),
 +				sbitmap_calculate_shift(depth),
 +				GFP_KERNEL, sdev->request_queue->node,
 +				false, true)) {
++=======
+ 	if (scsi_realloc_sdev_budget_map(sdev, depth)) {
++>>>>>>> edb854a3680b (scsi: core: Reallocate device's budget map on queue depth change)
  		put_device(&starget->dev);
  		kfree(sdev);
  		goto out;
* Unmerged path drivers/scsi/scsi_scan.c
