clk: x86: Rename clk-lpt to more specific clk-lpss-atom

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Andy Shevchenko <andriy.shevchenko@linux.intel.com>
commit cf0a95659e659d36838e56cc439d3986dcb46870
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/cf0a9565.failed

The LPT stands for Lynxpoint PCH. However the driver is used on a few
Intel Atom SoCs. Rename it to reflect this in a way how another clock
driver, i.e. clk-pmc-atom, is called.

	Signed-off-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
Link: https://lore.kernel.org/r/20210722193450.35321-1-andriy.shevchenko@linux.intel.com
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Stephen Boyd <sboyd@kernel.org>
(cherry picked from commit cf0a95659e659d36838e56cc439d3986dcb46870)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/clk/x86/Makefile
diff --cc drivers/clk/x86/Makefile
index 00303bc05415,1244c4e568ff..000000000000
--- a/drivers/clk/x86/Makefile
+++ b/drivers/clk/x86/Makefile
@@@ -1,4 -1,6 +1,9 @@@
 -# SPDX-License-Identifier: GPL-2.0-only
  obj-$(CONFIG_PMC_ATOM)		+= clk-pmc-atom.o
++<<<<<<< HEAD
 +obj-$(CONFIG_X86_AMD_PLATFORM_DEVICE)	+= clk-st.o
 +clk-x86-lpss-objs		:= clk-lpt.o
++=======
+ obj-$(CONFIG_X86_AMD_PLATFORM_DEVICE)	+= clk-fch.o
+ clk-x86-lpss-y			:= clk-lpss-atom.o
++>>>>>>> cf0a95659e65 (clk: x86: Rename clk-lpt to more specific clk-lpss-atom)
  obj-$(CONFIG_X86_INTEL_LPSS)	+= clk-x86-lpss.o
 -obj-$(CONFIG_CLK_LGM_CGU)	+= clk-cgu.o clk-cgu-pll.o clk-lgm.o
diff --git a/drivers/acpi/acpi_lpss.c b/drivers/acpi/acpi_lpss.c
index 79b339dbd569..d2be134cfb47 100644
--- a/drivers/acpi/acpi_lpss.c
+++ b/drivers/acpi/acpi_lpss.c
@@ -388,7 +388,9 @@ static struct platform_device *lpss_clk_dev;
 
 static inline void lpt_register_clock_device(void)
 {
-	lpss_clk_dev = platform_device_register_simple("clk-lpt", -1, NULL, 0);
+	lpss_clk_dev = platform_device_register_simple("clk-lpss-atom",
+						       PLATFORM_DEVID_NONE,
+						       NULL, 0);
 }
 
 static int register_device_clock(struct acpi_device *adev,
@@ -1340,7 +1342,7 @@ void __init acpi_lpss_init(void)
 	const struct x86_cpu_id *id;
 	int ret;
 
-	ret = lpt_clk_init();
+	ret = lpss_atom_clk_init();
 	if (ret)
 		return;
 
* Unmerged path drivers/clk/x86/Makefile
diff --git a/drivers/clk/x86/clk-lpt.c b/drivers/clk/x86/clk-lpss-atom.c
similarity index 78%
rename from drivers/clk/x86/clk-lpt.c
rename to drivers/clk/x86/clk-lpss-atom.c
index 68bd3abaef2c..8e2c1fe1d470 100644
--- a/drivers/clk/x86/clk-lpt.c
+++ b/drivers/clk/x86/clk-lpss-atom.c
@@ -16,7 +16,7 @@
 #include <linux/platform_data/x86/clk-lpss.h>
 #include <linux/platform_device.h>
 
-static int lpt_clk_probe(struct platform_device *pdev)
+static int lpss_atom_clk_probe(struct platform_device *pdev)
 {
 	struct lpss_clk_data *drvdata;
 	struct clk *clk;
@@ -37,14 +37,14 @@ static int lpt_clk_probe(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver lpt_clk_driver = {
+static struct platform_driver lpss_atom_clk_driver = {
 	.driver = {
-		.name = "clk-lpt",
+		.name = "clk-lpss-atom",
 	},
-	.probe = lpt_clk_probe,
+	.probe = lpss_atom_clk_probe,
 };
 
-int __init lpt_clk_init(void)
+int __init lpss_atom_clk_init(void)
 {
-	return platform_driver_register(&lpt_clk_driver);
+	return platform_driver_register(&lpss_atom_clk_driver);
 }
diff --git a/include/linux/platform_data/x86/clk-lpss.h b/include/linux/platform_data/x86/clk-lpss.h
index 23901992b9dd..c0b02e6ce13c 100644
--- a/include/linux/platform_data/x86/clk-lpss.h
+++ b/include/linux/platform_data/x86/clk-lpss.h
@@ -18,6 +18,6 @@ struct lpss_clk_data {
 	struct clk *clk;
 };
 
-extern int lpt_clk_init(void);
+extern int lpss_atom_clk_init(void);
 
 #endif /* __CLK_LPSS_H */
