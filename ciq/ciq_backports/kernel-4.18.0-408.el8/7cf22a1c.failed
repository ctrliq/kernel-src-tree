selftests/vm: fix building protection keys test

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Harish <harish@linux.ibm.com>
commit 7cf22a1c88c05ea3807f95b1edfebb729016ae52
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/7cf22a1c.failed

Commit d8cbe8bfa7d ("tools/testing/selftests/vm: fix build error") tried
to include a ARCH check for powerpc, however ARCH is not defined in the
Makefile before including lib.mk.  This makes test building to skip on
both x86 and powerpc.

Fix the arch check by replacing it using machine type as it is already
defined and used in the test.

Link: https://lkml.kernel.org/r/20201215100402.257376-1-harish@linux.ibm.com
Fixes: d8cbe8bfa7d ("tools/testing/selftests/vm: fix build error")
	Signed-off-by: Harish <harish@linux.ibm.com>
	Reviewed-by: Sandipan Das <sandipan@linux.ibm.com>
	Cc: Shuah Khan <shuah@kernel.org>
	Cc: Sandipan Das <sandipan@linux.ibm.com>
	Cc: John Hubbard <jhubbard@nvidia.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 7cf22a1c88c05ea3807f95b1edfebb729016ae52)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/vm/Makefile
diff --cc tools/testing/selftests/vm/Makefile
index af96f445fd87,d42115e4284d..000000000000
--- a/tools/testing/selftests/vm/Makefile
+++ b/tools/testing/selftests/vm/Makefile
@@@ -1,6 -1,11 +1,14 @@@
  # SPDX-License-Identifier: GPL-2.0
  # Makefile for vm selftests
  
++<<<<<<< HEAD
++=======
+ include local_config.mk
+ 
+ uname_M := $(shell uname -m 2>/dev/null || echo not)
+ MACHINE ?= $(shell echo $(uname_M) | sed -e 's/aarch64.*/arm64/' -e 's/ppc64.*/ppc64/')
+ 
++>>>>>>> 7cf22a1c88c0 (selftests/vm: fix building protection keys test)
  # Without this, failed build products remain, with up-to-date timestamps,
  # thus tricking Make (and you!) into believing that All Is Well, in subsequent
  # make invocations:
@@@ -33,7 -42,36 +41,40 @@@ TEST_GEN_FILES += on-fault-limi
  TEST_GEN_FILES += thuge-gen
  TEST_GEN_FILES += transhuge-stress
  TEST_GEN_FILES += userfaultfd
++<<<<<<< HEAD
 +TEST_GEN_FILES += khugepaged
++=======
+ 
+ ifeq ($(MACHINE),x86_64)
+ CAN_BUILD_I386 := $(shell ./../x86/check_cc.sh $(CC) ../x86/trivial_32bit_program.c -m32)
+ CAN_BUILD_X86_64 := $(shell ./../x86/check_cc.sh $(CC) ../x86/trivial_64bit_program.c)
+ CAN_BUILD_WITH_NOPIE := $(shell ./../x86/check_cc.sh $(CC) ../x86/trivial_program.c -no-pie)
+ 
+ TARGETS := protection_keys
+ BINARIES_32 := $(TARGETS:%=%_32)
+ BINARIES_64 := $(TARGETS:%=%_64)
+ 
+ ifeq ($(CAN_BUILD_WITH_NOPIE),1)
+ CFLAGS += -no-pie
+ endif
+ 
+ ifeq ($(CAN_BUILD_I386),1)
+ TEST_GEN_FILES += $(BINARIES_32)
+ endif
+ 
+ ifeq ($(CAN_BUILD_X86_64),1)
+ TEST_GEN_FILES += $(BINARIES_64)
+ endif
+ else
+ 
+ ifneq (,$(findstring $(MACHINE),ppc64))
+ TEST_GEN_FILES += protection_keys
+ endif
+ 
+ endif
+ 
+ ifneq (,$(filter $(MACHINE),arm64 ia64 mips64 parisc64 ppc64 riscv64 s390x sh64 sparc64 x86_64))
++>>>>>>> 7cf22a1c88c0 (selftests/vm: fix building protection keys test)
  TEST_GEN_FILES += va_128TBswitch
  TEST_GEN_FILES += virtual_address_range
  TEST_GEN_FILES += write_to_hugetlbfs
@@@ -45,6 -84,74 +86,57 @@@ TEST_FILES := test_vmalloc.s
  KSFT_KHDR_INSTALL := 1
  include ../lib.mk
  
++<<<<<<< HEAD
 +$(OUTPUT)/userfaultfd: LDLIBS += -lpthread
++=======
+ ifeq ($(MACHINE),x86_64)
+ BINARIES_32 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_32))
+ BINARIES_64 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_64))
+ 
+ define gen-target-rule-32
+ $(1) $(1)_32: $(OUTPUT)/$(1)_32
+ .PHONY: $(1) $(1)_32
+ endef
+ 
+ define gen-target-rule-64
+ $(1) $(1)_64: $(OUTPUT)/$(1)_64
+ .PHONY: $(1) $(1)_64
+ endef
+ 
+ ifeq ($(CAN_BUILD_I386),1)
+ $(BINARIES_32): CFLAGS += -m32
+ $(BINARIES_32): LDLIBS += -lrt -ldl -lm
+ $(BINARIES_32): %_32: %.c
+ 	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(notdir $^) $(LDLIBS) -o $@
+ $(foreach t,$(TARGETS),$(eval $(call gen-target-rule-32,$(t))))
+ endif
+ 
+ ifeq ($(CAN_BUILD_X86_64),1)
+ $(BINARIES_64): CFLAGS += -m64
+ $(BINARIES_64): LDLIBS += -lrt -ldl
+ $(BINARIES_64): %_64: %.c
+ 	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(notdir $^) $(LDLIBS) -o $@
+ $(foreach t,$(TARGETS),$(eval $(call gen-target-rule-64,$(t))))
+ endif
+ 
+ # x86_64 users should be encouraged to install 32-bit libraries
+ ifeq ($(CAN_BUILD_I386)$(CAN_BUILD_X86_64),01)
+ all: warn_32bit_failure
+ 
+ warn_32bit_failure:
+ 	@echo "Warning: you seem to have a broken 32-bit build" 2>&1;		\
+ 	echo  "environment. This will reduce test coverage of 64-bit" 2>&1;	\
+ 	echo  "kernels. If you are using a Debian-like distribution," 2>&1;	\
+ 	echo  "try:"; 2>&1;							\
+ 	echo  "";								\
+ 	echo  "  apt-get install gcc-multilib libc6-i386 libc6-dev-i386";	\
+ 	echo  "";								\
+ 	echo  "If you are using a Fedora-like distribution, try:";		\
+ 	echo  "";								\
+ 	echo  "  yum install glibc-devel.*i686";				\
+ 	exit 0;
+ endif
+ endif
++>>>>>>> 7cf22a1c88c0 (selftests/vm: fix building protection keys test)
  
  $(OUTPUT)/mlock-random-test: LDLIBS += -lcap
 -
 -$(OUTPUT)/gup_test: ../../../../mm/gup_test.h
 -
 -$(OUTPUT)/hmm-tests: local_config.h
 -
 -# HMM_EXTRA_LIBS may get set in local_config.mk, or it may be left empty.
 -$(OUTPUT)/hmm-tests: LDLIBS += $(HMM_EXTRA_LIBS)
 -
 -local_config.mk local_config.h: check_config.sh
 -	/bin/sh ./check_config.sh $(CC)
 -
 -EXTRA_CLEAN += local_config.mk local_config.h
 -
 -ifeq ($(HMM_EXTRA_LIBS),)
 -all: warn_missing_hugelibs
 -
 -warn_missing_hugelibs:
 -	@echo ; \
 -	echo "Warning: missing libhugetlbfs support. Some HMM tests will be skipped." ; \
 -	echo
 -endif
* Unmerged path tools/testing/selftests/vm/Makefile
