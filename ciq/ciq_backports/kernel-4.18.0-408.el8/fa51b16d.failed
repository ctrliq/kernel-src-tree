dmaengine: idxd: fix calling wq quiesce inside spinlock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Dave Jiang <dave.jiang@intel.com>
commit fa51b16d05583c7aebbc06330afb50276243d198
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/fa51b16d.failed

Dan reports that smatch has found idxd_wq_quiesce() is being called inside
the idxd->dev_lock. idxd_wq_quiesce() calls wait_for_completion() and
therefore it can sleep. Move the call outside of the spinlock as it does
not need device lock.

Fixes: 5b0c68c473a1 ("dmaengine: idxd: support reporting of halt interrupt")
	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
Link: https://lore.kernel.org/r/163716858508.1721911.15051495873516709923.stgit@djiang5-desk3.ch.intel.com
	Signed-off-by: Vinod Koul <vkoul@kernel.org>
(cherry picked from commit fa51b16d05583c7aebbc06330afb50276243d198)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/idxd/irq.c
diff --cc drivers/dma/idxd/irq.c
index 7a2cf0512501,cf2c8bc4f147..000000000000
--- a/drivers/dma/idxd/irq.c
+++ b/drivers/dma/idxd/irq.c
@@@ -189,9 -137,10 +189,14 @@@ static int process_misc_interrupts(stru
  			INIT_WORK(&idxd->work, idxd_device_reinit);
  			queue_work(idxd->wq, &idxd->work);
  		} else {
++<<<<<<< HEAD
 +			spin_lock_bh(&idxd->dev_lock);
++=======
+ 			idxd->state = IDXD_DEV_HALTED;
++>>>>>>> fa51b16d0558 (dmaengine: idxd: fix calling wq quiesce inside spinlock)
  			idxd_wqs_quiesce(idxd);
  			idxd_wqs_unmap_portal(idxd);
+ 			spin_lock(&idxd->dev_lock);
  			idxd_device_clear_state(idxd);
  			dev_err(&idxd->pdev->dev,
  				"idxd halted, need %s.\n",
* Unmerged path drivers/dma/idxd/irq.c
