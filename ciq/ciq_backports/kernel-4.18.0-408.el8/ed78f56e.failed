powerpc/papr_scm: Make 'perf_stats' invisible if perf-stats unavailable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Vaibhav Jain <vaibhav@linux.ibm.com>
commit ed78f56e1271f108e8af61baeba383dcd77adbec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/ed78f56e.failed

In case performance stats for an nvdimm are not available, reading the
'perf_stats' sysfs file returns an -ENOENT error. A better approach is
to make the 'perf_stats' file entirely invisible to indicate that
performance stats for an nvdimm are unavailable.

So this patch updates 'papr_nd_attribute_group' to add a 'is_visible'
callback implemented as newly introduced 'papr_nd_attribute_visible()'
that returns an appropriate mode in case performance stats aren't
supported in a given nvdimm.

Also the initialization of 'papr_scm_priv.stat_buffer_len' is moved
from papr_scm_nvdimm_init() to papr_scm_probe() so that it value is
available when 'papr_nd_attribute_visible()' is called during nvdimm
initialization.

Even though 'perf_stats' attribute is available since v5.9, there are
no known user-space tools/scripts that are dependent on presence of its
sysfs file. Hence I dont expect any user-space breakage with this
patch.

Fixes: 2d02bf835e57 ("powerpc/papr_scm: Fetch nvdimm performance stats from PHYP")
	Signed-off-by: Vaibhav Jain <vaibhav@linux.ibm.com>
	Reviewed-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/20210513092349.285021-1-vaibhav@linux.ibm.com

(cherry picked from commit ed78f56e1271f108e8af61baeba383dcd77adbec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/platforms/pseries/papr_scm.c
diff --cc arch/powerpc/platforms/pseries/papr_scm.c
index c9b804d4932d,daa11600d34b..000000000000
--- a/arch/powerpc/platforms/pseries/papr_scm.c
+++ b/arch/powerpc/platforms/pseries/papr_scm.c
@@@ -1055,15 -1027,9 +1069,21 @@@ static int papr_scm_nvdimm_init(struct 
  		dev_info(dev, "Region registered with target node %d and online node %d",
  			 target_nid, online_nid);
  
++<<<<<<< HEAD
 +	/* Try retriving the stat buffer and see if its supported */
 +	stat_size = drc_pmem_query_stats(p, NULL, 0);
 +	if (stat_size > 0) {
 +		p->stat_buffer_len = stat_size;
 +		dev_dbg(&p->pdev->dev, "Max perf-stat size %lu-bytes\n",
 +			p->stat_buffer_len);
 +	} else {
 +		dev_info(&p->pdev->dev, "Dimm performance stats unavailable\n");
 +	}
++=======
+ 	mutex_lock(&papr_ndr_lock);
+ 	list_add_tail(&p->region_list, &papr_nd_regions);
+ 	mutex_unlock(&papr_ndr_lock);
++>>>>>>> ed78f56e1271 (powerpc/papr_scm: Make 'perf_stats' invisible if perf-stats unavailable)
  
  	return 0;
  
@@@ -1078,8 -1106,10 +1098,13 @@@ static int papr_scm_probe(struct platfo
  	u32 drc_index, metadata_size;
  	u64 blocks, block_size;
  	struct papr_scm_priv *p;
 -	u8 uuid_raw[UUID_SIZE];
  	const char *uuid_str;
++<<<<<<< HEAD
 +	u64 uuid[2];
++=======
+ 	ssize_t stat_size;
+ 	uuid_t uuid;
++>>>>>>> ed78f56e1271 (powerpc/papr_scm: Make 'perf_stats' invisible if perf-stats unavailable)
  	int rc;
  
  	/* check we have all the required DT properties */
diff --git a/Documentation/ABI/testing/sysfs-bus-papr-pmem b/Documentation/ABI/testing/sysfs-bus-papr-pmem
index 717f78479824..900377f1d299 100644
--- a/Documentation/ABI/testing/sysfs-bus-papr-pmem
+++ b/Documentation/ABI/testing/sysfs-bus-papr-pmem
@@ -32,9 +32,11 @@ KernelVersion:	v5.9
 Contact:	linuxppc-dev <linuxppc-dev@lists.ozlabs.org>, linux-nvdimm@lists.01.org,
 Description:
 		(RO) Report various performance stats related to papr-scm NVDIMM
-		device.  Each stat is reported on a new line with each line
-		composed of a stat-identifier followed by it value. Below are
-		currently known dimm performance stats which are reported:
+		device. This attribute is only available for NVDIMM devices
+		that support reporting NVDIMM performance stats. Each stat is
+		reported on a new line with each line composed of a
+		stat-identifier followed by it value. Below are currently known
+		dimm performance stats which are reported:
 
 		* "CtlResCt" : Controller Reset Count
 		* "CtlResTm" : Controller Reset Elapsed Time
* Unmerged path arch/powerpc/platforms/pseries/papr_scm.c
