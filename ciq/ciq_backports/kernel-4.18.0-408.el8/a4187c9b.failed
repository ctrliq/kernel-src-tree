KVM: selftests: Split out helper to allocate guest mem via memfd

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit a4187c9bd16341b17d54cb3f87b8164945fa81ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/a4187c9b.failed

Extract the code for allocating guest memory via memfd out of
vm_userspace_mem_region_add() and into a new helper, kvm_memfd_alloc().
A future selftest to populate a guest with the maximum amount of guest
memory will abuse KVM's memslots to alias guest memory regions to a
single memfd-backed host region, i.e. needs to back a guest with memfd
memory without a 1:1 association between a memslot and a memfd instance.

No functional change intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20220226001546.360188-27-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit a4187c9bd16341b17d54cb3f87b8164945fa81ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kvm/lib/kvm_util.c
diff --cc tools/testing/selftests/kvm/lib/kvm_util.c
index 45da81b45746,1665a220abcb..000000000000
--- a/tools/testing/selftests/kvm/lib/kvm_util.c
+++ b/tools/testing/selftests/kvm/lib/kvm_util.c
@@@ -955,19 -991,9 +976,25 @@@ void vm_userspace_mem_region_add(struc
  		region->mmap_size += alignment;
  
  	region->fd = -1;
++<<<<<<< HEAD
 +	if (src_type == VM_MEM_SRC_SHMEM) {
 +		region->fd = memfd_create("kvm_selftest", MFD_CLOEXEC);
 +		TEST_ASSERT(region->fd != -1,
 +			    "memfd_create failed, errno: %i", errno);
 +
 +		ret = ftruncate(region->fd, region->mmap_size);
 +		TEST_ASSERT(ret == 0, "ftruncate failed, errno: %i", errno);
 +
 +		ret = fallocate(region->fd,
 +				FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE, 0,
 +				region->mmap_size);
 +		TEST_ASSERT(ret == 0, "fallocate failed, errno: %i", errno);
 +	}
++=======
+ 	if (backing_src_is_shared(src_type))
+ 		region->fd = kvm_memfd_alloc(region->mmap_size,
+ 					     src_type == VM_MEM_SRC_SHARED_HUGETLB);
++>>>>>>> a4187c9bd163 (KVM: selftests: Split out helper to allocate guest mem via memfd)
  
  	region->mmap_start = mmap(NULL, region->mmap_size,
  				  PROT_READ | PROT_WRITE,
diff --git a/tools/testing/selftests/kvm/include/kvm_util_base.h b/tools/testing/selftests/kvm/include/kvm_util_base.h
index fc0d5e6969e8..3526734151cb 100644
--- a/tools/testing/selftests/kvm/include/kvm_util_base.h
+++ b/tools/testing/selftests/kvm/include/kvm_util_base.h
@@ -115,6 +115,7 @@ int kvm_memcmp_hva_gva(void *hva, struct kvm_vm *vm, const vm_vaddr_t gva,
 		       size_t len);
 
 void kvm_vm_elf_load(struct kvm_vm *vm, const char *filename);
+int kvm_memfd_alloc(size_t size, bool hugepages);
 
 void vm_dump(FILE *stream, struct kvm_vm *vm, uint8_t indent);
 
* Unmerged path tools/testing/selftests/kvm/lib/kvm_util.c
