s390/uaccess: fix compile error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Heiko Carstens <hca@linux.ibm.com>
commit 3d787b392d169d4a2e3aee6ac6dfd6ec39722cf2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/3d787b39.failed

Compiling with e.g MARCH=z900 results in compile errors:

   arch/s390/lib/uaccess.c: In function 'copy_from_user_mvcos':
>> arch/s390/lib/uaccess.c:65:15: error: variable 'spec' has initializer but incomplete type
      65 |         union oac spec = {

Therefore make definition of union oac visible for all MARCHs.

	Reported-by: kernel test robot <lkp@intel.com>
	Cc: Nico Boehr <nrb@linux.ibm.com>
	Cc: Janis Schoetterl-Glausch <scgl@linux.ibm.com>
Fixes: 012a224e1fa3 ("s390/uaccess: introduce bit field for OAC specifier")
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit 3d787b392d169d4a2e3aee6ac6dfd6ec39722cf2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/include/asm/uaccess.h
diff --cc arch/s390/include/asm/uaccess.h
index 21ece00e3129,d74e26b48604..000000000000
--- a/arch/s390/include/asm/uaccess.h
+++ b/arch/s390/include/asm/uaccess.h
@@@ -61,32 -44,68 +61,81 @@@ raw_copy_to_user(void __user *to, cons
  #define INLINE_COPY_TO_USER
  #endif
  
++<<<<<<< HEAD
 +#ifdef CONFIG_HAVE_MARCH_Z10_FEATURES
 +
 +#define __put_get_user_asm(to, from, size, spec)		\
 +({								\
 +	register unsigned long __reg0 asm("0") = spec;		\
 +	int __rc;						\
 +								\
 +	asm volatile(						\
 +		"0:	mvcos	%1,%3,%2\n"			\
 +		"1:	xr	%0,%0\n"			\
 +		"2:\n"						\
 +		".pushsection .fixup, \"ax\"\n"			\
 +		"3:	lhi	%0,%5\n"			\
 +		"	jg	2b\n"				\
 +		".popsection\n"					\
 +		EX_TABLE(0b,3b) EX_TABLE(1b,3b)			\
 +		: "=d" (__rc), "+Q" (*(to))			\
 +		: "d" (size), "Q" (*(from)),			\
 +		  "d" (__reg0), "K" (-EFAULT)			\
 +		: "cc");					\
 +	__rc;							\
++=======
+ int __put_user_bad(void) __attribute__((noreturn));
+ int __get_user_bad(void) __attribute__((noreturn));
+ 
+ union oac {
+ 	unsigned int val;
+ 	struct {
+ 		struct {
+ 			unsigned short key : 4;
+ 			unsigned short	   : 4;
+ 			unsigned short as  : 2;
+ 			unsigned short	   : 4;
+ 			unsigned short k   : 1;
+ 			unsigned short a   : 1;
+ 		} oac1;
+ 		struct {
+ 			unsigned short key : 4;
+ 			unsigned short	   : 4;
+ 			unsigned short as  : 2;
+ 			unsigned short	   : 4;
+ 			unsigned short k   : 1;
+ 			unsigned short a   : 1;
+ 		} oac2;
+ 	};
+ };
+ 
+ #ifdef CONFIG_HAVE_MARCH_Z10_FEATURES
+ 
+ #define __put_get_user_asm(to, from, size, oac_spec)			\
+ ({									\
+ 	int __rc;							\
+ 									\
+ 	asm volatile(							\
+ 		"	lr	0,%[spec]\n"				\
+ 		"0:	mvcos	%[_to],%[_from],%[_size]\n"		\
+ 		"1:	xr	%[rc],%[rc]\n"				\
+ 		"2:\n"							\
+ 		".pushsection .fixup, \"ax\"\n"				\
+ 		"3:	lhi	%[rc],%[retval]\n"			\
+ 		"	jg	2b\n"					\
+ 		".popsection\n"						\
+ 		EX_TABLE(0b,3b) EX_TABLE(1b,3b)				\
+ 		: [rc] "=&d" (__rc), [_to] "+Q" (*(to))			\
+ 		: [_size] "d" (size), [_from] "Q" (*(from)),		\
+ 		  [retval] "K" (-EFAULT), [spec] "d" (oac_spec.val)	\
+ 		: "cc", "0");						\
+ 	__rc;								\
++>>>>>>> 3d787b392d16 (s390/uaccess: fix compile error)
  })
  
 -#define __put_user_asm(to, from, size)				\
 -	__put_get_user_asm(to, from, size, ((union oac) {	\
 -		.oac1.as = PSW_BITS_AS_SECONDARY,		\
 -		.oac1.a = 1					\
 -	}))
 -
 -#define __get_user_asm(to, from, size)				\
 -	__put_get_user_asm(to, from, size, ((union oac) {	\
 -		.oac2.as = PSW_BITS_AS_SECONDARY,		\
 -		.oac2.a = 1					\
 -	}))							\
 -
 -static __always_inline int __put_user_fn(void *x, void __user *ptr, unsigned long size)
 +static inline int __put_user_fn(void *x, void __user *ptr, unsigned long size)
  {
 +	unsigned long spec = 0x010000UL;
  	int rc;
  
  	switch (size) {
* Unmerged path arch/s390/include/asm/uaccess.h
