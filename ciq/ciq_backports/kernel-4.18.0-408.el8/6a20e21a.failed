scsi: core: Add helper to return number of logical blocks in a request

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Martin K. Petersen <martin.petersen@oracle.com>
commit 6a20e21ae1e25f73385cc248f53440e78dd3cb94
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6a20e21a.failed

Link: https://lore.kernel.org/r/20210806040023.5355-2-martin.petersen@oracle.com
	Cc: Bart Van Assche <bvanassche@acm.org>
	Reviewed-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 6a20e21ae1e25f73385cc248f53440e78dd3cb94)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi_cmnd.h
diff --cc include/scsi/scsi_cmnd.h
index 7ef7e5064741,6c5a1c1c6b1e..000000000000
--- a/include/scsi/scsi_cmnd.h
+++ b/include/scsi/scsi_cmnd.h
@@@ -249,6 -225,25 +249,28 @@@ static inline int scsi_sg_copy_to_buffe
  				 buf, buflen);
  }
  
++<<<<<<< HEAD
++=======
+ static inline sector_t scsi_get_sector(struct scsi_cmnd *scmd)
+ {
+ 	return blk_rq_pos(scsi_cmd_to_rq(scmd));
+ }
+ 
+ static inline sector_t scsi_get_lba(struct scsi_cmnd *scmd)
+ {
+ 	unsigned int shift = ilog2(scmd->device->sector_size) - SECTOR_SHIFT;
+ 
+ 	return blk_rq_pos(scsi_cmd_to_rq(scmd)) >> shift;
+ }
+ 
+ static inline unsigned int scsi_logical_block_count(struct scsi_cmnd *scmd)
+ {
+ 	unsigned int shift = ilog2(scmd->device->sector_size) - SECTOR_SHIFT;
+ 
+ 	return blk_rq_bytes(scsi_cmd_to_rq(scmd)) >> shift;
+ }
+ 
++>>>>>>> 6a20e21ae1e2 (scsi: core: Add helper to return number of logical blocks in a request)
  /*
   * The operations below are hints that tell the controller driver how
   * to handle I/Os with DIF or similar types of protection information.
* Unmerged path include/scsi/scsi_cmnd.h
