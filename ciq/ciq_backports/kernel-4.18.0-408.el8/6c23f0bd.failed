dm: add a clone_to_tio helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Christoph Hellwig <hch@lst.de>
commit 6c23f0bd7f16d88c774db37b30c5da82811c41be
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6c23f0bd.failed

Add a helper to stop open coding the container_of operations to get
from the clone bio to the tio structure.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Mike Snitzer <snitzer@redhat.com>
Link: https://lore.kernel.org/r/20220202160109.108149-3-hch@lst.de
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 6c23f0bd7f16d88c774db37b30c5da82811c41be)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm.c
diff --cc drivers/md/dm.c
index d626b645f571,5543e18f3c3b..000000000000
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@@ -601,11 -520,9 +602,11 @@@ static struct dm_io *alloc_io(struct ma
  	struct dm_target_io *tio;
  	struct bio *clone;
  
 -	clone = bio_alloc_bioset(NULL, 0, 0, GFP_NOIO, &md->io_bs);
 +	clone = bio_alloc_bioset(GFP_NOIO, 0, &md->io_bs);
 +	if (!clone)
 +		return NULL;
  
- 	tio = container_of(clone, struct dm_target_io, clone);
+ 	tio = clone_to_tio(clone);
  	tio->inside_dm_io = true;
  	tio->io = NULL;
  
@@@ -1242,11 -1085,15 +1243,11 @@@ static int dm_dax_zero_page_range(struc
   */
  void dm_accept_partial_bio(struct bio *bio, unsigned n_sectors)
  {
- 	struct dm_target_io *tio = container_of(bio, struct dm_target_io, clone);
+ 	struct dm_target_io *tio = clone_to_tio(bio);
  	unsigned bi_size = bio->bi_iter.bi_size >> SECTOR_SHIFT;
 -
  	BUG_ON(bio->bi_opf & REQ_PREFLUSH);
 -	BUG_ON(op_is_zone_mgmt(bio_op(bio)));
 -	BUG_ON(bio_op(bio) == REQ_OP_ZONE_APPEND);
  	BUG_ON(bi_size > *tio->len_ptr);
  	BUG_ON(n_sectors > bi_size);
 -
  	*tio->len_ptr -= bi_size - n_sectors;
  	bio->bi_iter.bi_size = n_sectors << SECTOR_SHIFT;
  }
@@@ -1432,11 -1284,8 +1431,15 @@@ static void __send_duplicate_bios(struc
  
  	alloc_multiple_bios(&blist, ci, ti, num_bios);
  
++<<<<<<< HEAD
 +	while ((bio = bio_list_pop(&blist))) {
 +		tio = container_of(bio, struct dm_target_io, clone);
 +		(void) __clone_and_map_simple_bio(ci, tio, len);
 +	}
++=======
+ 	while ((bio = bio_list_pop(&blist)))
+ 		__clone_and_map_simple_bio(ci, clone_to_tio(bio), len);
++>>>>>>> 6c23f0bd7f16 (dm: add a clone_to_tio helper)
  }
  
  static int __send_empty_flush(struct clone_info *ci)
* Unmerged path drivers/md/dm.c
