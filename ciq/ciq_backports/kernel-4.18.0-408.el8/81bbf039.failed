s390/pci: expose a PCI device's UID as its index

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit 81bbf03905aae47a80fd05604cc9b0d1ca20e30a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/81bbf039.failed

On s390 each PCI device has a user-defined ID (UID) exposed under
/sys/bus/pci/devices/<dev>/uid. This ID was designed to serve as the PCI
device's primary index and to match the device within Linux to the
device configured in the hypervisor. To serve as a primary identifier
the UID must be unique within the Linux instance, this is guaranteed by
the platform if and only if the UID Uniqueness Checking flag is set
within the CLP List PCI Functions response.

In this sense the UID serves an analogous function as the SMBIOS
instance number or ACPI index exposed as the "index" respectively
"acpi_index" device attributes and used by e.g. systemd to set interface
names. As s390 does not use and will likely never use ACPI nor SMBIOS
there is no conflict and we can just expose the UID under the "index"
attribute whenever UID Uniqueness Checking is active and get systemd's
interface naming support for free.

Link: https://lore.kernel.org/lkml/20210412135905.1434249-1-schnelle@linux.ibm.com/
	Acked-by: Viktor Mihajlovski <mihajlov@linux.ibm.com>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>
	Acked-by: Narendra K <narendra_k@dell.com>
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit 81bbf03905aae47a80fd05604cc9b0d1ca20e30a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/pci/pci_sysfs.c
diff --cc arch/s390/pci/pci_sysfs.c
index 5c028bee91b9,6e2450c2b9c1..000000000000
--- a/arch/s390/pci/pci_sysfs.c
+++ b/arch/s390/pci/pci_sysfs.c
@@@ -131,6 -131,45 +131,48 @@@ static ssize_t report_error_write(struc
  }
  static BIN_ATTR(report_error, S_IWUSR, NULL, report_error_write, PAGE_SIZE);
  
++<<<<<<< HEAD
++=======
+ static ssize_t uid_is_unique_show(struct device *dev,
+ 				  struct device_attribute *attr, char *buf)
+ {
+ 	return sysfs_emit(buf, "%d\n", zpci_unique_uid ? 1 : 0);
+ }
+ static DEVICE_ATTR_RO(uid_is_unique);
+ 
+ #ifndef CONFIG_DMI
+ /* analogous to smbios index */
+ static ssize_t index_show(struct device *dev,
+ 			  struct device_attribute *attr, char *buf)
+ {
+ 	struct zpci_dev *zdev = to_zpci(to_pci_dev(dev));
+ 	u32 index = ~0;
+ 
+ 	if (zpci_unique_uid)
+ 		index = zdev->uid;
+ 
+ 	return sysfs_emit(buf, "%u\n", index);
+ }
+ static DEVICE_ATTR_RO(index);
+ 
+ static umode_t zpci_index_is_visible(struct kobject *kobj,
+ 				     struct attribute *attr, int n)
+ {
+ 	return zpci_unique_uid ? attr->mode : 0;
+ }
+ 
+ static struct attribute *zpci_ident_attrs[] = {
+ 	&dev_attr_index.attr,
+ 	NULL,
+ };
+ 
+ static struct attribute_group zpci_ident_attr_group = {
+ 	.attrs = zpci_ident_attrs,
+ 	.is_visible = zpci_index_is_visible,
+ };
+ #endif
+ 
++>>>>>>> 81bbf03905aa (s390/pci: expose a PCI device's UID as its index)
  static struct bin_attribute *zpci_bin_attrs[] = {
  	&bin_attr_util_string,
  	&bin_attr_report_error,
diff --git a/Documentation/ABI/testing/sysfs-bus-pci b/Documentation/ABI/testing/sysfs-bus-pci
index 9ba92f1a2e48..bcf7f8745214 100644
--- a/Documentation/ABI/testing/sysfs-bus-pci
+++ b/Documentation/ABI/testing/sysfs-bus-pci
@@ -189,10 +189,13 @@ What:		/sys/bus/pci/devices/.../index
 Date:		July 2010
 Contact:	Narendra K <narendra_k@dell.com>, linux-bugs@dell.com
 Description:
-		Reading this attribute will provide the firmware
-		given instance (SMBIOS type 41 device type instance) of the
-		PCI device. The attribute will be created only if the firmware
-		has given an instance number to the PCI device.
+		Reading this attribute will provide the firmware given instance
+		number of the PCI device.  Depending on the platform this can
+		be for example the SMBIOS type 41 device type instance or the
+		user-defined ID (UID) on s390. The attribute will be created
+		only if the firmware has given an instance number to the PCI
+		device and that number is guaranteed to uniquely identify the
+		device in the system.
 Users:
 		Userspace applications interested in knowing the
 		firmware assigned device type instance of the PCI
* Unmerged path arch/s390/pci/pci_sysfs.c
