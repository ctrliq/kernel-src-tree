netdevsim: rename 'driver' entry points

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jakub Kicinski <kuba@kernel.org>
commit a66f64b808150b5923dfad117d84ced3da2e6dfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/a66f64b8.failed

Rename functions serving as driver entry points
from nsim_dev_... to nsim_drv_... this makes the
API boundary between bus and dev clearer.

	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit a66f64b808150b5923dfad117d84ced3da2e6dfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/netdevsim/bus.c
#	drivers/net/netdevsim/dev.c
diff --cc drivers/net/netdevsim/bus.c
index bc0396d4e72f,25cb2e600d53..000000000000
--- a/drivers/net/netdevsim/bus.c
+++ b/drivers/net/netdevsim/bus.c
@@@ -379,15 -250,14 +379,19 @@@ static int nsim_bus_probe(struct devic
  {
  	struct nsim_bus_dev *nsim_bus_dev = to_nsim_bus_dev(dev);
  
- 	return nsim_dev_probe(nsim_bus_dev);
+ 	return nsim_drv_probe(nsim_bus_dev);
  }
  
 -static void nsim_bus_remove(struct device *dev)
 +static int nsim_bus_remove(struct device *dev)
  {
  	struct nsim_bus_dev *nsim_bus_dev = to_nsim_bus_dev(dev);
  
++<<<<<<< HEAD
 +	nsim_dev_remove(nsim_bus_dev);
 +	return 0;
++=======
+ 	nsim_drv_remove(nsim_bus_dev);
++>>>>>>> a66f64b80815 (netdevsim: rename 'driver' entry points)
  }
  
  static int nsim_num_vf(struct device *dev)
diff --cc drivers/net/netdevsim/dev.c
index 79ed736717c1,5db40d713d2a..000000000000
--- a/drivers/net/netdevsim/dev.c
+++ b/drivers/net/netdevsim/dev.c
@@@ -502,8 -591,8 +502,13 @@@ int nsim_esw_switchdev_enable(struct ns
  	struct nsim_bus_dev *nsim_bus_dev = nsim_dev->nsim_bus_dev;
  	int i, err;
  
++<<<<<<< HEAD
 +	for (i = 0; i < nsim_bus_dev->num_vfs; i++) {
 +		err = nsim_dev_port_add(nsim_bus_dev, NSIM_DEV_PORT_TYPE_VF, i);
++=======
+ 	for (i = 0; i < nsim_dev_get_vfs(nsim_dev); i++) {
+ 		err = nsim_drv_port_add(nsim_bus_dev, NSIM_DEV_PORT_TYPE_VF, i);
++>>>>>>> a66f64b80815 (netdevsim: rename 'driver' entry points)
  		if (err) {
  			NL_SET_ERR_MSG_MOD(extack, "Failed to initialize VFs' netdevsim ports");
  			pr_err("Failed to initialize VF id=%d. %d.\n", i, err);
* Unmerged path drivers/net/netdevsim/bus.c
* Unmerged path drivers/net/netdevsim/dev.c
diff --git a/drivers/net/netdevsim/netdevsim.h b/drivers/net/netdevsim/netdevsim.h
index 0b12e725cc14..92ef1f79013b 100644
--- a/drivers/net/netdevsim/netdevsim.h
+++ b/drivers/net/netdevsim/netdevsim.h
@@ -282,12 +282,12 @@ static inline struct net *nsim_dev_net(struct nsim_dev *nsim_dev)
 
 int nsim_dev_init(void);
 void nsim_dev_exit(void);
-int nsim_dev_probe(struct nsim_bus_dev *nsim_bus_dev);
-void nsim_dev_remove(struct nsim_bus_dev *nsim_bus_dev);
-int nsim_dev_port_add(struct nsim_bus_dev *nsim_bus_dev,
+int nsim_drv_probe(struct nsim_bus_dev *nsim_bus_dev);
+void nsim_drv_remove(struct nsim_bus_dev *nsim_bus_dev);
+int nsim_drv_port_add(struct nsim_bus_dev *nsim_bus_dev,
 		      enum nsim_dev_port_type type,
 		      unsigned int port_index);
-int nsim_dev_port_del(struct nsim_bus_dev *nsim_bus_dev,
+int nsim_drv_port_del(struct nsim_bus_dev *nsim_bus_dev,
 		      enum nsim_dev_port_type type,
 		      unsigned int port_index);
 
