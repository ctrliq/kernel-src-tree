scsi: core: Treat device offline as a failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jason Yan <yanaijie@huawei.com>
commit 1ee2753422349723d27009f2f973d03289d430ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/1ee27534.failed

When a SCSI device is offline a MODE SENSE command will return a result
with only DID_NO_CONNECT set. In sd_read_write_protect_flag() only the
status byte of the result is checked. Despite a returned status of
DID_NO_CONNECT the command is considered successful and we read
sdkp->write_prot from a buffer containing garbage.

Modify scsi_status_is_good() to treat DID_NO_CONNECT as a failure case.

Link: https://lore.kernel.org/r/20210330114727.234467-1-yanaijie@huawei.com
	Signed-off-by: Jason Yan <yanaijie@huawei.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 1ee2753422349723d27009f2f973d03289d430ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/scsi/scsi.h
diff --cc include/scsi/scsi.h
index 1640c94233cc,7f392405991b..000000000000
--- a/include/scsi/scsi.h
+++ b/include/scsi/scsi.h
@@@ -275,10 -251,32 +249,39 @@@ static inline int scsi_is_wlun(u64 lun
  /* Used to obtain the PCI location of a device */
  #define SCSI_IOCTL_GET_PCI		0x5387
  
++<<<<<<< HEAD
 +/* Pull a u32 out of a SCSI message (using BE SCSI conventions) */
 +static inline __u32 scsi_to_u32(__u8 *ptr)
 +{
 +	return (ptr[0]<<24) + (ptr[1]<<16) + (ptr[2]<<8) + ptr[3];
++=======
+ /** scsi_status_is_good - check the status return.
+  *
+  * @status: the status passed up from the driver (including host and
+  *          driver components)
+  *
+  * This returns true for known good conditions that may be treated as
+  * command completed normally
+  */
+ static inline int scsi_status_is_good(int status)
+ {
+ 	if (host_byte(status) == DID_NO_CONNECT)
+ 		return 0;
+ 
+ 	/*
+ 	 * FIXME: bit0 is listed as reserved in SCSI-2, but is
+ 	 * significant in SCSI-3.  For now, we follow the SCSI-2
+ 	 * behaviour and ignore reserved bits.
+ 	 */
+ 	status &= 0xfe;
+ 	return ((status == SAM_STAT_GOOD) ||
+ 		(status == SAM_STAT_CONDITION_MET) ||
+ 		/* Next two "intermediate" statuses are obsolete in SAM-4 */
+ 		(status == SAM_STAT_INTERMEDIATE) ||
+ 		(status == SAM_STAT_INTERMEDIATE_CONDITION_MET) ||
+ 		/* FIXME: this is obsolete in SAM-3 */
+ 		(status == SAM_STAT_COMMAND_TERMINATED));
++>>>>>>> 1ee275342234 (scsi: core: Treat device offline as a failure)
  }
  
  #endif /* _SCSI_SCSI_H */
* Unmerged path include/scsi/scsi.h
