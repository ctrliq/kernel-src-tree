KVM: VMX: Save/restore IRQs (instead of CLI/STI) during PI pre/post block

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 89ef0f21cf96200dfa46cec92228ef435681589f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/89ef0f21.failed

Save/restore IRQs when disabling IRQs in posted interrupt pre/post block
in preparation for moving the code into vcpu_put/load(), where it would be
called with IRQs already disabled.

No functional changed intended.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20211009021236.4122790-26-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 89ef0f21cf96200dfa46cec92228ef435681589f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/posted_intr.c
diff --cc arch/x86/kvm/vmx/posted_intr.c
index f68ea398c657,b72dbe80f87a..000000000000
--- a/arch/x86/kvm/vmx/posted_intr.c
+++ b/arch/x86/kvm/vmx/posted_intr.c
@@@ -146,24 -143,21 +146,35 @@@ static void __pi_post_block(struct kvm_
   */
  int pi_pre_block(struct kvm_vcpu *vcpu)
  {
 +	unsigned int dest;
  	struct pi_desc old, new;
  	struct pi_desc *pi_desc = vcpu_to_pi_desc(vcpu);
+ 	unsigned long flags;
  
  	if (!vmx_can_use_vtd_pi(vcpu->kvm) ||
  	    vmx_interrupt_blocked(vcpu))
  		return 0;
  
++<<<<<<< HEAD
 +	WARN_ON(irqs_disabled());
 +	local_irq_disable();
 +	if (!WARN_ON_ONCE(vcpu->pre_pcpu != -1)) {
 +		vcpu->pre_pcpu = vcpu->cpu;
 +		raw_spin_lock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->pre_pcpu));
 +		list_add_tail(&vcpu->blocked_vcpu_list,
 +			      &per_cpu(blocked_vcpu_on_cpu,
 +				       vcpu->pre_pcpu));
 +		raw_spin_unlock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->pre_pcpu));
 +	}
++=======
+ 	local_irq_save(flags);
+ 
+ 	vcpu->pre_pcpu = vcpu->cpu;
+ 	spin_lock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->cpu));
+ 	list_add_tail(&vcpu->blocked_vcpu_list,
+ 		      &per_cpu(blocked_vcpu_on_cpu, vcpu->cpu));
+ 	spin_unlock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->cpu));
++>>>>>>> 89ef0f21cf96 (KVM: VMX: Save/restore IRQs (instead of CLI/STI) during PI pre/post block)
  
  	do {
  		old.control = new.control = pi_desc->control;
* Unmerged path arch/x86/kvm/vmx/posted_intr.c
