bnxt_en: fix format specifier in live patch error message

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Edwin Peer <edwin.peer@broadcom.com>
commit b68a1a933fe4a52a8316d214e3421f2a89bc113e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/b68a1a93.failed

This fixes type mismatch warning.

	Reported-by: kernel test robot <lkp@intel.com>
Fixes: 3c4153394e2c ("bnxt_en: implement firmware live patching")
	Signed-off-by: Edwin Peer <edwin.peer@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b68a1a933fe4a52a8316d214e3421f2a89bc113e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
index d53055fc0f58,6fe9e9b59f83..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
@@@ -282,6 -326,111 +282,114 @@@ void bnxt_dl_health_recovery_done(struc
  static int bnxt_dl_info_get(struct devlink *dl, struct devlink_info_req *req,
  			    struct netlink_ext_ack *extack);
  
++<<<<<<< HEAD
++=======
+ static void
+ bnxt_dl_livepatch_report_err(struct bnxt *bp, struct netlink_ext_ack *extack,
+ 			     struct hwrm_fw_livepatch_output *resp)
+ {
+ 	int err = ((struct hwrm_err_output *)resp)->cmd_err;
+ 
+ 	switch (err) {
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_INVALID_OPCODE:
+ 		netdev_err(bp->dev, "Illegal live patch opcode");
+ 		NL_SET_ERR_MSG_MOD(extack, "Invalid opcode");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_NOT_SUPPORTED:
+ 		NL_SET_ERR_MSG_MOD(extack, "Live patch operation not supported");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_NOT_INSTALLED:
+ 		NL_SET_ERR_MSG_MOD(extack, "Live patch not found");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_NOT_PATCHED:
+ 		NL_SET_ERR_MSG_MOD(extack,
+ 				   "Live patch deactivation failed. Firmware not patched.");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_AUTH_FAIL:
+ 		NL_SET_ERR_MSG_MOD(extack, "Live patch not authenticated");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_INVALID_HEADER:
+ 		NL_SET_ERR_MSG_MOD(extack, "Incompatible live patch");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_INVALID_SIZE:
+ 		NL_SET_ERR_MSG_MOD(extack, "Live patch has invalid size");
+ 		break;
+ 	case FW_LIVEPATCH_CMD_ERR_CODE_ALREADY_PATCHED:
+ 		NL_SET_ERR_MSG_MOD(extack, "Live patch already applied");
+ 		break;
+ 	default:
+ 		netdev_err(bp->dev, "Unexpected live patch error: %d\n", err);
+ 		NL_SET_ERR_MSG_MOD(extack, "Failed to activate live patch");
+ 		break;
+ 	}
+ }
+ 
+ static int
+ bnxt_dl_livepatch_activate(struct bnxt *bp, struct netlink_ext_ack *extack)
+ {
+ 	struct hwrm_fw_livepatch_query_output *query_resp;
+ 	struct hwrm_fw_livepatch_query_input *query_req;
+ 	struct hwrm_fw_livepatch_output *patch_resp;
+ 	struct hwrm_fw_livepatch_input *patch_req;
+ 	u32 installed = 0;
+ 	u16 flags;
+ 	u8 target;
+ 	int rc;
+ 
+ 	if (~bp->fw_cap & BNXT_FW_CAP_LIVEPATCH) {
+ 		NL_SET_ERR_MSG_MOD(extack, "Device does not support live patch");
+ 		return -EOPNOTSUPP;
+ 	}
+ 
+ 	rc = hwrm_req_init(bp, query_req, HWRM_FW_LIVEPATCH_QUERY);
+ 	if (rc)
+ 		return rc;
+ 	query_resp = hwrm_req_hold(bp, query_req);
+ 
+ 	rc = hwrm_req_init(bp, patch_req, HWRM_FW_LIVEPATCH);
+ 	if (rc) {
+ 		hwrm_req_drop(bp, query_req);
+ 		return rc;
+ 	}
+ 	patch_req->opcode = FW_LIVEPATCH_REQ_OPCODE_ACTIVATE;
+ 	patch_req->loadtype = FW_LIVEPATCH_REQ_LOADTYPE_NVM_INSTALL;
+ 	patch_resp = hwrm_req_hold(bp, patch_req);
+ 
+ 	for (target = 1; target <= FW_LIVEPATCH_REQ_FW_TARGET_LAST; target++) {
+ 		query_req->fw_target = target;
+ 		rc = hwrm_req_send(bp, query_req);
+ 		if (rc) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Failed to query packages");
+ 			break;
+ 		}
+ 
+ 		flags = le16_to_cpu(query_resp->status_flags);
+ 		if (~flags & FW_LIVEPATCH_QUERY_RESP_STATUS_FLAGS_INSTALL)
+ 			continue;
+ 		if ((flags & FW_LIVEPATCH_QUERY_RESP_STATUS_FLAGS_ACTIVE) &&
+ 		    !strncmp(query_resp->active_ver, query_resp->install_ver,
+ 			     sizeof(query_resp->active_ver)))
+ 			continue;
+ 
+ 		patch_req->fw_target = target;
+ 		rc = hwrm_req_send(bp, patch_req);
+ 		if (rc) {
+ 			bnxt_dl_livepatch_report_err(bp, extack, patch_resp);
+ 			break;
+ 		}
+ 		installed++;
+ 	}
+ 
+ 	if (!rc && !installed) {
+ 		NL_SET_ERR_MSG_MOD(extack, "No live patches found");
+ 		rc = -ENOENT;
+ 	}
+ 	hwrm_req_drop(bp, query_req);
+ 	hwrm_req_drop(bp, patch_req);
+ 	return rc;
+ }
+ 
++>>>>>>> b68a1a933fe4 (bnxt_en: fix format specifier in live patch error message)
  static int bnxt_dl_reload_down(struct devlink *dl, bool netns_change,
  			       enum devlink_reload_action action,
  			       enum devlink_reload_limit limit,
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt_devlink.c
