lib: bitmap: Introduce node-aware alloc API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Tariq Toukan <tariqt@nvidia.com>
commit 7529cc7fbd9c02eda6851f3260416cbe198a321d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/7529cc7f.failed

Expose new node-aware API for bitmap allocation:
bitmap_alloc_node() / bitmap_zalloc_node().

	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 7529cc7fbd9c02eda6851f3260416cbe198a321d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/bitmap.h
diff --cc include/linux/bitmap.h
index bc04d08052ec,a241dcf50f39..000000000000
--- a/include/linux/bitmap.h
+++ b/include/linux/bitmap.h
@@@ -117,9 -121,17 +117,23 @@@
   * Allocation and deallocation of bitmap.
   * Provided in lib/bitmap.c to avoid circular dependency.
   */
++<<<<<<< HEAD
 +extern unsigned long *bitmap_alloc(unsigned int nbits, gfp_t flags);
 +extern unsigned long *bitmap_zalloc(unsigned int nbits, gfp_t flags);
 +extern void bitmap_free(const unsigned long *bitmap);
++=======
+ unsigned long *bitmap_alloc(unsigned int nbits, gfp_t flags);
+ unsigned long *bitmap_zalloc(unsigned int nbits, gfp_t flags);
+ unsigned long *bitmap_alloc_node(unsigned int nbits, gfp_t flags, int node);
+ unsigned long *bitmap_zalloc_node(unsigned int nbits, gfp_t flags, int node);
+ void bitmap_free(const unsigned long *bitmap);
+ 
+ /* Managed variants of the above. */
+ unsigned long *devm_bitmap_alloc(struct device *dev,
+ 				 unsigned int nbits, gfp_t flags);
+ unsigned long *devm_bitmap_zalloc(struct device *dev,
+ 				  unsigned int nbits, gfp_t flags);
++>>>>>>> 7529cc7fbd9c (lib: bitmap: Introduce node-aware alloc API)
  
  /*
   * lib/bitmap.c provides these functions:
* Unmerged path include/linux/bitmap.h
diff --git a/lib/bitmap.c b/lib/bitmap.c
index da194ecfc4e9..86820a5dfcd8 100644
--- a/lib/bitmap.c
+++ b/lib/bitmap.c
@@ -1340,6 +1340,19 @@ unsigned long *bitmap_zalloc(unsigned int nbits, gfp_t flags)
 }
 EXPORT_SYMBOL(bitmap_zalloc);
 
+unsigned long *bitmap_alloc_node(unsigned int nbits, gfp_t flags, int node)
+{
+	return kmalloc_array_node(BITS_TO_LONGS(nbits), sizeof(unsigned long),
+				  flags, node);
+}
+EXPORT_SYMBOL(bitmap_alloc_node);
+
+unsigned long *bitmap_zalloc_node(unsigned int nbits, gfp_t flags, int node)
+{
+	return bitmap_alloc_node(nbits, flags | __GFP_ZERO, node);
+}
+EXPORT_SYMBOL(bitmap_zalloc_node);
+
 void bitmap_free(const unsigned long *bitmap)
 {
 	kfree(bitmap);
