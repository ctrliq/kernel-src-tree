dmaengine: idxd: reconfig device after device reset command

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Dave Jiang <dave.jiang@intel.com>
commit e530a9f3db4188d1f4e3704b0948ef69c04d5ca6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/e530a9f3.failed

Device reset clears the MSIXPERM table and the device registers. Re-program
the MSIXPERM table and re-enable the error interrupts post reset.

Fixes: 745e92a6d816 ("dmaengine: idxd: idxd: move remove() bits for idxd 'struct device' to device.c")
	Reported-by: Sanjay Kumar <sanjay.k.kumar@intel.com>
	Signed-off-by: Dave Jiang <dave.jiang@intel.com>
Link: https://lore.kernel.org/r/163054188513.2853562.12077053294595278181.stgit@djiang5-desk3.ch.intel.com
	Signed-off-by: Vinod Koul <vkoul@kernel.org>
(cherry picked from commit e530a9f3db4188d1f4e3704b0948ef69c04d5ca6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/dma/idxd/device.c
diff --cc drivers/dma/idxd/device.c
index 223ff640566c,b1407465d5c4..000000000000
--- a/drivers/dma/idxd/device.c
+++ b/drivers/dma/idxd/device.c
@@@ -583,13 -579,13 +583,19 @@@ int idxd_device_disable(struct idxd_dev
  
  void idxd_device_reset(struct idxd_device *idxd)
  {
 +	unsigned long flags;
 +
  	idxd_cmd_exec(idxd, IDXD_CMD_RESET_DEVICE, 0, NULL);
 -	spin_lock(&idxd->dev_lock);
 +	spin_lock_irqsave(&idxd->dev_lock, flags);
  	idxd_device_clear_state(idxd);
  	idxd->state = IDXD_DEV_DISABLED;
++<<<<<<< HEAD
 +	spin_unlock_irqrestore(&idxd->dev_lock, flags);
++=======
+ 	idxd_unmask_error_interrupts(idxd);
+ 	idxd_msix_perm_setup(idxd);
+ 	spin_unlock(&idxd->dev_lock);
++>>>>>>> e530a9f3db41 (dmaengine: idxd: reconfig device after device reset command)
  }
  
  void idxd_device_drain_pasid(struct idxd_device *idxd, int pasid)
* Unmerged path drivers/dma/idxd/device.c
