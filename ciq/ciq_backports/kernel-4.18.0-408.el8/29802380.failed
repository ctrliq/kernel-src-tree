KVM: VMX: Drop pointless PI.NDST update when blocking

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 29802380b6793eabcac648e1c097c7bd6333f3d4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/29802380.failed

Don't update Posted Interrupt's NDST, a.k.a. the target pCPU, in the
pre-block path, as NDST is guaranteed to be up-to-date.  The comment
about the vCPU being preempted during the update is simply wrong, as the
update path runs with IRQs disabled (from before snapshotting vcpu->cpu,
until after the update completes).

Since commit 8b306e2f3c41 ("KVM: VMX: avoid double list add with VT-d
posted interrupts", 2017-09-27) The vCPU can get preempted _before_
the update starts, but not during.  And if the vCPU is preempted before,
vmx_vcpu_pi_load() is responsible for updating NDST when the vCPU is
scheduled back in.  In that case, the check against the wakeup vector in
vmx_vcpu_pi_load() cannot be true as that would require the notification
vector to have been set to the wakeup vector _before_ blocking.

Opportunistically switch to using vcpu->cpu for the list/lock lookups,
which do not need pre_pcpu since the same commit.

	Signed-off-by: Sean Christopherson <seanjc@google.com>
Message-Id: <20211009021236.4122790-25-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 29802380b6793eabcac648e1c097c7bd6333f3d4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/vmx/posted_intr.c
diff --cc arch/x86/kvm/vmx/posted_intr.c
index f68ea398c657,bb93e9637494..000000000000
--- a/arch/x86/kvm/vmx/posted_intr.c
+++ b/arch/x86/kvm/vmx/posted_intr.c
@@@ -156,14 -152,12 +154,23 @@@ int pi_pre_block(struct kvm_vcpu *vcpu
  
  	WARN_ON(irqs_disabled());
  	local_irq_disable();
++<<<<<<< HEAD
 +	if (!WARN_ON_ONCE(vcpu->pre_pcpu != -1)) {
 +		vcpu->pre_pcpu = vcpu->cpu;
 +		raw_spin_lock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->pre_pcpu));
 +		list_add_tail(&vcpu->blocked_vcpu_list,
 +			      &per_cpu(blocked_vcpu_on_cpu,
 +				       vcpu->pre_pcpu));
 +		raw_spin_unlock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->pre_pcpu));
 +	}
++=======
+ 
+ 	vcpu->pre_pcpu = vcpu->cpu;
+ 	spin_lock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->cpu));
+ 	list_add_tail(&vcpu->blocked_vcpu_list,
+ 		      &per_cpu(blocked_vcpu_on_cpu, vcpu->cpu));
+ 	spin_unlock(&per_cpu(blocked_vcpu_on_cpu_lock, vcpu->cpu));
++>>>>>>> 29802380b679 (KVM: VMX: Drop pointless PI.NDST update when blocking)
  
  	do {
  		old.control = new.control = pi_desc->control;
* Unmerged path arch/x86/kvm/vmx/posted_intr.c
