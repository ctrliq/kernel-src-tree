net: rtnetlink: add possibility to use alternative names as message handle

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Jiri Pirko <jiri@mellanox.com>
commit 76c9ac0ee878f6693d398d3a95ccaf85e1f597a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/76c9ac0e.failed

Extend the basic rtnetlink commands to use alternative interface names
as a handle instead of ifindex and ifname.

	Signed-off-by: Jiri Pirko <jiri@mellanox.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 76c9ac0ee878f6693d398d3a95ccaf85e1f597a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/rtnetlink.c
diff --cc net/core/rtnetlink.c
index 5807383aa5e3,49fa910b58af..000000000000
--- a/net/core/rtnetlink.c
+++ b/net/core/rtnetlink.c
@@@ -2806,6 -2778,26 +2806,29 @@@ errout
  	return err;
  }
  
++<<<<<<< HEAD
++=======
+ static struct net_device *rtnl_dev_get(struct net *net,
+ 				       struct nlattr *ifname_attr,
+ 				       struct nlattr *altifname_attr,
+ 				       char *ifname)
+ {
+ 	char buffer[ALTIFNAMSIZ];
+ 
+ 	if (!ifname) {
+ 		ifname = buffer;
+ 		if (ifname_attr)
+ 			nla_strlcpy(ifname, ifname_attr, IFNAMSIZ);
+ 		else if (altifname_attr)
+ 			nla_strlcpy(ifname, altifname_attr, ALTIFNAMSIZ);
+ 		else
+ 			return NULL;
+ 	}
+ 
+ 	return __dev_get_by_name(net, ifname);
+ }
+ 
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  static int rtnl_setlink(struct sk_buff *skb, struct nlmsghdr *nlh,
  			struct netlink_ext_ack *extack)
  {
@@@ -2834,8 -2826,8 +2857,13 @@@
  	ifm = nlmsg_data(nlh);
  	if (ifm->ifi_index > 0)
  		dev = __dev_get_by_index(net, ifm->ifi_index);
++<<<<<<< HEAD
 +	else if (tb[IFLA_IFNAME])
 +		dev = __dev_get_by_name(net, ifname);
++=======
+ 	else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME])
+ 		dev = rtnl_dev_get(net, NULL, tb[IFLA_ALT_IFNAME], ifname);
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  	else
  		goto errout;
  
@@@ -2936,8 -2924,9 +2964,14 @@@ static int rtnl_dellink(struct sk_buff 
  	ifm = nlmsg_data(nlh);
  	if (ifm->ifi_index > 0)
  		dev = __dev_get_by_index(tgt_net, ifm->ifi_index);
++<<<<<<< HEAD
 +	else if (tb[IFLA_IFNAME])
 +		dev = __dev_get_by_name(tgt_net, ifname);
++=======
+ 	else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME])
+ 		dev = rtnl_dev_get(net, tb[IFLA_IFNAME],
+ 				   tb[IFLA_ALT_IFNAME], NULL);
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  	else if (tb[IFLA_GROUP])
  		err = rtnl_group_dellink(tgt_net, nla_get_u32(tb[IFLA_GROUP]));
  	else
@@@ -3117,8 -3097,8 +3151,13 @@@ replay
  	ifm = nlmsg_data(nlh);
  	if (ifm->ifi_index > 0)
  		dev = __dev_get_by_index(net, ifm->ifi_index);
++<<<<<<< HEAD
 +	else if (tb[IFLA_IFNAME])
 +		dev = __dev_get_by_name(net, ifname);
++=======
+ 	else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME])
+ 		dev = rtnl_dev_get(net, NULL, tb[IFLA_ALT_IFNAME], ifname);
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  	else
  		dev = NULL;
  
@@@ -3435,8 -3410,9 +3475,14 @@@ static int rtnl_getlink(struct sk_buff 
  	ifm = nlmsg_data(nlh);
  	if (ifm->ifi_index > 0)
  		dev = __dev_get_by_index(tgt_net, ifm->ifi_index);
++<<<<<<< HEAD
 +	else if (tb[IFLA_IFNAME])
 +		dev = __dev_get_by_name(tgt_net, ifname);
++=======
+ 	else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME])
+ 		dev = rtnl_dev_get(tgt_net, tb[IFLA_IFNAME],
+ 				   tb[IFLA_ALT_IFNAME], NULL);
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  	else
  		goto out;
  
@@@ -3517,16 -3495,13 +3563,23 @@@ static int rtnl_linkprop(int cmd, struc
  		return err;
  
  	ifm = nlmsg_data(nlh);
 -	if (ifm->ifi_index > 0)
 +	if (ifm->ifi_index > 0) {
  		dev = __dev_get_by_index(net, ifm->ifi_index);
++<<<<<<< HEAD
 +	} else if (tb[IFLA_IFNAME]) {
 +		char ifname[IFNAMSIZ];
 +
 +		nla_strscpy(ifname, tb[IFLA_IFNAME], IFNAMSIZ);
 +		dev = __dev_get_by_name(net, ifname);
 +	} else {
++=======
+ 	else if (tb[IFLA_IFNAME] || tb[IFLA_ALT_IFNAME])
+ 		dev = rtnl_dev_get(net, tb[IFLA_IFNAME],
+ 				   tb[IFLA_ALT_IFNAME], NULL);
+ 	else
++>>>>>>> 76c9ac0ee878 (net: rtnetlink: add possibility to use alternative names as message handle)
  		return -EINVAL;
 +	}
  
  	if (!dev)
  		return -ENODEV;
* Unmerged path net/core/rtnetlink.c
