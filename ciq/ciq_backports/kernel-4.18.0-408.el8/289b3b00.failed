iommu/vt-d: Preset A/D bits for user space DMA usage

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 289b3b005cb9d9dd6b30297b52c2b4596bc878b2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/289b3b00.failed

We preset the access and dirty bits for IOVA over first level usage only
for the kernel DMA (i.e., when domain type is IOMMU_DOMAIN_DMA). We should
also preset the FL A/D for user space DMA usage. The idea is that even the
user space A/D bit memory write is unnecessary. We should avoid it to
minimize the overhead.

	Suggested-by: Sanjay Kumar <sanjay.k.kumar@intel.com>
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
Link: https://lore.kernel.org/r/20210720013856.4143880-1-baolu.lu@linux.intel.com
Link: https://lore.kernel.org/r/20210818134852.1847070-6-baolu.lu@linux.intel.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 289b3b005cb9d9dd6b30297b52c2b4596bc878b2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel/iommu.c
diff --cc drivers/iommu/intel/iommu.c
index 5582fbdada18,8d4d49e12c51..000000000000
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@@ -2462,13 -2334,9 +2462,19 @@@ __domain_mapping(struct dmar_domain *do
  	attr = prot & (DMA_PTE_READ | DMA_PTE_WRITE | DMA_PTE_SNP);
  	attr |= DMA_FL_PTE_PRESENT;
  	if (domain_use_first_level(domain)) {
++<<<<<<< HEAD
 +		attr |= DMA_FL_PTE_XD | DMA_FL_PTE_US;
 +
 +		if (domain->domain.type == IOMMU_DOMAIN_DMA) {
 +			attr |= DMA_FL_PTE_ACCESS;
 +			if (prot & DMA_PTE_WRITE)
 +				attr |= DMA_FL_PTE_DIRTY;
 +		}
++=======
+ 		attr |= DMA_FL_PTE_XD | DMA_FL_PTE_US | DMA_FL_PTE_ACCESS;
+ 		if (prot & DMA_PTE_WRITE)
+ 			attr |= DMA_FL_PTE_DIRTY;
++>>>>>>> 289b3b005cb9 (iommu/vt-d: Preset A/D bits for user space DMA usage)
  	}
  
  	pteval = ((phys_addr_t)phys_pfn << VTD_PAGE_SHIFT) | attr;
* Unmerged path drivers/iommu/intel/iommu.c
