ARM: 8976/1: module: allow arch overrides for .init section names

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Vincent Whitchurch <vincent.whitchurch@axis.com>
commit 2318976619daf0e868de5b8aff19c1fd8d585867
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/23189766.failed

ARM stores unwind information for .init.text in sections named
.ARM.extab.init.text and .ARM.exidx.init.text.  Since those aren't
currently recognized as init sections, they're allocated along with the
core section, and relocation fails if the core and the init section are
allocated from different regions and can't reach other.

  final section addresses:
        ...
        0x7f800000 .init.text
        ..
        0xcbb54078 .ARM.exidx.init.text
        ..

 section 16 reloc 0 sym '': relocation 42 out of range (0xcbb54078 ->
 0x7f800000)

Allow architectures to override the section name so that ARM can fix
this.

	Acked-by: Jessica Yu <jeyu@kernel.org>
	Signed-off-by: Vincent Whitchurch <vincent.whitchurch@axis.com>
	Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
(cherry picked from commit 2318976619daf0e868de5b8aff19c1fd8d585867)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/moduleloader.h
#	kernel/module.c
diff --cc include/linux/moduleloader.h
index 24891508fd1c,4fa67a8b2265..000000000000
--- a/include/linux/moduleloader.h
+++ b/include/linux/moduleloader.h
@@@ -29,6 -29,16 +29,19 @@@ void *module_alloc(unsigned long size)
  /* Free memory returned from module_alloc. */
  void module_memfree(void *module_region);
  
++<<<<<<< HEAD
++=======
+ /* Determines if the section name is an init section (that is only used during
+  * module loading).
+  */
+ bool module_init_section(const char *name);
+ 
+ /* Determines if the section name is an exit section (that is only used during
+  * module unloading)
+  */
+ bool module_exit_section(const char *name);
+ 
++>>>>>>> 2318976619da (ARM: 8976/1: module: allow arch overrides for .init section names)
  /*
   * Apply the given relocation to the (simplified) ELF.  Return -error
   * or 0.
diff --cc kernel/module.c
index 4b15dfd5f4c4,d29c23d07aff..000000000000
--- a/kernel/module.c
+++ b/kernel/module.c
@@@ -2753,6 -2768,16 +2753,19 @@@ void * __weak module_alloc(unsigned lon
  	return vmalloc_exec(size);
  }
  
++<<<<<<< HEAD
++=======
+ bool __weak module_init_section(const char *name)
+ {
+ 	return strstarts(name, ".init");
+ }
+ 
+ bool __weak module_exit_section(const char *name)
+ {
+ 	return strstarts(name, ".exit");
+ }
+ 
++>>>>>>> 2318976619da (ARM: 8976/1: module: allow arch overrides for .init section names)
  #ifdef CONFIG_DEBUG_KMEMLEAK
  static void kmemleak_load_module(const struct module *mod,
  				 const struct load_info *info)
* Unmerged path include/linux/moduleloader.h
* Unmerged path kernel/module.c
