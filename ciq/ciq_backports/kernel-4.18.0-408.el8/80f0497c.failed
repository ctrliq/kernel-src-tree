KVM: x86: Tag APICv DISABLE inhibit, not ABSENT, if APICv is disabled

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Sean Christopherson <seanjc@google.com>
commit 80f0497c221112fc25845a8b68f1c5b4a23b3567
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/80f0497c.failed

Set the DISABLE inhibit, not the ABSENT inhibit, if APICv is disabled via
module param.  A recent refactoring to add a wrapper for setting/clearing
inhibits unintentionally changed the flag, probably due to a copy+paste
goof.

Fixes: 4f4c4a3ee53c ("KVM: x86: Trace all APICv inhibit changes and capture overall status")
	Signed-off-by: Sean Christopherson <seanjc@google.com>
	Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20220420013732.3308816-2-seanjc@google.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 80f0497c221112fc25845a8b68f1c5b4a23b3567)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/x86.c
index 4ef27c337e31,d54d4a67b226..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -9040,15 -9089,29 +9040,20 @@@ bool kvm_apicv_activated(struct kvm *kv
  }
  EXPORT_SYMBOL_GPL(kvm_apicv_activated);
  
 -
 -static void set_or_clear_apicv_inhibit(unsigned long *inhibits,
 -				       enum kvm_apicv_inhibit reason, bool set)
 -{
 -	if (set)
 -		__set_bit(reason, inhibits);
 -	else
 -		__clear_bit(reason, inhibits);
 -
 -	trace_kvm_apicv_inhibit_changed(reason, set, *inhibits);
 -}
 -
  static void kvm_apicv_init(struct kvm *kvm)
  {
 -	unsigned long *inhibits = &kvm->arch.apicv_inhibit_reasons;
 -
  	init_rwsem(&kvm->arch.apicv_update_lock);
  
 -	set_or_clear_apicv_inhibit(inhibits, APICV_INHIBIT_REASON_ABSENT, true);
 -
 +	set_bit(APICV_INHIBIT_REASON_ABSENT,
 +		&kvm->arch.apicv_inhibit_reasons);
  	if (!enable_apicv)
++<<<<<<< HEAD
 +		set_bit(APICV_INHIBIT_REASON_DISABLE,
 +			&kvm->arch.apicv_inhibit_reasons);
++=======
+ 		set_or_clear_apicv_inhibit(inhibits,
+ 					   APICV_INHIBIT_REASON_DISABLE, true);
++>>>>>>> 80f0497c2211 (KVM: x86: Tag APICv DISABLE inhibit, not ABSENT, if APICv is disabled)
  }
  
  static void kvm_sched_yield(struct kvm_vcpu *vcpu, unsigned long dest_id)
* Unmerged path arch/x86/kvm/x86.c
