selftests: Fix IPv6 address bind tests

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author David Ahern <dsahern@kernel.org>
commit 28a2686c185e84b6aa6a4d9c9a972360eb7ca266
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/28a2686c.failed

IPv6 allows binding a socket to a device then binding to an address
not on the device (__inet6_bind -> ipv6_chk_addr with strict flag
not set). Update the bind tests to reflect legacy behavior.

Fixes: 34d0302ab861 ("selftests: Add ipv6 address bind tests to fcnal-test")
	Reported-by: Li Zhijian <lizhijian@fujitsu.com>
	Signed-off-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 28a2686c185e84b6aa6a4d9c9a972360eb7ca266)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/fcnal-test.sh
diff --cc tools/testing/selftests/net/fcnal-test.sh
index 7f2d87667b0c,ad2982b72e02..000000000000
--- a/tools/testing/selftests/net/fcnal-test.sh
+++ b/tools/testing/selftests/net/fcnal-test.sh
@@@ -2836,14 -3426,17 +2836,23 @@@ ipv6_addr_bind_novrf(
  	log_test_addr ${a} $? 0 "TCP socket bind to local address"
  
  	log_start
 -	run_cmd nettest -6 -s -l ${a} -I ${NSA_DEV} -t1 -b
 +	run_cmd nettest -6 -s -l ${a} -d ${NSA_DEV} -t1 -b
  	log_test_addr ${a} $? 0 "TCP socket bind to local address after device bind"
  
+ 	# Sadly, the kernel allows binding a socket to a device and then
+ 	# binding to an address not on the device. So this test passes
+ 	# when it really should not
  	a=${NSA_LO_IP6}
  	log_start
++<<<<<<< HEAD
 +	show_hint "Should fail with 'Cannot assign requested address'"
 +	run_cmd nettest -6 -s -l ${a} -d ${NSA_DEV} -t1 -b
 +	log_test_addr ${a} $? 1 "TCP socket bind to out of scope local address"
++=======
+ 	show_hint "Tecnically should fail since address is not on device but kernel allows"
+ 	run_cmd nettest -6 -s -l ${a} -I ${NSA_DEV} -t1 -b
+ 	log_test_addr ${a} $? 0 "TCP socket bind to out of scope local address"
++>>>>>>> 28a2686c185e (selftests: Fix IPv6 address bind tests)
  }
  
  ipv6_addr_bind_vrf()
@@@ -2881,13 -3474,18 +2890,23 @@@
  
  	a=${NSA_IP6}
  	log_start
 -	run_cmd nettest -6 -s -l ${a} -I ${NSA_DEV} -t1 -b
 +	run_cmd nettest -6 -s -l ${a} -d ${NSA_DEV} -t1 -b
  	log_test_addr ${a} $? 0 "TCP socket bind to local address with device bind"
  
+ 	# Sadly, the kernel allows binding a socket to a device and then
+ 	# binding to an address not on the device. The only restriction
+ 	# is that the address is valid in the L3 domain. So this test
+ 	# passes when it really should not
  	a=${VRF_IP6}
  	log_start
++<<<<<<< HEAD
 +	run_cmd nettest -6 -s -l ${a} -d ${NSA_DEV} -t1 -b
 +	log_test_addr ${a} $? 1 "TCP socket bind to VRF address with device bind"
++=======
+ 	show_hint "Tecnically should fail since address is not on device but kernel allows"
+ 	run_cmd nettest -6 -s -l ${a} -I ${NSA_DEV} -t1 -b
+ 	log_test_addr ${a} $? 0 "TCP socket bind to VRF address with device bind"
++>>>>>>> 28a2686c185e (selftests: Fix IPv6 address bind tests)
  
  	a=${NSA_LO_IP6}
  	log_start
* Unmerged path tools/testing/selftests/net/fcnal-test.sh
