Documentation: KVM: Update documentation to indicate KVM is arm64-only

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Oliver Upton <oupton@google.com>
commit 3fbf4207dc6807bf98e3d32558753cfa5eac2fa1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/3fbf4207.failed

KVM support for 32-bit ARM hosts (KVM/arm) has been removed from the
kernel since commit 541ad0150ca4 ("arm: Remove 32bit KVM host
support"). There still exists some remnants of the old architecture in
the KVM documentation.

Remove all traces of 32-bit host support from the documentation. Note
that AArch32 guests are still supported.

	Suggested-by: Marc Zyngier <maz@kernel.org>
	Signed-off-by: Oliver Upton <oupton@google.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20220308172856.2997250-1-oupton@google.com
(cherry picked from commit 3fbf4207dc6807bf98e3d32558753cfa5eac2fa1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/virt/kvm/api.rst
diff --cc Documentation/virt/kvm/api.rst
index bf465229a63e,cfbb63873963..000000000000
--- a/Documentation/virt/kvm/api.rst
+++ b/Documentation/virt/kvm/api.rst
@@@ -1402,7 -1449,7 +1402,11 @@@ for vm-wide capabilities
  ---------------------
  
  :Capability: KVM_CAP_MP_STATE
++<<<<<<< HEAD
 +:Architectures: x86, s390, arm, arm64
++=======
+ :Architectures: x86, s390, arm64, riscv
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
  :Type: vcpu ioctl
  :Parameters: struct kvm_mp_state (out)
  :Returns: 0 on success; -1 on error
@@@ -1419,7 -1466,8 +1423,12 @@@ uniprocessor guests)
  Possible values are:
  
     ==========================    ===============================================
++<<<<<<< HEAD
 +   KVM_MP_STATE_RUNNABLE         the vcpu is currently running [x86,arm/arm64]
++=======
+    KVM_MP_STATE_RUNNABLE         the vcpu is currently running
+                                  [x86,arm64,riscv]
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
     KVM_MP_STATE_UNINITIALIZED    the vcpu is an application processor (AP)
                                   which has not yet received an INIT signal [x86]
     KVM_MP_STATE_INIT_RECEIVED    the vcpu has received an INIT signal, and is
@@@ -1428,7 -1476,7 +1437,11 @@@
                                   is waiting for an interrupt [x86]
     KVM_MP_STATE_SIPI_RECEIVED    the vcpu has just received a SIPI (vector
                                   accessible via KVM_GET_VCPU_EVENTS) [x86]
++<<<<<<< HEAD
 +   KVM_MP_STATE_STOPPED          the vcpu is stopped [s390,arm/arm64]
++=======
+    KVM_MP_STATE_STOPPED          the vcpu is stopped [s390,arm64,riscv]
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
     KVM_MP_STATE_CHECK_STOP       the vcpu is in a special error state [s390]
     KVM_MP_STATE_OPERATING        the vcpu is operating (running or halted)
                                   [s390]
@@@ -1440,8 -1488,8 +1453,13 @@@ On x86, this ioctl is only useful afte
  in-kernel irqchip, the multiprocessing state must be maintained by userspace on
  these architectures.
  
++<<<<<<< HEAD
 +For arm/arm64:
 +^^^^^^^^^^^^^^
++=======
+ For arm64/riscv:
+ ^^^^^^^^^^^^^^^^
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
  
  The only states that are valid are KVM_MP_STATE_STOPPED and
  KVM_MP_STATE_RUNNABLE which reflect if the vcpu is paused or not.
@@@ -1450,7 -1498,7 +1468,11 @@@
  ---------------------
  
  :Capability: KVM_CAP_MP_STATE
++<<<<<<< HEAD
 +:Architectures: x86, s390, arm, arm64
++=======
+ :Architectures: x86, s390, arm64, riscv
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
  :Type: vcpu ioctl
  :Parameters: struct kvm_mp_state (in)
  :Returns: 0 on success; -1 on error
@@@ -1462,8 -1510,8 +1484,13 @@@ On x86, this ioctl is only useful afte
  in-kernel irqchip, the multiprocessing state must be maintained by userspace on
  these architectures.
  
++<<<<<<< HEAD
 +For arm/arm64:
 +^^^^^^^^^^^^^^
++=======
+ For arm64/riscv:
+ ^^^^^^^^^^^^^^^^
++>>>>>>> 3fbf4207dc68 (Documentation: KVM: Update documentation to indicate KVM is arm64-only)
  
  The only states that are valid are KVM_MP_STATE_STOPPED and
  KVM_MP_STATE_RUNNABLE which reflect if the vcpu should be paused or not.
* Unmerged path Documentation/virt/kvm/api.rst
diff --git a/Documentation/virt/kvm/devices/vcpu.rst b/Documentation/virt/kvm/devices/vcpu.rst
index 310cebe28af4..1285c743c71c 100644
--- a/Documentation/virt/kvm/devices/vcpu.rst
+++ b/Documentation/virt/kvm/devices/vcpu.rst
@@ -59,7 +59,7 @@ irqchip.
 2. GROUP: KVM_ARM_VCPU_TIMER_CTRL
 =================================
 
-:Architectures: ARM, ARM64
+:Architectures: ARM64
 
 2.1. ATTRIBUTES: KVM_ARM_VCPU_TIMER_IRQ_VTIMER, KVM_ARM_VCPU_TIMER_IRQ_PTIMER
 -----------------------------------------------------------------------------
