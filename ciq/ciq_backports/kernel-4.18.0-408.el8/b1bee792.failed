dm: fold clone_bio into __clone_and_map_data_bio

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Christoph Hellwig <hch@lst.de>
commit b1bee79237ce0ab43ef7fe66aa6e5c4783165012
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/b1bee792.failed

Fold clone_bio into its only caller to prepare for refactoring.

	Signed-off-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Mike Snitzer <snitzer@redhat.com>
Link: https://lore.kernel.org/r/20220202160109.108149-4-hch@lst.de
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit b1bee79237ce0ab43ef7fe66aa6e5c4783165012)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm.c
diff --cc drivers/md/dm.c
index d626b645f571,9384d250a3e4..000000000000
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@@ -1338,16 -1190,24 +1338,33 @@@ static void bio_setup_sector(struct bi
  /*
   * Creates a bio that consists of range of complete bvecs.
   */
- static int clone_bio(struct dm_target_io *tio, struct bio *bio,
- 		     sector_t sector, unsigned len)
+ static int __clone_and_map_data_bio(struct clone_info *ci, struct dm_target *ti,
+ 				    sector_t sector, unsigned *len)
  {
++<<<<<<< HEAD
 +	struct bio *clone = &tio->clone;
++=======
+ 	struct bio *bio = ci->bio, *clone;
+ 	struct dm_target_io *tio;
+ 	int r;
++>>>>>>> b1bee79237ce (dm: fold clone_bio into __clone_and_map_data_bio)
+ 
+ 	tio = alloc_tio(ci, ti, 0, GFP_NOIO);
+ 	tio->len_ptr = len;
  
+ 	clone = &tio->clone;
  	__bio_clone_fast(clone, bio);
  
++<<<<<<< HEAD
++=======
+ 	r = bio_crypt_clone(clone, bio, GFP_NOIO);
+ 	if (r < 0)
+ 		goto free_tio;
+ 
++>>>>>>> b1bee79237ce (dm: fold clone_bio into __clone_and_map_data_bio)
  	if (bio_integrity(bio)) {
 +		int r;
 +
  		if (unlikely(!dm_target_has_integrity(tio->ti->type) &&
  			     !dm_target_passes_integrity(tio->ti->type))) {
  			DMWARN("%s: the target %s doesn't support integrity data.",
@@@ -1472,32 -1323,8 +1494,35 @@@ static int __send_empty_flush(struct cl
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int __clone_and_map_data_bio(struct clone_info *ci, struct dm_target *ti,
 +				    sector_t sector, unsigned *len)
 +{
 +	struct bio *bio = ci->bio;
 +	struct dm_target_io *tio;
 +	int r;
 +
 +	tio = alloc_tio(ci, ti, 0, GFP_NOIO);
 +	tio->len_ptr = len;
 +	r = clone_bio(tio, bio, sector, *len);
 +	if (r < 0) {
 +		free_tio(tio);
 +		return r;
 +	}
 +	(void) __map_bio(tio);
 +
 +	return 0;
 +}
 +
 +static bool is_split_required_for_discard(struct dm_target *ti)
 +{
 +	return ti->split_discard_bios;
 +}
 +
++=======
++>>>>>>> b1bee79237ce (dm: fold clone_bio into __clone_and_map_data_bio)
  static int __send_changing_extent_only(struct clone_info *ci, struct dm_target *ti,
 -				       unsigned num_bios)
 +				       unsigned num_bios, bool is_split_required)
  {
  	unsigned len;
  
* Unmerged path drivers/md/dm.c
