selftests: vm: Makefile: rename TARGETS to VMTARGETS

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Joel Savitz <jsavitz@redhat.com>
commit 41c240099fe09377b6b9f8272e45d2267c843d3e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/41c24009.failed

The tools/testing/selftests/vm/Makefile uses the variable TARGETS
internally to generate a list of platform-specific binary build targets
suffixed with _{32,64}.  When building the selftests using its own
Makefile directly, such as via the following command run in a kernel tree:

One receives an error such as the following:

make: Entering directory '/root/linux/tools/testing/selftests'
make --no-builtin-rules ARCH=x86 -C ../../.. headers_install
make[1]: Entering directory '/root/linux'
  INSTALL ./usr/include
make[1]: Leaving directory '/root/linux'
make[1]: Entering directory '/root/linux/tools/testing/selftests/vm'
make[1]: *** No rule to make target 'vm.c', needed by '/root/linux/tools/testing/selftests/vm/vm_64'.  Stop.
make[1]: Leaving directory '/root/linux/tools/testing/selftests/vm'
make: *** [Makefile:175: all] Error 2
make: Leaving directory '/root/linux/tools/testing/selftests'

The TARGETS variable passed to tools/testing/selftests/Makefile collides
with the TARGETS used in tools/testing/selftests/vm/Makefile, so rename
the latter to VMTARGETS, eliminating the collision with no functional
change.

Link: https://lkml.kernel.org/r/20220504213454.1282532-1-jsavitz@redhat.com
Fixes: f21fda8f6453 ("selftests: vm: pkeys: fix multilib builds for x86")
	Signed-off-by: Joel Savitz <jsavitz@redhat.com>
	Acked-by: Nico Pache <npache@redhat.com>
	Cc: Joel Savitz <jsavitz@redhat.com>
	Cc: Shuah Khan <shuah@kernel.org>
	Cc: Sandipan Das <sandipan@linux.ibm.com>
	Cc: Dave Hansen <dave.hansen@intel.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 41c240099fe09377b6b9f8272e45d2267c843d3e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/vm/Makefile
diff --cc tools/testing/selftests/vm/Makefile
index af96f445fd87,5b1ecd00695b..000000000000
--- a/tools/testing/selftests/vm/Makefile
+++ b/tools/testing/selftests/vm/Makefile
@@@ -33,7 -49,38 +33,42 @@@ TEST_GEN_FILES += on-fault-limi
  TEST_GEN_FILES += thuge-gen
  TEST_GEN_FILES += transhuge-stress
  TEST_GEN_FILES += userfaultfd
++<<<<<<< HEAD
 +TEST_GEN_FILES += khugepaged
++=======
+ TEST_GEN_FILES += split_huge_page_test
+ TEST_GEN_FILES += ksm_tests
+ 
+ ifeq ($(MACHINE),x86_64)
+ CAN_BUILD_I386 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_32bit_program.c -m32)
+ CAN_BUILD_X86_64 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_64bit_program.c)
+ CAN_BUILD_WITH_NOPIE := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_program.c -no-pie)
+ 
+ VMTARGETS := protection_keys
+ BINARIES_32 := $(VMTARGETS:%=%_32)
+ BINARIES_64 := $(VMTARGETS:%=%_64)
+ 
+ ifeq ($(CAN_BUILD_WITH_NOPIE),1)
+ CFLAGS += -no-pie
+ endif
+ 
+ ifeq ($(CAN_BUILD_I386),1)
+ TEST_GEN_FILES += $(BINARIES_32)
+ endif
+ 
+ ifeq ($(CAN_BUILD_X86_64),1)
+ TEST_GEN_FILES += $(BINARIES_64)
+ endif
+ else
+ 
+ ifneq (,$(findstring $(MACHINE),ppc64))
+ TEST_GEN_FILES += protection_keys
+ endif
+ 
+ endif
+ 
+ ifneq (,$(filter $(MACHINE),arm64 ia64 mips64 parisc64 ppc64 riscv64 s390x sh64 sparc64 x86_64))
++>>>>>>> 41c240099fe0 (selftests: vm: Makefile: rename TARGETS to VMTARGETS)
  TEST_GEN_FILES += va_128TBswitch
  TEST_GEN_FILES += virtual_address_range
  TEST_GEN_FILES += write_to_hugetlbfs
@@@ -45,6 -93,72 +80,74 @@@ TEST_FILES := test_vmalloc.s
  KSFT_KHDR_INSTALL := 1
  include ../lib.mk
  
 -ifeq ($(MACHINE),x86_64)
 -BINARIES_32 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_32))
 -BINARIES_64 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_64))
 +$(OUTPUT)/userfaultfd: LDLIBS += -lpthread
  
++<<<<<<< HEAD
 +$(OUTPUT)/mlock-random-test: LDLIBS += -lcap
++=======
+ define gen-target-rule-32
+ $(1) $(1)_32: $(OUTPUT)/$(1)_32
+ .PHONY: $(1) $(1)_32
+ endef
+ 
+ define gen-target-rule-64
+ $(1) $(1)_64: $(OUTPUT)/$(1)_64
+ .PHONY: $(1) $(1)_64
+ endef
+ 
+ ifeq ($(CAN_BUILD_I386),1)
+ $(BINARIES_32): CFLAGS += -m32 -mxsave
+ $(BINARIES_32): LDLIBS += -lrt -ldl -lm
+ $(BINARIES_32): $(OUTPUT)/%_32: %.c
+ 	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(notdir $^) $(LDLIBS) -o $@
+ $(foreach t,$(VMTARGETS),$(eval $(call gen-target-rule-32,$(t))))
+ endif
+ 
+ ifeq ($(CAN_BUILD_X86_64),1)
+ $(BINARIES_64): CFLAGS += -m64 -mxsave
+ $(BINARIES_64): LDLIBS += -lrt -ldl
+ $(BINARIES_64): $(OUTPUT)/%_64: %.c
+ 	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(notdir $^) $(LDLIBS) -o $@
+ $(foreach t,$(VMTARGETS),$(eval $(call gen-target-rule-64,$(t))))
+ endif
+ 
+ # x86_64 users should be encouraged to install 32-bit libraries
+ ifeq ($(CAN_BUILD_I386)$(CAN_BUILD_X86_64),01)
+ all: warn_32bit_failure
+ 
+ warn_32bit_failure:
+ 	@echo "Warning: you seem to have a broken 32-bit build" 2>&1;		\
+ 	echo  "environment. This will reduce test coverage of 64-bit" 2>&1;	\
+ 	echo  "kernels. If you are using a Debian-like distribution," 2>&1;	\
+ 	echo  "try:"; 2>&1;							\
+ 	echo  "";								\
+ 	echo  "  apt-get install gcc-multilib libc6-i386 libc6-dev-i386";	\
+ 	echo  "";								\
+ 	echo  "If you are using a Fedora-like distribution, try:";		\
+ 	echo  "";								\
+ 	echo  "  yum install glibc-devel.*i686";				\
+ 	exit 0;
+ endif
+ endif
+ 
+ $(OUTPUT)/mlock-random-test $(OUTPUT)/memfd_secret: LDLIBS += -lcap
+ 
+ # HMM_EXTRA_LIBS may get set in local_config.mk, or it may be left empty.
+ $(OUTPUT)/hmm-tests: LDLIBS += $(HMM_EXTRA_LIBS)
+ 
+ $(OUTPUT)/ksm_tests: LDLIBS += -lnuma
+ 
+ local_config.mk local_config.h: check_config.sh
+ 	/bin/sh ./check_config.sh $(CC)
+ 
+ EXTRA_CLEAN += local_config.mk local_config.h
+ 
+ ifeq ($(HMM_EXTRA_LIBS),)
+ all: warn_missing_hugelibs
+ 
+ warn_missing_hugelibs:
+ 	@echo ; \
+ 	echo "Warning: missing libhugetlbfs support. Some HMM tests will be skipped." ; \
+ 	echo
+ endif
++>>>>>>> 41c240099fe0 (selftests: vm: Makefile: rename TARGETS to VMTARGETS)
* Unmerged path tools/testing/selftests/vm/Makefile
