perf/x86/intel/lbr: Add static_branch for LBR INFO flags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-408.el8
commit-author Peter Zijlstra (Intel) <peterz@infradead.org>
commit 6b19788ddc5937831ffd27525a1b793953fd2d2b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-408.el8/6b19788d.failed

Using static_branch to replace the LBR INFO flags to optimize the LBR
INFO parsing.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Tested-by: Kan Liang <kan.liang@linux.intel.com>
Link: https://lkml.kernel.org/r/1641315077-96661-2-git-send-email-peterz@infradead.org
(cherry picked from commit 6b19788ddc5937831ffd27525a1b793953fd2d2b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/intel/lbr.c
diff --cc arch/x86/events/intel/lbr.c
index 6543274c6cb7,f8fd25528935..000000000000
--- a/arch/x86/events/intel/lbr.c
+++ b/arch/x86/events/intel/lbr.c
@@@ -1714,6 -1699,38 +1717,41 @@@ void intel_pmu_lbr_init_knl(void
  		x86_pmu.intel_cap.lbr_format = LBR_FORMAT_EIP_FLAGS;
  }
  
++<<<<<<< HEAD
++=======
+ void intel_pmu_lbr_init(void)
+ {
+ 	switch (x86_pmu.intel_cap.lbr_format) {
+ 	case LBR_FORMAT_EIP_FLAGS2:
+ 		x86_pmu.lbr_has_tsx = 1;
+ 		fallthrough;
+ 	case LBR_FORMAT_EIP_FLAGS:
+ 		x86_pmu.lbr_from_flags = 1;
+ 		break;
+ 
+ 	case LBR_FORMAT_INFO:
+ 		x86_pmu.lbr_has_tsx = 1;
+ 		fallthrough;
+ 	case LBR_FORMAT_INFO2:
+ 		x86_pmu.lbr_has_info = 1;
+ 		break;
+ 
+ 	case LBR_FORMAT_TIME:
+ 		x86_pmu.lbr_from_flags = 1;
+ 		x86_pmu.lbr_to_cycles = 1;
+ 		break;
+ 	}
+ 
+ 	if (x86_pmu.lbr_has_info) {
+ 		/*
+ 		 * Only used in combination with baseline pebs.
+ 		 */
+ 		static_branch_enable(&x86_lbr_mispred);
+ 		static_branch_enable(&x86_lbr_cycles);
+ 	}
+ }
+ 
++>>>>>>> 6b19788ddc59 (perf/x86/intel/lbr: Add static_branch for LBR INFO flags)
  /*
   * LBR state size is variable based on the max number of registers.
   * This calculates the expected state size, which should match
* Unmerged path arch/x86/events/intel/lbr.c
