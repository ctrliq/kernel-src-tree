ceph: move mount state enum to super.h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.19.2.el8_7
commit-author Xiubo Li <xiubli@redhat.com>
commit b38b17b6a01ca4e738af097a1529910646ef4270
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.19.2.el8_7/b38b17b6.failed

These flags are only used in ceph filesystem in fs/ceph, so just
move it to the place it should be.

	Signed-off-by: Xiubo Li <xiubli@redhat.com>
	Reviewed-by: Venky Shankar <vshankar@redhat.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit b38b17b6a01ca4e738af097a1529910646ef4270)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/super.h
diff --cc fs/ceph/super.h
index e363a1bbd4c8,cd95b426ee00..000000000000
--- a/fs/ceph/super.h
+++ b/fs/ceph/super.h
@@@ -98,8 -97,21 +98,23 @@@ struct ceph_mount_options 
  	char *mds_namespace;  /* default NULL */
  	char *server_path;    /* default NULL (means "/") */
  	char *fscache_uniq;   /* default NULL */
 -	char *mon_addr;
  };
  
++<<<<<<< HEAD
++=======
+ /* mount state */
+ enum {
+ 	CEPH_MOUNT_MOUNTING,
+ 	CEPH_MOUNT_MOUNTED,
+ 	CEPH_MOUNT_UNMOUNTING,
+ 	CEPH_MOUNT_UNMOUNTED,
+ 	CEPH_MOUNT_SHUTDOWN,
+ 	CEPH_MOUNT_RECOVER,
+ };
+ 
+ #define CEPH_ASYNC_CREATE_CONFLICT_BITS 8
+ 
++>>>>>>> b38b17b6a01c (ceph: move mount state enum to super.h)
  struct ceph_fs_client {
  	struct super_block *sb;
  
* Unmerged path fs/ceph/super.h
diff --git a/include/linux/ceph/libceph.h b/include/linux/ceph/libceph.h
index cbea87415905..0a86a5dfe75e 100644
--- a/include/linux/ceph/libceph.h
+++ b/include/linux/ceph/libceph.h
@@ -100,16 +100,6 @@ struct ceph_options {
 
 #define CEPH_AUTH_NAME_DEFAULT   "guest"
 
-/* mount state */
-enum {
-	CEPH_MOUNT_MOUNTING,
-	CEPH_MOUNT_MOUNTED,
-	CEPH_MOUNT_UNMOUNTING,
-	CEPH_MOUNT_UNMOUNTED,
-	CEPH_MOUNT_SHUTDOWN,
-	CEPH_MOUNT_RECOVER,
-};
-
 static inline unsigned long ceph_timeout_jiffies(unsigned long timeout)
 {
 	return timeout ?: MAX_SCHEDULE_TIMEOUT;
