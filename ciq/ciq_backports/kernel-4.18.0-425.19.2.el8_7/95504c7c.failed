KVM: x86: SVM: don't save SVM state to SMRAM when VM is not long mode capable

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.19.2.el8_7
commit-author Maxim Levitsky <mlevitsk@redhat.com>
commit 95504c7c981b3260b3b238ace03f3519bd9a0b6d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.19.2.el8_7/95504c7c.failed

When the guest CPUID doesn't have support for long mode, 32 bit SMRAM
layout is used and it has no support for preserving EFER and/or SVM
state.

Note that this isn't relevant to running 32 bit guests on VM which is
long mode capable - such VM can still run 32 bit guests in compatibility
mode.

	Signed-off-by: Maxim Levitsky <mlevitsk@redhat.com>
Message-Id: <20221025124741.228045-23-mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 95504c7c981b3260b3b238ace03f3519bd9a0b6d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/svm.c
diff --cc arch/x86/kvm/svm/svm.c
index 8fe019062328,527f18d8cc44..000000000000
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@@ -4227,10 -4410,16 +4227,23 @@@ static int svm_enter_smm(struct kvm_vcp
  	if (!is_guest_mode(vcpu))
  		return 0;
  
++<<<<<<< HEAD
 +	/* FED8h - SVM Guest */
 +	PUT_SMSTATE(u64, smstate, 0x7ed8, 1);
 +	/* FEE0h - SVM Guest VMCB Physical Address */
 +	PUT_SMSTATE(u64, smstate, 0x7ee0, svm->nested.vmcb12_gpa);
++=======
+ 	/*
+ 	 * 32-bit SMRAM format doesn't preserve EFER and SVM state.  Userspace is
+ 	 * responsible for ensuring nested SVM and SMIs are mutually exclusive.
+ 	 */
+ 
+ 	if (!guest_cpuid_has(vcpu, X86_FEATURE_LM))
+ 		return 1;
+ 
+ 	smram->smram64.svm_guest_flag = 1;
+ 	smram->smram64.svm_guest_vmcb_gpa = svm->nested.vmcb12_gpa;
++>>>>>>> 95504c7c981b (KVM: x86: SVM: don't save SVM state to SMRAM when VM is not long mode capable)
  
  	svm->vmcb->save.rax = vcpu->arch.regs[VCPU_REGS_RAX];
  	svm->vmcb->save.rsp = vcpu->arch.regs[VCPU_REGS_RSP];
* Unmerged path arch/x86/kvm/svm/svm.c
