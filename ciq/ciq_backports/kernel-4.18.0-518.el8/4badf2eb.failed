cpufreq: amd-pstate: Add ->fast_switch() callback

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-518.el8
commit-author Gautham R. Shenoy <gautham.shenoy@amd.com>
commit 4badf2eb1e986bdbf34dd2f5d4c979553a86fe54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-518.el8/4badf2eb.failed

Schedutil normally calls the adjust_perf callback for drivers with
adjust_perf callback available and fast_switch_possible flag set.
However, when frequency invariance is disabled and schedutil tries to
invoke fast_switch. So, there is a chance of kernel crash if this
function pointer is not set. To protect against this scenario add
fast_switch callback to amd_pstate driver.

Fixes: 1d215f0319c2 ("cpufreq: amd-pstate: Add fast switch function for AMD P-State")
	Signed-off-by: Gautham R. Shenoy <gautham.shenoy@amd.com>
	Signed-off-by: Wyes Karny <wyes.karny@amd.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 4badf2eb1e986bdbf34dd2f5d4c979553a86fe54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/amd-pstate.c
diff --cc drivers/cpufreq/amd-pstate.c
index 2c71ef90154d,45711fc0a856..000000000000
--- a/drivers/cpufreq/amd-pstate.c
+++ b/drivers/cpufreq/amd-pstate.c
@@@ -328,10 -464,20 +327,25 @@@ static int amd_pstate_update_freq(struc
  	des_perf = DIV_ROUND_CLOSEST(target_freq * cap_perf,
  				     cpudata->max_freq);
  
- 	cpufreq_freq_transition_begin(policy, &freqs);
+ 	WARN_ON(fast_switch && !policy->fast_switch_enabled);
+ 	/*
+ 	 * If fast_switch is desired, then there aren't any registered
+ 	 * transition notifiers. See comment for
+ 	 * cpufreq_enable_fast_switch().
+ 	 */
+ 	if (!fast_switch)
+ 		cpufreq_freq_transition_begin(policy, &freqs);
+ 
  	amd_pstate_update(cpudata, min_perf, des_perf,
++<<<<<<< HEAD
 +			  max_perf, false);
 +	cpufreq_freq_transition_end(policy, &freqs, false);
++=======
+ 			max_perf, fast_switch, policy->governor->flags);
+ 
+ 	if (!fast_switch)
+ 		cpufreq_freq_transition_end(policy, &freqs, false);
++>>>>>>> 4badf2eb1e98 (cpufreq: amd-pstate: Add ->fast_switch() callback)
  
  	return 0;
  }
* Unmerged path drivers/cpufreq/amd-pstate.c
