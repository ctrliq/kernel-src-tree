media: uvcvideo: Fix memory leak if uvc_ctrl_add_mapping fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Ricardo Ribalda <ribalda@chromium.org>
commit 18a9b21f7a9d417ac07e2d2717a6a9679b664627
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/18a9b21f.failed

Move all the life cycle of the name to add_mapping. This simplifies
the error handling inside uvc_ioctl_ctrl_map and solves a memory leak
when kemmdup fails.

Also make sure that for custom controls, the user provides a valid name.

Fixes: 07adedb5c606 ("media: uvcvideo: Use control names from framework")
	Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
	Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
(cherry picked from commit 18a9b21f7a9d417ac07e2d2717a6a9679b664627)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/usb/uvc/uvc_v4l2.c
diff --cc drivers/media/usb/uvc/uvc_v4l2.c
index 858db1c4a9be,648dcd579e81..000000000000
--- a/drivers/media/usb/uvc/uvc_v4l2.c
+++ b/drivers/media/usb/uvc/uvc_v4l2.c
@@@ -40,7 -40,15 +40,19 @@@ static int uvc_ioctl_ctrl_map(struct uv
  		return -ENOMEM;
  
  	map->id = xmap->id;
++<<<<<<< HEAD
 +	memcpy(map->name, xmap->name, sizeof(map->name));
++=======
+ 	/* Non standard control id. */
+ 	if (v4l2_ctrl_get_name(map->id) == NULL) {
+ 		if (xmap->name[0] == '\0') {
+ 			ret = -EINVAL;
+ 			goto free_map;
+ 		}
+ 		xmap->name[sizeof(xmap->name) - 1] = '\0';
+ 		map->name = xmap->name;
+ 	}
++>>>>>>> 18a9b21f7a9d (media: uvcvideo: Fix memory leak if uvc_ctrl_add_mapping fails)
  	memcpy(map->entity, xmap->entity, sizeof(map->entity));
  	map->selector = xmap->selector;
  	map->size = xmap->size;
diff --git a/drivers/media/usb/uvc/uvc_ctrl.c b/drivers/media/usb/uvc/uvc_ctrl.c
index 0b5a224748c7..72d8b8d534ce 100644
--- a/drivers/media/usb/uvc/uvc_ctrl.c
+++ b/drivers/media/usb/uvc/uvc_ctrl.c
@@ -2190,11 +2190,21 @@ static int __uvc_ctrl_add_mapping(struct uvc_video_chain *chain,
 	if (map == NULL)
 		return -ENOMEM;
 
+	/* For UVCIOC_CTRL_MAP custom control */
+	if (mapping->name) {
+		map->name = kstrdup(mapping->name, GFP_KERNEL);
+		if (!map->name) {
+			kfree(map);
+			return -ENOMEM;
+		}
+	}
+
 	INIT_LIST_HEAD(&map->ev_subs);
 
 	size = sizeof(*mapping->menu_info) * mapping->menu_count;
 	map->menu_info = kmemdup(mapping->menu_info, size, GFP_KERNEL);
 	if (map->menu_info == NULL) {
+		kfree(map->name);
 		kfree(map);
 		return -ENOMEM;
 	}
* Unmerged path drivers/media/usb/uvc/uvc_v4l2.c
