driver core: bus: bus_register/unregister() cleanups

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 3465e2e4a24eef9bc9f21aa29d83fd7000c1da48
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/3465e2e4.failed

Convert the bus_register() and bus_unregister() functions to use
bus_to_subsys() and not use the back-pointer to the private structure.

Because bus_add_groups() and bus_remove_groups() were only called in one
place, remove those one-line-wrapper functions and call the real sysfs
group function where it is needed instead, saving another layer of
indirection.

	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Link: https://lore.kernel.org/r/20230208111330.439504-8-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 3465e2e4a24eef9bc9f21aa29d83fd7000c1da48)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/bus.c
diff --cc drivers/base/bus.c
index 884089cfbf1d,d515a8363522..000000000000
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@@ -872,7 -827,8 +860,12 @@@ int bus_register(struct bus_type *bus
  {
  	int retval;
  	struct subsys_private *priv;
++<<<<<<< HEAD
 +	struct lock_class_key *key = &bus->lock_key;
++=======
+ 	struct kobject *bus_kobj;
+ 	struct lock_class_key *key;
++>>>>>>> 3465e2e4a24e (driver core: bus: bus_register/unregister() cleanups)
  
  	priv = kzalloc(sizeof(struct subsys_private), GFP_KERNEL);
  	if (!priv)
* Unmerged path drivers/base/bus.c
