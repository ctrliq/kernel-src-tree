PM: runtime: Adjust white space in the core code

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit dbfa44782787dc90460bae8b500708ec83e0f611
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/dbfa4478.failed

Some inconsistent usage of white space in the PM-runtime core code
causes that code to be somewhat harder to read that it would have
been otherwise, so adjust the white space in there to be more
consistent with the rest of the code.

No expected functional impact.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit dbfa44782787dc90460bae8b500708ec83e0f611)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/power/runtime.c
diff --cc drivers/base/power/runtime.c
index 62e0fbdf9463,50e726b6c2cf..000000000000
--- a/drivers/base/power/runtime.c
+++ b/drivers/base/power/runtime.c
@@@ -545,21 -566,19 +543,27 @@@ static int rpm_suspend(struct device *d
  
   repeat:
  	retval = rpm_check_suspend_allowed(dev);
 +
  	if (retval < 0)
 -		goto out;	/* Conditions are wrong. */
 +		;	/* Conditions are wrong. */
  
  	/* Synchronous suspends are not allowed in the RPM_RESUMING state. */
 -	if (dev->power.runtime_status == RPM_RESUMING && !(rpmflags & RPM_ASYNC))
 +	else if (dev->power.runtime_status == RPM_RESUMING &&
 +	    !(rpmflags & RPM_ASYNC))
  		retval = -EAGAIN;
+ 
  	if (retval)
  		goto out;
  
  	/* If the autosuspend_delay time hasn't expired yet, reschedule. */
++<<<<<<< HEAD
 +	if ((rpmflags & RPM_AUTO)
 +	    && dev->power.runtime_status != RPM_SUSPENDING) {
 +		unsigned long expires = pm_runtime_autosuspend_expiration(dev);
++=======
+ 	if ((rpmflags & RPM_AUTO) && dev->power.runtime_status != RPM_SUSPENDING) {
+ 		u64 expires = pm_runtime_autosuspend_expiration(dev);
++>>>>>>> dbfa44782787 (PM: runtime: Adjust white space in the core code)
  
  		if (expires != 0) {
  			/* Pending requests need to be canceled. */
@@@ -572,10 -591,20 +576,27 @@@
  			 * expire; pm_suspend_timer_fn() will take care of the
  			 * rest.
  			 */
++<<<<<<< HEAD
 +			if (!(dev->power.timer_expires && time_before_eq(
 +			    dev->power.timer_expires, expires))) {
 +				dev->power.timer_expires = expires;
 +				mod_timer(&dev->power.suspend_timer, expires);
++=======
+ 			if (!(dev->power.timer_expires &&
+ 			    dev->power.timer_expires <= expires)) {
+ 				/*
+ 				 * We add a slack of 25% to gather wakeups
+ 				 * without sacrificing the granularity.
+ 				 */
+ 				u64 slack = (u64)READ_ONCE(dev->power.autosuspend_delay) *
+ 						    (NSEC_PER_MSEC >> 2);
+ 
+ 				dev->power.timer_expires = expires;
+ 				hrtimer_start_range_ns(&dev->power.suspend_timer,
+ 						       ns_to_ktime(expires),
+ 						       slack,
+ 						       HRTIMER_MODE_ABS);
++>>>>>>> dbfa44782787 (PM: runtime: Adjust white space in the core code)
  			}
  			dev->power.timer_autosuspends = 1;
  			goto out;
* Unmerged path drivers/base/power/runtime.c
