usb: uvc: make uvc_format_desc table const

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Michael Grzeschik <m.grzeschik@pengutronix.de>
commit 8ecb17a86c0fbb86ea9fb4fa26e742600e945794
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/8ecb17a8.failed

Since the uvc_fmts array can not be modified we declare it const and
change every user of the uvc_format_by_guid function aswell.

	Reviewed-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Reviewed-by: Daniel Scally <dan.scally@ideasonboard.com>
	Tested-by: Daniel Scally <dan.scally@ideasonboard.com>
	Signed-off-by: Michael Grzeschik <m.grzeschik@pengutronix.de>
Link: https://lore.kernel.org/r/20230126231456.3402323-5-m.grzeschik@pengutronix.de
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 8ecb17a86c0fbb86ea9fb4fa26e742600e945794)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/common/uvc.c
#	include/linux/usb/uvc.h
diff --cc include/linux/usb/uvc.h
index b010a36fc1d9,b0210c5c5406..000000000000
--- a/include/linux/usb/uvc.h
+++ b/include/linux/usb/uvc.h
@@@ -158,210 -154,6 +158,214 @@@ struct uvc_format_desc 
  	u32 fcc;
  };
  
++<<<<<<< HEAD
 +static struct uvc_format_desc uvc_fmts[] = {
 +	{
 +		.name		= "YUV 4:2:2 (YUYV)",
 +		.guid		= UVC_GUID_FORMAT_YUY2,
 +		.fcc		= V4L2_PIX_FMT_YUYV,
 +	},
 +	{
 +		.name		= "YUV 4:2:2 (YUYV)",
 +		.guid		= UVC_GUID_FORMAT_YUY2_ISIGHT,
 +		.fcc		= V4L2_PIX_FMT_YUYV,
 +	},
 +	{
 +		.name		= "YUV 4:2:0 (NV12)",
 +		.guid		= UVC_GUID_FORMAT_NV12,
 +		.fcc		= V4L2_PIX_FMT_NV12,
 +	},
 +	{
 +		.name		= "MJPEG",
 +		.guid		= UVC_GUID_FORMAT_MJPEG,
 +		.fcc		= V4L2_PIX_FMT_MJPEG,
 +	},
 +	{
 +		.name		= "YVU 4:2:0 (YV12)",
 +		.guid		= UVC_GUID_FORMAT_YV12,
 +		.fcc		= V4L2_PIX_FMT_YVU420,
 +	},
 +	{
 +		.name		= "YUV 4:2:0 (I420)",
 +		.guid		= UVC_GUID_FORMAT_I420,
 +		.fcc		= V4L2_PIX_FMT_YUV420,
 +	},
 +	{
 +		.name		= "YUV 4:2:0 (M420)",
 +		.guid		= UVC_GUID_FORMAT_M420,
 +		.fcc		= V4L2_PIX_FMT_M420,
 +	},
 +	{
 +		.name		= "YUV 4:2:2 (UYVY)",
 +		.guid		= UVC_GUID_FORMAT_UYVY,
 +		.fcc		= V4L2_PIX_FMT_UYVY,
 +	},
 +	{
 +		.name		= "Greyscale 8-bit (Y800)",
 +		.guid		= UVC_GUID_FORMAT_Y800,
 +		.fcc		= V4L2_PIX_FMT_GREY,
 +	},
 +	{
 +		.name		= "Greyscale 8-bit (Y8  )",
 +		.guid		= UVC_GUID_FORMAT_Y8,
 +		.fcc		= V4L2_PIX_FMT_GREY,
 +	},
 +	{
 +		.name		= "Greyscale 8-bit (D3DFMT_L8)",
 +		.guid		= UVC_GUID_FORMAT_D3DFMT_L8,
 +		.fcc		= V4L2_PIX_FMT_GREY,
 +	},
 +	{
 +		.name		= "IR 8-bit (L8_IR)",
 +		.guid		= UVC_GUID_FORMAT_KSMEDIA_L8_IR,
 +		.fcc		= V4L2_PIX_FMT_GREY,
 +	},
 +	{
 +		.name		= "Greyscale 10-bit (Y10 )",
 +		.guid		= UVC_GUID_FORMAT_Y10,
 +		.fcc		= V4L2_PIX_FMT_Y10,
 +	},
 +	{
 +		.name		= "Greyscale 12-bit (Y12 )",
 +		.guid		= UVC_GUID_FORMAT_Y12,
 +		.fcc		= V4L2_PIX_FMT_Y12,
 +	},
 +	{
 +		.name		= "Greyscale 16-bit (Y16 )",
 +		.guid		= UVC_GUID_FORMAT_Y16,
 +		.fcc		= V4L2_PIX_FMT_Y16,
 +	},
 +	{
 +		.name		= "BGGR Bayer (BY8 )",
 +		.guid		= UVC_GUID_FORMAT_BY8,
 +		.fcc		= V4L2_PIX_FMT_SBGGR8,
 +	},
 +	{
 +		.name		= "BGGR Bayer (BA81)",
 +		.guid		= UVC_GUID_FORMAT_BA81,
 +		.fcc		= V4L2_PIX_FMT_SBGGR8,
 +	},
 +	{
 +		.name		= "GBRG Bayer (GBRG)",
 +		.guid		= UVC_GUID_FORMAT_GBRG,
 +		.fcc		= V4L2_PIX_FMT_SGBRG8,
 +	},
 +	{
 +		.name		= "GRBG Bayer (GRBG)",
 +		.guid		= UVC_GUID_FORMAT_GRBG,
 +		.fcc		= V4L2_PIX_FMT_SGRBG8,
 +	},
 +	{
 +		.name		= "RGGB Bayer (RGGB)",
 +		.guid		= UVC_GUID_FORMAT_RGGB,
 +		.fcc		= V4L2_PIX_FMT_SRGGB8,
 +	},
 +	{
 +		.name		= "RGB565",
 +		.guid		= UVC_GUID_FORMAT_RGBP,
 +		.fcc		= V4L2_PIX_FMT_RGB565,
 +	},
 +	{
 +		.name		= "BGR 8:8:8 (BGR3)",
 +		.guid		= UVC_GUID_FORMAT_BGR3,
 +		.fcc		= V4L2_PIX_FMT_BGR24,
 +	},
 +	{
 +		.name		= "BGRA/X 8:8:8:8 (BGR4)",
 +		.guid		= UVC_GUID_FORMAT_BGR4,
 +		.fcc		= V4L2_PIX_FMT_XBGR32,
 +	},
 +	{
 +		.name		= "H.264",
 +		.guid		= UVC_GUID_FORMAT_H264,
 +		.fcc		= V4L2_PIX_FMT_H264,
 +	},
 +	{
 +		.name		= "H.265",
 +		.guid		= UVC_GUID_FORMAT_H265,
 +		.fcc		= V4L2_PIX_FMT_HEVC,
 +	},
 +	{
 +		.name		= "Greyscale 8 L/R (Y8I)",
 +		.guid		= UVC_GUID_FORMAT_Y8I,
 +		.fcc		= V4L2_PIX_FMT_Y8I,
 +	},
 +	{
 +		.name		= "Greyscale 12 L/R (Y12I)",
 +		.guid		= UVC_GUID_FORMAT_Y12I,
 +		.fcc		= V4L2_PIX_FMT_Y12I,
 +	},
 +	{
 +		.name		= "Depth data 16-bit (Z16)",
 +		.guid		= UVC_GUID_FORMAT_Z16,
 +		.fcc		= V4L2_PIX_FMT_Z16,
 +	},
 +	{
 +		.name		= "Bayer 10-bit (SRGGB10P)",
 +		.guid		= UVC_GUID_FORMAT_RW10,
 +		.fcc		= V4L2_PIX_FMT_SRGGB10P,
 +	},
 +	{
 +		.name		= "Bayer 16-bit (SBGGR16)",
 +		.guid		= UVC_GUID_FORMAT_BG16,
 +		.fcc		= V4L2_PIX_FMT_SBGGR16,
 +	},
 +	{
 +		.name		= "Bayer 16-bit (SGBRG16)",
 +		.guid		= UVC_GUID_FORMAT_GB16,
 +		.fcc		= V4L2_PIX_FMT_SGBRG16,
 +	},
 +	{
 +		.name		= "Bayer 16-bit (SRGGB16)",
 +		.guid		= UVC_GUID_FORMAT_RG16,
 +		.fcc		= V4L2_PIX_FMT_SRGGB16,
 +	},
 +	{
 +		.name		= "Bayer 16-bit (SGRBG16)",
 +		.guid		= UVC_GUID_FORMAT_GR16,
 +		.fcc		= V4L2_PIX_FMT_SGRBG16,
 +	},
 +	{
 +		.name		= "Depth data 16-bit (Z16)",
 +		.guid		= UVC_GUID_FORMAT_INVZ,
 +		.fcc		= V4L2_PIX_FMT_Z16,
 +	},
 +	{
 +		.name		= "Greyscale 10-bit (Y10 )",
 +		.guid		= UVC_GUID_FORMAT_INVI,
 +		.fcc		= V4L2_PIX_FMT_Y10,
 +	},
 +	{
 +		.name		= "IR:Depth 26-bit (INZI)",
 +		.guid		= UVC_GUID_FORMAT_INZI,
 +		.fcc		= V4L2_PIX_FMT_INZI,
 +	},
 +	{
 +		.name		= "4-bit Depth Confidence (Packed)",
 +		.guid		= UVC_GUID_FORMAT_CNF4,
 +		.fcc		= V4L2_PIX_FMT_CNF4,
 +	},
 +	{
 +		.name		= "HEVC",
 +		.guid		= UVC_GUID_FORMAT_HEVC,
 +		.fcc		= V4L2_PIX_FMT_HEVC,
 +	},
 +};
 +
 +static inline struct uvc_format_desc *uvc_format_by_guid(const u8 guid[16])
 +{
 +	unsigned int len = ARRAY_SIZE(uvc_fmts);
 +	unsigned int i;
 +
 +	for (i = 0; i < len; ++i) {
 +		if (memcmp(guid, uvc_fmts[i].guid, 16) == 0)
 +			return &uvc_fmts[i];
 +	}
 +
 +	return NULL;
 +}
++=======
+ const struct uvc_format_desc *uvc_format_by_guid(const u8 guid[16]);
++>>>>>>> 8ecb17a86c0f (usb: uvc: make uvc_format_desc table const)
  
  #endif /* __LINUX_V4L2_UVC_H */
* Unmerged path drivers/media/common/uvc.c
* Unmerged path drivers/media/common/uvc.c
diff --git a/drivers/media/usb/uvc/uvc_driver.c b/drivers/media/usb/uvc/uvc_driver.c
index d3303d5ebf77..e51d1895c906 100644
--- a/drivers/media/usb/uvc/uvc_driver.c
+++ b/drivers/media/usb/uvc/uvc_driver.c
@@ -225,7 +225,7 @@ static int uvc_parse_format(struct uvc_device *dev,
 {
 	struct usb_interface *intf = streaming->intf;
 	struct usb_host_interface *alts = intf->cur_altsetting;
-	struct uvc_format_desc *fmtdesc;
+	const struct uvc_format_desc *fmtdesc;
 	struct uvc_frame *frame;
 	const unsigned char *start = buffer;
 	unsigned int width_multiplier = 1;
diff --git a/drivers/usb/gadget/function/uvc_v4l2.c b/drivers/usb/gadget/function/uvc_v4l2.c
index 00cd8933b0eb..d897afd35c42 100644
--- a/drivers/usb/gadget/function/uvc_v4l2.c
+++ b/drivers/usb/gadget/function/uvc_v4l2.c
@@ -27,10 +27,10 @@
 #include "uvc_v4l2.h"
 #include "uvc_configfs.h"
 
-static struct uvc_format_desc *to_uvc_format(struct uvcg_format *uformat)
+static const struct uvc_format_desc *to_uvc_format(struct uvcg_format *uformat)
 {
 	char guid[16] = UVC_GUID_FORMAT_MJPEG;
-	struct uvc_format_desc *format;
+	const struct uvc_format_desc *format;
 	struct uvcg_uncompressed *unc;
 
 	if (uformat->type == UVCG_UNCOMPRESSED) {
@@ -119,7 +119,7 @@ static struct uvcg_format *find_format_by_pix(struct uvc_device *uvc,
 	struct uvcg_format *uformat = NULL;
 
 	list_for_each_entry(format, &uvc->header->formats, entry) {
-		struct uvc_format_desc *fmtdesc = to_uvc_format(format->fmt);
+		const struct uvc_format_desc *fmtdesc = to_uvc_format(format->fmt);
 
 		if (fmtdesc->fcc == pixelformat) {
 			uformat = format->fmt;
@@ -394,7 +394,7 @@ uvc_v4l2_enum_format(struct file *file, void *fh, struct v4l2_fmtdesc *f)
 {
 	struct video_device *vdev = video_devdata(file);
 	struct uvc_device *uvc = video_get_drvdata(vdev);
-	struct uvc_format_desc *fmtdesc;
+	const struct uvc_format_desc *fmtdesc;
 	struct uvcg_format *uformat;
 
 	if (f->index >= uvc->header->num_fmt)
* Unmerged path include/linux/usb/uvc.h
