driver core: bus: constify bus_get_kset()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit f91482be9b480dfce2616f5ba3fa548b8ed41efb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/f91482be.failed

The bus_get_kset() function should be taking a const * to bus_type, not
just a * so fix that up.

	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Link: https://lore.kernel.org/r/20230208111330.439504-20-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit f91482be9b480dfce2616f5ba3fa548b8ed41efb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/bus.c
#	include/linux/device/bus.h
diff --cc drivers/base/bus.c
index 9276fb51f7b7,c394727b8253..000000000000
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@@ -998,7 -976,18 +998,22 @@@ int bus_unregister_notifier(struct bus_
  }
  EXPORT_SYMBOL_GPL(bus_unregister_notifier);
  
++<<<<<<< HEAD
 +struct kset *bus_get_kset(struct bus_type *bus)
++=======
+ void bus_notify(struct device *dev, enum bus_notifier_event value)
+ {
+ 	struct subsys_private *sp = bus_to_subsys(dev->bus);
+ 
+ 	if (!sp)
+ 		return;
+ 
+ 	blocking_notifier_call_chain(&sp->bus_notifier, value, dev);
+ 	subsys_put(sp);
+ }
+ 
+ struct kset *bus_get_kset(const struct bus_type *bus)
++>>>>>>> f91482be9b48 (driver core: bus: constify bus_get_kset())
  {
  	struct subsys_private *sp = bus_to_subsys(bus);
  	struct kset *kset;
* Unmerged path include/linux/device/bus.h
* Unmerged path drivers/base/bus.c
* Unmerged path include/linux/device/bus.h
