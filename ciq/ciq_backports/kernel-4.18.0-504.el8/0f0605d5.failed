driver core: remove devm_device_remove_group()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 0f0605d550ed986279030d452c7ed10df34da449
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/0f0605d5.failed

There is no in-kernel user of this function, so it is not needed anymore
and can be removed.

	Cc: Dmitry Torokhov <dmitry.torokhov@gmail.com>
	Reviewed-by: Rafael J. Wysocki <rafael@kernel.org>
Link: https://lore.kernel.org/r/20221109140711.105222-2-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 0f0605d550ed986279030d452c7ed10df34da449)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/device.h
diff --cc include/linux/device.h
index a1a70f61fd6c,84ae52de6746..000000000000
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@@ -1775,14 -1060,10 +1775,19 @@@ static inline void device_remove_group(
  	return device_remove_groups(dev, groups);
  }
  
 -int __must_check devm_device_add_groups(struct device *dev,
 +extern int __must_check devm_device_add_groups(struct device *dev,
  					const struct attribute_group **groups);
++<<<<<<< HEAD
 +extern void devm_device_remove_groups(struct device *dev,
 +				      const struct attribute_group **groups);
 +extern int __must_check devm_device_add_group(struct device *dev,
 +					const struct attribute_group *grp);
 +extern void devm_device_remove_group(struct device *dev,
 +				     const struct attribute_group *grp);
++=======
+ int __must_check devm_device_add_group(struct device *dev,
+ 				       const struct attribute_group *grp);
++>>>>>>> 0f0605d550ed (driver core: remove devm_device_remove_group())
  
  /*
   * Platform "fixup" functions - allow the platform to have their say
diff --git a/drivers/base/core.c b/drivers/base/core.c
index 5c0785c9c91c..6c2977c9c31e 100644
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -2462,11 +2462,6 @@ union device_attr_group_devres {
 	const struct attribute_group **groups;
 };
 
-static int devm_attr_group_match(struct device *dev, void *res, void *data)
-{
-	return ((union device_attr_group_devres *)res)->group == data;
-}
-
 static void devm_attr_group_remove(struct device *dev, void *res)
 {
 	union device_attr_group_devres *devres = res;
@@ -2517,23 +2512,6 @@ int devm_device_add_group(struct device *dev, const struct attribute_group *grp)
 }
 EXPORT_SYMBOL_GPL(devm_device_add_group);
 
-/**
- * devm_device_remove_group: remove a managed group from a device
- * @dev:	device to remove the group from
- * @grp:	group to remove
- *
- * This function removes a group of attributes from a device. The attributes
- * previously have to have been created for this group, otherwise it will fail.
- */
-void devm_device_remove_group(struct device *dev,
-			      const struct attribute_group *grp)
-{
-	WARN_ON(devres_release(dev, devm_attr_group_remove,
-			       devm_attr_group_match,
-			       /* cast away const */ (void *)grp));
-}
-EXPORT_SYMBOL_GPL(devm_device_remove_group);
-
 /**
  * devm_device_add_groups - create a bunch of managed attribute groups
  * @dev:	The device to create the group for
* Unmerged path include/linux/device.h
