media: uvcvideo: Avoid invalid memory access

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Ricardo Ribalda <ribalda@chromium.org>
commit f0577b1b6394f954903fcc67e12fe9e7001dafd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/f0577b1b.failed

If mappings points to an invalid memory, we will be invalid accessing
it. Solve it by initializing the value of the variable mapping and by
changing the order in the conditional statement (to avoid accessing
mapping->id if not needed).

Fix:
kasan: GPF could be caused by NULL-ptr deref or user memory access
general protection fault: 0000 [#1] PREEMPT SMP KASAN NOPTI

Fixes: 6350d6a4ed487 ("media: uvcvideo: Set error_idx during ctrl_commit errors")
	Signed-off-by: Ricardo Ribalda <ribalda@chromium.org>
	Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Signed-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>
(cherry picked from commit f0577b1b6394f954903fcc67e12fe9e7001dafd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/usb/uvc/uvc_ctrl.c
diff --cc drivers/media/usb/uvc/uvc_ctrl.c
index 0b5a224748c7,9a25d6029255..000000000000
--- a/drivers/media/usb/uvc/uvc_ctrl.c
+++ b/drivers/media/usb/uvc/uvc_ctrl.c
@@@ -1669,11 -1634,32 +1669,35 @@@ static int uvc_ctrl_commit_entity(struc
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int uvc_ctrl_find_ctrl_idx(struct uvc_entity *entity,
+ 				  struct v4l2_ext_controls *ctrls,
+ 				  struct uvc_control *uvc_control)
+ {
+ 	struct uvc_control_mapping *mapping = NULL;
+ 	struct uvc_control *ctrl_found;
+ 	unsigned int i;
+ 
+ 	if (!entity)
+ 		return ctrls->count;
+ 
+ 	for (i = 0; i < ctrls->count; i++) {
+ 		__uvc_find_control(entity, ctrls->controls[i].id, &mapping,
+ 				   &ctrl_found, 0);
+ 		if (uvc_control == ctrl_found)
+ 			return i;
+ 	}
+ 
+ 	return ctrls->count;
+ }
+ 
++>>>>>>> f0577b1b6394 (media: uvcvideo: Avoid invalid memory access)
  int __uvc_ctrl_commit(struct uvc_fh *handle, int rollback,
 -		      struct v4l2_ext_controls *ctrls)
 +		      const struct v4l2_ext_control *xctrls,
 +		      unsigned int xctrls_count)
  {
  	struct uvc_video_chain *chain = handle->chain;
 -	struct uvc_control *err_ctrl;
  	struct uvc_entity *entity;
  	int ret = 0;
  
* Unmerged path drivers/media/usb/uvc/uvc_ctrl.c
