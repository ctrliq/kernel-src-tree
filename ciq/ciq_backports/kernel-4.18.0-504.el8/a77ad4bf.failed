of: device: make of_device_uevent_modalias() take a const device *

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit a77ad4bf792652340ab334956e69b46ec2fdaefb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/a77ad4bf.failed

of_device_uevent_modalias() does not modify the device pointer passed to
it, so mark it constant.  In order to properly do this, a number of
busses need to have a modalias function added as they were attempting to
just point to of_device_uevent_modalias instead of their bus-specific
modalias function.  This is fine except if the prototype for a bus and
device type modalias function diverges and then problems could happen.  To
prevent all of that, just wrap the call to of_device_uevent_modalias()
directly for each bus and device type individually.

	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Nicholas Piggin <npiggin@gmail.com>
	Cc: Christophe Leroy <christophe.leroy@csgroup.eu>
	Cc: Chen-Yu Tsai <wens@csie.org>
	Cc: Jernej Skrabec <jernej.skrabec@gmail.com>
	Cc: Samuel Holland <samuel@sholland.org>
	Cc: David Airlie <airlied@gmail.com>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Rob Herring <robh+dt@kernel.org>
	Cc: Frank Rowand <frowand.list@gmail.com>
	Cc: Liang He <windhl@126.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
	Cc: Douglas Anderson <dianders@chromium.org>
	Cc: Lyude Paul <lyude@redhat.com>
	Cc: Corentin Labbe <clabbe@baylibre.com>
	Cc: Zou Wei <zou_wei@huawei.com>
	Cc: linuxppc-dev@lists.ozlabs.org
	Cc: linux-kernel@vger.kernel.org
	Cc: linux-arm-kernel@lists.infradead.org
	Cc: linux-sunxi@lists.linux.dev
	Cc: dri-devel@lists.freedesktop.org
	Cc: devicetree@vger.kernel.org
	Acked-by: Hans de Goede <hdegoede@redhat.com>
Link: https://lore.kernel.org/r/20230111113018.459199-2-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a77ad4bf792652340ab334956e69b46ec2fdaefb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/display/drm_dp_aux_bus.c
#	include/linux/of_device.h
diff --cc drivers/gpu/drm/display/drm_dp_aux_bus.c
index 8a165be1a821,e31a0261c53e..000000000000
--- a/drivers/gpu/drm/display/drm_dp_aux_bus.c
+++ b/drivers/gpu/drm/display/drm_dp_aux_bus.c
@@@ -161,7 -161,7 +161,11 @@@ static void dp_aux_ep_dev_release(struc
  	kfree(aux_ep_with_data);
  }
  
++<<<<<<< HEAD
 +static int dp_aux_ep_dev_modalias(const struct device *dev, struct kobj_uevent_env *env)
++=======
+ static int dp_aux_ep_dev_modalias(struct device *dev, struct kobj_uevent_env *env)
++>>>>>>> a77ad4bf7926 (of: device: make of_device_uevent_modalias() take a const device *)
  {
  	return of_device_uevent_modalias(dev, env);
  }
diff --cc include/linux/of_device.h
index 788ad8944bc2,f4b57614979d..000000000000
--- a/include/linux/of_device.h
+++ b/include/linux/of_device.h
@@@ -38,8 -35,8 +38,13 @@@ extern const void *of_device_get_match_
  extern ssize_t of_device_modalias(struct device *dev, char *str, ssize_t len);
  extern int of_device_request_module(struct device *dev);
  
++<<<<<<< HEAD
 +extern void of_device_uevent(struct device *dev, struct kobj_uevent_env *env);
 +extern int of_device_uevent_modalias(struct device *dev, struct kobj_uevent_env *env);
++=======
+ extern void of_device_uevent(const struct device *dev, struct kobj_uevent_env *env);
+ extern int of_device_uevent_modalias(const struct device *dev, struct kobj_uevent_env *env);
++>>>>>>> a77ad4bf7926 (of: device: make of_device_uevent_modalias() take a const device *)
  
  static inline struct device_node *of_cpu_device_node_get(int cpu)
  {
diff --git a/arch/powerpc/platforms/pseries/ibmebus.c b/arch/powerpc/platforms/pseries/ibmebus.c
index 729f65dfe190..59d13ee120f2 100644
--- a/arch/powerpc/platforms/pseries/ibmebus.c
+++ b/arch/powerpc/platforms/pseries/ibmebus.c
@@ -424,9 +424,14 @@ static struct attribute *ibmebus_bus_device_attrs[] = {
 };
 ATTRIBUTE_GROUPS(ibmebus_bus_device);
 
+static int ibmebus_bus_modalias(struct device *dev, struct kobj_uevent_env *env)
+{
+	return of_device_uevent_modalias(dev, env);
+}
+
 struct bus_type ibmebus_bus_type = {
 	.name      = "ibmebus",
-	.uevent    = of_device_uevent_modalias,
+	.uevent    = ibmebus_bus_modalias,
 	.bus_groups = ibmbus_bus_groups,
 	.match     = ibmebus_bus_bus_match,
 	.probe     = ibmebus_bus_device_probe,
diff --git a/drivers/bus/sunxi-rsb.c b/drivers/bus/sunxi-rsb.c
index 1b76d9585902..9c206337289f 100644
--- a/drivers/bus/sunxi-rsb.c
+++ b/drivers/bus/sunxi-rsb.c
@@ -173,12 +173,17 @@ static int sunxi_rsb_device_remove(struct device *dev)
 	return drv->remove(to_sunxi_rsb_device(dev));
 }
 
+static int sunxi_rsb_device_modalias(struct device *dev, struct kobj_uevent_env *env)
+{
+	return of_device_uevent_modalias(dev, env);
+}
+
 static struct bus_type sunxi_rsb_bus = {
 	.name		= RSB_CTRL_NAME,
 	.match		= sunxi_rsb_device_match,
 	.probe		= sunxi_rsb_device_probe,
 	.remove		= sunxi_rsb_device_remove,
-	.uevent		= of_device_uevent_modalias,
+	.uevent		= sunxi_rsb_device_modalias,
 };
 
 static void sunxi_rsb_dev_release(struct device *dev)
* Unmerged path drivers/gpu/drm/display/drm_dp_aux_bus.c
diff --git a/drivers/macintosh/macio_asic.c b/drivers/macintosh/macio_asic.c
index 07074820a167..f1c621a9d794 100644
--- a/drivers/macintosh/macio_asic.c
+++ b/drivers/macintosh/macio_asic.c
@@ -133,12 +133,17 @@ static int macio_device_resume(struct device * dev)
 	return 0;
 }
 
+static int macio_device_modalias(struct device *dev, struct kobj_uevent_env *env)
+{
+	return of_device_uevent_modalias(dev, env);
+}
+
 extern const struct attribute_group *macio_dev_groups[];
 
 struct bus_type macio_bus_type = {
        .name	= "macio",
        .match	= macio_bus_match,
-       .uevent = of_device_uevent_modalias,
+       .uevent	= macio_device_modalias,
        .probe	= macio_device_probe,
        .remove	= macio_device_remove,
        .shutdown = macio_device_shutdown,
diff --git a/drivers/of/device.c b/drivers/of/device.c
index 8c5782168e27..d63c36feba84 100644
--- a/drivers/of/device.c
+++ b/drivers/of/device.c
@@ -216,7 +216,7 @@ const void *of_device_get_match_data(const struct device *dev)
 }
 EXPORT_SYMBOL(of_device_get_match_data);
 
-static ssize_t of_device_get_modalias(struct device *dev, char *str, ssize_t len)
+static ssize_t of_device_get_modalias(const struct device *dev, char *str, ssize_t len)
 {
 	const char *compat;
 	char *c;
@@ -335,7 +335,7 @@ void of_device_uevent(struct device *dev, struct kobj_uevent_env *env)
 	mutex_unlock(&of_mutex);
 }
 
-int of_device_uevent_modalias(struct device *dev, struct kobj_uevent_env *env)
+int of_device_uevent_modalias(const struct device *dev, struct kobj_uevent_env *env)
 {
 	int sl;
 
* Unmerged path include/linux/of_device.h
