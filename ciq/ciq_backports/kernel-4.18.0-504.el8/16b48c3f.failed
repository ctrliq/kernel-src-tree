perf/x86/amd/uncore: Detect available DF counters

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Sandipan Das <sandipan.das@amd.com>
commit 16b48c3f5ed85b8017526b1acacf5115461b489a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/16b48c3f.failed

If AMD Performance Monitoring Version 2 (PerfMonV2) is
supported, use CPUID leaf 0x80000022 EBX to detect the
number of Data Fabric (DF) PMCs. This offers more
flexibility if the counts change in later processor
families.

	Signed-off-by: Sandipan Das <sandipan.das@amd.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lore.kernel.org/r/bac7b2806561e03f2acc7fdc9db94f102df80e1d.1652954372.git.sandipan.das@amd.com
(cherry picked from commit 16b48c3f5ed85b8017526b1acacf5115461b489a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/amd/uncore.c
#	arch/x86/include/asm/perf_event.h
diff --cc arch/x86/events/amd/uncore.c
index 4d04c8b8fd23,233dd405dd06..000000000000
--- a/arch/x86/events/amd/uncore.c
+++ b/arch/x86/events/amd/uncore.c
@@@ -632,9 -630,11 +633,10 @@@ static int __init amd_uncore_init(void
  {
  	struct attribute **df_attr = amd_uncore_df_format_attr;
  	struct attribute **l3_attr = amd_uncore_l3_format_attr;
+ 	union cpuid_0x80000022_ebx ebx;
  	int ret = -ENODEV;
  
 -	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD &&
 -	    boot_cpu_data.x86_vendor != X86_VENDOR_HYGON)
 +	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD)
  		return -ENODEV;
  
  	if (!boot_cpu_has(X86_FEATURE_TOPOEXT))
@@@ -667,7 -671,15 +672,19 @@@
  		if (ret)
  			goto fail_nb;
  
++<<<<<<< HEAD
 +		pr_info("%d %s counters detected\n", num_counters_nb, amd_nb_pmu.name);
++=======
+ 		if (pmu_version >= 2) {
+ 			ebx.full = cpuid_ebx(EXT_PERFMON_DEBUG_FEATURES);
+ 			num_counters_nb = ebx.split.num_df_pmc;
+ 		}
+ 
+ 		pr_info("%d %s %s counters detected\n", num_counters_nb,
+ 			boot_cpu_data.x86_vendor == X86_VENDOR_HYGON ?  "HYGON" : "",
+ 			amd_nb_pmu.name);
+ 
++>>>>>>> 16b48c3f5ed8 (perf/x86/amd/uncore: Detect available DF counters)
  		ret = 0;
  	}
  
diff --cc arch/x86/include/asm/perf_event.h
index b1cf1e7dbb37,af157aa74f4e..000000000000
--- a/arch/x86/include/asm/perf_event.h
+++ b/arch/x86/include/asm/perf_event.h
@@@ -202,8 -194,9 +202,14 @@@ union cpuid_0x80000022_ebx 
  	struct {
  		/* Number of Core Performance Counters */
  		unsigned int	num_core_pmc:4;
++<<<<<<< HEAD
 +		/* Number of available LBR Stack Entries */
 +		unsigned int	lbr_v2_stack_sz:6;
++=======
+ 		unsigned int	reserved:6;
+ 		/* Number of Data Fabric Counters */
+ 		unsigned int	num_df_pmc:6;
++>>>>>>> 16b48c3f5ed8 (perf/x86/amd/uncore: Detect available DF counters)
  	} split;
  	unsigned int		full;
  };
* Unmerged path arch/x86/events/amd/uncore.c
* Unmerged path arch/x86/include/asm/perf_event.h
