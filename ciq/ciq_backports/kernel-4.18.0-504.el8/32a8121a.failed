driver core: bus: bus_register/unregister_notifier() cleanups

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 32a8121a19c4936672440c96371f6a8c2b0c3d4d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/32a8121a.failed

Convert the bus_register_notifier() and bus_unregister_notifier() public
functions to use bus_to_subsys() and not use the back-pointer to the
private structure as well as the bus_notify() function.

	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Link: https://lore.kernel.org/r/20230208111330.439504-11-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 32a8121a19c4936672440c96371f6a8c2b0c3d4d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/bus.c
diff --cc drivers/base/bus.c
index 356e4a26cb38,81c0f7ff29a2..000000000000
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@@ -979,6 -961,17 +994,20 @@@ int bus_unregister_notifier(struct bus_
  }
  EXPORT_SYMBOL_GPL(bus_unregister_notifier);
  
++<<<<<<< HEAD
++=======
+ void bus_notify(struct device *dev, enum bus_notifier_event value)
+ {
+ 	struct subsys_private *sp = bus_to_subsys(dev->bus);
+ 
+ 	if (!sp)
+ 		return;
+ 
+ 	blocking_notifier_call_chain(&sp->bus_notifier, value, dev);
+ 	subsys_put(sp);
+ }
+ 
++>>>>>>> 32a8121a19c4 (driver core: bus: bus_register/unregister_notifier() cleanups)
  struct kset *bus_get_kset(struct bus_type *bus)
  {
  	struct subsys_private *sp = bus_to_subsys(bus);
* Unmerged path drivers/base/bus.c
