driver core: Fix bus_type.match() error handling in __driver_attach()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Isaac J. Manjarres <isaacmanjarres@google.com>
commit 27c0d217340e47ec995557f61423ef415afba987
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/27c0d217.failed

When a driver registers with a bus, it will attempt to match with every
device on the bus through the __driver_attach() function. Currently, if
the bus_type.match() function encounters an error that is not
-EPROBE_DEFER, __driver_attach() will return a negative error code, which
causes the driver registration logic to stop trying to match with the
remaining devices on the bus.

This behavior is not correct; a failure while matching a driver to a
device does not mean that the driver won't be able to match and bind
with other devices on the bus. Update the logic in __driver_attach()
to reflect this.

Fixes: 656b8035b0ee ("ARM: 8524/1: driver cohandle -EPROBE_DEFER from bus_type.match()")
	Cc: stable@vger.kernel.org
	Cc: Saravana Kannan <saravanak@google.com>
	Signed-off-by: Isaac J. Manjarres <isaacmanjarres@google.com>
Link: https://lore.kernel.org/r/20220921001414.4046492-1-isaacmanjarres@google.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 27c0d217340e47ec995557f61423ef415afba987)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/dd.c
diff --cc drivers/base/dd.c
index 887b1b397ce9,e9b2f9c25efe..000000000000
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@@ -1133,8 -1161,12 +1133,17 @@@ static int __driver_attach(struct devic
  		 */
  		return 0;
  	} else if (ret < 0) {
++<<<<<<< HEAD
 +		dev_dbg(dev, "Bus failed to match device: %d", ret);
 +		return ret;
++=======
+ 		dev_dbg(dev, "Bus failed to match device: %d\n", ret);
+ 		/*
+ 		 * Driver could not match with device, but may match with
+ 		 * another device on the bus.
+ 		 */
+ 		return 0;
++>>>>>>> 27c0d217340e (driver core: Fix bus_type.match() error handling in __driver_attach())
  	} /* ret > 0 means positive match */
  
  	if (driver_allows_async_probing(drv)) {
* Unmerged path drivers/base/dd.c
