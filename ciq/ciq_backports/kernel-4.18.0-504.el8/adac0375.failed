driver core: bus: subsys_interface_register/unregister() cleanups

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit adac0375380a7d3e50194cc5b03b676b0321bded
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/adac0375.failed

Convert the subsys_interface_register and subsys_interface_unregister()
functions to use bus_to_subsys() and not use the back-pointer to the
private structure.

This also requires changing the parameters on subsys_dev_iter_init() to
iterate over the list properly.

	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
Link: https://lore.kernel.org/r/20230208111330.439504-9-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit adac0375380a7d3e50194cc5b03b676b0321bded)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/bus.c
diff --cc drivers/base/bus.c
index 884089cfbf1d,b831173071ec..000000000000
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@@ -1053,17 -1032,16 +1053,22 @@@ EXPORT_SYMBOL_GPL(bus_sort_breadthfirst
   * otherwise if it is NULL, the iteration starts at the beginning of
   * the list.
   */
++<<<<<<< HEAD
 +void subsys_dev_iter_init(struct subsys_dev_iter *iter, struct bus_type *subsys,
 +			  struct device *start, const struct device_type *type)
++=======
+ static void subsys_dev_iter_init(struct subsys_dev_iter *iter, struct subsys_private *sp,
+ 				 struct device *start, const struct device_type *type)
++>>>>>>> adac0375380a (driver core: bus: subsys_interface_register/unregister() cleanups)
  {
  	struct klist_node *start_knode = NULL;
  
  	if (start)
  		start_knode = &start->p->knode_bus;
- 	klist_iter_init_node(&subsys->p->klist_devices, &iter->ki, start_knode);
+ 	klist_iter_init_node(&sp->klist_devices, &iter->ki, start_knode);
  	iter->type = type;
  }
 +EXPORT_SYMBOL_GPL(subsys_dev_iter_init);
  
  /**
   * subsys_dev_iter_next - iterate to the next device
* Unmerged path drivers/base/bus.c
