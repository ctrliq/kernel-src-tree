drivers/base: Remove CONFIG_SRCU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit dc7c31b07adee585fe567bf44d8ef7f5a12e521a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/dc7c31b0.failed

Now that the SRCU Kconfig option is unconditionally selected, there is
no longer any point in conditional compilation based on CONFIG_SRCU.
Therefore, remove the #ifdef and throw away the #else clause.

	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Acked-by: Rafael J. Wysocki <rafael@kernel.org>
	Reviewed-by: John Ogness <john.ogness@linutronix.de>
(cherry picked from commit dc7c31b07adee585fe567bf44d8ef7f5a12e521a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/core.c
diff --cc drivers/base/core.c
index 119464862c48,bb36aca8d1b7..000000000000
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@@ -202,30 -203,22 +201,49 @@@ void device_links_read_unlock(int idx
  {
  	srcu_read_unlock(&device_links_srcu, idx);
  }
++<<<<<<< HEAD
 +#else /* !CONFIG_SRCU */
 +static DECLARE_RWSEM(device_links_lock);
 +
 +static inline void device_links_write_lock(void)
 +{
 +	down_write(&device_links_lock);
 +}
 +
 +static inline void device_links_write_unlock(void)
 +{
 +	up_write(&device_links_lock);
 +}
 +
 +int device_links_read_lock(void)
 +{
 +	down_read(&device_links_lock);
 +	return 0;
 +}
 +
 +void device_links_read_unlock(int not_used)
 +{
 +	up_read(&device_links_lock);
 +}
 +#endif /* !CONFIG_SRCU */
++=======
+ 
+ int device_links_read_lock_held(void)
+ {
+ 	return srcu_read_lock_held(&device_links_srcu);
+ }
+ 
+ static void device_link_synchronize_removal(void)
+ {
+ 	synchronize_srcu(&device_links_srcu);
+ }
+ 
+ static void device_link_remove_from_lists(struct device_link *link)
+ {
+ 	list_del_rcu(&link->s_node);
+ 	list_del_rcu(&link->c_node);
+ }
++>>>>>>> dc7c31b07ade (drivers/base: Remove CONFIG_SRCU)
  
  static bool device_is_ancestor(struct device *dev, struct device *target)
  {
* Unmerged path drivers/base/core.c
