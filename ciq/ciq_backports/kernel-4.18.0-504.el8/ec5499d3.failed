xhci: split out rcar/rz support from xhci-plat.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-504.el8
commit-author Arnd Bergmann <arnd@arndb.de>
commit ec5499d338ece9db9b7590649d3cfcc4d7f9603d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-504.el8/ec5499d3.failed

The USB_XHCI_RZV2M and USB_RENESAS_USB3 select other drivers
based on the enabled SoC types, which leads to build failures
when the dependencies are not met:

WARNING: unmet direct dependencies detected for USB_RZV2M_USB3DRD
  Depends on [n]: USB_SUPPORT [=y] && USB_GADGET [=n] && (ARCH_R9A09G011 [=n] || COMPILE_TEST [=y])
  Selected by [m]:
  - USB_XHCI_RZV2M [=m] && USB_SUPPORT [=y] && USB [=y] && USB_XHCI_HCD [=m] && USB_XHCI_PLATFORM [=m] && (ARCH_R9A09G011 [=n] || COMPILE_TEST [=y])
ERROR: modpost: "rzv2m_usb3drd_reset" [drivers/usb/host/xhci-plat-hcd.ko] undefined!

The xhci-rcar driver has a reverse dependency with the xhci core, and it
depends on the UDC driver in turn. To untangle this, make the xhci-rcar.ko
driver a standalone module that just calls into the xhci-plat.ko module
like other drivers do.

This allows handling the dependency on the USB_RZV2M_USB3DRD driver to
only affect the xhci-rcar module and simplify the xhci-plat module.

It also allows leaving out the hacks for broken dma mask and nested
devices from the rcar side and keep that only in the generic xhci driver.

As a future cleanup, the marvell and dwc3 specific bits of xhci-plat.c
could be moved out as well, but that is not required for this bugfix.

Fixes: c52c9acc415e ("xhci: host: Add Renesas RZ/V2M SoC support")
	Signed-off-by: Arnd Bergmann <arnd@arndb.de>
	Tested-by: Biju Das <biju.das.jz@bp.renesas.com>
Link: https://lore.kernel.org/r/20230131150531.12347-1-arnd@kernel.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit ec5499d338ece9db9b7590649d3cfcc4d7f9603d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/gadget/udc/Kconfig
#	drivers/usb/host/Kconfig
#	drivers/usb/host/Makefile
#	drivers/usb/host/xhci-plat.c
#	drivers/usb/host/xhci-rcar.h
diff --cc drivers/usb/gadget/udc/Kconfig
index ef0259a950ba,22a9f5082116..000000000000
--- a/drivers/usb/gadget/udc/Kconfig
+++ b/drivers/usb/gadget/udc/Kconfig
@@@ -190,6 -180,16 +190,19 @@@ config USB_RENESAS_USBHS_UD
  	   dynamically linked module called "renesas_usbhs" and force all
  	   gadget drivers to also be dynamically linked.
  
++<<<<<<< HEAD
++=======
+ config USB_RZV2M_USB3DRD
+ 	tristate 'Renesas USB3.1 DRD controller'
+ 	depends on ARCH_R9A09G011 || COMPILE_TEST
+ 	help
+ 	   Renesas USB3.1 DRD controller is a USB DRD controller
+ 	   that supports both host and device switching.
+ 
+ 	   Say "y" to link the driver statically, or "m" to build a
+ 	   dynamically linked module called "rzv2m_usb3drd".
+ 
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  config USB_RENESAS_USB3
  	tristate 'Renesas USB3.0 Peripheral controller'
  	depends on ARCH_RENESAS || COMPILE_TEST
diff --cc drivers/usb/host/Kconfig
index f2474eda5659,0a54190bb097..000000000000
--- a/drivers/usb/host/Kconfig
+++ b/drivers/usb/host/Kconfig
@@@ -44,8 -53,7 +44,12 @@@ config USB_XHCI_PC
  
  config USB_XHCI_PLATFORM
  	tristate "Generic xHCI driver for a platform device"
++<<<<<<< HEAD
 +	select USB_XHCI_RCAR if ARCH_RENESAS
 +	---help---
++=======
+ 	help
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  	  Adds an xHCI host driver for a generic platform device, which
  	  provides a memory space and an irq.
  	  It is also a prerequisite for platform specific drivers that
@@@ -82,10 -90,20 +86,27 @@@ config USB_XHCI_RCA
  	tristate "xHCI support for Renesas R-Car SoCs"
  	depends on USB_XHCI_PLATFORM
  	depends on ARCH_RENESAS || COMPILE_TEST
++<<<<<<< HEAD
 +	---help---
 +	  Say 'Y' to enable the support for the xHCI host controller
 +	  found in Renesas R-Car ARM SoCs.
 +
++=======
+ 	default ARCH_RENESAS
+ 	help
+ 	  Say 'Y' to enable the support for the xHCI host controller
+ 	  found in Renesas R-Car ARM SoCs.
+ 
+ config USB_XHCI_RZV2M
+ 	bool "xHCI support for Renesas RZ/V2M SoC"
+ 	depends on USB_XHCI_RCAR
+ 	depends on ARCH_R9A09G011 || COMPILE_TEST
+ 	depends on USB_RZV2M_USB3DRD=y || (USB_RZV2M_USB3DRD=USB_XHCI_RCAR)
+ 	help
+ 	  Say 'Y' to enable the support for the xHCI host controller
+ 	  found in Renesas RZ/V2M SoC.
+ 
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  config USB_XHCI_TEGRA
  	tristate "xHCI support for NVIDIA Tegra SoCs"
  	depends on PHY_TEGRA_XUSB
diff --cc drivers/usb/host/Makefile
index a05107c24180,5a13712f367d..000000000000
--- a/drivers/usb/host/Makefile
+++ b/drivers/usb/host/Makefile
@@@ -25,15 -25,12 +25,23 @@@ xhci-plat-hcd-y := xhci-plat.
  ifneq ($(CONFIG_USB_XHCI_MVEBU), )
  	xhci-plat-hcd-y		+= xhci-mvebu.o
  endif
++<<<<<<< HEAD
 +ifneq ($(CONFIG_USB_XHCI_RCAR), )
 +	xhci-plat-hcd-y		+= xhci-rcar.o
 +endif
 +
++=======
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  ifneq ($(CONFIG_DEBUG_FS),)
  	xhci-hcd-y		+= xhci-debugfs.o
  endif
  
++<<<<<<< HEAD
 +obj-$(CONFIG_USB_WHCI_HCD)	+= whci/
++=======
+ xhci-rcar-hcd-y				+= xhci-rcar.o
+ xhci-rcar-hcd-$(CONFIG_USB_XHCI_RZV2M)	+= xhci-rzv2m.o
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  
  obj-$(CONFIG_USB_PCI)	+= pci-quirks.o
  
@@@ -72,8 -68,10 +80,9 @@@ obj-$(CONFIG_USB_UHCI_HCD)	+= uhci-hcd.
  obj-$(CONFIG_USB_FHCI_HCD)	+= fhci.o
  obj-$(CONFIG_USB_XHCI_HCD)	+= xhci-hcd.o
  obj-$(CONFIG_USB_XHCI_PCI)	+= xhci-pci.o
 -obj-$(CONFIG_USB_XHCI_PCI_RENESAS)	+= xhci-pci-renesas.o
  obj-$(CONFIG_USB_XHCI_PLATFORM) += xhci-plat-hcd.o
  obj-$(CONFIG_USB_XHCI_HISTB)	+= xhci-histb.o
+ obj-$(CONFIG_USB_XHCI_RCAR)	+= xhci-rcar-hcd.o
  obj-$(CONFIG_USB_XHCI_MTK)	+= xhci-mtk-hcd.o
  obj-$(CONFIG_USB_XHCI_TEGRA)	+= xhci-tegra.o
  obj-$(CONFIG_USB_SL811_HCD)	+= sl811-hcd.o
diff --cc drivers/usb/host/xhci-plat.c
index c5fc175a5fd1,cd17ccab6e00..000000000000
--- a/drivers/usb/host/xhci-plat.c
+++ b/drivers/usb/host/xhci-plat.c
@@@ -24,7 -24,6 +24,10 @@@
  #include "xhci.h"
  #include "xhci-plat.h"
  #include "xhci-mvebu.h"
++<<<<<<< HEAD
 +#include "xhci-rcar.h"
++=======
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  
  static struct hc_driver __read_mostly xhci_plat_hc_driver;
  
@@@ -115,14 -114,6 +118,17 @@@ static const struct xhci_plat_priv xhci
  	.init_quirk = xhci_mvebu_a3700_init_quirk,
  };
  
++<<<<<<< HEAD
 +static const struct xhci_plat_priv xhci_plat_renesas_rcar_gen2 = {
 +	SET_XHCI_PLAT_PRIV_FOR_RCAR(XHCI_RCAR_FIRMWARE_NAME_V1)
 +};
 +
 +static const struct xhci_plat_priv xhci_plat_renesas_rcar_gen3 = {
 +	SET_XHCI_PLAT_PRIV_FOR_RCAR(XHCI_RCAR_FIRMWARE_NAME_V3)
 +};
 +
++=======
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  static const struct xhci_plat_priv xhci_plat_brcm = {
  	.quirks = XHCI_RESET_ON_RESUME | XHCI_SUSPEND_RESUME_CLKS,
  };
@@@ -142,27 -133,6 +148,30 @@@ static const struct of_device_id usb_xh
  		.compatible = "marvell,armada3700-xhci",
  		.data = &xhci_plat_marvell_armada3700,
  	}, {
++<<<<<<< HEAD
 +		.compatible = "renesas,xhci-r8a7790",
 +		.data = &xhci_plat_renesas_rcar_gen2,
 +	}, {
 +		.compatible = "renesas,xhci-r8a7791",
 +		.data = &xhci_plat_renesas_rcar_gen2,
 +	}, {
 +		.compatible = "renesas,xhci-r8a7793",
 +		.data = &xhci_plat_renesas_rcar_gen2,
 +	}, {
 +		.compatible = "renesas,xhci-r8a7795",
 +		.data = &xhci_plat_renesas_rcar_gen3,
 +	}, {
 +		.compatible = "renesas,xhci-r8a7796",
 +		.data = &xhci_plat_renesas_rcar_gen3,
 +	}, {
 +		.compatible = "renesas,rcar-gen2-xhci",
 +		.data = &xhci_plat_renesas_rcar_gen2,
 +	}, {
 +		.compatible = "renesas,rcar-gen3-xhci",
 +		.data = &xhci_plat_renesas_rcar_gen3,
 +	}, {
++=======
++>>>>>>> ec5499d338ec (xhci: split out rcar/rz support from xhci-plat.c)
  		.compatible = "brcm,xhci-brcm-v2",
  		.data = &xhci_plat_brcm,
  	}, {
* Unmerged path drivers/usb/host/xhci-rcar.h
* Unmerged path drivers/usb/gadget/udc/Kconfig
* Unmerged path drivers/usb/host/Kconfig
* Unmerged path drivers/usb/host/Makefile
* Unmerged path drivers/usb/host/xhci-plat.c
diff --git a/drivers/usb/host/xhci-plat.h b/drivers/usb/host/xhci-plat.h
index 1fb149d1fbce..83b5b5aa9f8e 100644
--- a/drivers/usb/host/xhci-plat.h
+++ b/drivers/usb/host/xhci-plat.h
@@ -21,4 +21,11 @@ struct xhci_plat_priv {
 
 #define hcd_to_xhci_priv(h) ((struct xhci_plat_priv *)hcd_to_xhci(h)->priv)
 #define xhci_to_priv(x) ((struct xhci_plat_priv *)(x)->priv)
+
+int xhci_plat_probe(struct platform_device *pdev, struct device *sysdev,
+		    const struct xhci_plat_priv *priv_match);
+
+int xhci_plat_remove(struct platform_device *dev);
+extern const struct dev_pm_ops xhci_plat_pm_ops;
+
 #endif	/* _XHCI_PLAT_H */
diff --git a/drivers/usb/host/xhci-rcar.c b/drivers/usb/host/xhci-rcar.c
index c1025d321a41..01817a914beb 100644
--- a/drivers/usb/host/xhci-rcar.c
+++ b/drivers/usb/host/xhci-rcar.c
@@ -9,12 +9,17 @@
 #include <linux/module.h>
 #include <linux/platform_device.h>
 #include <linux/of.h>
+#include <linux/of_device.h>
 #include <linux/usb/phy.h>
 #include <linux/sys_soc.h>
 
 #include "xhci.h"
 #include "xhci-plat.h"
-#include "xhci-rcar.h"
+#include "xhci-rzv2m.h"
+
+#define XHCI_RCAR_FIRMWARE_NAME_V1	"r8a779x_usb3_v1.dlmem"
+#define XHCI_RCAR_FIRMWARE_NAME_V2	"r8a779x_usb3_v2.dlmem"
+#define XHCI_RCAR_FIRMWARE_NAME_V3	"r8a779x_usb3_v3.dlmem"
 
 /*
 * - The V3 firmware is for almost all R-Car Gen3 (except r8a7795 ES1.x)
@@ -107,7 +112,7 @@ static int xhci_rcar_is_gen2(struct device *dev)
 		of_device_is_compatible(node, "renesas,rcar-gen2-xhci");
 }
 
-void xhci_rcar_start(struct usb_hcd *hcd)
+static void xhci_rcar_start(struct usb_hcd *hcd)
 {
 	u32 temp;
 
@@ -215,7 +220,7 @@ static bool xhci_rcar_wait_for_pll_active(struct usb_hcd *hcd)
 }
 
 /* This function needs to initialize a "phy" of usb before */
-int xhci_rcar_init_quirk(struct usb_hcd *hcd)
+static int xhci_rcar_init_quirk(struct usb_hcd *hcd)
 {
 	/* If hcd->regs is NULL, we don't just call the following function */
 	if (!hcd->regs)
@@ -227,7 +232,7 @@ int xhci_rcar_init_quirk(struct usb_hcd *hcd)
 	return xhci_rcar_download_firmware(hcd);
 }
 
-int xhci_rcar_resume_quirk(struct usb_hcd *hcd)
+static int xhci_rcar_resume_quirk(struct usb_hcd *hcd)
 {
 	int ret;
 
@@ -237,3 +242,92 @@ int xhci_rcar_resume_quirk(struct usb_hcd *hcd)
 
 	return ret;
 }
+
+/*
+ * On R-Car Gen2 and Gen3, the AC64 bit (bit 0) of HCCPARAMS1 is set
+ * to 1. However, these SoCs don't support 64-bit address memory
+ * pointers. So, this driver clears the AC64 bit of xhci->hcc_params
+ * to call dma_set_coherent_mask(dev, DMA_BIT_MASK(32)) in
+ * xhci_gen_setup() by using the XHCI_NO_64BIT_SUPPORT quirk.
+ *
+ * And, since the firmware/internal CPU control the USBSTS.STS_HALT
+ * and the process speed is down when the roothub port enters U3,
+ * long delay for the handshake of STS_HALT is neeed in xhci_suspend()
+ * by using the XHCI_SLOW_SUSPEND quirk.
+ */
+#define SET_XHCI_PLAT_PRIV_FOR_RCAR(firmware)				\
+	.firmware_name = firmware,					\
+	.quirks = XHCI_NO_64BIT_SUPPORT | XHCI_TRUST_TX_LENGTH |	\
+		  XHCI_SLOW_SUSPEND,					\
+	.init_quirk = xhci_rcar_init_quirk,				\
+	.plat_start = xhci_rcar_start,					\
+	.resume_quirk = xhci_rcar_resume_quirk,
+
+static const struct xhci_plat_priv xhci_plat_renesas_rcar_gen2 = {
+	SET_XHCI_PLAT_PRIV_FOR_RCAR(XHCI_RCAR_FIRMWARE_NAME_V1)
+};
+
+static const struct xhci_plat_priv xhci_plat_renesas_rcar_gen3 = {
+	SET_XHCI_PLAT_PRIV_FOR_RCAR(XHCI_RCAR_FIRMWARE_NAME_V3)
+};
+
+static const struct xhci_plat_priv xhci_plat_renesas_rzv2m = {
+	.quirks = XHCI_NO_64BIT_SUPPORT | XHCI_TRUST_TX_LENGTH |
+		  XHCI_SLOW_SUSPEND,
+	.init_quirk = xhci_rzv2m_init_quirk,
+	.plat_start = xhci_rzv2m_start,
+};
+
+static const struct of_device_id usb_xhci_of_match[] = {
+	{
+		.compatible = "renesas,xhci-r8a7790",
+		.data = &xhci_plat_renesas_rcar_gen2,
+	}, {
+		.compatible = "renesas,xhci-r8a7791",
+		.data = &xhci_plat_renesas_rcar_gen2,
+	}, {
+		.compatible = "renesas,xhci-r8a7793",
+		.data = &xhci_plat_renesas_rcar_gen2,
+	}, {
+		.compatible = "renesas,xhci-r8a7795",
+		.data = &xhci_plat_renesas_rcar_gen3,
+	}, {
+		.compatible = "renesas,xhci-r8a7796",
+		.data = &xhci_plat_renesas_rcar_gen3,
+	}, {
+		.compatible = "renesas,rcar-gen2-xhci",
+		.data = &xhci_plat_renesas_rcar_gen2,
+	}, {
+		.compatible = "renesas,rcar-gen3-xhci",
+		.data = &xhci_plat_renesas_rcar_gen3,
+	}, {
+		.compatible = "renesas,rzv2m-xhci",
+		.data = &xhci_plat_renesas_rzv2m,
+	},
+	{ },
+};
+MODULE_DEVICE_TABLE(of, usb_xhci_of_match);
+
+static int xhci_renesas_probe(struct platform_device *pdev)
+{
+	const struct xhci_plat_priv *priv_match;
+
+	priv_match = of_device_get_match_data(&pdev->dev);
+
+	return xhci_plat_probe(pdev, NULL, priv_match);
+}
+
+static struct platform_driver usb_xhci_renesas_driver = {
+	.probe	= xhci_renesas_probe,
+	.remove	= xhci_plat_remove,
+	.shutdown = usb_hcd_platform_shutdown,
+	.driver	= {
+		.name = "xhci-renesas-hcd",
+		.pm = &xhci_plat_pm_ops,
+		.of_match_table = of_match_ptr(usb_xhci_of_match),
+	},
+};
+module_platform_driver(usb_xhci_renesas_driver);
+
+MODULE_DESCRIPTION("xHCI Platform Host Controller Driver for Renesas R-Car and RZ");
+MODULE_LICENSE("GPL");
* Unmerged path drivers/usb/host/xhci-rcar.h
