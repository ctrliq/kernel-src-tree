net/mlx5e: Fix crash unsetting rx-vlan-filter in switchdev mode

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-5.14.0-284.30.1.rt14.315.el9_2
commit-author Amir Tzin <amirtz@nvidia.com>
commit 8974aa9638df557f4642acef707af15648a03555
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-5.14.0-284.30.1.rt14.315.el9_2/8974aa96.failed

Moving to switchdev mode with rx-vlan-filter on and then setting it off
causes the kernel to crash since fs->vlan is freed during nic profile
cleanup flow.

RX VLAN filtering is not supported in switchdev mode so unset it when
changing to switchdev and restore its value when switching back to
legacy.

trace:
[] RIP: 0010:mlx5e_disable_cvlan_filter+0x43/0x70
[] set_feature_cvlan_filter+0x37/0x40 [mlx5_core]
[] mlx5e_handle_feature+0x3a/0x60 [mlx5_core]
[] mlx5e_set_features+0x6d/0x160 [mlx5_core]
[] __netdev_update_features+0x288/0xa70
[] ethnl_set_features+0x309/0x380
[] ? __nla_parse+0x21/0x30
[] genl_family_rcv_msg_doit.isra.17+0x110/0x150
[] genl_rcv_msg+0x112/0x260
[] ? features_reply_size+0xe0/0xe0
[] ? genl_family_rcv_msg_doit.isra.17+0x150/0x150
[] netlink_rcv_skb+0x4e/0x100
[] genl_rcv+0x24/0x40
[] netlink_unicast+0x1ab/0x290
[] netlink_sendmsg+0x257/0x4f0
[] sock_sendmsg+0x5c/0x70

Fixes: cb67b832921c ("net/mlx5e: Introduce SRIOV VF representors")
	Signed-off-by: Amir Tzin <amirtz@nvidia.com>
	Reviewed-by: Maor Dickman <maord@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 8974aa9638df557f4642acef707af15648a03555)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
index e0ce5a233d0b,7cd36f4ac3ef..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
@@@ -403,26 -430,26 +403,30 @@@ void mlx5e_remove_mac_trap(struct mlx5e
  	}
  }
  
 -void mlx5e_enable_cvlan_filter(struct mlx5e_flow_steering *fs, bool promisc)
 +void mlx5e_enable_cvlan_filter(struct mlx5e_priv *priv)
  {
 -	if (!fs->vlan->cvlan_filter_disabled)
 +	if (!priv->fs->vlan->cvlan_filter_disabled)
  		return;
  
 -	fs->vlan->cvlan_filter_disabled = false;
 -	if (promisc)
 +	priv->fs->vlan->cvlan_filter_disabled = false;
 +	if (priv->netdev->flags & IFF_PROMISC)
  		return;
 -	mlx5e_fs_del_vlan_rule(fs, MLX5E_VLAN_RULE_TYPE_ANY_CTAG_VID, 0);
 +	mlx5e_fs_del_vlan_rule(priv->fs, MLX5E_VLAN_RULE_TYPE_ANY_CTAG_VID, 0);
  }
  
 -void mlx5e_disable_cvlan_filter(struct mlx5e_flow_steering *fs, bool promisc)
 +void mlx5e_disable_cvlan_filter(struct mlx5e_priv *priv)
  {
++<<<<<<< HEAD
 +	if (priv->fs->vlan->cvlan_filter_disabled)
++=======
+ 	if (!fs->vlan || fs->vlan->cvlan_filter_disabled)
++>>>>>>> 8974aa9638df (net/mlx5e: Fix crash unsetting rx-vlan-filter in switchdev mode)
  		return;
  
 -	fs->vlan->cvlan_filter_disabled = true;
 -	if (promisc)
 +	priv->fs->vlan->cvlan_filter_disabled = true;
 +	if (priv->netdev->flags & IFF_PROMISC)
  		return;
 -	mlx5e_add_vlan_rule(fs, MLX5E_VLAN_RULE_TYPE_ANY_CTAG_VID, 0);
 +	mlx5e_add_vlan_rule(priv->fs, MLX5E_VLAN_RULE_TYPE_ANY_CTAG_VID, 0);
  }
  
  static int mlx5e_vlan_rx_add_cvid(struct mlx5e_flow_steering *fs, u16 vid)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index f377159d7a45..188dd8cdde0d 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -3907,6 +3907,10 @@ static netdev_features_t mlx5e_fix_uplink_rep_features(struct net_device *netdev
 	if (netdev->features & NETIF_F_GRO_HW)
 		netdev_warn(netdev, "Disabling HW_GRO, not supported in switchdev mode\n");
 
+	features &= ~NETIF_F_HW_VLAN_CTAG_FILTER;
+	if (netdev->features & NETIF_F_HW_VLAN_CTAG_FILTER)
+		netdev_warn(netdev, "Disabling HW_VLAN CTAG FILTERING, not supported in switchdev mode\n");
+
 	return features;
 }
 
