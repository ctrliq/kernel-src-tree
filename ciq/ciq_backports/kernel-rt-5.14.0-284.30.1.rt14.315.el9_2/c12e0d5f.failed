self-tests: introduce self-tests for RPS default mask

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-5.14.0-284.30.1.rt14.315.el9_2
commit-author Paolo Abeni <pabeni@redhat.com>
commit c12e0d5f267d7eb45a2f8eaa9fd44eaa2871a95e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-5.14.0-284.30.1.rt14.315.el9_2/c12e0d5f.failed

Ensure that RPS default mask changes take place on
all newly created netns/devices and don't affect
existing ones.

	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Reviewed-by: Simon Horman <simon.horman@corigine.com>
	Reviewed-by: Eric Dumazet <edumazet@google.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit c12e0d5f267d7eb45a2f8eaa9fd44eaa2871a95e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/Makefile
diff --cc tools/testing/selftests/net/Makefile
index fcd84643f887,3364c548a23b..000000000000
--- a/tools/testing/selftests/net/Makefile
+++ b/tools/testing/selftests/net/Makefile
@@@ -28,9 -30,25 +28,16 @@@ TEST_PROGS += veth.s
  TEST_PROGS += gro.sh
  TEST_PROGS += gre_gso.sh
  TEST_PROGS += cmsg_so_mark.sh
 -TEST_PROGS += cmsg_time.sh cmsg_ipv6.sh
 -TEST_PROGS += srv6_end_dt46_l3vpn_test.sh
 -TEST_PROGS += srv6_end_dt4_l3vpn_test.sh
 -TEST_PROGS += srv6_end_dt6_l3vpn_test.sh
 -TEST_PROGS += srv6_hencap_red_l3vpn_test.sh
 -TEST_PROGS += srv6_hl2encap_red_l2vpn_test.sh
 -TEST_PROGS += srv6_end_next_csid_l3vpn_test.sh
  TEST_PROGS += vrf_strict_mode_test.sh
 -TEST_PROGS += arp_ndisc_evict_nocarrier.sh
 -TEST_PROGS += ndisc_unsolicited_na_test.sh
 -TEST_PROGS += arp_ndisc_untracked_subnets.sh
  TEST_PROGS += stress_reuseport_listen.sh
++<<<<<<< HEAD
++=======
+ TEST_PROGS += l2_tos_ttl_inherit.sh
+ TEST_PROGS += bind_bhash.sh
+ TEST_PROGS += ip_local_port_range.sh
+ TEST_PROGS += rps_default_mask.sh
++>>>>>>> c12e0d5f267d (self-tests: introduce self-tests for RPS default mask)
  TEST_PROGS_EXTENDED := in_netns.sh setup_loopback.sh setup_veth.sh
 -TEST_PROGS_EXTENDED += toeplitz_client.sh toeplitz.sh
  TEST_GEN_FILES =  socket nettest
  TEST_GEN_FILES += psock_fanout psock_tpacket msg_zerocopy reuseport_addr_any
  TEST_GEN_FILES += tcp_mmap tcp_inq psock_snd txring_overwrite
* Unmerged path tools/testing/selftests/net/Makefile
diff --git a/tools/testing/selftests/net/config b/tools/testing/selftests/net/config
index 6f905b53904f..5aaaf9663e5f 100644
--- a/tools/testing/selftests/net/config
+++ b/tools/testing/selftests/net/config
@@ -3,6 +3,9 @@ CONFIG_NET_NS=y
 CONFIG_BPF_SYSCALL=y
 CONFIG_TEST_BPF=m
 CONFIG_NUMA=y
+CONFIG_RPS=y
+CONFIG_SYSFS=y
+CONFIG_PROC_SYSCTL=y
 CONFIG_NET_VRF=y
 CONFIG_NET_L3_MASTER_DEV=y
 CONFIG_IPV6=y
diff --git a/tools/testing/selftests/net/rps_default_mask.sh b/tools/testing/selftests/net/rps_default_mask.sh
new file mode 100755
index 000000000000..c81c0ac7ddfe
--- /dev/null
+++ b/tools/testing/selftests/net/rps_default_mask.sh
@@ -0,0 +1,57 @@
+#!/bin/sh
+# SPDX-License-Identifier: GPL-2.0
+
+readonly ksft_skip=4
+readonly cpus=$(nproc)
+ret=0
+
+[ $cpus -gt 2 ] || exit $ksft_skip
+
+readonly INITIAL_RPS_DEFAULT_MASK=$(cat /proc/sys/net/core/rps_default_mask)
+readonly NETNS="ns-$(mktemp -u XXXXXX)"
+
+setup() {
+	ip netns add "${NETNS}"
+	ip -netns "${NETNS}" link set lo up
+}
+
+cleanup() {
+	echo $INITIAL_RPS_DEFAULT_MASK > /proc/sys/net/core/rps_default_mask
+	ip netns del $NETNS
+}
+
+chk_rps() {
+	local rps_mask expected_rps_mask=$3
+	local dev_name=$2
+	local msg=$1
+
+	rps_mask=$(ip netns exec $NETNS cat /sys/class/net/$dev_name/queues/rx-0/rps_cpus)
+	printf "%-60s" "$msg"
+	if [ $rps_mask -eq $expected_rps_mask ]; then
+		echo "[ ok ]"
+	else
+		echo "[fail] expected $expected_rps_mask found $rps_mask"
+		ret=1
+	fi
+}
+
+trap cleanup EXIT
+
+echo 0 > /proc/sys/net/core/rps_default_mask
+setup
+chk_rps "empty rps_default_mask" lo 0
+cleanup
+
+echo 1 > /proc/sys/net/core/rps_default_mask
+setup
+chk_rps "non zero rps_default_mask" lo 1
+
+echo 3 > /proc/sys/net/core/rps_default_mask
+chk_rps "changing rps_default_mask dont affect existing netns" lo 1
+
+ip -n $NETNS link add type veth
+ip -n $NETNS link set dev veth0 up
+ip -n $NETNS link set dev veth1 up
+chk_rps "changing rps_default_mask affect newly created devices" veth0 3
+chk_rps "changing rps_default_mask affect newly created devices[II]" veth1 3
+exit $ret
