rxrpc: Remove call->input_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-5.14.0-284.30.1.rt14.315.el9_2
commit-author David Howells <dhowells@redhat.com>
commit 4041a8ff653ec4e4d9e6395802cb3f4fca59f7f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-5.14.0-284.30.1.rt14.315.el9_2/4041a8ff.failed

Remove call->input_lock as it was only necessary to serialise access to the
state stored in the rxrpc_call struct by simultaneous softirq handlers
presenting received packets.  They now dump the packets in a queue and a
single process-context handler now processes them.

	Signed-off-by: David Howells <dhowells@redhat.com>
cc: Marc Dionne <marc.dionne@auristor.com>
cc: linux-afs@lists.infradead.org
(cherry picked from commit 4041a8ff653ec4e4d9e6395802cb3f4fca59f7f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/rxrpc/input.c
diff --cc net/rxrpc/input.c
index b5326e160685,13c52145a926..000000000000
--- a/net/rxrpc/input.c
+++ b/net/rxrpc/input.c
@@@ -607,9 -605,7 +605,13 @@@ static void rxrpc_input_data(struct rxr
  out:
  	trace_rxrpc_notify_socket(call->debug_id, serial);
  	rxrpc_notify_socket(call);
++<<<<<<< HEAD
 +
 +	spin_unlock(&call->input_lock);
 +	rxrpc_free_skb(skb, rxrpc_skb_freed);
++=======
+ 	rxrpc_free_skb(skb, rxrpc_skb_put_input);
++>>>>>>> 4041a8ff653e (rxrpc: Remove call->input_lock)
  	_leave(" [queued]");
  }
  
@@@ -993,10 -986,8 +993,15 @@@ static void rxrpc_input_ack(struct rxrp
  
  	rxrpc_congestion_management(call, skb, &summary, acked_serial);
  out:
++<<<<<<< HEAD
 +	spin_unlock(&call->input_lock);
 +out_not_locked:
 +	rxrpc_free_skb(skb_put, rxrpc_skb_freed);
 +	rxrpc_free_skb(skb_old, rxrpc_skb_freed);
++=======
+ 	rxrpc_free_skb(skb_put, rxrpc_skb_put_input);
+ 	rxrpc_free_skb(skb_old, rxrpc_skb_put_ack);
++>>>>>>> 4041a8ff653e (rxrpc: Remove call->input_lock)
  }
  
  /*
diff --git a/net/rxrpc/ar-internal.h b/net/rxrpc/ar-internal.h
index 46ce41afb431..640a2d2a31af 100644
--- a/net/rxrpc/ar-internal.h
+++ b/net/rxrpc/ar-internal.h
@@ -635,7 +635,6 @@ struct rxrpc_call {
 	rxrpc_seq_t		rx_consumed;	/* Highest packet consumed */
 	rxrpc_serial_t		rx_serial;	/* Highest serial received for this call */
 	u8			rx_winsize;	/* Size of Rx window */
-	spinlock_t		input_lock;	/* Lock for packet input to this call */
 
 	/* TCP-style slow-start congestion control [RFC5681].  Since the SMSS
 	 * is fixed, we keep these numbers in terms of segments (ie. DATA
diff --git a/net/rxrpc/call_object.c b/net/rxrpc/call_object.c
index ad495d0d21a8..82457be3a207 100644
--- a/net/rxrpc/call_object.c
+++ b/net/rxrpc/call_object.c
@@ -151,7 +151,6 @@ struct rxrpc_call *rxrpc_alloc_call(struct rxrpc_sock *rx, gfp_t gfp,
 	init_waitqueue_head(&call->waitq);
 	spin_lock_init(&call->notify_lock);
 	spin_lock_init(&call->tx_lock);
-	spin_lock_init(&call->input_lock);
 	spin_lock_init(&call->acks_ack_lock);
 	rwlock_init(&call->state_lock);
 	refcount_set(&call->ref, 1);
* Unmerged path net/rxrpc/input.c
