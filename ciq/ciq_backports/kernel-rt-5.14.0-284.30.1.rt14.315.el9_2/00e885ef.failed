blk-mq: fix "bad unlock balance detected" on q->srcu in __blk_mq_run_dispatch_ops

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-5.14.0-284.30.1.rt14.315.el9_2
commit-author Chris Leech <cleech@redhat.com>
commit 00e885efcfbb8712d3e1bfc1ae30639c15ca1d3b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-5.14.0-284.30.1.rt14.315.el9_2/00e885ef.failed

The 'q' parameter of the macro __blk_mq_run_dispatch_ops may not be one
local variable, such as, it is rq->q, then request queue pointed by
this variable could be changed to another queue in case of
BLK_MQ_F_TAG_QUEUE_SHARED after 'dispatch_ops' returns, then
'bad unlock balance' is triggered.

Fixes the issue by adding one local variable for doing srcu lock/unlock.

Fixes: 2a904d00855f ("blk-mq: remove hctx_lock and hctx_unlock")
	Cc: Marco Patalano <mpatalan@redhat.com>
	Signed-off-by: Chris Leech <cleech@redhat.com>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
Link: https://lore.kernel.org/r/20230310010913.1014789-1-ming.lei@redhat.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 00e885efcfbb8712d3e1bfc1ae30639c15ca1d3b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-mq.h
diff --cc block/blk-mq.h
index 0b2870839cdd,a7482d2cc82e..000000000000
--- a/block/blk-mq.h
+++ b/block/blk-mq.h
@@@ -377,7 -377,15 +377,19 @@@ static inline bool hctx_may_queue(struc
  /* run the code block in @dispatch_ops with rcu/srcu read lock held */
  #define __blk_mq_run_dispatch_ops(q, check_sleep, dispatch_ops)	\
  do {								\
++<<<<<<< HEAD
 +	if (!blk_queue_has_srcu(q)) {				\
++=======
+ 	if ((q)->tag_set->flags & BLK_MQ_F_BLOCKING) {		\
+ 		struct blk_mq_tag_set *__tag_set = (q)->tag_set; \
+ 		int srcu_idx;					\
+ 								\
+ 		might_sleep_if(check_sleep);			\
+ 		srcu_idx = srcu_read_lock(__tag_set->srcu);	\
+ 		(dispatch_ops);					\
+ 		srcu_read_unlock(__tag_set->srcu, srcu_idx);	\
+ 	} else {						\
++>>>>>>> 00e885efcfbb (blk-mq: fix "bad unlock balance detected" on q->srcu in __blk_mq_run_dispatch_ops)
  		rcu_read_lock();				\
  		(dispatch_ops);					\
  		rcu_read_unlock();				\
* Unmerged path block/blk-mq.h
