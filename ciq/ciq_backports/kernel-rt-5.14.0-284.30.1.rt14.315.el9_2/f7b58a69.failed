dm: fix improper splitting for abnormal bios

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-5.14.0-284.30.1.rt14.315.el9_2
commit-author Mike Snitzer <snitzer@kernel.org>
commit f7b58a69fad9d2c4c90cab0247811155dd0d48e7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-5.14.0-284.30.1.rt14.315.el9_2/f7b58a69.failed

"Abnormal" bios include discards, write zeroes and secure erase. By no
longer passing the calculated 'len' pointer, commit 7dd06a2548b2 ("dm:
allow dm_accept_partial_bio() for dm_io without duplicate bios") took a
senseless approach to disallowing dm_accept_partial_bio() from working
for duplicate bios processed using __send_duplicate_bios().

It inadvertently and incorrectly stopped the use of 'len' when
initializing a target's io (in alloc_tio). As such the resulting tio
could address more area of a device than it should.

For example, when discarding an entire DM striped device with the
following DM table:
 vg-lvol0: 0 159744 striped 2 128 7:0 2048 7:1 2048
 vg-lvol0: 159744 45056 striped 2 128 7:2 2048 7:3 2048

Before this fix:

 device-mapper: striped: target_stripe=0, bdev=7:0, start=2048 len=102400
 blkdiscard: attempt to access beyond end of device
 loop0: rw=2051, sector=2048, nr_sectors = 102400 limit=81920

 device-mapper: striped: target_stripe=1, bdev=7:1, start=2048 len=102400
 blkdiscard: attempt to access beyond end of device
 loop1: rw=2051, sector=2048, nr_sectors = 102400 limit=81920

After this fix;

 device-mapper: striped: target_stripe=0, bdev=7:0, start=2048 len=79872
 device-mapper: striped: target_stripe=1, bdev=7:1, start=2048 len=79872

Fixes: 7dd06a2548b2 ("dm: allow dm_accept_partial_bio() for dm_io without duplicate bios")
	Cc: stable@vger.kernel.org
	Reported-by: Orange Kao <orange@aiven.io>
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit f7b58a69fad9d2c4c90cab0247811155dd0d48e7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm.c
diff --cc drivers/md/dm.c
index a84025b34305,e67a2757c53e..000000000000
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@@ -1524,7 -1467,8 +1524,12 @@@ static void setup_split_accounting(stru
  }
  
  static void alloc_multiple_bios(struct bio_list *blist, struct clone_info *ci,
++<<<<<<< HEAD
 +				struct dm_target *ti, unsigned num_bios)
++=======
+ 				struct dm_target *ti, unsigned int num_bios,
+ 				unsigned *len)
++>>>>>>> f7b58a69fad9 (dm: fix improper splitting for abnormal bios)
  {
  	struct bio *bio;
  	int try;
* Unmerged path drivers/md/dm.c
