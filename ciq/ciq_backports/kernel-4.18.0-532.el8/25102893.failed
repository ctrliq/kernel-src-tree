igc: Include the length/type field and VLAN tag in queueMaxSDU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-532.el8
commit-author Tan Tee Min <tee.min.tan@linux.intel.com>
commit 25102893e409bc02761ab82dbcfa092006404790
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-532.el8/25102893.failed

IEEE 802.1Q does not have clear definitions of what constitutes an
SDU (Service Data Unit), but IEEE Std 802.3 clause 3.1.2 does define
the MAC service primitives and clause 3.2.7 does define the MAC Client
Data for Q-tagged frames.

It shows that the mac_service_data_unit (MSDU) does NOT contain the
preamble, destination and source address, or FCS. The MSDU does contain
the length/type field, MAC client data, VLAN tag and any padding
data (prior to the FCS).

Thus, the maximum 802.3 frame size that is allowed to be transmitted
should be QueueMaxSDU (MSDU) + 16 (6 byte SA + 6 byte DA + 4 byte FCS).

Fixes: 92a0dcb8427d ("igc: offload queue max SDU from tc-taprio")
	Signed-off-by: Tan Tee Min <tee.min.tan@linux.intel.com>
	Reviewed-by: Muhammad Husaini Zulkifli <muhammad.husaini.zulkifli@intel.com>
	Tested-by: Naama Meir <naamax.meir@linux.intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 25102893e409bc02761ab82dbcfa092006404790)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/igc/igc_main.c
diff --cc drivers/net/ethernet/intel/igc/igc_main.c
index 80cce6f30899,281a0e35b9d1..000000000000
--- a/drivers/net/ethernet/intel/igc/igc_main.c
+++ b/drivers/net/ethernet/intel/igc/igc_main.c
@@@ -1581,16 -1572,12 +1581,25 @@@ done
  	first->bytecount = skb->len;
  	first->gso_segs = 1;
  
++<<<<<<< HEAD
 +	if (tx_ring->max_sdu > 0) {
 +		u32 max_sdu = 0;
 +
 +		max_sdu = tx_ring->max_sdu +
 +			  (skb_vlan_tagged(first->skb) ? VLAN_HLEN : 0);
 +
 +		if (first->bytecount > max_sdu) {
 +			adapter->stats.txdrop++;
 +			goto out_drop;
 +		}
++=======
+ 	if (adapter->qbv_transition || tx_ring->oper_gate_closed)
+ 		goto out_drop;
+ 
+ 	if (tx_ring->max_sdu > 0 && first->bytecount > tx_ring->max_sdu) {
+ 		adapter->stats.txdrop++;
+ 		goto out_drop;
++>>>>>>> 25102893e409 (igc: Include the length/type field and VLAN tag in queueMaxSDU)
  	}
  
  	if (unlikely(test_bit(IGC_RING_FLAG_TX_HWTSTAMP, &tx_ring->flags) &&
* Unmerged path drivers/net/ethernet/intel/igc/igc_main.c
