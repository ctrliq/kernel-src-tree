platform/x86/intel/ifs: Use generic microcode headers and functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Jithu Joseph <jithu.joseph@intel.com>
commit aa63e0fda85edf9a8431fc31a2b2d4f3f40592f9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/aa63e0fd.failed

Existing implementation (broken) of IFS used a header format (for IFS
test images) which was very similar to microcode format, but didnâ€™t
accommodate extended signatures. This meant same IFS test image had to
be duplicated for different steppings and the validation code in the
driver was only looking at the primary header parameters. Going forward,
IFS test image headers have been tweaked to become fully compatible with
the microcode format.

Newer IFS test image headers will use header version 2 in order to
distinguish it from microcode images and older IFS test images.

In light of the above, reuse struct microcode_header_intel directly in
the IFS driver and reuse microcode functions for validation and sanity
checking.

  [ bp: Massage commit message. ]

	Signed-off-by: Jithu Joseph <jithu.joseph@intel.com>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Tony Luck <tony.luck@intel.com>
	Reviewed-by: Sohil Mehta <sohil.mehta@intel.com>
	Reviewed-by: Hans de Goede <hdegoede@redhat.com>
Link: https://lore.kernel.org/r/20221117225039.30166-1-jithu.joseph@intel.com
(cherry picked from commit aa63e0fda85edf9a8431fc31a2b2d4f3f40592f9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/microcode_intel.h
#	drivers/platform/x86/intel/ifs/load.c
diff --cc arch/x86/include/asm/microcode_intel.h
index 4cb7d7d557d0,f1fa979e05bf..000000000000
--- a/arch/x86/include/asm/microcode_intel.h
+++ b/arch/x86/include/asm/microcode_intel.h
@@@ -42,6 -42,8 +42,11 @@@ struct extended_sigtable 
  #define DEFAULT_UCODE_TOTALSIZE (DEFAULT_UCODE_DATASIZE + MC_HEADER_SIZE)
  #define EXT_HEADER_SIZE		(sizeof(struct extended_sigtable))
  #define EXT_SIGNATURE_SIZE	(sizeof(struct extended_signature))
++<<<<<<< HEAD
++=======
+ #define MC_HEADER_TYPE_MICROCODE	1
+ #define MC_HEADER_TYPE_IFS		2
++>>>>>>> aa63e0fda85e (platform/x86/intel/ifs: Use generic microcode headers and functions)
  
  #define get_totalsize(mc) \
  	(((struct microcode_intel *)mc)->hdr.datasize ? \
* Unmerged path drivers/platform/x86/intel/ifs/load.c
* Unmerged path arch/x86/include/asm/microcode_intel.h
* Unmerged path drivers/platform/x86/intel/ifs/load.c
