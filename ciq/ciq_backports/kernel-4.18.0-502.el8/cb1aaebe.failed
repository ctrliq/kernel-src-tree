docs: fix broken documentation links

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
commit cb1aaebea8d79860181559d7b5d482aea63db113
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/cb1aaebe.failed

Mostly due to x86 and acpi conversion, several documentation
links are still pointing to the old file. Fix them.

	Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
	Reviewed-by: Wolfram Sang <wsa@the-dreams.de>
	Reviewed-by: Sven Van Asbroeck <TheSven73@gmail.com>
	Reviewed-by: Bhupesh Sharma <bhsharma@redhat.com>
	Acked-by: Mark Brown <broonie@kernel.org>
	Signed-off-by: Jonathan Corbet <corbet@lwn.net>
(cherry picked from commit cb1aaebea8d79860181559d7b5d482aea63db113)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/acpi/dsd/leds.txt
#	Documentation/admin-guide/kernel-parameters.txt
#	Documentation/devicetree/bindings/net/fsl-enetc.txt
#	Documentation/devicetree/bindings/pci/amlogic,meson-pcie.txt
#	Documentation/devicetree/bindings/regulator/qcom,rpmh-regulator.txt
#	Documentation/firmware-guide/acpi/method-tracing.rst
#	Documentation/translations/zh_CN/process/4.Coding.rst
#	Documentation/x86/x86_64/boot-options.rst
#	MAINTAINERS
#	arch/arm64/kernel/kexec_image.c
#	arch/x86/Kconfig
#	arch/x86/platform/pvh/enlighten.c
#	drivers/staging/fieldbus/Documentation/fieldbus_dev.txt
#	security/Kconfig
diff --cc Documentation/admin-guide/kernel-parameters.txt
index 2531c7325bd5,1abd7e145357..000000000000
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@@ -2726,7 -2528,7 +2726,11 @@@
  			mem_encrypt=on:		Activate SME
  			mem_encrypt=off:	Do not activate SME
  
++<<<<<<< HEAD
 +			Refer to Documentation/virt/kvm/x86/amd-memory-encryption.rst
++=======
+ 			Refer to Documentation/virtual/kvm/amd-memory-encryption.rst
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  			for details on when memory encryption can be activated.
  
  	mem_sleep_default=	[SUSPEND] Default system suspend mode:
diff --cc MAINTAINERS
index 930c743afed1,26e0369c1641..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -3638,14 -3874,7 +3638,18 @@@ F:	Documentation/devicetree/bindings/mf
  F:	Documentation/devicetree/bindings/pinctrl/cirrus,lochnagar.txt
  F:	Documentation/devicetree/bindings/regulator/cirrus,lochnagar.txt
  F:	Documentation/devicetree/bindings/sound/cirrus,lochnagar.txt
++<<<<<<< HEAD
 +F:	drivers/clk/clk-lochnagar.c
 +F:	drivers/mfd/lochnagar-i2c.c
 +F:	drivers/pinctrl/cirrus/pinctrl-lochnagar.c
 +F:	drivers/regulator/lochnagar-regulator.c
 +F:	include/dt-bindings/clk/lochnagar.h
 +F:	include/dt-bindings/pinctrl/lochnagar.h
 +F:	include/linux/mfd/lochnagar*
 +F:	sound/soc/codecs/lochnagar-sc.c
++=======
+ F:	Documentation/hwmon/lochnagar.rst
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  
  CISCO FCOE HBA DRIVER
  M:	Satish Kharat <satishkh@cisco.com>
@@@ -10682,8 -11268,18 +10686,21 @@@ F:	drivers/nvmem
  F:	include/linux/nvmem-consumer.h
  F:	include/linux/nvmem-provider.h
  
++<<<<<<< HEAD
++=======
+ NXP FXAS21002C DRIVER
+ M:	Rui Miguel Silva <rmfrfs@gmail.com>
+ L:	linux-iio@vger.kernel.org
+ S:	Maintained
+ F:	Documentation/devicetree/bindings/iio/gyroscope/nxp,fxas21002c.txt
+ F:	drivers/iio/gyro/fxas21002c_core.c
+ F:	drivers/iio/gyro/fxas21002c.h
+ F:	drivers/iio/gyro/fxas21002c_i2c.c
+ F:	drivers/iio/gyro/fxas21002c_spi.c
+ 
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  NXP SGTL5000 DRIVER
 -M:	Fabio Estevam <festevam@gmail.com>
 +M:	Fabio Estevam <fabio.estevam@nxp.com>
  L:	alsa-devel@alsa-project.org (moderated for non-subscribers)
  S:	Maintained
  F:	Documentation/devicetree/bindings/sound/sgtl5000.txt
diff --cc arch/arm64/kernel/kexec_image.c
index 191f48a64b98,31cc2f423aa8..000000000000
--- a/arch/arm64/kernel/kexec_image.c
+++ b/arch/arm64/kernel/kexec_image.c
@@@ -45,9 -47,13 +45,13 @@@ static void *image_load(struct kimage *
  	struct kexec_segment *kernel_segment;
  	int ret;
  
 -	/* We don't support crash kernels yet. */
 -	if (image->type == KEXEC_TYPE_CRASH)
 -		return ERR_PTR(-EOPNOTSUPP);
 -
  	/*
  	 * We require a kernel with an unambiguous Image header. Per
++<<<<<<< HEAD
 +	 * Documentation/booting.rst, this is the case when image_size
++=======
+ 	 * Documentation/arm64/booting.txt, this is the case when image_size
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  	 * is non-zero (practically speaking, since v3.17).
  	 */
  	h = (struct arm64_image_header *)kernel;
diff --cc arch/x86/Kconfig
index f26d1d596e9a,9f1f7b47621c..000000000000
--- a/arch/x86/Kconfig
+++ b/arch/x86/Kconfig
@@@ -1361,8 -1320,16 +1361,18 @@@ config MICROCODE_AM
  	  processors will be enabled.
  
  config MICROCODE_OLD_INTERFACE
 -	bool "Ancient loading interface (DEPRECATED)"
 -	default n
 +	def_bool y
  	depends on MICROCODE
++<<<<<<< HEAD
++=======
+ 	---help---
+ 	  DO NOT USE THIS! This is the ancient /dev/cpu/microcode interface
+ 	  which was used by userspace tools like iucode_tool and microcode.ctl.
+ 	  It is inadequate because it runs too late to be able to properly
+ 	  load microcode on a machine and it needs special tools. Instead, you
+ 	  should've switched to the early loading method with the initrd or
+ 	  builtin microcode by now: Documentation/x86/microcode.rst
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  
  config X86_MSR
  	tristate "/dev/cpu/*/msr - Model-specific register support"
diff --cc security/Kconfig
index 3b18399a5232,6d75ed71970c..000000000000
--- a/security/Kconfig
+++ b/security/Kconfig
@@@ -54,6 -53,17 +54,20 @@@ config SECURITY_NETWOR
  	  implement socket and networking access controls.
  	  If you are unsure how to answer this question, answer N.
  
++<<<<<<< HEAD
++=======
+ config PAGE_TABLE_ISOLATION
+ 	bool "Remove the kernel mapping in user mode"
+ 	default y
+ 	depends on (X86_64 || X86_PAE) && !UML
+ 	help
+ 	  This feature reduces the number of hardware side channels by
+ 	  ensuring that the majority of kernel addresses are not mapped
+ 	  into userspace.
+ 
+ 	  See Documentation/x86/pti.rst for more details.
+ 
++>>>>>>> cb1aaebea8d7 (docs: fix broken documentation links)
  config SECURITY_INFINIBAND
  	bool "Infiniband Security Hooks"
  	depends on SECURITY && INFINIBAND
* Unmerged path Documentation/acpi/dsd/leds.txt
* Unmerged path Documentation/devicetree/bindings/net/fsl-enetc.txt
* Unmerged path Documentation/devicetree/bindings/pci/amlogic,meson-pcie.txt
* Unmerged path Documentation/devicetree/bindings/regulator/qcom,rpmh-regulator.txt
* Unmerged path Documentation/firmware-guide/acpi/method-tracing.rst
* Unmerged path Documentation/translations/zh_CN/process/4.Coding.rst
* Unmerged path Documentation/x86/x86_64/boot-options.rst
* Unmerged path arch/x86/platform/pvh/enlighten.c
* Unmerged path drivers/staging/fieldbus/Documentation/fieldbus_dev.txt
* Unmerged path Documentation/acpi/dsd/leds.txt
diff --git a/Documentation/acpi/enumeration.txt b/Documentation/acpi/enumeration.txt
index 7bcf9c3d9fbe..153529ab470e 100644
--- a/Documentation/acpi/enumeration.txt
+++ b/Documentation/acpi/enumeration.txt
@@ -330,7 +330,7 @@ a code like this:
 There are also devm_* versions of these functions which release the
 descriptors once the device is released.
 
-See Documentation/acpi/gpio-properties.txt for more information about the
+See Documentation/firmware-guide/acpi/gpio-properties.rst for more information about the
 _DSD binding related to GPIOs.
 
 MFD devices
diff --git a/Documentation/admin-guide/kernel-parameters.rst b/Documentation/admin-guide/kernel-parameters.rst
index 0124980dca2d..8d3273e32eb1 100644
--- a/Documentation/admin-guide/kernel-parameters.rst
+++ b/Documentation/admin-guide/kernel-parameters.rst
@@ -167,7 +167,7 @@ parameter is applicable::
 	X86-32	X86-32, aka i386 architecture is enabled.
 	X86-64	X86-64 architecture is enabled.
 			More X86-64 boot options can be found in
-			Documentation/x86/x86_64/boot-options.txt .
+			Documentation/x86/x86_64/boot-options.rst.
 	X86	Either 32-bit or 64-bit x86 (same as X86-32+X86-64)
 	X86_UV	SGI UV support is enabled.
 	XEN	Xen support is enabled
@@ -181,10 +181,10 @@ In addition, the following text indicates that the option::
 Parameters denoted with BOOT are actually interpreted by the boot
 loader, and have no meaning to the kernel directly.
 Do not modify the syntax of boot loader parameters without extreme
-need or coordination with <Documentation/x86/boot.txt>.
+need or coordination with <Documentation/x86/boot.rst>.
 
 There are also arch-specific kernel-parameters not documented here.
-See for example <Documentation/x86/x86_64/boot-options.txt>.
+See for example <Documentation/x86/x86_64/boot-options.rst>.
 
 Note that ALL kernel parameters listed below are CASE SENSITIVE, and that
 a trailing = on the name of any parameter states that that parameter will
* Unmerged path Documentation/admin-guide/kernel-parameters.txt
diff --git a/Documentation/admin-guide/ras.rst b/Documentation/admin-guide/ras.rst
index 197896718f81..1f511fd36b62 100644
--- a/Documentation/admin-guide/ras.rst
+++ b/Documentation/admin-guide/ras.rst
@@ -199,7 +199,7 @@ Architecture (MCA)\ [#f3]_.
   mode).
 
 .. [#f3] For more details about the Machine Check Architecture (MCA),
-  please read Documentation/x86/x86_64/machinecheck at the Kernel tree.
+  please read Documentation/x86/x86_64/machinecheck.rst at the Kernel tree.
 
 EDAC - Error Detection And Correction
 *************************************
* Unmerged path Documentation/devicetree/bindings/net/fsl-enetc.txt
* Unmerged path Documentation/devicetree/bindings/pci/amlogic,meson-pcie.txt
* Unmerged path Documentation/devicetree/bindings/regulator/qcom,rpmh-regulator.txt
diff --git a/Documentation/devicetree/booting-without-of.txt b/Documentation/devicetree/booting-without-of.txt
index e86bd2f64117..60f8640f2b2f 100644
--- a/Documentation/devicetree/booting-without-of.txt
+++ b/Documentation/devicetree/booting-without-of.txt
@@ -277,7 +277,7 @@ it with special cases.
   the decompressor (the real mode entry point goes to the same  32bit
   entry point once it switched into protected mode). That entry point
   supports one calling convention which is documented in
-  Documentation/x86/boot.txt
+  Documentation/x86/boot.rst
   The physical pointer to the device-tree block (defined in chapter II)
   is passed via setup_data which requires at least boot protocol 2.09.
   The type filed is defined as
diff --git a/Documentation/driver-api/gpio/board.rst b/Documentation/driver-api/gpio/board.rst
index a0f294e2e250..1ce3d267ab54 100644
--- a/Documentation/driver-api/gpio/board.rst
+++ b/Documentation/driver-api/gpio/board.rst
@@ -101,7 +101,7 @@ with the help of _DSD (Device Specific Data), introduced in ACPI 5.1::
 	}
 
 For more information about the ACPI GPIO bindings see
-Documentation/acpi/gpio-properties.txt.
+Documentation/firmware-guide/acpi/gpio-properties.rst.
 
 Platform Data
 -------------
diff --git a/Documentation/driver-api/gpio/consumer.rst b/Documentation/driver-api/gpio/consumer.rst
index 1cebfec68744..53206656d700 100644
--- a/Documentation/driver-api/gpio/consumer.rst
+++ b/Documentation/driver-api/gpio/consumer.rst
@@ -437,7 +437,7 @@ case, it will be handled by the GPIO subsystem automatically.  However, if the
 _DSD is not present, the mappings between GpioIo()/GpioInt() resources and GPIO
 connection IDs need to be provided by device drivers.
 
-For details refer to Documentation/acpi/gpio-properties.txt
+For details refer to Documentation/firmware-guide/acpi/gpio-properties.rst
 
 
 Interacting With the Legacy GPIO Subsystem
* Unmerged path Documentation/firmware-guide/acpi/method-tracing.rst
diff --git a/Documentation/i2c/instantiating-devices b/Documentation/i2c/instantiating-devices
index bf0654214cdb..d9f8f02ebcb3 100644
--- a/Documentation/i2c/instantiating-devices
+++ b/Documentation/i2c/instantiating-devices
@@ -85,7 +85,7 @@ Method 1c: Declare the I2C devices via ACPI
 -------------------------------------------
 
 ACPI can also describe I2C devices. There is special documentation for this
-which is currently located at Documentation/acpi/enumeration.txt.
+which is currently located at Documentation/firmware-guide/acpi/enumeration.rst.
 
 
 Method 2: Instantiate the devices explicitly
diff --git a/Documentation/sysctl/kernel.txt b/Documentation/sysctl/kernel.txt
index 7783354a1e8d..b5dac004c4db 100644
--- a/Documentation/sysctl/kernel.txt
+++ b/Documentation/sysctl/kernel.txt
@@ -153,7 +153,7 @@ is 0x15 and the full version number is 0x234, this file will contain
 the value 340 = 0x154.
 
 See the type_of_loader and ext_loader_type fields in
-Documentation/x86/boot.txt for additional information.
+Documentation/x86/boot.rst for additional information.
 
 ==============================================================
 
@@ -165,7 +165,7 @@ The complete bootloader version number.  In the example above, this
 file will contain the value 564 = 0x234.
 
 See the type_of_loader and ext_loader_ver fields in
-Documentation/x86/boot.txt for additional information.
+Documentation/x86/boot.rst for additional information.
 
 ==============================================================
 
* Unmerged path Documentation/translations/zh_CN/process/4.Coding.rst
diff --git a/Documentation/x86/x86_64/5level-paging.txt b/Documentation/x86/x86_64/5level-paging.txt
index 2432a5ef86d9..f88070a46578 100644
--- a/Documentation/x86/x86_64/5level-paging.txt
+++ b/Documentation/x86/x86_64/5level-paging.txt
@@ -14,7 +14,7 @@ physical address space. This "ought to be enough for anybody" ©.
 QEMU 2.9 and later support 5-level paging.
 
 Virtual memory layout for 5-level paging is described in
-Documentation/x86/x86_64/mm.txt
+Documentation/x86/x86_64/mm.rst
 
 == Enabling 5-level paging ==
 
* Unmerged path Documentation/x86/x86_64/boot-options.rst
diff --git a/Documentation/x86/x86_64/fake-numa-for-cpusets b/Documentation/x86/x86_64/fake-numa-for-cpusets
index 4b09f18831f8..ddfa733dada0 100644
--- a/Documentation/x86/x86_64/fake-numa-for-cpusets
+++ b/Documentation/x86/x86_64/fake-numa-for-cpusets
@@ -11,7 +11,7 @@ For more information on the features of cpusets, see
 Documentation/cgroup-v1/cpusets.txt.
 There are a number of different configurations you can use for your needs.  For
 more information on the numa=fake command line option and its various ways of
-configuring fake nodes, see Documentation/x86/x86_64/boot-options.txt.
+configuring fake nodes, see Documentation/x86/x86_64/boot-options.rst.
 
 For the purposes of this introduction, we'll assume a very primitive NUMA
 emulation setup of "numa=fake=4*512,".  This will split our system memory into
* Unmerged path MAINTAINERS
diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index bca60701e7a0..824b0539f9ce 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -1301,7 +1301,7 @@ config SMP
 	  uniprocessor machines. On a uniprocessor machine, the kernel
 	  will run faster if you say N here.
 
-	  See also <file:Documentation/x86/i386/IO-APIC.txt>,
+	  See also <file:Documentation/x86/i386/IO-APIC.rst>,
 	  <file:Documentation/lockup-watchdogs.txt> and the SMP-HOWTO available at
 	  <http://tldp.org/HOWTO/SMP-HOWTO.html>.
 
* Unmerged path arch/arm64/kernel/kexec_image.c
* Unmerged path arch/x86/Kconfig
diff --git a/arch/x86/Kconfig.debug b/arch/x86/Kconfig.debug
index 94df545a5731..e1eb7a1a518a 100644
--- a/arch/x86/Kconfig.debug
+++ b/arch/x86/Kconfig.debug
@@ -172,7 +172,7 @@ config IOMMU_DEBUG
 	  code. When you use it make sure you have a big enough
 	  IOMMU/AGP aperture.  Most of the options enabled by this can
 	  be set more finegrained using the iommu= command line
-	  options. See Documentation/x86/x86_64/boot-options.txt for more
+	  options. See Documentation/x86/x86_64/boot-options.rst for more
 	  details.
 
 config IOMMU_LEAK
diff --git a/arch/x86/boot/header.S b/arch/x86/boot/header.S
index 850b8762e889..90d791ca1a95 100644
--- a/arch/x86/boot/header.S
+++ b/arch/x86/boot/header.S
@@ -313,7 +313,7 @@ start_sys_seg:	.word	SYSSEG		# obsolete and meaningless, but just
 
 type_of_loader:	.byte	0		# 0 means ancient bootloader, newer
 					# bootloaders know to change this.
-					# See Documentation/x86/boot.txt for
+					# See Documentation/x86/boot.rst for
 					# assigned ids
 
 # flags, unused bits must be zero (RFU) bit within loadflags
diff --git a/arch/x86/entry/entry_64.S b/arch/x86/entry/entry_64.S
index 6482dcfef6a8..3e0c33312eae 100644
--- a/arch/x86/entry/entry_64.S
+++ b/arch/x86/entry/entry_64.S
@@ -8,7 +8,7 @@
  *
  * entry.S contains the system-call and fault low-level handling routines.
  *
- * Some of this is documented in Documentation/x86/entry_64.txt
+ * Some of this is documented in Documentation/x86/entry_64.rst
  *
  * A note on terminology:
  * - iret frame:	Architecture defined interrupt frame from SS to RIP
diff --git a/arch/x86/include/asm/bootparam_utils.h b/arch/x86/include/asm/bootparam_utils.h
index b1ae6b73043f..53e9b0620d96 100644
--- a/arch/x86/include/asm/bootparam_utils.h
+++ b/arch/x86/include/asm/bootparam_utils.h
@@ -38,7 +38,7 @@ static void sanitize_boot_params(struct boot_params *boot_params)
 	 * IMPORTANT NOTE TO BOOTLOADER AUTHORS: do not simply clear
 	 * this field.  The purpose of this field is to guarantee
 	 * compliance with the x86 boot spec located in
-	 * Documentation/x86/boot.txt .  That spec says that the
+	 * Documentation/x86/boot.rst .  That spec says that the
 	 * *whole* structure should be cleared, after which only the
 	 * portion defined by struct setup_header (boot_params->hdr)
 	 * should be copied in.
diff --git a/arch/x86/include/asm/page_64_types.h b/arch/x86/include/asm/page_64_types.h
index 132008913f57..09f2dc3e2d23 100644
--- a/arch/x86/include/asm/page_64_types.h
+++ b/arch/x86/include/asm/page_64_types.h
@@ -49,7 +49,7 @@
 
 #define __START_KERNEL_map	_AC(0xffffffff80000000, UL)
 
-/* See Documentation/x86/x86_64/mm.txt for a description of the memory map. */
+/* See Documentation/x86/x86_64/mm.rst for a description of the memory map. */
 
 #define __PHYSICAL_MASK_SHIFT	52
 
diff --git a/arch/x86/include/asm/pgtable_64_types.h b/arch/x86/include/asm/pgtable_64_types.h
index a13cff4598fc..91ac10654570 100644
--- a/arch/x86/include/asm/pgtable_64_types.h
+++ b/arch/x86/include/asm/pgtable_64_types.h
@@ -103,7 +103,7 @@ extern unsigned int ptrs_per_p4d;
 #define PGDIR_MASK	(~(PGDIR_SIZE - 1))
 
 /*
- * See Documentation/x86/x86_64/mm.txt for a description of the memory map.
+ * See Documentation/x86/x86_64/mm.rst for a description of the memory map.
  *
  * Be very careful vs. KASLR when changing anything here. The KASLR address
  * range must not overlap with anything except the KASAN shadow area, which
diff --git a/arch/x86/kernel/cpu/microcode/amd.c b/arch/x86/kernel/cpu/microcode/amd.c
index 750889d77b56..e990da68a66c 100644
--- a/arch/x86/kernel/cpu/microcode/amd.c
+++ b/arch/x86/kernel/cpu/microcode/amd.c
@@ -59,7 +59,7 @@ static u8 amd_ucode_patch[PATCH_MAX_SIZE];
 
 /*
  * Microcode patch container file is prepended to the initrd in cpio
- * format. See Documentation/x86/microcode.txt
+ * format. See Documentation/x86/microcode.rst
  */
 static const char
 ucode_path[] __maybe_unused = "kernel/x86/microcode/AuthenticAMD.bin";
diff --git a/arch/x86/kernel/kexec-bzimage64.c b/arch/x86/kernel/kexec-bzimage64.c
index 1ec94054fc88..c8f19eb52248 100644
--- a/arch/x86/kernel/kexec-bzimage64.c
+++ b/arch/x86/kernel/kexec-bzimage64.c
@@ -407,7 +407,7 @@ static void *bzImage64_load(struct kimage *image, char *kernel,
 	efi_map_offset = params_cmdline_sz;
 	efi_setup_data_offset = efi_map_offset + ALIGN(efi_map_sz, 16);
 
-	/* Copy setup header onto bootparams. Documentation/x86/boot.txt */
+	/* Copy setup header onto bootparams. Documentation/x86/boot.rst */
 	setup_header_size = 0x0202 + kernel[0x0201] - setup_hdr_offset;
 
 	/* Is there a limit on setup header size? */
diff --git a/arch/x86/kernel/pci-dma.c b/arch/x86/kernel/pci-dma.c
index 7bb0a40e02bd..5ca1cd63322a 100644
--- a/arch/x86/kernel/pci-dma.c
+++ b/arch/x86/kernel/pci-dma.c
@@ -125,7 +125,7 @@ void __init pci_iommu_alloc(void)
 }
 
 /*
- * See <Documentation/x86/x86_64/boot-options.txt> for the iommu kernel
+ * See <Documentation/x86/x86_64/boot-options.rst> for the iommu kernel
  * parameter documentation.
  */
 static __init int iommu_setup(char *p)
diff --git a/arch/x86/mm/tlb.c b/arch/x86/mm/tlb.c
index 545badddbcfe..f2e37d86dabe 100644
--- a/arch/x86/mm/tlb.c
+++ b/arch/x86/mm/tlb.c
@@ -637,7 +637,7 @@ void native_flush_tlb_others(const struct cpumask *cpumask,
 }
 
 /*
- * See Documentation/x86/tlb.txt for details.  We choose 33
+ * See Documentation/x86/tlb.rst for details.  We choose 33
  * because it is large enough to cover the vast majority (at
  * least 95%) of allocations, and is small enough that we are
  * confident it will not cause too much overhead.  Each single
* Unmerged path arch/x86/platform/pvh/enlighten.c
diff --git a/drivers/acpi/Kconfig b/drivers/acpi/Kconfig
index a01fc1d6b909..eb2abb04dcd4 100644
--- a/drivers/acpi/Kconfig
+++ b/drivers/acpi/Kconfig
@@ -365,7 +365,7 @@ config ACPI_CUSTOM_DSDT_FILE
 	depends on !STANDALONE
 	help
 	  This option supports a custom DSDT by linking it into the kernel.
-	  See Documentation/acpi/dsdt-override.txt
+	  See Documentation/admin-guide/acpi/dsdt-override.rst
 
 	  Enter the full path name to the file which includes the AmlCode
 	  or dsdt_aml_code declaration.
@@ -387,7 +387,7 @@ config ACPI_TABLE_UPGRADE
 	  This option provides functionality to upgrade arbitrary ACPI tables
 	  via initrd. No functional change if no ACPI tables are passed via
 	  initrd, therefore it's safe to say Y.
-	  See Documentation/acpi/initrd_table_override.txt for details
+	  See Documentation/admin-guide/acpi/initrd_table_override.rst for details
 
 config ACPI_TABLE_OVERRIDE_VIA_BUILTIN_INITRD
 	bool "Override ACPI tables from built-in initrd"
@@ -397,7 +397,7 @@ config ACPI_TABLE_OVERRIDE_VIA_BUILTIN_INITRD
 	  This option provides functionality to override arbitrary ACPI tables
 	  from built-in uncompressed initrd.
 
-	  See Documentation/acpi/initrd_table_override.txt for details
+	  See Documentation/admin-guide/acpi/initrd_table_override.rst for details
 
 config ACPI_DEBUG
 	bool "Debug Statements"
@@ -406,7 +406,7 @@ config ACPI_DEBUG
 	  output and increases the kernel size by around 50K.
 
 	  Use the acpi.debug_layer and acpi.debug_level kernel command-line
-	  parameters documented in Documentation/acpi/debug.txt and
+	  parameters documented in Documentation/firmware-guide/acpi/debug.rst and
 	  Documentation/admin-guide/kernel-parameters.rst to control the type and
 	  amount of debug output.
 
@@ -471,7 +471,7 @@ config ACPI_CUSTOM_METHOD
 	help
 	  This debug facility allows ACPI AML methods to be inserted and/or
 	  replaced without rebooting the system. For details refer to:
-	  Documentation/acpi/method-customizing.txt.
+	  Documentation/firmware-guide/acpi/method-customizing.rst.
 
 	  NOTE: This option is security sensitive, because it allows arbitrary
 	  kernel memory to be written to by root (uid=0) users, allowing them
diff --git a/drivers/net/ethernet/faraday/ftgmac100.c b/drivers/net/ethernet/faraday/ftgmac100.c
index fc774ff8599b..9e12e53b8be3 100644
--- a/drivers/net/ethernet/faraday/ftgmac100.c
+++ b/drivers/net/ethernet/faraday/ftgmac100.c
@@ -1077,7 +1077,7 @@ static int ftgmac100_mii_probe(struct ftgmac100 *priv, phy_interface_t intf)
 	}
 
 	/* Indicate that we support PAUSE frames (see comment in
-	 * Documentation/networking/phy.txt)
+	 * Documentation/networking/phy.rst)
 	 */
 	phy_support_asym_pause(phydev);
 
* Unmerged path drivers/staging/fieldbus/Documentation/fieldbus_dev.txt
diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
index 4abc7e1d32ff..ac2ef7305cc2 100644
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -1796,7 +1796,7 @@ EXPORT_SYMBOL_GPL(vhost_dev_ioctl);
 
 /* TODO: This is really inefficient.  We need something like get_user()
  * (instruction directly accesses the data, with an exception table entry
- * returning -EFAULT). See Documentation/x86/exception-tables.txt.
+ * returning -EFAULT). See Documentation/x86/exception-tables.rst.
  */
 static int set_bit_to_user(int nr, void __user *addr)
 {
diff --git a/include/acpi/acpi_drivers.h b/include/acpi/acpi_drivers.h
index a923e4bc491d..91c0cf21a4ff 100644
--- a/include/acpi/acpi_drivers.h
+++ b/include/acpi/acpi_drivers.h
@@ -25,7 +25,7 @@
 #define ACPI_MAX_STRING			80
 
 /*
- * Please update drivers/acpi/debug.c and Documentation/acpi/debug.txt
+ * Please update drivers/acpi/debug.c and Documentation/firmware-guide/acpi/debug.rst
  * if you add to this list.
  */
 #define ACPI_BUS_COMPONENT		0x00010000
diff --git a/include/linux/fs_context.h b/include/linux/fs_context.h
index 8e9c1afc6055..48da7ca64110 100644
--- a/include/linux/fs_context.h
+++ b/include/linux/fs_context.h
@@ -89,7 +89,7 @@ struct p_log {
  * Superblock creation fills in ->root whereas reconfiguration begins with this
  * already set.
  *
- * See Documentation/filesystems/mounting.txt
+ * See Documentation/filesystems/mount_api.txt
  */
 struct fs_context {
 	const struct fs_context_operations *ops;
diff --git a/include/linux/lsm_hooks.h b/include/linux/lsm_hooks.h
index 57c61d853f10..e3a9285a0a83 100644
--- a/include/linux/lsm_hooks.h
+++ b/include/linux/lsm_hooks.h
@@ -83,7 +83,7 @@
  *	state.  This is called immediately after commit_creds().
  *
  * Security hooks for mount using fs_context.
- *	[See also Documentation/filesystems/mounting.txt]
+ *	[See also Documentation/filesystems/mount_api.txt]
  *
  * @fs_context_dup:
  *	Allocate and attach a security structure to sc->security.  This pointer
diff --git a/mm/Kconfig b/mm/Kconfig
index 51c7866f158a..416f9a720425 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -168,7 +168,7 @@ config MEMORY_HOTPLUG_DEFAULT_ONLINE
 	  onlining policy (/sys/devices/system/memory/auto_online_blocks) which
 	  determines what happens to newly added memory regions. Policy setting
 	  can always be changed at runtime.
-	  See Documentation/memory-hotplug.txt for more information.
+	  See Documentation/admin-guide/mm/memory-hotplug.rst for more information.
 
 	  Say Y here if you want all hot-plugged memory blocks to appear in
 	  'online' state by default.
* Unmerged path security/Kconfig
diff --git a/tools/include/linux/err.h b/tools/include/linux/err.h
index 2f5a12b88a86..25f2bb3a991d 100644
--- a/tools/include/linux/err.h
+++ b/tools/include/linux/err.h
@@ -20,7 +20,7 @@
  * Userspace note:
  * The same principle works for userspace, because 'error' pointers
  * fall down to the unused hole far from user space, as described
- * in Documentation/x86/x86_64/mm.txt for x86_64 arch:
+ * in Documentation/x86/x86_64/mm.rst for x86_64 arch:
  *
  * 0000000000000000 - 00007fffffffffff (=47 bits) user space, different per mm hole caused by [48:63] sign extension
  * ffffffffffe00000 - ffffffffffffffff (=2 MB) unused hole
diff --git a/tools/objtool/Documentation/stack-validation.txt b/tools/objtool/Documentation/stack-validation.txt
index 8073cf7f88d2..8b814273a79c 100644
--- a/tools/objtool/Documentation/stack-validation.txt
+++ b/tools/objtool/Documentation/stack-validation.txt
@@ -21,7 +21,7 @@ instructions).  Similarly, it knows how to follow switch statements, for
 which gcc sometimes uses jump tables.
 
 (Objtool also has an 'orc generate' subcommand which generates debuginfo
-for the ORC unwinder.  See Documentation/x86/orc-unwinder.txt in the
+for the ORC unwinder.  See Documentation/x86/orc-unwinder.rst in the
 kernel tree for more details.)
 
 
@@ -101,7 +101,7 @@ b) ORC (Oops Rewind Capability) unwind table generation
    band.  So it doesn't affect runtime performance and it can be
    reliable even when interrupts or exceptions are involved.
 
-   For more details, see Documentation/x86/orc-unwinder.txt.
+   For more details, see Documentation/x86/orc-unwinder.rst.
 
 c) Higher live patching compatibility rate
 
