drm/amdgpu: drop gfx_v11_0_cp_ecc_error_irq_funcs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Horatio Zhang <Hongkun.Zhang@amd.com>
commit 720b47229a5b24061d1c2e29ddb6043a59178d79
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/720b4722.failed

The gfx.cp_ecc_error_irq is retired in gfx11. In gfx_v11_0_hw_fini still
use amdgpu_irq_put to disable this interrupt, which caused the call trace
in this function.

[  102.873958] Call Trace:
[  102.873959]  <TASK>
[  102.873961]  gfx_v11_0_hw_fini+0x23/0x1e0 [amdgpu]
[  102.874019]  gfx_v11_0_suspend+0xe/0x20 [amdgpu]
[  102.874072]  amdgpu_device_ip_suspend_phase2+0x240/0x460 [amdgpu]
[  102.874122]  amdgpu_device_ip_suspend+0x3d/0x80 [amdgpu]
[  102.874172]  amdgpu_device_pre_asic_reset+0xd9/0x490 [amdgpu]
[  102.874223]  amdgpu_device_gpu_recover.cold+0x548/0xce6 [amdgpu]
[  102.874321]  amdgpu_debugfs_reset_work+0x4c/0x70 [amdgpu]
[  102.874375]  process_one_work+0x21f/0x3f0
[  102.874377]  worker_thread+0x200/0x3e0
[  102.874378]  ? process_one_work+0x3f0/0x3f0
[  102.874379]  kthread+0xfd/0x130
[  102.874380]  ? kthread_complete_and_exit+0x20/0x20
[  102.874381]  ret_from_fork+0x22/0x30

v2:
- Handle umc and gfx ras cases in separated patch
- Retired the gfx_v11_0_cp_ecc_error_irq_funcs in gfx11

v3:
- Improve the subject and code comments
- Add judgment on gfx11 in the function of amdgpu_gfx_ras_late_init

v4:
- Drop the define of CP_ME1_PIPE_INST_ADDR_INTERVAL and
SET_ECC_ME_PIPE_STATE which using in gfx_v11_0_set_cp_ecc_error_state
- Check cp_ecc_error_irq.funcs rather than ip version for a more
sustainable life

v5:
- Simplify judgment conditions

	Signed-off-by: Horatio Zhang <Hongkun.Zhang@amd.com>
	Reviewed-by: Hawking Zhang <Hawking.Zhang@amd.com>
	Acked-by: Christian KÃ¶nig <christian.koenig@amd.com>
	Reviewed-by: Guchun Chen <guchun.chen@amd.com>
	Reviewed-by: Feifei Xu <Feifei.Xu@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
	Cc: stable@vger.kernel.org
(cherry picked from commit 720b47229a5b24061d1c2e29ddb6043a59178d79)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
diff --cc drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
index 03775e0a8100,f5c376276984..000000000000
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
@@@ -1481,6 -1315,13 +1481,16 @@@ static int gfx_v11_0_sw_init(void *hand
  	if (r)
  		return r;
  
++<<<<<<< HEAD
++=======
+ 	/* FED error */
+ 	r = amdgpu_irq_add_id(adev, SOC21_IH_CLIENTID_GFX,
+ 				  GFX_11_0_0__SRCID__RLC_GC_FED_INTERRUPT,
+ 				  &adev->gfx.rlc_gc_fed_irq);
+ 	if (r)
+ 		return r;
+ 
++>>>>>>> 720b47229a5b (drm/amdgpu: drop gfx_v11_0_cp_ecc_error_irq_funcs)
  	adev->gfx.gfx_current_status = AMDGPU_GFX_NORMAL_MODE;
  
  	if (adev->gfx.imu.funcs) {
@@@ -6339,6 -6303,10 +6349,13 @@@ static const struct amdgpu_irq_src_func
  	.process = gfx_v11_0_priv_inst_irq,
  };
  
++<<<<<<< HEAD
++=======
+ static const struct amdgpu_irq_src_funcs gfx_v11_0_rlc_gc_fed_irq_funcs = {
+ 	.process = gfx_v11_0_rlc_gc_fed_irq,
+ };
+ 
++>>>>>>> 720b47229a5b (drm/amdgpu: drop gfx_v11_0_cp_ecc_error_irq_funcs)
  static void gfx_v11_0_set_irq_funcs(struct amdgpu_device *adev)
  {
  	adev->gfx.eop_irq.num_types = AMDGPU_CP_IRQ_LAST;
@@@ -6349,6 -6317,10 +6366,13 @@@
  
  	adev->gfx.priv_inst_irq.num_types = 1;
  	adev->gfx.priv_inst_irq.funcs = &gfx_v11_0_priv_inst_irq_funcs;
++<<<<<<< HEAD
++=======
+ 
+ 	adev->gfx.rlc_gc_fed_irq.num_types = 1; /* 0x80 FED error */
+ 	adev->gfx.rlc_gc_fed_irq.funcs = &gfx_v11_0_rlc_gc_fed_irq_funcs;
+ 
++>>>>>>> 720b47229a5b (drm/amdgpu: drop gfx_v11_0_cp_ecc_error_irq_funcs)
  }
  
  static void gfx_v11_0_set_imu_funcs(struct amdgpu_device *adev)
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.c
index 222d3d7ea076..ee688d7b2c5c 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.c
@@ -636,9 +636,11 @@ int amdgpu_gfx_ras_late_init(struct amdgpu_device *adev, struct ras_common_if *r
 		if (r)
 			return r;
 
-		r = amdgpu_irq_get(adev, &adev->gfx.cp_ecc_error_irq, 0);
-		if (r)
-			goto late_fini;
+		if (adev->gfx.cp_ecc_error_irq.funcs) {
+			r = amdgpu_irq_get(adev, &adev->gfx.cp_ecc_error_irq, 0);
+			if (r)
+				goto late_fini;
+		}
 	} else {
 		amdgpu_ras_feature_enable_on_boot(adev, ras_block, 0);
 	}
* Unmerged path drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
