r8152: add PID for the Lenovo OneLink+ Dock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Jean-Francois Le Fillatre <jflf_kernel@gmx.com>
commit 76d7df9406a1d2faec6eaaa1d835a1dbc1d49cec
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/76d7df94.failed

The Lenovo OneLink+ Dock contains an RTL8153 controller that behaves as
a broken CDC device by default. Add the custom Lenovo PID to the r8152
driver to support it properly.

Also, systems compatible with this dock provide a BIOS option to enable
MAC address passthrough (as per Lenovo document "ThinkPad Docking
Solutions 2017"). Add the custom PID to the MAC passthrough list too.

Tested on a ThinkPad 13 1st gen with the expected results:

passthrough disabled: Invalid header when reading pass-thru MAC addr
passthrough enabled:  Using pass-thru MAC addr XX:XX:XX:XX:XX:XX

	Signed-off-by: Jean-Francois Le Fillatre <jflf_kernel@gmx.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 76d7df9406a1d2faec6eaaa1d835a1dbc1d49cec)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index bd7057c011cc,688905ea0a6d..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -679,12 -767,14 +679,13 @@@ enum rtl8152_flags 
  	PHY_RESET,
  	SCHEDULE_TASKLET,
  	GREEN_ETHERNET,
 -	RX_EPROTO,
 +	DELL_TB_RX_AGG_BUG,
 +	LENOVO_MACPASSTHRU,
  };
  
+ #define DEVICE_ID_THINKPAD_ONELINK_PLUS_DOCK		0x3054
  #define DEVICE_ID_THINKPAD_THUNDERBOLT3_DOCK_GEN2	0x3082
 -#define DEVICE_ID_THINKPAD_USB_C_DONGLE			0x720c
  #define DEVICE_ID_THINKPAD_USB_C_DOCK_GEN2		0xa387
 -#define DEVICE_ID_THINKPAD_USB_C_DOCK_GEN3		0x3062
  
  struct tally_counter {
  	__le64	tx_packets;
@@@ -6813,6 -9574,30 +6814,33 @@@ u8 rtl8152_get_version(struct usb_inter
  }
  EXPORT_SYMBOL_GPL(rtl8152_get_version);
  
++<<<<<<< HEAD
++=======
+ static bool rtl8152_supports_lenovo_macpassthru(struct usb_device *udev)
+ {
+ 	int parent_vendor_id = le16_to_cpu(udev->parent->descriptor.idVendor);
+ 	int product_id = le16_to_cpu(udev->descriptor.idProduct);
+ 	int vendor_id = le16_to_cpu(udev->descriptor.idVendor);
+ 
+ 	if (vendor_id == VENDOR_ID_LENOVO) {
+ 		switch (product_id) {
+ 		case DEVICE_ID_THINKPAD_ONELINK_PLUS_DOCK:
+ 		case DEVICE_ID_THINKPAD_THUNDERBOLT3_DOCK_GEN2:
+ 		case DEVICE_ID_THINKPAD_USB_C_DOCK_GEN2:
+ 		case DEVICE_ID_THINKPAD_USB_C_DOCK_GEN3:
+ 		case DEVICE_ID_THINKPAD_USB_C_DONGLE:
+ 			return 1;
+ 		}
+ 	} else if (vendor_id == VENDOR_ID_REALTEK && parent_vendor_id == VENDOR_ID_LENOVO) {
+ 		switch (product_id) {
+ 		case 0x8153:
+ 			return 1;
+ 		}
+ 	}
+ 	return 0;
+ }
+ 
++>>>>>>> 76d7df9406a1 (r8152: add PID for the Lenovo OneLink+ Dock)
  static int rtl8152_probe(struct usb_interface *intf,
  			 const struct usb_device_id *id)
  {
@@@ -7018,25 -9816,32 +7046,54 @@@ static void rtl8152_disconnect(struct u
  
  /* table of devices that work with this driver */
  static const struct usb_device_id rtl8152_table[] = {
++<<<<<<< HEAD
 +	{REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8050)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8152)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8153)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x07ab)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x07c6)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x0927)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_SAMSUNG, 0xa101)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x304f)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3062)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3069)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3082)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x7205)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x720c)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x7214)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x721e)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0xa387)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_LINKSYS, 0x0041)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_NVIDIA,  0x09ff)},
 +	{REALTEK_USB_DEVICE(VENDOR_ID_TPLINK,  0x0601)},
++=======
+ 	/* Realtek */
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8050),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8053),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8152),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8153),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8155),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_REALTEK, 0x8156),
+ 
+ 	/* Microsoft */
+ 	REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x07ab),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x07c6),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_MICROSOFT, 0x0927),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_SAMSUNG, 0xa101),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x304f),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3054),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3062),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3069),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x3082),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x7205),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x720c),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x7214),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0x721e),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LENOVO,  0xa387),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_LINKSYS, 0x0041),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_NVIDIA,  0x09ff),
+ 	REALTEK_USB_DEVICE(VENDOR_ID_TPLINK,  0x0601),
++>>>>>>> 76d7df9406a1 (r8152: add PID for the Lenovo OneLink+ Dock)
  	{}
  };
  
diff --git a/drivers/net/usb/cdc_ether.c b/drivers/net/usb/cdc_ether.c
index f48003e609ad..42f1d36839f9 100644
--- a/drivers/net/usb/cdc_ether.c
+++ b/drivers/net/usb/cdc_ether.c
@@ -789,6 +789,13 @@ static const struct usb_device_id	products[] = {
 },
 #endif
 
+/* Lenovo ThinkPad OneLink+ Dock (based on Realtek RTL8153) */
+{
+	USB_DEVICE_AND_INTERFACE_INFO(LENOVO_VENDOR_ID, 0x3054, USB_CLASS_COMM,
+			USB_CDC_SUBCLASS_ETHERNET, USB_CDC_PROTO_NONE),
+	.driver_info = 0,
+},
+
 /* ThinkPad USB-C Dock (based on Realtek RTL8153) */
 {
 	USB_DEVICE_AND_INTERFACE_INFO(LENOVO_VENDOR_ID, 0x3062, USB_CLASS_COMM,
* Unmerged path drivers/net/usb/r8152.c
