r8152: support PHY firmware for RTL8156 series

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Hayes Wang <hayeswang@realtek.com>
commit 4a51b0e8a0143b0e83d51d9c58c6416c3818a9f2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/4a51b0e8.failed

Support new firmware type and method for RTL8156 series.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4a51b0e8a0143b0e83d51d9c58c6416c3818a9f2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index e84ea7c904d3,34c1ee61af01..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -4534,6 -5550,36 +5066,39 @@@ static int r8153b_post_firmware_1(struc
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ static int r8153c_post_firmware_1(struct r8152 *tp)
+ {
+ 	u32 ocp_data;
+ 
+ 	ocp_data = ocp_read_word(tp, MCU_TYPE_USB, USB_FW_CTRL);
+ 	ocp_data |= FLOW_CTRL_PATCH_2;
+ 	ocp_write_word(tp, MCU_TYPE_USB, USB_FW_CTRL, ocp_data);
+ 
+ 	ocp_data = ocp_read_word(tp, MCU_TYPE_USB, USB_FW_TASK);
+ 	ocp_data |= FC_PATCH_TASK;
+ 	ocp_write_word(tp, MCU_TYPE_USB, USB_FW_TASK, ocp_data);
+ 
+ 	return 0;
+ }
+ 
+ static int r8156a_post_firmware_1(struct r8152 *tp)
+ {
+ 	u32 ocp_data;
+ 
+ 	ocp_data = ocp_read_word(tp, MCU_TYPE_USB, USB_FW_FIX_EN1);
+ 	ocp_data |= FW_IP_RESET_EN;
+ 	ocp_write_word(tp, MCU_TYPE_USB, USB_FW_FIX_EN1, ocp_data);
+ 
+ 	/* Modify U3PHY parameter for compatibility issue */
+ 	ocp_write_dword(tp, MCU_TYPE_USB, USB_UPHY3_MDCMDIO, 0x4026840e);
+ 	ocp_write_dword(tp, MCU_TYPE_USB, USB_UPHY3_MDCMDIO, 0x4001acc9);
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 4a51b0e8a014 (r8152: support PHY firmware for RTL8156 series)
  static void r8153_aldps_en(struct r8152 *tp, bool enable)
  {
  	u16 data;
@@@ -6640,11 -9196,17 +7205,23 @@@ static int rtl_ops_init(struct r8152 *t
  #define FIRMWARE_8153A_3	"rtl_nic/rtl8153a-3.fw"
  #define FIRMWARE_8153A_4	"rtl_nic/rtl8153a-4.fw"
  #define FIRMWARE_8153B_2	"rtl_nic/rtl8153b-2.fw"
++<<<<<<< HEAD
++=======
+ #define FIRMWARE_8153C_1	"rtl_nic/rtl8153c-1.fw"
+ #define FIRMWARE_8156A_2	"rtl_nic/rtl8156a-2.fw"
+ #define FIRMWARE_8156B_2	"rtl_nic/rtl8156b-2.fw"
++>>>>>>> 4a51b0e8a014 (r8152: support PHY firmware for RTL8156 series)
  
  MODULE_FIRMWARE(FIRMWARE_8153A_2);
  MODULE_FIRMWARE(FIRMWARE_8153A_3);
  MODULE_FIRMWARE(FIRMWARE_8153A_4);
  MODULE_FIRMWARE(FIRMWARE_8153B_2);
++<<<<<<< HEAD
++=======
+ MODULE_FIRMWARE(FIRMWARE_8153C_1);
+ MODULE_FIRMWARE(FIRMWARE_8156A_2);
+ MODULE_FIRMWARE(FIRMWARE_8156B_2);
++>>>>>>> 4a51b0e8a014 (r8152: support PHY firmware for RTL8156 series)
  
  static int rtl_fw_init(struct r8152 *tp)
  {
@@@ -6670,6 -9232,19 +7247,22 @@@
  		rtl_fw->pre_fw		= r8153b_pre_firmware_1;
  		rtl_fw->post_fw		= r8153b_post_firmware_1;
  		break;
++<<<<<<< HEAD
++=======
+ 	case RTL_VER_11:
+ 		rtl_fw->fw_name		= FIRMWARE_8156A_2;
+ 		rtl_fw->post_fw		= r8156a_post_firmware_1;
+ 		break;
+ 	case RTL_VER_13:
+ 	case RTL_VER_15:
+ 		rtl_fw->fw_name		= FIRMWARE_8156B_2;
+ 		break;
+ 	case RTL_VER_14:
+ 		rtl_fw->fw_name		= FIRMWARE_8153C_1;
+ 		rtl_fw->pre_fw		= r8153b_pre_firmware_1;
+ 		rtl_fw->post_fw		= r8153c_post_firmware_1;
+ 		break;
++>>>>>>> 4a51b0e8a014 (r8152: support PHY firmware for RTL8156 series)
  	default:
  		break;
  	}
* Unmerged path drivers/net/usb/r8152.c
