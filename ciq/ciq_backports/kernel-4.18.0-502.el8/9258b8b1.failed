ipv6: tcp: send consistent autoflowlabel in RST packets

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 9258b8b1be2e1e241baf8aa703aba1086069ee0f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/9258b8b1.failed

Blamed commit added a txhash parameter to tcp_v6_send_response()
but forgot to update tcp_v6_send_reset() accordingly.

Fixes: aa51b80e1af4 ("ipv6: tcp: send consistent autoflowlabel in SYN_RECV state")
	Signed-off-by: Eric Dumazet <edumazet@google.com>
Link: https://lore.kernel.org/r/20220922165036.1795862-1-eric.dumazet@gmail.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 9258b8b1be2e1e241baf8aa703aba1086069ee0f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/tcp_ipv6.c
diff --cc net/ipv6/tcp_ipv6.c
index 1832037baa19,a8adda623da1..000000000000
--- a/net/ipv6/tcp_ipv6.c
+++ b/net/ipv6/tcp_ipv6.c
@@@ -919,6 -998,10 +919,13 @@@ static void tcp_v6_send_reset(const str
  	int genhash;
  	struct sock *sk1 = NULL;
  #endif
++<<<<<<< HEAD
++=======
+ 	__be32 label = 0;
+ 	u32 priority = 0;
+ 	struct net *net;
+ 	u32 txhash = 0;
++>>>>>>> 9258b8b1be2e (ipv6: tcp: send consistent autoflowlabel in RST packets)
  	int oif = 0;
  
  	if (th->rst)
@@@ -972,11 -1067,27 +979,31 @@@
  
  	if (sk) {
  		oif = sk->sk_bound_dev_if;
 -		if (sk_fullsock(sk)) {
 -			const struct ipv6_pinfo *np = tcp_inet6_sk(sk);
 -
 +		if (sk_fullsock(sk))
  			trace_tcp_send_reset(sk, skb);
++<<<<<<< HEAD
 +	}
 +
 +	tcp_v6_send_response(sk, skb, seq, ack_seq, 0, 0, 0, oif, key, 1, 0, 0);
++=======
+ 			if (np->repflow)
+ 				label = ip6_flowlabel(ipv6h);
+ 			priority = sk->sk_priority;
+ 			txhash = sk->sk_hash;
+ 		}
+ 		if (sk->sk_state == TCP_TIME_WAIT) {
+ 			label = cpu_to_be32(inet_twsk(sk)->tw_flowlabel);
+ 			priority = inet_twsk(sk)->tw_priority;
+ 			txhash = inet_twsk(sk)->tw_txhash;
+ 		}
+ 	} else {
+ 		if (net->ipv6.sysctl.flowlabel_reflect & FLOWLABEL_REFLECT_TCP_RESET)
+ 			label = ip6_flowlabel(ipv6h);
+ 	}
+ 
+ 	tcp_v6_send_response(sk, skb, seq, ack_seq, 0, 0, 0, oif, key, 1,
+ 			     ipv6_get_dsfield(ipv6h), label, priority, txhash);
++>>>>>>> 9258b8b1be2e (ipv6: tcp: send consistent autoflowlabel in RST packets)
  
  #ifdef CONFIG_TCP_MD5SIG
  out:
* Unmerged path net/ipv6/tcp_ipv6.c
