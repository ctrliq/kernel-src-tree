r8152: avoid to resubmit rx immediately

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Hayes Wang <hayeswang@realtek.com>
commit baf33d7a75642b4b38a87fdf1cd96b506df4849f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/baf33d7a.failed

For the situation that the disconnect event comes very late when the
device is unplugged, the driver would resubmit the RX bulk transfer
after getting the callback with -EPROTO immediately and continually.
Finally, soft lockup occurs.

This patch avoids to resubmit RX immediately. It uses a workqueue to
schedule the RX NAPI. And the NAPI would resubmit the RX. It let the
disconnect event have opportunity to stop the submission before soft
lockup.

	Reported-by: Jason-ch Chen <jason-ch.chen@mediatek.com>
	Tested-by: Jason-ch Chen <jason-ch.chen@mediatek.com>
	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit baf33d7a75642b4b38a87fdf1cd96b506df4849f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index e8791a8b6531,f329e39100a7..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -679,8 -767,7 +679,12 @@@ enum rtl8152_flags 
  	PHY_RESET,
  	SCHEDULE_TASKLET,
  	GREEN_ETHERNET,
++<<<<<<< HEAD
 +	DELL_TB_RX_AGG_BUG,
 +	LENOVO_MACPASSTHRU,
++=======
+ 	RX_EPROTO,
++>>>>>>> baf33d7a7564 (r8152: avoid to resubmit rx immediately)
  };
  
  #define DEVICE_ID_THINKPAD_THUNDERBOLT3_DOCK_GEN2	0x3082
* Unmerged path drivers/net/usb/r8152.c
