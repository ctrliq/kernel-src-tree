net/tls: tls_is_tx_ready() checked list_entry

jira LE-1907
cve CVE-2023-1075
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Pietro Borrello <borrello@diag.uniroma1.it>
commit ffe2a22562444720b05bdfeb999c03e810d84cbb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/ffe2a225.failed

tls_is_tx_ready() checks that list_first_entry() does not return NULL.
This condition can never happen. For empty lists, list_first_entry()
returns the list_entry() of the head, which is a type confusion.
Use list_first_entry_or_null() which returns NULL in case of empty
lists.

Fixes: a42055e8d2c3 ("net/tls: Add support for async encryption of records for performance")
	Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
Link: https://lore.kernel.org/r/20230128-list-entry-null-check-tls-v1-1-525bbfe6f0d0@diag.uniroma1.it
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit ffe2a22562444720b05bdfeb999c03e810d84cbb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/tls/tls_sw.c
diff --cc net/tls/tls_sw.c
index 731caaa88aa5,a83d2b4275fa..000000000000
--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@@ -2275,6 -2423,17 +2275,20 @@@ static void tx_work_handler(struct work
  	mutex_unlock(&tls_ctx->tx_lock);
  }
  
++<<<<<<< HEAD
++=======
+ static bool tls_is_tx_ready(struct tls_sw_context_tx *ctx)
+ {
+ 	struct tls_rec *rec;
+ 
+ 	rec = list_first_entry_or_null(&ctx->tx_list, struct tls_rec, list);
+ 	if (!rec)
+ 		return false;
+ 
+ 	return READ_ONCE(rec->tx_ready);
+ }
+ 
++>>>>>>> ffe2a2256244 (net/tls: tls_is_tx_ready() checked list_entry)
  void tls_sw_write_space(struct sock *sk, struct tls_context *ctx)
  {
  	struct tls_sw_context_tx *tx_ctx = tls_sw_ctx_tx(ctx);
* Unmerged path net/tls/tls_sw.c
