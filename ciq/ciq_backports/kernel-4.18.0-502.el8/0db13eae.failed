drm/amd/display: Add minimum Z8 residency debug option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
commit 0db13eae41fcc67f408dbb3dfda59633c4fa03fb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/0db13eae.failed

[Why]
Allows finer control and tuning for debug and profiling.

[How]
Add the debug option into DC. The default remains the same as before
for now.

	Reviewed-by: Jun Lei <Jun.Lei@amd.com>
	Acked-by: Qingqing Zhuo <qingqing.zhuo@amd.com>
	Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
	Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 0db13eae41fcc67f408dbb3dfda59633c4fa03fb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/dcn314/dcn314_resource.c
#	drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
diff --cc drivers/gpu/drm/amd/display/dc/dcn314/dcn314_resource.c
index 7f5e039893e8,8fc89aeb86d4..000000000000
--- a/drivers/gpu/drm/amd/display/dc/dcn314/dcn314_resource.c
+++ b/drivers/gpu/drm/amd/display/dc/dcn314/dcn314_resource.c
@@@ -883,6 -887,8 +883,11 @@@ static const struct dc_plane_cap plane_
  static const struct dc_debug_options debug_defaults_drv = {
  	.disable_z10 = false,
  	.enable_z9_disable_interface = true,
++<<<<<<< HEAD
++=======
+ 	.minimum_z8_residency_time = 1000,
+ 	.psr_skip_crtc_disable = true,
++>>>>>>> 0db13eae41fc (drm/amd/display: Add minimum Z8 residency debug option)
  	.disable_dmcu = true,
  	.force_abm_enable = false,
  	.timing_trace = false,
diff --cc drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
index bc4f48ea8d4c,f3cfc144e358..000000000000
--- a/drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
+++ b/drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
@@@ -971,6 -973,9 +971,12 @@@ static enum dcn_zstate_support_state  d
  	else if (context->stream_count == 1 &&  context->streams[0]->signal == SIGNAL_TYPE_EDP) {
  		struct dc_link *link = context->streams[0]->sink->link;
  		struct dc_stream_status *stream_status = &context->stream_status[0];
++<<<<<<< HEAD
++=======
+ 		int minmum_z8_residency = dc->debug.minimum_z8_residency_time > 0 ? dc->debug.minimum_z8_residency_time : 1000;
+ 		bool allow_z8 = context->bw_ctx.dml.vba.StutterPeriod > (double)minmum_z8_residency;
+ 		bool is_pwrseq0 = link->link_index == 0;
++>>>>>>> 0db13eae41fc (drm/amd/display: Add minimum Z8 residency debug option)
  
  		if (dc_extended_blank_supported(dc)) {
  			for (i = 0; i < dc->res_pool->pipe_count; i++) {
diff --git a/drivers/gpu/drm/amd/display/dc/dc.h b/drivers/gpu/drm/amd/display/dc/dc.h
index fcddf60d3c10..46e4f959f089 100644
--- a/drivers/gpu/drm/amd/display/dc/dc.h
+++ b/drivers/gpu/drm/amd/display/dc/dc.h
@@ -689,6 +689,7 @@ struct dc_debug_options {
 	unsigned int force_odm_combine; //bit vector based on otg inst
 	unsigned int seamless_boot_odm_combine;
 	unsigned int force_odm_combine_4to1; //bit vector based on otg inst
+	int minimum_z8_residency_time;
 	bool disable_z9_mpc;
 	unsigned int force_fclk_khz;
 	bool enable_tri_buf;
* Unmerged path drivers/gpu/drm/amd/display/dc/dcn314/dcn314_resource.c
* Unmerged path drivers/gpu/drm/amd/display/dc/dml/dcn20/dcn20_fpu.c
