dynamic_dname(): drop unused dentry argument

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
Rebuild_CHGLOG: - Revert "dynamic_dname(): drop unused dentry argument" (Jocelyn Falempe) [2160452]
Rebuild_FUZZ: 90.72%
commit-author Al Viro <viro@zeniv.linux.org.uk>
commit 0f60d28828dd94779c6527440289e1c36a05115a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/0f60d288.failed

	Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
(cherry picked from commit 0f60d28828dd94779c6527440289e1c36a05115a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/dcache.h
diff --cc include/linux/dcache.h
index 6fb69ea65cd0,54d46518c481..000000000000
--- a/include/linux/dcache.h
+++ b/include/linux/dcache.h
@@@ -310,9 -287,8 +310,14 @@@ static inline unsigned d_count(const st
  /*
   * helper function for dentry_operations.d_dname() members
   */
++<<<<<<< HEAD
 +extern __printf(4, 5)
 +char *dynamic_dname(struct dentry *, char *, int, const char *, ...);
 +extern char *simple_dname(struct dentry *, char *, int);
++=======
+ extern __printf(3, 4)
+ char *dynamic_dname(char *, int, const char *, ...);
++>>>>>>> 0f60d28828dd (dynamic_dname(): drop unused dentry argument)
  
  extern char *__d_path(const struct path *, const struct path *, char *, int);
  extern char *d_absolute_path(const struct path *, char *, int);
diff --git a/drivers/dma-buf/dma-buf.c b/drivers/dma-buf/dma-buf.c
index 01b63e02f4b2..b903a6450db5 100644
--- a/drivers/dma-buf/dma-buf.c
+++ b/drivers/dma-buf/dma-buf.c
@@ -54,7 +54,7 @@ static char *dmabuffs_dname(struct dentry *dentry, char *buffer, int buflen)
 		ret = strlcpy(name, dmabuf->name, DMA_BUF_NAME_LEN);
 	spin_unlock(&dmabuf->name_lock);
 
-	return dynamic_dname(dentry, buffer, buflen, "/%s:%s",
+	return dynamic_dname(buffer, buflen, "/%s:%s",
 			     dentry->d_name.name, ret > 0 ? name : "");
 }
 
diff --git a/fs/anon_inodes.c b/fs/anon_inodes.c
index 74f2e1cc9ac6..70d7b1bcf647 100644
--- a/fs/anon_inodes.c
+++ b/fs/anon_inodes.c
@@ -31,7 +31,7 @@ static struct inode *anon_inode_inode;
  */
 static char *anon_inodefs_dname(struct dentry *dentry, char *buffer, int buflen)
 {
-	return dynamic_dname(dentry, buffer, buflen, "anon_inode:%s",
+	return dynamic_dname(buffer, buflen, "anon_inode:%s",
 				dentry->d_name.name);
 }
 
diff --git a/fs/d_path.c b/fs/d_path.c
index e8fce6b1174f..4ca95ccfb58f 100644
--- a/fs/d_path.c
+++ b/fs/d_path.c
@@ -288,8 +288,7 @@ EXPORT_SYMBOL(d_path);
 /*
  * Helper function for dentry_operations.d_dname() members
  */
-char *dynamic_dname(struct dentry *dentry, char *buffer, int buflen,
-			const char *fmt, ...)
+char *dynamic_dname(char *buffer, int buflen, const char *fmt, ...)
 {
 	va_list args;
 	char temp[64];
diff --git a/fs/nsfs.c b/fs/nsfs.c
index 30c842b4228a..b562fd0efdb8 100644
--- a/fs/nsfs.c
+++ b/fs/nsfs.c
@@ -25,7 +25,7 @@ static char *ns_dname(struct dentry *dentry, char *buffer, int buflen)
 	struct inode *inode = d_inode(dentry);
 	const struct proc_ns_operations *ns_ops = dentry->d_fsdata;
 
-	return dynamic_dname(dentry, buffer, buflen, "%s:[%lu]",
+	return dynamic_dname(buffer, buflen, "%s:[%lu]",
 		ns_ops->name, inode->i_ino);
 }
 
diff --git a/fs/pipe.c b/fs/pipe.c
index 3234ae06e5d8..06fbe386d730 100644
--- a/fs/pipe.c
+++ b/fs/pipe.c
@@ -691,7 +691,7 @@ static struct vfsmount *pipe_mnt __read_mostly;
  */
 static char *pipefs_dname(struct dentry *dentry, char *buffer, int buflen)
 {
-	return dynamic_dname(dentry, buffer, buflen, "pipe:[%lu]",
+	return dynamic_dname(buffer, buflen, "pipe:[%lu]",
 				d_inode(dentry)->i_ino);
 }
 
* Unmerged path include/linux/dcache.h
diff --git a/net/socket.c b/net/socket.c
index e69fd02a179d..35a63a54bf67 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -313,7 +313,7 @@ static const struct super_operations sockfs_ops = {
  */
 static char *sockfs_dname(struct dentry *dentry, char *buffer, int buflen)
 {
-	return dynamic_dname(dentry, buffer, buflen, "socket:[%lu]",
+	return dynamic_dname(buffer, buflen, "socket:[%lu]",
 				d_inode(dentry)->i_ino);
 }
 
