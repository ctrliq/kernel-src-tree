r8152: reduce the control transfer of rtl8152_get_version()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Hayes Wang <hayeswang@realtek.com>
commit 02767440e1dda9861a11ca1dbe0f19a760b1d5c2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/02767440.failed

Reduce the control transfer by moving calling rtl8152_get_version() in
rtl8152_probe(). This could prevent from calling rtl8152_get_version()
for unnecessary situations. For example, after setting config #2 for the
device, there are two interfaces and rtl8152_probe() may be called
twice. However, we don't need to call rtl8152_get_version() for this
situation.

	Signed-off-by: Hayes Wang <hayeswang@realtek.com>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 02767440e1dda9861a11ca1dbe0f19a760b1d5c2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index 35e98590e253,decb5ba56a25..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -6821,22 -9581,21 +6821,30 @@@ static int rtl8152_probe(struct usb_int
  			 const struct usb_device_id *id)
  {
  	struct usb_device *udev = interface_to_usbdev(intf);
- 	u8 version = rtl8152_get_version(intf);
  	struct r8152 *tp;
  	struct net_device *netdev;
+ 	u8 version;
  	int ret;
  
++<<<<<<< HEAD
 +	if (version == RTL_VER_UNKNOWN)
 +		return -ENODEV;
 +
 +	if (udev->actconfig->desc.bConfigurationValue != 1) {
 +		usb_driver_set_configuration(udev, 1);
++=======
+ 	if (intf->cur_altsetting->desc.bInterfaceClass != USB_CLASS_VENDOR_SPEC)
++>>>>>>> 02767440e1dd (r8152: reduce the control transfer of rtl8152_get_version())
  		return -ENODEV;
 +	}
  
 -	if (!rtl_check_vendor_ok(intf))
 +	if (intf->cur_altsetting->desc.bNumEndpoints < 3)
  		return -ENODEV;
  
+ 	version = rtl8152_get_version(intf);
+ 	if (version == RTL_VER_UNKNOWN)
+ 		return -ENODEV;
+ 
  	usb_reset_device(udev);
  	netdev = alloc_etherdev(sizeof(struct r8152));
  	if (!netdev) {
* Unmerged path drivers/net/usb/r8152.c
