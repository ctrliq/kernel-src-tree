arm64: entry: consolidate EL1 exception returns

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit af541cbbf9c646d2eaa8b3ee3836d5b16435e848
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/af541cbb.failed

Following the example of ret_to_user, let's consolidate all the EL1
return paths with a ret_to_kernel helper, rather than each entry point
having its own copy of the return code.

There should be no functional change as a result of this patch.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Acked-by: Marc Zyngier <maz@kernel.org>
	Reviewed-by: Joey Gouly <joey.gouly@arm.com>
	Cc: James Morse <james.morse@arm.com>
	Cc: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20210607094624.34689-11-mark.rutland@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit af541cbbf9c646d2eaa8b3ee3836d5b16435e848)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index 3f9d46ff532e,54986d488983..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -577,47 -611,34 +577,71 @@@ SYM_CODE_START_LOCAL_NOALIGN(el1_sync
  	kernel_entry 1
  	mov	x0, sp
  	bl	el1_sync_handler
- 	kernel_exit 1
+ 	b	ret_to_kernel
  SYM_CODE_END(el1_sync)
  
 -SYM_CODE_START_LOCAL(el1_irq)
 +	.align	6
 +SYM_CODE_START_LOCAL_NOALIGN(el1_irq)
  	kernel_entry 1
 +	gic_prio_irq_setup pmr=x20, tmp=x1
 +	enable_da_f
 +
 +	mov	x0, sp
++<<<<<<< HEAD
 +	bl	enter_el1_irq_or_nmi
 +
 +	irq_handler
 +
 +#ifdef CONFIG_PREEMPT
 +	ldr	x24, [tsk, #TSK_TI_PREEMPT]	// get preempt count
 +alternative_if ARM64_HAS_IRQ_PRIO_MASKING
 +	/*
 +	 * DA_F were cleared at start of handling. If anything is set in DAIF,
 +	 * we come back from an NMI, so skip preemption
 +	 */
 +	mrs	x0, daif
 +	orr	x24, x24, x0
 +alternative_else_nop_endif
 +	cbnz	x24, 1f				// preempt count != 0 || NMI return path
 +	bl	arm64_preempt_schedule_irq	// irq en/disable is done inside
 +1:
 +#endif
 +
  	mov	x0, sp
 +	bl	exit_el1_irq_or_nmi
 +
 +	kernel_exit 1
++=======
+ 	bl	el1_irq_handler
+ 	b	ret_to_kernel
++>>>>>>> af541cbbf9c6 (arm64: entry: consolidate EL1 exception returns)
  SYM_CODE_END(el1_irq)
  
 -SYM_CODE_START_LOCAL(el1_fiq)
 +SYM_CODE_START_LOCAL_NOALIGN(el1_fiq)
  	kernel_entry 1
++<<<<<<< HEAD
 +	el1_interrupt_handler handle_arch_fiq
 +	kernel_exit 1
 +SYM_CODE_END(el1_fiq)
 +
++=======
+ 	mov	x0, sp
+ 	bl	el1_fiq_handler
+ 	b	ret_to_kernel
+ SYM_CODE_END(el1_fiq)
+ 
+ SYM_CODE_START_LOCAL(el1_error)
+ 	kernel_entry 1
+ 	mov	x0, sp
+ 	bl	el1_error_handler
+ 	b	ret_to_kernel
+ SYM_CODE_END(el1_error)
+ 
+ SYM_CODE_START_LOCAL(ret_to_kernel)
+ 	kernel_exit 1
+ SYM_CODE_END(ret_to_kernel)
+ 
++>>>>>>> af541cbbf9c6 (arm64: entry: consolidate EL1 exception returns)
  /*
   * EL0 mode handlers.
   */
* Unmerged path arch/arm64/kernel/entry.S
