net/mlx5: fw_tracer, Add support for strings DB update event

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Shay Drory <shayd@nvidia.com>
commit 7dfcd110a4584a4354f6cd0496f22da6db78cb17
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/7dfcd110.failed

In case a new string DB is added to the FW, the FW publishes an event
notifying the strings DB have updated.

Add support in driver for handling this event.

	Signed-off-by: Shay Drory <shayd@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 7dfcd110a4584a4354f6cd0496f22da6db78cb17)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
index ef0b5c3b13cf,46f1e866bf64..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
@@@ -1080,7 -1106,7 +1107,11 @@@ void mlx5_fw_tracer_destroy(struct mlx5
  	mlx5_fw_tracer_clean_saved_traces_array(tracer);
  	mlx5_fw_tracer_free_strings_db(tracer);
  	mlx5_fw_tracer_destroy_log_buf(tracer);
++<<<<<<< HEAD
 +	flush_workqueue(tracer->work_queue);
++=======
+ 	mutex_destroy(&tracer->state_lock);
++>>>>>>> 7dfcd110a458 (net/mlx5: fw_tracer, Add support for strings DB update event)
  	destroy_workqueue(tracer->work_queue);
  	kvfree(tracer);
  }
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.h b/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.h
index 4762b55b0b0e..873c1eb38e49 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/diag/fw_tracer.h
@@ -63,6 +63,11 @@ struct mlx5_fw_trace_data {
 	char msg[TRACE_STR_MSG];
 };
 
+enum mlx5_fw_tracer_state {
+	MLX5_TRACER_STATE_UP = BIT(0),
+	MLX5_TRACER_RECREATE_DB = BIT(1),
+};
+
 struct mlx5_fw_tracer {
 	struct mlx5_core_dev *dev;
 	struct mlx5_nb        nb;
@@ -104,6 +109,9 @@ struct mlx5_fw_tracer {
 	struct work_struct handle_traces_work;
 	struct hlist_head hash[MESSAGE_HASH_SIZE];
 	struct list_head ready_strings_list;
+	struct work_struct update_db_work;
+	struct mutex state_lock; /* Synchronize update work with reload flows */
+	unsigned long state;
 };
 
 struct tracer_string_format {
diff --git a/include/linux/mlx5/device.h b/include/linux/mlx5/device.h
index 1cb7de07f288..5cceae965789 100644
--- a/include/linux/mlx5/device.h
+++ b/include/linux/mlx5/device.h
@@ -367,6 +367,7 @@ enum mlx5_driver_event {
 enum {
 	MLX5_TRACER_SUBTYPE_OWNERSHIP_CHANGE = 0x0,
 	MLX5_TRACER_SUBTYPE_TRACES_AVAILABLE = 0x1,
+	MLX5_TRACER_SUBTYPE_STRINGS_DB_UPDATE = 0x2,
 };
 
 enum {
