accel: Link to compute accelerator subsystem intro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Bagas Sanjaya <bagasdotme@gmail.com>
commit 6d179f84f274a87da51f24ac3e9427221bbaed51
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/6d179f84.failed

Commit 2c204f3d53218d ("accel: add dedicated minor for accelerator
devices") adds link to accelerator nodes section of DRM internals doc
(Documentation/gpu/drm-internals.rst), but the target doesn't exist.
Instead, there is only an introduction doc for computer accelerator
subsytem.

Link to that doc until there is documentation of accelerator internals.

Fixes: 2c204f3d53218d ("accel: add dedicated minor for accelerator devices")
	Signed-off-by: Bagas Sanjaya <bagasdotme@gmail.com>
	Reviewed-by: Jeffrey Hugo <quic_jhugo@quicinc.com>
	Signed-off-by: Oded Gabbay <ogabbay@kernel.org>
(cherry picked from commit 6d179f84f274a87da51f24ac3e9427221bbaed51)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/drm/drm_file.h
diff --cc include/drm/drm_file.h
index e0a73a1e2df7,ecffe24e2b1b..000000000000
--- a/include/drm/drm_file.h
+++ b/include/drm/drm_file.h
@@@ -397,7 -401,23 +397,25 @@@ static inline bool drm_is_render_client
  	return file_priv->minor->type == DRM_MINOR_RENDER;
  }
  
++<<<<<<< HEAD
++=======
+ /**
+  * drm_is_accel_client - is this an open file of the compute acceleration node
+  * @file_priv: DRM file
+  *
+  * Returns true if this is an open file of the compute acceleration node, i.e.
+  * &drm_file.minor of @file_priv is a accel minor.
+  *
+  * See also :doc:`Introduction to compute accelerators subsystem
+  * </accel/introduction>`.
+  */
+ static inline bool drm_is_accel_client(const struct drm_file *file_priv)
+ {
+ 	return file_priv->minor->type == DRM_MINOR_ACCEL;
+ }
+ 
++>>>>>>> 6d179f84f274 (accel: Link to compute accelerator subsystem intro)
  int drm_open(struct inode *inode, struct file *filp);
 -int drm_open_helper(struct file *filp, struct drm_minor *minor);
  ssize_t drm_read(struct file *filp, char __user *buffer,
  		 size_t count, loff_t *offset);
  int drm_release(struct inode *inode, struct file *filp);
* Unmerged path include/drm/drm_file.h
