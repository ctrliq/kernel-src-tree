drm/i915/userptr: restore probe_range behaviour

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
Rebuild_CHGLOG: - Revert "drm/i915/userptr: restore probe_range behaviour" (Jocelyn Falempe) [2160452]
Rebuild_FUZZ: 91.26%
commit-author Matthew Auld <matthew.auld@intel.com>
commit 6f7de35b50860c345babf8ed0aa0d75f9315eee4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/6f7de35b.failed

The conversion looks harmless, however the addr value is updated inside
the loop with the previous vm_end, which then incorrectly leads to
for_each_vma_range() iterating over stuff outside the range we care
about. Fix this by storing the end value separately. Also fix the case
where the range doesn't intersect with any vma, or if the vma itself
doesn't extend the entire range, which must mean we have hole at the
end. Both should result in an error, as per the previous behaviour.

v2: Fix the cases where the range is empty, or if there's a hole at
the end of the range

Closes: https://gitlab.freedesktop.org/drm/intel/-/issues/7247
Testcase: igt@gem_userptr_blits@probe
Fixes: f683b9d61319 ("i915: use the VMA iterator")
	Reported-by: kernel test robot <oliver.sang@intel.com>
	Signed-off-by: Matthew Auld <matthew.auld@intel.com>
	Cc: Tvrtko Ursulin <tvrtko.ursulin@linux.intel.com>
	Cc: Matthew Wilcox (Oracle) <willy@infradead.org>
	Cc: Liam R. Howlett <Liam.Howlett@Oracle.com>
	Cc: Vlastimil Babka <vbabka@suse.cz>
	Cc: Yu Zhao <yuzhao@google.com>
	Reviewed-by: Liam R. Howlett <Liam.Howlett@oracle.com>
	Reviewed-by: Andrzej Hajda <andrzej.hajda@intel.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20221028130635.465839-1-matthew.auld@intel.com
(cherry picked from commit 6f7de35b50860c345babf8ed0aa0d75f9315eee4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/i915/gem/i915_gem_userptr.c
diff --cc drivers/gpu/drm/i915/gem/i915_gem_userptr.c
index e4515d6acd43,ca7a388ba2bf..000000000000
--- a/drivers/gpu/drm/i915/gem/i915_gem_userptr.c
+++ b/drivers/gpu/drm/i915/gem/i915_gem_userptr.c
@@@ -426,12 -425,12 +426,19 @@@ static const struct drm_i915_gem_object
  static int
  probe_range(struct mm_struct *mm, unsigned long addr, unsigned long len)
  {
 -	VMA_ITERATOR(vmi, mm, addr);
 +	const unsigned long end = addr + len;
  	struct vm_area_struct *vma;
++<<<<<<< HEAD
 +	int ret = -EFAULT;
 +
 +	mmap_read_lock(mm);
 +	for (vma = find_vma(mm, addr); vma; vma = vma->vm_next) {
++=======
+ 	unsigned long end = addr + len;
+ 
+ 	mmap_read_lock(mm);
+ 	for_each_vma_range(vmi, vma, end) {
++>>>>>>> 6f7de35b5086 (drm/i915/userptr: restore probe_range behaviour)
  		/* Check for holes, note that we also update the addr below */
  		if (vma->vm_start > addr)
  			break;
@@@ -448,7 -442,9 +455,13 @@@
  	}
  	mmap_read_unlock(mm);
  
++<<<<<<< HEAD
 +	return ret;
++=======
+ 	if (vma || addr < end)
+ 		return -EFAULT;
+ 	return 0;
++>>>>>>> 6f7de35b5086 (drm/i915/userptr: restore probe_range behaviour)
  }
  
  /*
* Unmerged path drivers/gpu/drm/i915/gem/i915_gem_userptr.c
