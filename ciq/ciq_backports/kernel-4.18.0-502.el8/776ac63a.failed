r8152: Fix a deadlock by doubly PM resume

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 776ac63a986d211286230c4fd70f85390eabedcd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/776ac63a.failed

r8152 driver sets up the MAC address at reset-resume, while
rtl8152_set_mac_address() has the temporary autopm get/put.  This may
lead to a deadlock as the PM lock has been already taken for the
execution of the runtime PM callback.

This patch adds the workaround to avoid the superfluous autpm when
called from rtl8152_reset_resume().

Link: https://bugzilla.suse.com/show_bug.cgi?id=1186194
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 776ac63a986d211286230c4fd70f85390eabedcd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/r8152.c
diff --cc drivers/net/usb/r8152.c
index bd1ddca3ec73,e09b107b5c99..000000000000
--- a/drivers/net/usb/r8152.c
+++ b/drivers/net/usb/r8152.c
@@@ -1384,7 -1548,12 +1384,16 @@@ void write_mii_word(struct net_device *
  static int
  r8152_submit_rx(struct r8152 *tp, struct rx_agg *agg, gfp_t mem_flags);
  
++<<<<<<< HEAD
 +static int rtl8152_set_mac_address(struct net_device *netdev, void *p)
++=======
+ static int
+ rtl8152_set_speed(struct r8152 *tp, u8 autoneg, u32 speed, u8 duplex,
+ 		  u32 advertising);
+ 
+ static int __rtl8152_set_mac_address(struct net_device *netdev, void *p,
+ 				     bool in_resume)
++>>>>>>> 776ac63a986d (r8152: Fix a deadlock by doubly PM resume)
  {
  	struct r8152 *tp = netdev_priv(netdev);
  	struct sockaddr *addr = p;
@@@ -6955,10 -9654,14 +6972,10 @@@ static int rtl8152_probe(struct usb_int
  	tp->rtl_fw.retry = true;
  #endif
  	queue_delayed_work(system_long_wq, &tp->hw_phy_work, 0);
- 	set_ethernet_addr(tp);
+ 	set_ethernet_addr(tp, false);
  
  	usb_set_intfdata(intf, tp);
 -
 -	if (tp->support_2500full)
 -		netif_napi_add(netdev, &tp->napi, r8152_poll, 256);
 -	else
 -		netif_napi_add(netdev, &tp->napi, r8152_poll, 64);
 +	netif_napi_add_weight(netdev, &tp->napi, r8152_poll, RTL8152_NAPI_WEIGHT);
  
  	ret = register_netdev(netdev);
  	if (ret != 0) {
* Unmerged path drivers/net/usb/r8152.c
