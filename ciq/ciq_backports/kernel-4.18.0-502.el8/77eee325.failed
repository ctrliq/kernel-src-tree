net/smc: Introduce a specific sysctl for TEST_LINK time

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Wen Gu <guwen@linux.alibaba.com>
commit 77eee32514314209961af5c2982e871ecb364445
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/77eee325.failed

SMC-R tests the viability of link by sending out TEST_LINK LLC
messages over RoCE fabric when connections on link have been
idle for a time longer than keepalive interval (testlink time).

But using tcp_keepalive_time as testlink time maybe not quite
suitable because it is default no less than two hours[1], which
is too long for single link to find peer dead. The active host
will still use peer-dead link (QP) sending messages, and can't
find out until get IB_WC_RETRY_EXC_ERR error CQEs, which takes
more time than TEST_LINK timeout (SMC_LLC_WAIT_TIME) normally.

So this patch introduces a independent sysctl for SMC-R to set
link keepalive time, in order to detect link down in time. The
default value is 30 seconds.

[1] https://www.rfc-editor.org/rfc/rfc1122#page-101

	Signed-off-by: Wen Gu <guwen@linux.alibaba.com>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit 77eee32514314209961af5c2982e871ecb364445)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/smc-sysctl.rst
#	include/net/netns/smc.h
#	net/smc/smc_sysctl.c
diff --cc include/net/netns/smc.h
index 47b166684fd8,d295e2c10dca..000000000000
--- a/include/net/netns/smc.h
+++ b/include/net/netns/smc.h
@@@ -14,5 -14,11 +14,14 @@@ struct netns_smc 
  	struct smc_stats_rsn		*fback_rsn;
  
  	bool				limit_smc_hs;	/* constraint on handshake */
++<<<<<<< HEAD
++=======
+ #ifdef CONFIG_SYSCTL
+ 	struct ctl_table_header		*smc_hdr;
+ #endif
+ 	unsigned int			sysctl_autocorking_size;
+ 	unsigned int			sysctl_smcr_buf_type;
+ 	int				sysctl_smcr_testlink_time;
++>>>>>>> 77eee3251431 (net/smc: Introduce a specific sysctl for TEST_LINK time)
  };
  #endif
* Unmerged path Documentation/networking/smc-sysctl.rst
* Unmerged path net/smc/smc_sysctl.c
* Unmerged path Documentation/networking/smc-sysctl.rst
* Unmerged path include/net/netns/smc.h
diff --git a/net/smc/smc_llc.c b/net/smc/smc_llc.c
index 99b8c88e0d63..0b09b1bbb6ab 100644
--- a/net/smc/smc_llc.c
+++ b/net/smc/smc_llc.c
@@ -2127,7 +2127,7 @@ void smc_llc_lgr_init(struct smc_link_group *lgr, struct smc_sock *smc)
 	init_waitqueue_head(&lgr->llc_flow_waiter);
 	init_waitqueue_head(&lgr->llc_msg_waiter);
 	mutex_init(&lgr->llc_conf_mutex);
-	lgr->llc_testlink_time = READ_ONCE(net->ipv4.sysctl_tcp_keepalive_time);
+	lgr->llc_testlink_time = READ_ONCE(net->smc.sysctl_smcr_testlink_time);
 }
 
 /* called after lgr was removed from lgr_list */
diff --git a/net/smc/smc_llc.h b/net/smc/smc_llc.h
index 4404e52b3346..7e7a3162c68b 100644
--- a/net/smc/smc_llc.h
+++ b/net/smc/smc_llc.h
@@ -19,6 +19,7 @@
 
 #define SMC_LLC_WAIT_FIRST_TIME		(5 * HZ)
 #define SMC_LLC_WAIT_TIME		(2 * HZ)
+#define SMC_LLC_TESTLINK_DEFAULT_TIME	(30 * HZ)
 
 enum smc_llc_reqresp {
 	SMC_LLC_REQ,
* Unmerged path net/smc/smc_sysctl.c
