net/mlx5e: Directly get flow_steering struct as input when init/cleanup ethtool steering

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Lama Kayal <lkayal@nvidia.com>
commit e8b5c4bcb5541d452323171c0941ee3d8cefa693
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/e8b5c4bc.failed

Let both mlx5e_ethtool_init_steering and mlx5e_ethtool_cleanup_steering
get ethtool steering struct as input instead of priv, as passing priv is
obsolete.
Also modify other function through the flow similarly.

	Signed-off-by: Lama Kayal <lkayal@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit e8b5c4bcb5541d452323171c0941ee3d8cefa693)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
index 3e4bc7836ef4,3abd3db72e07..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
@@@ -499,9 -501,10 +499,13 @@@ free
  	return err ? ERR_PTR(err) : rule;
  }
  
- static void del_ethtool_rule(struct mlx5e_priv *priv,
+ static void del_ethtool_rule(struct mlx5e_flow_steering *fs,
  			     struct mlx5e_ethtool_rule *eth_rule)
  {
++<<<<<<< HEAD
++=======
+ 	struct mlx5e_ethtool_steering *ethtool = mlx5e_fs_get_ethtool(fs);
++>>>>>>> e8b5c4bcb554 (net/mlx5e: Directly get flow_steering struct as input when init/cleanup ethtool steering)
  	if (eth_rule->rule)
  		mlx5_del_flow_rules(eth_rule->rule);
  	if (eth_rule->rss)
@@@ -826,18 -831,21 +830,33 @@@ mlx5e_ethtool_get_all_flows(struct mlx5
  	return err;
  }
  
- void mlx5e_ethtool_cleanup_steering(struct mlx5e_priv *priv)
+ void mlx5e_ethtool_cleanup_steering(struct mlx5e_flow_steering *fs)
  {
++<<<<<<< HEAD
 +	struct mlx5e_ethtool_rule *iter;
 +	struct mlx5e_ethtool_rule *temp;
 +
 +	list_for_each_entry_safe(iter, temp, &priv->fs->ethtool.rules, list)
 +		del_ethtool_rule(priv, iter);
++=======
+ 	struct mlx5e_ethtool_steering *ethtool = mlx5e_fs_get_ethtool(fs);
+ 	struct mlx5e_ethtool_rule *iter;
+ 	struct mlx5e_ethtool_rule *temp;
+ 
+ 	list_for_each_entry_safe(iter, temp, &ethtool->rules, list)
+ 		del_ethtool_rule(fs, iter);
++>>>>>>> e8b5c4bcb554 (net/mlx5e: Directly get flow_steering struct as input when init/cleanup ethtool steering)
  }
  
- void mlx5e_ethtool_init_steering(struct mlx5e_priv *priv)
+ void mlx5e_ethtool_init_steering(struct mlx5e_flow_steering *fs)
  {
++<<<<<<< HEAD
 +	INIT_LIST_HEAD(&priv->fs->ethtool.rules);
++=======
+ 	struct mlx5e_ethtool_steering *ethtool = mlx5e_fs_get_ethtool(fs);
+ 
+ 	INIT_LIST_HEAD(&ethtool->rules);
++>>>>>>> e8b5c4bcb554 (net/mlx5e: Directly get flow_steering struct as input when init/cleanup ethtool steering)
  }
  
  static int flow_type_to_traffic_type(u32 flow_type)
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h b/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
index 9b8cdf2e68ad..ffccf241b8e1 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
@@ -102,14 +102,14 @@ struct mlx5e_ethtool_steering {
 	int                             tot_num_rules;
 };
 
-void mlx5e_ethtool_init_steering(struct mlx5e_priv *priv);
-void mlx5e_ethtool_cleanup_steering(struct mlx5e_priv *priv);
+void mlx5e_ethtool_init_steering(struct mlx5e_flow_steering *fs);
+void mlx5e_ethtool_cleanup_steering(struct mlx5e_flow_steering *fs);
 int mlx5e_ethtool_set_rxnfc(struct mlx5e_priv *priv, struct ethtool_rxnfc *cmd);
 int mlx5e_ethtool_get_rxnfc(struct mlx5e_priv *priv,
 			    struct ethtool_rxnfc *info, u32 *rule_locs);
 #else
-static inline void mlx5e_ethtool_init_steering(struct mlx5e_priv *priv)    { }
-static inline void mlx5e_ethtool_cleanup_steering(struct mlx5e_priv *priv) { }
+static inline void mlx5e_ethtool_init_steering(struct mlx5e_flow_steering *fs) { }
+static inline void mlx5e_ethtool_cleanup_steering(struct mlx5e_flow_steering *fs) { }
 static inline int mlx5e_ethtool_set_rxnfc(struct mlx5e_priv *priv, struct ethtool_rxnfc *cmd)
 { return -EOPNOTSUPP; }
 static inline int mlx5e_ethtool_get_rxnfc(struct mlx5e_priv *priv,
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
index 6768f21c4eb1..3f3def0e5074 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
@@ -1314,7 +1314,7 @@ int mlx5e_create_flow_steering(struct mlx5e_priv *priv)
 	if (err)
 		goto err_destory_vlan_table;
 
-	mlx5e_ethtool_init_steering(priv);
+	mlx5e_ethtool_init_steering(priv->fs);
 
 	return 0;
 
@@ -1340,7 +1340,7 @@ void mlx5e_destroy_flow_steering(struct mlx5e_priv *priv)
 	mlx5e_destroy_ttc_table(priv);
 	mlx5e_destroy_inner_ttc_table(priv);
 	mlx5e_arfs_destroy_tables(priv);
-	mlx5e_ethtool_cleanup_steering(priv);
+	mlx5e_ethtool_cleanup_steering(priv->fs);
 }
 
 static int mlx5e_fs_vlan_alloc(struct mlx5e_flow_steering *fs)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs_ethtool.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 458283eaa812..475be2bf7e61 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@ -888,7 +888,7 @@ static int mlx5e_init_rep_rx(struct mlx5e_priv *priv)
 	if (err)
 		goto err_destroy_root_ft;
 
-	mlx5e_ethtool_init_steering(priv);
+	mlx5e_ethtool_init_steering(priv->fs);
 
 	return 0;
 
@@ -909,7 +909,7 @@ static int mlx5e_init_rep_rx(struct mlx5e_priv *priv)
 
 static void mlx5e_cleanup_rep_rx(struct mlx5e_priv *priv)
 {
-	mlx5e_ethtool_cleanup_steering(priv);
+	mlx5e_ethtool_cleanup_steering(priv->fs);
 	rep_vport_rx_rule_destroy(priv);
 	mlx5e_destroy_rep_root_ft(priv);
 	mlx5_destroy_ttc_table(priv->fs->ttc);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
index d84889d6efe2..755200d7d41a 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/ipoib/ipoib.c
@@ -384,7 +384,7 @@ static int mlx5i_create_flow_steering(struct mlx5e_priv *priv)
 		goto err_destroy_arfs_tables;
 	}
 
-	mlx5e_ethtool_init_steering(priv);
+	mlx5e_ethtool_init_steering(priv->fs);
 
 	return 0;
 
@@ -398,7 +398,7 @@ static void mlx5i_destroy_flow_steering(struct mlx5e_priv *priv)
 {
 	mlx5e_destroy_ttc_table(priv);
 	mlx5e_arfs_destroy_tables(priv);
-	mlx5e_ethtool_cleanup_steering(priv);
+	mlx5e_ethtool_cleanup_steering(priv->fs);
 }
 
 static int mlx5i_init_rx(struct mlx5e_priv *priv)
