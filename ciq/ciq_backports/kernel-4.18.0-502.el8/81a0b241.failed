net/mlx5e: Drop priv argument of ptp function in en_fs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Lama Kayal <lkayal@nvidia.com>
commit 81a0b241affeec9914257a146841e1d802474362
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/81a0b241.failed

Both mlx5e_ptp_alloc_rx_fs and mlx5e_ptp_free_rx_fs only
make use of two priv member, pass them directly instead.
This will help dropping priv from all en_fs file.

	Signed-off-by: Lama Kayal <lkayal@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 81a0b241affeec9914257a146841e1d802474362)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
index 26d4c2a0b645,6fefce30d296..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
@@@ -622,9 -622,9 +622,13 @@@ static int mlx5e_ptp_set_state(struct m
  	return bitmap_empty(c->state, MLX5E_PTP_STATE_NUM_STATES) ? -EINVAL : 0;
  }
  
- static void mlx5e_ptp_rx_unset_fs(struct mlx5e_priv *priv)
+ static void mlx5e_ptp_rx_unset_fs(struct mlx5e_flow_steering *fs)
  {
++<<<<<<< HEAD
 +	struct mlx5e_ptp_fs *ptp_fs = priv->fs->ptp_fs;
++=======
+ 	struct mlx5e_ptp_fs *ptp_fs = mlx5e_fs_get_ptp(fs);
++>>>>>>> 81a0b241affe (net/mlx5e: Drop priv argument of ptp function in en_fs)
  
  	if (!ptp_fs->valid)
  		return;
@@@ -807,19 -810,20 +812,28 @@@ int mlx5e_ptp_alloc_rx_fs(struct mlx5e_
  	ptp_fs = kzalloc(sizeof(*ptp_fs), GFP_KERNEL);
  	if (!ptp_fs)
  		return -ENOMEM;
++<<<<<<< HEAD
++=======
+ 	mlx5e_fs_set_ptp(fs, ptp_fs);
++>>>>>>> 81a0b241affe (net/mlx5e: Drop priv argument of ptp function in en_fs)
  
 +	priv->fs->ptp_fs = ptp_fs;
  	return 0;
  }
  
- void mlx5e_ptp_free_rx_fs(struct mlx5e_priv *priv)
+ void mlx5e_ptp_free_rx_fs(struct mlx5e_flow_steering *fs,
+ 			  const struct mlx5e_profile *profile)
  {
++<<<<<<< HEAD
 +	struct mlx5e_ptp_fs *ptp_fs = priv->fs->ptp_fs;
++=======
+ 	struct mlx5e_ptp_fs *ptp_fs = mlx5e_fs_get_ptp(fs);
++>>>>>>> 81a0b241affe (net/mlx5e: Drop priv argument of ptp function in en_fs)
  
- 	if (!mlx5e_profile_feature_cap(priv->profile, PTP_RX))
+ 	if (!mlx5e_profile_feature_cap(profile, PTP_RX))
  		return;
  
- 	mlx5e_ptp_rx_unset_fs(priv);
+ 	mlx5e_ptp_rx_unset_fs(fs);
  	kfree(ptp_fs);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.h b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.h
index f324a0c6f869..cc7efde88ac3 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.h
@@ -83,8 +83,10 @@ void mlx5e_ptp_close(struct mlx5e_ptp *c);
 void mlx5e_ptp_activate_channel(struct mlx5e_ptp *c);
 void mlx5e_ptp_deactivate_channel(struct mlx5e_ptp *c);
 int mlx5e_ptp_get_rqn(struct mlx5e_ptp *c, u32 *rqn);
-int mlx5e_ptp_alloc_rx_fs(struct mlx5e_priv *priv);
-void mlx5e_ptp_free_rx_fs(struct mlx5e_priv *priv);
+int mlx5e_ptp_alloc_rx_fs(struct mlx5e_flow_steering *fs,
+			  const struct mlx5e_profile *profile);
+void mlx5e_ptp_free_rx_fs(struct mlx5e_flow_steering *fs,
+			  const struct mlx5e_profile *profile);
 int mlx5e_ptp_rx_manage_fs(struct mlx5e_priv *priv, bool set);
 
 enum {
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
index 6768f21c4eb1..3c7600e96ef7 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
@@ -1310,7 +1310,7 @@ int mlx5e_create_flow_steering(struct mlx5e_priv *priv)
 		goto err_destroy_l2_table;
 	}
 
-	err = mlx5e_ptp_alloc_rx_fs(priv);
+	err = mlx5e_ptp_alloc_rx_fs(priv->fs, priv->profile);
 	if (err)
 		goto err_destory_vlan_table;
 
@@ -1334,7 +1334,7 @@ int mlx5e_create_flow_steering(struct mlx5e_priv *priv)
 
 void mlx5e_destroy_flow_steering(struct mlx5e_priv *priv)
 {
-	mlx5e_ptp_free_rx_fs(priv);
+	mlx5e_ptp_free_rx_fs(priv->fs, priv->profile);
 	mlx5e_destroy_vlan_table(priv);
 	mlx5e_destroy_l2_table(priv);
 	mlx5e_destroy_ttc_table(priv);
