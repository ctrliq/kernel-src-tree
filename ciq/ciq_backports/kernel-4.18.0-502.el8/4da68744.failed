net/smc: reduce unnecessary blocking in smcr_lgr_reg_rmbs()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author D. Wythe <alibuda@linux.alibaba.com>
commit 4da687448de7b51dcca9d024c6049fa223f5363f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/4da68744.failed

Unlike smc_buf_create() and smcr_buf_unuse(), smcr_lgr_reg_rmbs() is
exclusive when assigned rmb_desc was not registered, although it can be
executed in parallel when assigned rmb_desc was registered already
and only performs read semtamics on it. Hence, we can not simply replace
it with read semaphore.

The idea here is that if the assigned rmb_desc was registered already,
use read semaphore to protect the critical section, once the assigned
rmb_desc was not registered, keep using keep write semaphore still
to keep its exclusivity.

Thanks to the reusable features of rmb_desc, which allows us to execute
in parallel in most cases.

	Signed-off-by: D. Wythe <alibuda@linux.alibaba.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 4da687448de7b51dcca9d024c6049fa223f5363f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/smc/af_smc.c
diff --cc net/smc/af_smc.c
index ae9dc2293a5e,b163266e581a..000000000000
--- a/net/smc/af_smc.c
+++ b/net/smc/af_smc.c
@@@ -539,7 -559,7 +554,11 @@@ fast_path
  	}
  	rmb_desc->is_conf_rkey = true;
  out:
++<<<<<<< HEAD
 +	mutex_unlock(&lgr->llc_conf_mutex);
++=======
+ 	do_slow ? up_write(&lgr->llc_conf_mutex) : up_read(&lgr->llc_conf_mutex);
++>>>>>>> 4da687448de7 (net/smc: reduce unnecessary blocking in smcr_lgr_reg_rmbs())
  	smc_llc_flow_stop(lgr, &lgr->llc_flow_lcl);
  	return rc;
  }
* Unmerged path net/smc/af_smc.c
