arm64: entry: move enter_from_user_mode to entry-common.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit 2f911d494f3f028bbe6346e383a354225682cf1b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/2f911d49.failed

In later patches we'll want to extend enter_from_user_mode() and add a
corresponding exit_to_user_mode(). As these will be common for all
entries/exits from userspace, it'd be better for these to live in
entry-common.c with the rest of the entry logic.

This patch moves enter_from_user_mode() into entry-common.c. As with
other functions in entry-common.c it is marked as noinstr (which
prevents all instrumentation, tracing, and kprobes) but there are no
other functional changes.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: James Morse <james.morse@arm.com>
	Cc: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20201130115950.22492-5-mark.rutland@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 2f911d494f3f028bbe6346e383a354225682cf1b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/traps.c
diff --cc arch/arm64/kernel/traps.c
index ace19f467da4,580c60afc39a..000000000000
--- a/arch/arm64/kernel/traps.c
+++ b/arch/arm64/kernel/traps.c
@@@ -948,33 -876,6 +948,36 @@@ asmlinkage void do_serror(struct pt_reg
  	nmi_exit();
  }
  
++<<<<<<< HEAD
 +asmlinkage void enter_from_user_mode(void)
 +{
 +	CT_WARN_ON(ct_state() != CONTEXT_USER);
 +	user_exit_irqoff();
 +}
 +NOKPROBE_SYMBOL(enter_from_user_mode);
 +
 +void __pte_error(const char *file, int line, unsigned long val)
 +{
 +	pr_err("%s:%d: bad pte %016lx.\n", file, line, val);
 +}
 +
 +void __pmd_error(const char *file, int line, unsigned long val)
 +{
 +	pr_err("%s:%d: bad pmd %016lx.\n", file, line, val);
 +}
 +
 +void __pud_error(const char *file, int line, unsigned long val)
 +{
 +	pr_err("%s:%d: bad pud %016lx.\n", file, line, val);
 +}
 +
 +void __pgd_error(const char *file, int line, unsigned long val)
 +{
 +	pr_err("%s:%d: bad pgd %016lx.\n", file, line, val);
 +}
 +
++=======
++>>>>>>> 2f911d494f3f (arm64: entry: move enter_from_user_mode to entry-common.c)
  /* GENERIC_BUG traps */
  
  int is_valid_bugaddr(unsigned long addr)
diff --git a/arch/arm64/kernel/entry-common.c b/arch/arm64/kernel/entry-common.c
index 75e99161f79e..9a685e7686fe 100644
--- a/arch/arm64/kernel/entry-common.c
+++ b/arch/arm64/kernel/entry-common.c
@@ -101,6 +101,12 @@ asmlinkage void noinstr el1_sync_handler(struct pt_regs *regs)
 	}
 }
 
+asmlinkage void noinstr enter_from_user_mode(void)
+{
+	CT_WARN_ON(ct_state() != CONTEXT_USER);
+	user_exit_irqoff();
+}
+
 static void noinstr el0_da(struct pt_regs *regs, unsigned long esr)
 {
 	unsigned long far = read_sysreg(far_el1);
* Unmerged path arch/arm64/kernel/traps.c
