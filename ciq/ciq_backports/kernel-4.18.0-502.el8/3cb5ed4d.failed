arm64: entry: prepare ret_to_user for function call

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Mark Rutland <mark.rutland@arm.com>
commit 3cb5ed4d76c15fb97c10e5e9f5268d92c68222ca
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/3cb5ed4d.failed

In a subsequent patch ret_to_user will need to make a C function call
(in some configurations) which may clobber x0-x18 at the start of the
finish_ret_to_user block, before enable_step_tsk consumes the flags
loaded into x1.

In preparation for this, let's load the flags into x19, which is
preserved across C function calls. This avoids a redundant reload of the
flags and ensures we operate on a consistent shapshot regardless.

There should be no functional change as a result of this patch. At this
point of the entry/exit paths we only need to preserve x28 (tsk) and the
sp, and x19 is free for this use.

	Signed-off-by: Mark Rutland <mark.rutland@arm.com>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: James Morse <james.morse@arm.com>
	Cc: Will Deacon <will@kernel.org>
Link: https://lore.kernel.org/r/20201130115950.22492-6-mark.rutland@arm.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 3cb5ed4d76c15fb97c10e5e9f5268d92c68222ca)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index 93b9a91b720c,84aec600eeed..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -743,11 -774,16 +743,20 @@@ SYM_CODE_END(el0_error
  SYM_CODE_START_LOCAL(ret_to_user)
  	disable_daif
  	gic_prio_kentry_setup tmp=x3
- 	ldr	x1, [tsk, #TSK_TI_FLAGS]
- 	and	x2, x1, #_TIF_WORK_MASK
+ 	ldr	x19, [tsk, #TSK_TI_FLAGS]
+ 	and	x2, x19, #_TIF_WORK_MASK
  	cbnz	x2, work_pending
  finish_ret_to_user:
++<<<<<<< HEAD
 +	enable_step_tsk x1, x2
++=======
+ 	/* Ignore asynchronous tag check faults in the uaccess routines */
+ 	clear_mte_async_tcf
+ 	enable_step_tsk x19, x2
+ #ifdef CONFIG_GCC_PLUGIN_STACKLEAK
+ 	bl	stackleak_erase
+ #endif
++>>>>>>> 3cb5ed4d76c1 (arm64: entry: prepare ret_to_user for function call)
  	kernel_exit 0
  
  /*
* Unmerged path arch/arm64/kernel/entry.S
