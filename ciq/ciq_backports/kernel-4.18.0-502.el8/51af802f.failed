trace: platform/x86/intel/ifs: Add trace point to track Intel IFS operations

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Tony Luck <tony.luck@intel.com>
commit 51af802fc05152e84727a4293ccaa7e7e1b64d7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/51af802f.failed

Add tracing support which may be useful for debugging systems that fail to complete
In Field Scan tests.

	Acked-by: Steven Rostedt (Google) <rostedt@goodmis.org>
	Reviewed-by: Dan Williams <dan.j.williams@intel.com>
	Signed-off-by: Tony Luck <tony.luck@intel.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Link: https://lore.kernel.org/r/20220506225410.1652287-11-tony.luck@intel.com
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit 51af802fc05152e84727a4293ccaa7e7e1b64d7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	MAINTAINERS
#	drivers/platform/x86/intel/ifs/runtest.c
diff --cc MAINTAINERS
index 930c743afed1,a4f937b5e72f..000000000000
--- a/MAINTAINERS
+++ b/MAINTAINERS
@@@ -7521,6 -9859,14 +7521,17 @@@ B:	https://bugzilla.kernel.or
  T:	git git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux.git
  F:	drivers/idle/intel_idle.c
  
++<<<<<<< HEAD
++=======
+ INTEL IN FIELD SCAN (IFS) DEVICE
+ M:	Jithu Joseph <jithu.joseph@intel.com>
+ R:	Ashok Raj <ashok.raj@intel.com>
+ R:	Tony Luck <tony.luck@intel.com>
+ S:	Maintained
+ F:	drivers/platform/x86/intel/ifs
+ F:	include/trace/events/intel_ifs.h
+ 
++>>>>>>> 51af802fc051 (trace: platform/x86/intel/ifs: Add trace point to track Intel IFS operations)
  INTEL INTEGRATED SENSOR HUB DRIVER
  M:	Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
  M:	Jiri Kosina <jikos@kernel.org>
* Unmerged path drivers/platform/x86/intel/ifs/runtest.c
* Unmerged path MAINTAINERS
* Unmerged path drivers/platform/x86/intel/ifs/runtest.c
diff --git a/include/trace/events/intel_ifs.h b/include/trace/events/intel_ifs.h
new file mode 100644
index 000000000000..d7353024016c
--- /dev/null
+++ b/include/trace/events/intel_ifs.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM intel_ifs
+
+#if !defined(_TRACE_IFS_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_IFS_H
+
+#include <linux/ktime.h>
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(ifs_status,
+
+	TP_PROTO(int cpu, union ifs_scan activate, union ifs_status status),
+
+	TP_ARGS(cpu, activate, status),
+
+	TP_STRUCT__entry(
+		__field(	u64,	status	)
+		__field(	int,	cpu	)
+		__field(	u8,	start	)
+		__field(	u8,	stop	)
+	),
+
+	TP_fast_assign(
+		__entry->cpu	= cpu;
+		__entry->start	= activate.start;
+		__entry->stop	= activate.stop;
+		__entry->status	= status.data;
+	),
+
+	TP_printk("cpu: %d, start: %.2x, stop: %.2x, status: %llx",
+		__entry->cpu,
+		__entry->start,
+		__entry->stop,
+		__entry->status)
+);
+
+#endif /* _TRACE_IFS_H */
+
+/* This part must be outside protection */
+#include <trace/define_trace.h>
