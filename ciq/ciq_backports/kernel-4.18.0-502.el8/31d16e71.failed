scsi: storvsc: Always set no_report_opcodes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-502.el8
commit-author Michael Kelley <mikelley@microsoft.com>
commit 31d16e712bdcaee769de4780f72ff8d6cd3f0589
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-502.el8/31d16e71.failed

Hyper-V synthetic SCSI devices do not support the MAINTENANCE_IN SCSI
command, so scsi_report_opcode() always fails, resulting in messages like
this:

hv_storvsc <guid>: tag#205 cmd 0xa3 status: scsi 0x2 srb 0x86 hv 0xc0000001

The recently added support for command duration limits calls
scsi_report_opcode() four times as each device comes online, which
significantly increases the number of messages logged in a system with many
disks.

Fix the problem by always marking Hyper-V synthetic SCSI devices as not
supporting scsi_report_opcode(). With this setting, the MAINTENANCE_IN SCSI
command is not issued and no messages are logged.

	Signed-off-by: Michael Kelley <mikelley@microsoft.com>
Link: https://lore.kernel.org/r/1686343101-18930-1-git-send-email-mikelley@microsoft.com
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 31d16e712bdcaee769de4780f72ff8d6cd3f0589)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/storvsc_drv.c
diff --cc drivers/scsi/storvsc_drv.c
index cebbd861f569,659196a2f63a..000000000000
--- a/drivers/scsi/storvsc_drv.c
+++ b/drivers/scsi/storvsc_drv.c
@@@ -1572,9 -1567,8 +1572,14 @@@ static int storvsc_device_configure(str
  {
  	blk_queue_rq_timeout(sdevice->request_queue, (storvsc_timeout * HZ));
  
++<<<<<<< HEAD
 +	/* Ensure there are no gaps in presented sgls */
 +	blk_queue_virt_boundary(sdevice->request_queue, HV_HYP_PAGE_SIZE - 1);
 +
++=======
+ 	/* storvsc devices don't support MAINTENANCE_IN SCSI cmd */
+ 	sdevice->no_report_opcodes = 1;
++>>>>>>> 31d16e712bdc (scsi: storvsc: Always set no_report_opcodes)
  	sdevice->no_write_same = 1;
  
  	/*
* Unmerged path drivers/scsi/storvsc_drv.c
