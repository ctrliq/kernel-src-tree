net/mlx5e: Rename some related TTC args and functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Maor Gottlieb <maorg@nvidia.com>
commit 5fba089e960c9bc6c683f7e7917a853e5910b79f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/5fba089e.failed

Since TTC logic is going to be moved to a separate file, make the
relevant functions and arguments that used by TTC to be mlx5 generic.

	Signed-off-by: Maor Gottlieb <maorg@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Reviewed-by: Mark Bloch <mbloch@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 5fba089e960c9bc6c683f7e7917a853e5910b79f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
#	drivers/net/ethernet/mellanox/mlx5/core/en_main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
index 3a86dae16687,6b01a28e1d93..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
@@@ -93,17 -94,17 +93,17 @@@ enum mlx5e_traffic_types 
  				 MLX5_HASH_FIELD_SEL_DST_IP   |\
  				 MLX5_HASH_FIELD_SEL_IPSEC_SPI)
  
 -enum mlx5_tunnel_types {
 -	MLX5_TT_IPV4_GRE,
 -	MLX5_TT_IPV6_GRE,
 -	MLX5_TT_IPV4_IPIP,
 -	MLX5_TT_IPV6_IPIP,
 -	MLX5_TT_IPV4_IPV6,
 -	MLX5_TT_IPV6_IPV6,
 -	MLX5_NUM_TUNNEL_TT,
 +enum mlx5e_tunnel_types {
 +	MLX5E_TT_IPV4_GRE,
 +	MLX5E_TT_IPV6_GRE,
 +	MLX5E_TT_IPV4_IPIP,
 +	MLX5E_TT_IPV6_IPIP,
 +	MLX5E_TT_IPV4_IPV6,
 +	MLX5E_TT_IPV6_IPV6,
 +	MLX5E_NUM_TUNNEL_TT,
  };
  
- bool mlx5e_tunnel_inner_ft_supported(struct mlx5_core_dev *mdev);
+ bool mlx5_tunnel_inner_ft_supported(struct mlx5_core_dev *mdev);
  
  struct mlx5e_ttc_rule {
  	struct mlx5_flow_handle *rule;
@@@ -263,10 -266,7 +263,14 @@@ void mlx5e_disable_cvlan_filter(struct 
  int mlx5e_create_flow_steering(struct mlx5e_priv *priv);
  void mlx5e_destroy_flow_steering(struct mlx5e_priv *priv);
  
++<<<<<<< HEAD
 +int mlx5e_fs_init(struct mlx5e_priv *priv);
 +void mlx5e_fs_cleanup(struct mlx5e_priv *priv);
 +
 +u8 mlx5e_get_proto_by_tunnel_type(enum mlx5e_tunnel_types tt);
++=======
+ u8 mlx5_get_proto_by_tunnel_type(enum mlx5_tunnel_types tt);
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  int mlx5e_add_vlan_trap(struct mlx5e_priv *priv, int  trap_id, int tir_num);
  void mlx5e_remove_vlan_trap(struct mlx5e_priv *priv);
  int mlx5e_add_mac_trap(struct mlx5e_priv *priv, int  trap_id, int tir_num);
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
index d662cf3b0a99,14a9011ea1a1..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
@@@ -878,8 -878,8 +878,13 @@@ struct mlx5_etype_proto 
  	u8 proto;
  };
  
++<<<<<<< HEAD
 +static struct mlx5e_etype_proto ttc_rules[] = {
 +	[MLX5E_TT_IPV4_TCP] = {
++=======
+ static struct mlx5_etype_proto ttc_rules[] = {
+ 	[MLX5_TT_IPV4_TCP] = {
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  		.etype = ETH_P_IP,
  		.proto = IPPROTO_TCP,
  	},
@@@ -925,8 -925,8 +930,13 @@@
  	},
  };
  
++<<<<<<< HEAD
 +static struct mlx5e_etype_proto ttc_tunnel_rules[] = {
 +	[MLX5E_TT_IPV4_GRE] = {
++=======
+ static struct mlx5_etype_proto ttc_tunnel_rules[] = {
+ 	[MLX5_TT_IPV4_GRE] = {
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  		.etype = ETH_P_IP,
  		.proto = IPPROTO_GRE,
  	},
@@@ -953,7 -953,7 +963,11 @@@
  
  };
  
++<<<<<<< HEAD
 +u8 mlx5e_get_proto_by_tunnel_type(enum mlx5e_tunnel_types tt)
++=======
+ u8 mlx5_get_proto_by_tunnel_type(enum mlx5_tunnel_types tt)
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  {
  	return ttc_tunnel_rules[tt].proto;
  }
@@@ -976,8 -977,9 +991,14 @@@ static bool mlx5_tunnel_any_rx_proto_su
  {
  	int tt;
  
++<<<<<<< HEAD
 +	for (tt = 0; tt < MLX5E_NUM_TUNNEL_TT; tt++) {
 +		if (mlx5e_tunnel_proto_supported_rx(mdev, ttc_tunnel_rules[tt].proto))
++=======
+ 	for (tt = 0; tt < MLX5_NUM_TUNNEL_TT; tt++) {
+ 		if (mlx5_tunnel_proto_supported_rx(mdev,
+ 						   ttc_tunnel_rules[tt].proto))
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  			return true;
  	}
  	return false;
@@@ -1084,10 -1087,10 +1106,17 @@@ static int mlx5e_generate_ttc_table_rul
  
  	trules    = ttc->tunnel_rules;
  	dest.type = MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE;
++<<<<<<< HEAD
 +	dest.ft   = params->inner_ttc->ft.t;
 +	for (tt = 0; tt < MLX5E_NUM_TUNNEL_TT; tt++) {
 +		if (!mlx5e_tunnel_proto_supported_rx(priv->mdev,
 +						     ttc_tunnel_rules[tt].proto))
++=======
+ 	dest.ft = params->inner_ttc->ft.t;
+ 	for (tt = 0; tt < MLX5_NUM_TUNNEL_TT; tt++) {
+ 		if (!mlx5_tunnel_proto_supported_rx(priv->mdev,
+ 						    ttc_tunnel_rules[tt].proto))
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  			continue;
  		trules[tt] = mlx5e_generate_ttc_rule(priv, ft, &dest,
  						     ttc_tunnel_rules[tt].etype,
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 744b7a3be9be,25a0b5f0984a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@@ -4265,8 -4211,8 +4265,13 @@@ static bool mlx5e_tunnel_any_tx_proto_s
  {
  	int tt;
  
++<<<<<<< HEAD
 +	for (tt = 0; tt < MLX5E_NUM_TUNNEL_TT; tt++) {
 +		if (mlx5e_tunnel_proto_supported_tx(mdev, mlx5e_get_proto_by_tunnel_type(tt)))
++=======
+ 	for (tt = 0; tt < MLX5_NUM_TUNNEL_TT; tt++) {
+ 		if (mlx5e_tunnel_proto_supported_tx(mdev, mlx5_get_proto_by_tunnel_type(tt)))
++>>>>>>> 5fba089e960c (net/mlx5e: Rename some related TTC args and functions)
  			return true;
  	}
  	return (mlx5_vxlan_allowed(mdev->vxlan) || mlx5_geneve_tx_allowed(mdev));
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/fs.h
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_fs.c
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_main.c
