net: phy: marvell10g: differentiate 88E2110 vs 88E2111

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Marek Behún <kabel@kernel.org>
commit 0fca947cbb27ddb28155996e29385b4ddf5d94f3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/0fca947c.failed

88E2111 is a variant of 88E2110 which does not support 5 gigabit speeds.

Differentiate these variants via the match_phy_device() method, since
they have the same PHY ID.

	Signed-off-by: Marek Behún <kabel@kernel.org>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0fca947cbb27ddb28155996e29385b4ddf5d94f3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/marvell10g.c
diff --cc drivers/net/phy/marvell10g.c
index 41a672a15acc,fcf4db4e5665..000000000000
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@@ -845,7 -888,46 +845,48 @@@ static int mv3310_set_tunable(struct ph
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void mv3310_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_XAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_RXAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
+ static void mv3340_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_RXAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
+ static void mv2110_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
+ static void mv2111_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
++>>>>>>> 0fca947cbb27 (net: phy: marvell10g: differentiate 88E2110 vs 88E2111)
  static const struct mv3310_chip mv3310_type = {
 -	.init_supported_interfaces = mv3310_init_supported_interfaces,
  	.get_mactype = mv3310_get_mactype,
  	.init_interface = mv3310_init_interface,
  
* Unmerged path drivers/net/phy/marvell10g.c
