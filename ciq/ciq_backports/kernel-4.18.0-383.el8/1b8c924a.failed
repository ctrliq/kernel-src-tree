libbpf: Fix memleak in libbpf_netlink_recv()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Andrii Nakryiko <andrii@kernel.org>
commit 1b8c924a05934d2e758ec7da7bd217ef8ebd80ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/1b8c924a.failed

Ensure that libbpf_netlink_recv() frees dynamically allocated buffer in
all code paths.

Fixes: 9c3de619e13e ("libbpf: Use dynamically allocated buffer when receiving netlink messages")
	Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
	Acked-by: Toke Høiland-Jørgensen <toke@redhat.com>
Link: https://lore.kernel.org/bpf/20220217073958.276959-1-andrii@kernel.org
(cherry picked from commit 1b8c924a05934d2e758ec7da7bd217ef8ebd80ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/netlink.c
diff --cc tools/lib/bpf/netlink.c
index 4676dcf5eae8,cbc8967d5402..000000000000
--- a/tools/lib/bpf/netlink.c
+++ b/tools/lib/bpf/netlink.c
@@@ -121,8 -183,17 +122,22 @@@ static int bpf_netlink_recv(int sock, _
  			}
  			if (_fn) {
  				ret = _fn(nh, fn, cookie);
++<<<<<<< HEAD
 +				if (ret)
 +					return ret;
++=======
+ 				switch (ret) {
+ 				case NL_CONT:
+ 					break;
+ 				case NL_NEXT:
+ 					goto start;
+ 				case NL_DONE:
+ 					ret = 0;
+ 					goto done;
+ 				default:
+ 					goto done;
+ 				}
++>>>>>>> 1b8c924a0593 (libbpf: Fix memleak in libbpf_netlink_recv())
  			}
  		}
  	}
* Unmerged path tools/lib/bpf/netlink.c
