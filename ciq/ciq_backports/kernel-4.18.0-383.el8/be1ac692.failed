drm/amd/display: Fix DPIA outbox timeout after S3/S4/reset

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
commit be1ac692c08971486d68a88f39fc4e2cecb80a8e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/be1ac692.failed

[Why]
The HW interrupt gets disabled after S3/S4/reset so we don't receive
notifications for HPD or AUX from DMUB - leading to timeout and
black screen with (or without) DPIA links connected.

[How]
Re-enable the interrupt after S3/S4/reset like we do for the other
DC interrupts.

Guard both instances of the outbox interrupt enable or we'll hang
during restore on ASIC that don't support it.

Fixes: 524a0ba6fab955 ("drm/amd/display: Fix DPIA outbox timeout after GPU reset")

	Reviewed-by: Jude Shih <Jude.Shih@amd.com>
	Acked-by: Pavle Kotarac <Pavle.Kotarac@amd.com>
	Signed-off-by: Nicholas Kazlauskas <nicholas.kazlauskas@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit be1ac692c08971486d68a88f39fc4e2cecb80a8e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
diff --cc drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
index fa1b1bfefad5,adaf3708ca0c..000000000000
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
@@@ -2244,7 -2561,22 +2244,26 @@@ static int dm_resume(void *handle
  	if (amdgpu_in_reset(adev)) {
  		dc_state = dm->cached_dc_state;
  
++<<<<<<< HEAD
 +		amdgpu_dm_outbox_init(adev);
++=======
+ 		/*
+ 		 * The dc->current_state is backed up into dm->cached_dc_state
+ 		 * before we commit 0 streams.
+ 		 *
+ 		 * DC will clear link encoder assignments on the real state
+ 		 * but the changes won't propagate over to the copy we made
+ 		 * before the 0 streams commit.
+ 		 *
+ 		 * DC expects that link encoder assignments are *not* valid
+ 		 * when committing a state, so as a workaround it needs to be
+ 		 * cleared here.
+ 		 */
+ 		link_enc_cfg_init(dm->dc, dc_state);
+ 
+ 		if (dc_enable_dmub_notifications(adev->dm.dc))
+ 			amdgpu_dm_outbox_init(adev);
++>>>>>>> be1ac692c089 (drm/amd/display: Fix DPIA outbox timeout after S3/S4/reset)
  
  		r = dm_dmub_hw_init(adev);
  		if (r)
@@@ -2293,8 -2616,14 +2312,12 @@@
  	/* TODO: Remove dc_state->dccg, use dc->dccg directly. */
  	dc_resource_state_construct(dm->dc, dm_state->context);
  
+ 	/* Re-enable outbox interrupts for DPIA. */
+ 	if (dc_enable_dmub_notifications(adev->dm.dc))
+ 		amdgpu_dm_outbox_init(adev);
+ 
  	/* Before powering on DC we need to re-initialize DMUB. */
 -	r = dm_dmub_hw_init(adev);
 -	if (r)
 -		DRM_ERROR("DMUB interface failed to initialize: status=%d\n", r);
 +	dm_dmub_hw_resume(adev);
  
  	/* power on hardware */
  	dc_set_power_state(dm->dc, DC_ACPI_CM_POWER_STATE_D0);
* Unmerged path drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm.c
