libbpf: Fix segfault in light skeleton for objects without BTF

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Kumar Kartikeya Dwivedi <memxor@gmail.com>
commit 4729445b47efebf089da4ccbcd1b116ffa2ad4af
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/4729445b.failed

When fed an empty BPF object, bpftool gen skeleton -L crashes at
btf__set_fd() since it assumes presence of obj->btf, however for
the sequence below clang adds no .BTF section (hence no BTF).

Reproducer:

  $ touch a.bpf.c
  $ clang -O2 -g -target bpf -c a.bpf.c
  $ bpftool gen skeleton -L a.bpf.o
  /* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */
  /* THIS FILE IS AUTOGENERATED! */

  struct a_bpf {
	struct bpf_loader_ctx ctx;
  Segmentation fault (core dumped)

The same occurs for files compiled without BTF info, i.e. without
clang's -g flag.

Fixes: 67234743736a (libbpf: Generate loader program out of BPF ELF file.)
	Signed-off-by: Kumar Kartikeya Dwivedi <memxor@gmail.com>
	Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20210930061634.1840768-1-memxor@gmail.com
(cherry picked from commit 4729445b47efebf089da4ccbcd1b116ffa2ad4af)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index 6d1a2691c01c,e4f83c304ec9..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -7949,9 -6889,19 +7949,22 @@@ int bpf_object__load_xattr(struct bpf_o
  	err = err ? : bpf_object__sanitize_maps(obj);
  	err = err ? : bpf_object__init_kern_struct_ops_maps(obj);
  	err = err ? : bpf_object__create_maps(obj);
 -	err = err ? : bpf_object__relocate(obj, obj->btf_custom_path ? : attr->target_btf_path);
 +	err = err ? : bpf_object__relocate(obj, attr->target_btf_path);
  	err = err ? : bpf_object__load_progs(obj, attr->log_level);
  
++<<<<<<< HEAD
++=======
+ 	if (obj->gen_loader) {
+ 		/* reset FDs */
+ 		if (obj->btf)
+ 			btf__set_fd(obj->btf, -1);
+ 		for (i = 0; i < obj->nr_maps; i++)
+ 			obj->maps[i].fd = -1;
+ 		if (!err)
+ 			err = bpf_gen__finish(obj->gen_loader);
+ 	}
+ 
++>>>>>>> 4729445b47ef (libbpf: Fix segfault in light skeleton for objects without BTF)
  	/* clean up module BTFs */
  	for (i = 0; i < obj->btf_module_cnt; i++) {
  		close(obj->btf_modules[i].fd);
* Unmerged path tools/lib/bpf/libbpf.c
