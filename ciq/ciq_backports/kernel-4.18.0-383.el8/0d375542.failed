net: phy: marvell10g: allow 5gbase-r and usxgmii

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Marek Behún <kabel@kernel.org>
commit 0d3755428d6990637cf6dc45f007980a1dce28d1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/0d375542.failed

These modes are also supported by these PHYs.

	Signed-off-by: Marek Behún <kabel@kernel.org>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 0d3755428d6990637cf6dc45f007980a1dce28d1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/marvell10g.c
diff --cc drivers/net/phy/marvell10g.c
index 99b7d209a9d7,881a0717846e..000000000000
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@@ -462,9 -462,11 +462,15 @@@ static int mv3310_config_init(struct ph
  	/* Check that the PHY interface type is compatible */
  	if (phydev->interface != PHY_INTERFACE_MODE_SGMII &&
  	    phydev->interface != PHY_INTERFACE_MODE_2500BASEX &&
+ 	    phydev->interface != PHY_INTERFACE_MODE_5GBASER &&
  	    phydev->interface != PHY_INTERFACE_MODE_XAUI &&
  	    phydev->interface != PHY_INTERFACE_MODE_RXAUI &&
++<<<<<<< HEAD
 +	    phydev->interface != PHY_INTERFACE_MODE_10GKR)
++=======
+ 	    phydev->interface != PHY_INTERFACE_MODE_10GBASER &&
+ 	    phydev->interface != PHY_INTERFACE_MODE_USXGMII)
++>>>>>>> 0d3755428d69 (net: phy: marvell10g: allow 5gbase-r and usxgmii)
  		return -ENODEV;
  
  	phydev->mdix_ctrl = ETH_TP_MDI_AUTO;
@@@ -599,17 -601,22 +605,26 @@@ static void mv3310_update_interface(str
  
  	if ((phydev->interface == PHY_INTERFACE_MODE_SGMII ||
  	     phydev->interface == PHY_INTERFACE_MODE_2500BASEX ||
++<<<<<<< HEAD
 +	     phydev->interface == PHY_INTERFACE_MODE_10GKR) && phydev->link) {
++=======
+ 	     phydev->interface == PHY_INTERFACE_MODE_5GBASER ||
+ 	     phydev->interface == PHY_INTERFACE_MODE_10GBASER) &&
+ 	    phydev->link) {
++>>>>>>> 0d3755428d69 (net: phy: marvell10g: allow 5gbase-r and usxgmii)
  		/* The PHY automatically switches its serdes interface (and
 -		 * active PHYXS instance) between Cisco SGMII, 10GBase-R and
 +		 * active PHYXS instance) between Cisco SGMII, 10GBase-KR and
  		 * 2500BaseX modes according to the speed.  Florian suggests
  		 * setting phydev->interface to communicate this to the MAC.
  		 * Only do this if we are already in one of the above modes.
  		 */
  		switch (phydev->speed) {
  		case SPEED_10000:
 -			phydev->interface = PHY_INTERFACE_MODE_10GBASER;
 +			phydev->interface = PHY_INTERFACE_MODE_10GKR;
  			break;
+ 		case SPEED_5000:
+ 			phydev->interface = PHY_INTERFACE_MODE_5GBASER;
+ 			break;
  		case SPEED_2500:
  			phydev->interface = PHY_INTERFACE_MODE_2500BASEX;
  			break;
* Unmerged path drivers/net/phy/marvell10g.c
