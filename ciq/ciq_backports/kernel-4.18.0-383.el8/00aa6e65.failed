crypto: ccp - fix command queuing to TEE ring buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Rijo Thomas <Rijo-john.Thomas@amd.com>
commit 00aa6e65aa04e500a11a2c91e92a11c37b9e234d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/00aa6e65.failed

Multiple threads or clients can submit a command to the TEE ring
buffer. This patch helps to synchronize command submission to the
ring.

One thread shall write a command to a TEE ring buffer entry only if:

 - Trusted OS has notified that the TEE command for the given entry
   has been processed and driver has copied the TEE response into
   client buffer.

 - The command entry is empty and can be written into.

After a command has been written to the TEE ring buffer, the global
wptr (mutex protected) shall be incremented for use by next client.

If PSP became unresponsive while processing TEE request from a
client, then further command submission to queue will be disabled.

Fixes: 33960acccfbd (crypto: ccp - add TEE support for Raven Ridge)
	Reviewed-by: Devaraj Rangasamy <Devaraj.Rangasamy@amd.com>
	Signed-off-by: Rijo Thomas <Rijo-john.Thomas@amd.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 00aa6e65aa04e500a11a2c91e92a11c37b9e234d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/ccp/tee-dev.c
#	drivers/crypto/ccp/tee-dev.h
* Unmerged path drivers/crypto/ccp/tee-dev.c
* Unmerged path drivers/crypto/ccp/tee-dev.h
* Unmerged path drivers/crypto/ccp/tee-dev.c
* Unmerged path drivers/crypto/ccp/tee-dev.h
