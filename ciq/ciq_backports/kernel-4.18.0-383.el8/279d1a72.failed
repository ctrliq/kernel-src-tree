powerpc/xive: Export XIVE IPI information for online-only processors.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Sachin Sant <sachinp@linux.ibm.com>
commit 279d1a72c0f8021520f68ddb0a1346ff9ba1ea8c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/279d1a72.failed

Cédric pointed out that XIVE IPI information exported via sysfs
(debug/powerpc/xive) display empty lines for processors which are
not online.

Switch to using for_each_online_cpu() so that information is
displayed for online-only processors.

	Reported-by: Cédric Le Goater <clg@kaod.org>
	Signed-off-by: Sachin Sant <sachinp@linux.ibm.com>
	Reviewed-by: Cédric Le Goater <clg@kaod.org>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/164146703333.19039.10920919226094771665.sendpatchset@MacBook-Pro.local

(cherry picked from commit 279d1a72c0f8021520f68ddb0a1346ff9ba1ea8c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/sysdev/xive/common.c
diff --cc arch/powerpc/sysdev/xive/common.c
index 524d61caf728,32863b4daf72..000000000000
--- a/arch/powerpc/sysdev/xive/common.c
+++ b/arch/powerpc/sysdev/xive/common.c
@@@ -1659,25 -1791,69 +1659,30 @@@ static int xive_core_debug_show(struct 
  	if (xive_ops->debug_show)
  		xive_ops->debug_show(m, private);
  
 -	for_each_online_cpu(cpu)
 -		xive_debug_show_ipi(m, cpu);
 -	return 0;
 -}
 -DEFINE_SHOW_ATTRIBUTE(xive_ipi_debug);
 -
 -static void xive_eq_debug_show_one(struct seq_file *m, struct xive_q *q, u8 prio)
 -{
 -	int i;
 -
 -	seq_printf(m, "EQ%d idx=%d T=%d\n", prio, q->idx, q->toggle);
 -	if (q->qpage) {
 -		for (i = 0; i < q->msk + 1; i++) {
 -			if (!(i % 8))
 -				seq_printf(m, "%05d ", i);
 -			seq_printf(m, "%08x%s", be32_to_cpup(q->qpage + i),
 -				   (i + 1) % 8 ? " " : "\n");
 -		}
 -	}
 -	seq_puts(m, "\n");
 -}
 -
 -static int xive_eq_debug_show(struct seq_file *m, void *private)
 -{
 -	int cpu = (long)m->private;
 -	struct xive_cpu *xc = per_cpu(xive_cpu, cpu);
++<<<<<<< HEAD
 +	for_each_possible_cpu(cpu)
 +		xive_debug_show_cpu(m, cpu);
  
 -	if (xc)
 -		xive_eq_debug_show_one(m, &xc->queue[xive_irq_priority],
 -				       xive_irq_priority);
 -	return 0;
 -}
 -DEFINE_SHOW_ATTRIBUTE(xive_eq_debug);
 +	for_each_irq_desc(i, desc) {
 +		struct irq_data *d = irq_desc_get_irq_data(desc);
 +		unsigned int hw_irq;
  
 -static void xive_core_debugfs_create(void)
 -{
 -	struct dentry *xive_dir;
 -	struct dentry *xive_eq_dir;
 -	long cpu;
 -	char name[16];
 +		if (!d)
 +			continue;
  
 -	xive_dir = debugfs_create_dir("xive", arch_debugfs_dir);
 -	if (IS_ERR(xive_dir))
 -		return;
 +		hw_irq = (unsigned int)irqd_to_hwirq(d);
  
 -	debugfs_create_file("ipis", 0400, xive_dir,
 -			    NULL, &xive_ipi_debug_fops);
 -	debugfs_create_file("interrupts", 0400, xive_dir,
 -			    NULL, &xive_irq_debug_fops);
 -	xive_eq_dir = debugfs_create_dir("eqs", xive_dir);
 -	for_each_possible_cpu(cpu) {
 -		snprintf(name, sizeof(name), "cpu%ld", cpu);
 -		debugfs_create_file(name, 0400, xive_eq_dir, (void *)cpu,
 -				    &xive_eq_debug_fops);
 +		/* IPIs are special (HW number 0) */
 +		if (hw_irq)
 +			xive_debug_show_irq(m, hw_irq, d);
  	}
 -	debugfs_create_bool("store-eoi", 0600, xive_dir, &xive_store_eoi);
 -
 -	if (xive_ops->debug_create)
 -		xive_ops->debug_create(xive_dir);
++=======
++	for_each_online_cpu(cpu)
++		xive_debug_show_ipi(m, cpu);
++>>>>>>> 279d1a72c0f8 (powerpc/xive: Export XIVE IPI information for online-only processors.)
 +	return 0;
  }
 -#else
 -static inline void xive_core_debugfs_create(void) { }
 -#endif /* CONFIG_DEBUG_FS */
 +DEFINE_SHOW_ATTRIBUTE(xive_core_debug);
  
  int xive_core_debug_init(void)
  {
* Unmerged path arch/powerpc/sysdev/xive/common.c
