net: phy: marvell10g: add separate structure for 88X3340

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Marek Behún <kabel@kernel.org>
commit 9885d016ffa9465f91498e7a70c413c30446ad49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/9885d016.failed

The 88X3340 contains 4 cores similar to 88X3310, but there is a
difference: it does not support xaui host mode. Instead the
corresponding MACTYPE means
  rxaui / 5gbase-r / 2500base-x / sgmii without AN

	Signed-off-by: Marek Behún <kabel@kernel.org>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9885d016ffa9465f91498e7a70c413c30446ad49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/phy/marvell10g.c
diff --cc drivers/net/phy/marvell10g.c
index 8ac850432ee4,f74dfd993d8b..000000000000
--- a/drivers/net/phy/marvell10g.c
+++ b/drivers/net/phy/marvell10g.c
@@@ -535,8 -557,24 +535,23 @@@ static int mv3310_init_interface(struc
  	return 0;
  }
  
+ static int mv3340_init_interface(struct phy_device *phydev, int mactype)
+ {
+ 	struct mv3310_priv *priv = dev_get_drvdata(&phydev->mdio.dev);
+ 	int err = 0;
+ 
+ 	priv->rate_match = false;
+ 
+ 	if (mactype == MV_V2_3340_PORT_CTRL_MACTYPE_RXAUI_NO_SGMII_AN)
+ 		priv->const_interface = PHY_INTERFACE_MODE_RXAUI;
+ 	else
+ 		err = mv3310_init_interface(phydev, mactype);
+ 
+ 	return err;
+ }
+ 
  static int mv3310_config_init(struct phy_device *phydev)
  {
 -	struct mv3310_priv *priv = dev_get_drvdata(&phydev->mdio.dev);
  	const struct mv3310_chip *chip = to_mv3310_chip(phydev);
  	int err, mactype;
  
@@@ -845,7 -888,38 +860,40 @@@ static int mv3310_set_tunable(struct ph
  	}
  }
  
++<<<<<<< HEAD
++=======
+ static void mv3310_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_XAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_RXAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
+ static void mv3340_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_RXAUI, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
+ static void mv2110_init_supported_interfaces(unsigned long *mask)
+ {
+ 	__set_bit(PHY_INTERFACE_MODE_SGMII, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_2500BASEX, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_5GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_10GBASER, mask);
+ 	__set_bit(PHY_INTERFACE_MODE_USXGMII, mask);
+ }
+ 
++>>>>>>> 9885d016ffa9 (net: phy: marvell10g: add separate structure for 88X3340)
  static const struct mv3310_chip mv3310_type = {
 -	.init_supported_interfaces = mv3310_init_supported_interfaces,
  	.get_mactype = mv3310_get_mactype,
  	.init_interface = mv3310_init_interface,
  
@@@ -854,7 -928,18 +902,17 @@@
  #endif
  };
  
+ static const struct mv3310_chip mv3340_type = {
+ 	.init_supported_interfaces = mv3340_init_supported_interfaces,
+ 	.get_mactype = mv3310_get_mactype,
+ 	.init_interface = mv3340_init_interface,
+ 
+ #ifdef CONFIG_HWMON
+ 	.hwmon_read_temp_reg = mv3310_hwmon_read_temp_reg,
+ #endif
+ };
+ 
  static const struct mv3310_chip mv2110_type = {
 -	.init_supported_interfaces = mv2110_init_supported_interfaces,
  	.get_mactype = mv2110_get_mactype,
  	.init_interface = mv2110_init_interface,
  
* Unmerged path drivers/net/phy/marvell10g.c
diff --git a/include/linux/marvell_phy.h b/include/linux/marvell_phy.h
index 52b1610eae68..eb10dcaca520 100644
--- a/include/linux/marvell_phy.h
+++ b/include/linux/marvell_phy.h
@@ -22,9 +22,13 @@
 #define MARVELL_PHY_ID_88E1545		0x01410ea0
 #define MARVELL_PHY_ID_88E1548P		0x01410ec0
 #define MARVELL_PHY_ID_88E3016		0x01410e60
-#define MARVELL_PHY_ID_88X3310		0x002b09a0
 #define MARVELL_PHY_ID_88E2110		0x002b09b0
 
+/* PHY IDs and mask for Alaska 10G PHYs */
+#define MARVELL_PHY_ID_88X33X0_MASK	0xfffffff8
+#define MARVELL_PHY_ID_88X3310		0x002b09a0
+#define MARVELL_PHY_ID_88X3340		0x002b09a8
+
 /* Marvel 88E1111 in Finisar SFP module with modified PHY ID */
 #define MARVELL_PHY_ID_88E1111_FINISAR	0x01ff0cc0
 
