ice: update to newer kernel API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Jesse Brandeburg <jesse.brandeburg@intel.com>
commit 1c96c16858bacb8e77a506b9493a8e4e517b669b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/1c96c168.failed

Use the netif_tx_* API from netdevice.h which has simpler parameters.

	Signed-off-by: Jesse Brandeburg <jesse.brandeburg@intel.com>
	Tested-by: Gurucharan G <gurucharanx.g@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 1c96c16858bacb8e77a506b9493a8e4e517b669b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_txrx.c
diff --cc drivers/net/ethernet/intel/ice/ice_txrx.c
index e5df1bd0ba89,12a2edd13877..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_txrx.c
+++ b/drivers/net/ethernet/intel/ice/ice_txrx.c
@@@ -309,8 -307,7 +309,12 @@@ static bool ice_clean_tx_irq(struct ice
  	if (ice_ring_is_xdp(tx_ring))
  		return !!budget;
  
++<<<<<<< HEAD
 +	netdev_tx_completed_queue(txring_txq(tx_ring), total_pkts,
 +				  total_bytes);
++=======
+ 	netdev_tx_completed_queue(txring_txq(tx_ring), total_pkts, total_bytes);
++>>>>>>> 1c96c16858ba (ice: update to newer kernel API)
  
  #define TX_WAKE_THRESHOLD ((s16)(DESC_NEEDED * 2))
  	if (unlikely(total_pkts && netif_carrier_ok(tx_ring->netdev) &&
* Unmerged path drivers/net/ethernet/intel/ice/ice_txrx.c
