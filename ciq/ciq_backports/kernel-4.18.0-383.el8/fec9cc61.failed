perf: Add mem_hops field in perf_mem_data_src structure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Kajol Jain <kjain@linux.ibm.com>
commit fec9cc6175d0ec1e13efe12be491d9bd4de62f80
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/fec9cc61.failed

Going forward, future generation systems can have more hierarchy
within the node/package level but currently we don't have any data source
encoding field in perf, which can be used to represent this level of data.

Add a new field called 'mem_hops' in the perf_mem_data_src structure
which can be used to represent intra-node/package or inter-node/off-package
details. This field is of size 3 bits where PERF_MEM_HOPS_{NA, 0..6} value
can be used to present different hop levels data.

Also add corresponding macros to define mem_hop field values
and shift value.

Currently we define macro for HOPS_0 which corresponds
to data coming from another core but same node.

For ex: Encodings for mem_hops fields with L2 cache:

L2			- local L2
L2 | REMOTE | HOPS_0	- remote core, same node L2

	Signed-off-by: Kajol Jain <kjain@linux.ibm.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lore.kernel.org/r/20211006140654.298352-3-kjain@linux.ibm.com
(cherry picked from commit fec9cc6175d0ec1e13efe12be491d9bd4de62f80)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/uapi/linux/perf_event.h
diff --cc include/uapi/linux/perf_event.h
index bbe7b7e5f28c,bd8860eeb291..000000000000
--- a/include/uapi/linux/perf_event.h
+++ b/include/uapi/linux/perf_event.h
@@@ -1203,24 -1224,18 +1203,34 @@@ union perf_mem_data_src 
  			mem_lvl_num:4,	/* memory hierarchy level number */
  			mem_remote:1,   /* remote */
  			mem_snoopx:2,	/* snoop mode, ext */
 +#ifndef __GENKSYMS__
  			mem_blk:3,	/* access blocked */
++<<<<<<< HEAD
 +			mem_rsvd:21;
 +#else
 +			mem_rsvd:24;
 +#endif /* __GENKSYMS__ */
++=======
+ 			mem_hops:3,	/* hop level */
+ 			mem_rsvd:18;
++>>>>>>> fec9cc6175d0 (perf: Add mem_hops field in perf_mem_data_src structure)
  	};
  };
  #elif defined(__BIG_ENDIAN_BITFIELD)
  union perf_mem_data_src {
  	__u64 val;
  	struct {
++<<<<<<< HEAD
 +#ifndef __GENKSYMS__
 +		__u64	mem_rsvd:21,
++=======
+ 		__u64	mem_rsvd:18,
+ 			mem_hops:3,	/* hop level */
++>>>>>>> fec9cc6175d0 (perf: Add mem_hops field in perf_mem_data_src structure)
  			mem_blk:3,	/* access blocked */
 +#else
 +		__u64	mem_rsvd:24,
 +#endif /* __GENKSYMS__ */
  			mem_snoopx:2,	/* snoop mode, ext */
  			mem_remote:1,   /* remote */
  			mem_lvl_num:4,	/* memory hierarchy level number */
* Unmerged path include/uapi/linux/perf_event.h
