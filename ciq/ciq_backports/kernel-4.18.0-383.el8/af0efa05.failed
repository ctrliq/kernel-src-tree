libbpf: Restore errno return for functions that were already returning it

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-383.el8
commit-author Toke Høiland-Jørgensen <toke@redhat.com>
commit af0efa050caa66e8f304c42c94c76cb6c480cb7e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-383.el8/af0efa05.failed

The update to streamline libbpf error reporting intended to change all
functions to return the errno as a negative return value if
LIBBPF_STRICT_DIRECT_ERRS is set. However, if the flag is *not* set, the
return value changes for the two functions that were already returning a
negative errno unconditionally: bpf_link__unpin() and perf_buffer__poll().

This is a user-visible API change that breaks applications; so let's revert
these two functions back to unconditionally returning a negative errno
value.

Fixes: e9fc3ce99b34 ("libbpf: Streamline error reporting for high-level APIs")
	Signed-off-by: Toke Høiland-Jørgensen <toke@redhat.com>
	Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/20210706122355.236082-1-toke@redhat.com
(cherry picked from commit af0efa050caa66e8f304c42c94c76cb6c480cb7e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/lib/bpf/libbpf.c
diff --cc tools/lib/bpf/libbpf.c
index e73626d91fd3,6f5e2757bb3c..000000000000
--- a/tools/lib/bpf/libbpf.c
+++ b/tools/lib/bpf/libbpf.c
@@@ -11019,6 -11196,9 +11019,12 @@@ int perf_buffer__poll(struct perf_buffe
  	int i, cnt, err;
  
  	cnt = epoll_wait(pb->epoll_fd, pb->events, pb->cpu_cnt, timeout_ms);
++<<<<<<< HEAD
++=======
+ 	if (cnt < 0)
+ 		return -errno;
+ 
++>>>>>>> af0efa050caa (libbpf: Restore errno return for functions that were already returning it)
  	for (i = 0; i < cnt; i++) {
  		struct perf_cpu_buf *cpu_buf = pb->events[i].data.ptr;
  
* Unmerged path tools/lib/bpf/libbpf.c
