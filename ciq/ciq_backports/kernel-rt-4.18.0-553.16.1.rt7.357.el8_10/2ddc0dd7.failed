net/smc: fix neighbour and rtable leak in smc_ib_find_route()

jira LE-1907
cve CVE-2024-36945
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Wen Gu <guwen@linux.alibaba.com>
commit 2ddc0dd7fec86ee53b8928a5cca5fbddd4fc7c06
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/2ddc0dd7.failed

In smc_ib_find_route(), the neighbour found by neigh_lookup() and rtable
resolved by ip_route_output_flow() are not released or put before return.
It may cause the refcount leak, so fix it.

Link: https://lore.kernel.org/r/20240506015439.108739-1-guwen@linux.alibaba.com
Fixes: e5c4744cfb59 ("net/smc: add SMC-Rv2 connection establishment")
	Signed-off-by: Wen Gu <guwen@linux.alibaba.com>
Link: https://lore.kernel.org/r/20240507125331.2808-1-guwen@linux.alibaba.com
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
(cherry picked from commit 2ddc0dd7fec86ee53b8928a5cca5fbddd4fc7c06)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/smc/smc_ib.c
diff --cc net/smc/smc_ib.c
index def539847922,9297dc20bfe2..000000000000
--- a/net/smc/smc_ib.c
+++ b/net/smc/smc_ib.c
@@@ -208,17 -205,22 +208,33 @@@ int smc_ib_find_route(__be32 saddr, __b
  
  	if (daddr == cpu_to_be32(INADDR_NONE))
  		goto out;
 -	rt = ip_route_output_flow(net, &fl4, NULL);
 +	rt = ip_route_output_flow(&init_net, &fl4, NULL);
  	if (IS_ERR(rt))
  		goto out;
++<<<<<<< HEAD
 +	if (rt->rt_uses_gateway && !rt->rt_gateway)
 +		goto out;
 +	neigh = rt->dst.ops->neigh_lookup(&rt->dst, NULL, &fl4.daddr);
 +	if (neigh) {
 +		memcpy(nexthop_mac, neigh->ha, ETH_ALEN);
 +		*uses_gateway = rt->rt_uses_gateway;
 +		return 0;
 +	}
++=======
+ 	if (rt->rt_uses_gateway && rt->rt_gw_family != AF_INET)
+ 		goto out_rt;
+ 	neigh = dst_neigh_lookup(&rt->dst, &fl4.daddr);
+ 	if (!neigh)
+ 		goto out_rt;
+ 	memcpy(nexthop_mac, neigh->ha, ETH_ALEN);
+ 	*uses_gateway = rt->rt_uses_gateway;
+ 	neigh_release(neigh);
+ 	ip_rt_put(rt);
+ 	return 0;
+ 
+ out_rt:
+ 	ip_rt_put(rt);
++>>>>>>> 2ddc0dd7fec8 (net/smc: fix neighbour and rtable leak in smc_ib_find_route())
  out:
  	return -ENOENT;
  }
* Unmerged path net/smc/smc_ib.c
