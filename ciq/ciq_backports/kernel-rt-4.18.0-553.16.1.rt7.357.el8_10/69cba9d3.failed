cifs: fix mid leak during reconnection after timeout threshold

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Shyam Prasad N <nspmangalore@gmail.com>
commit 69cba9d3c1284e0838ae408830a02c4a063104bc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/69cba9d3.failed

When the number of responses with status of STATUS_IO_TIMEOUT
exceeds a specified threshold (NUM_STATUS_IO_TIMEOUT), we reconnect
the connection. But we do not return the mid, or the credits
returned for the mid, or reduce the number of in-flight requests.

This bug could result in the server->in_flight count to go bad,
and also cause a leak in the mids.

This change moves the check to a few lines below where the
response is decrypted, even of the response is read from the
transform header. This way, the code for returning the mids
can be reused.

Also, the cifs_reconnect was reconnecting just the transport
connection before. In case of multi-channel, this may not be
what we want to do after several timeouts. Changed that to
reconnect the session and the tree too.

Also renamed NUM_STATUS_IO_TIMEOUT to a more appropriate name
MAX_STATUS_IO_TIMEOUT.

Fixes: 8e670f77c4a5 ("Handle STATUS_IO_TIMEOUT gracefully")
	Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 69cba9d3c1284e0838ae408830a02c4a063104bc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/connect.c
diff --cc fs/cifs/connect.c
index aa9cfe874feb,9280e253bf09..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -1027,10 -1216,13 +1030,18 @@@ next_pdu
  		if (server->ops->is_status_io_timeout &&
  		    server->ops->is_status_io_timeout(buf)) {
  			num_io_timeout++;
++<<<<<<< HEAD:fs/cifs/connect.c
 +			if (num_io_timeout > NUM_STATUS_IO_TIMEOUT) {
 +				cifs_reconnect(server);
++=======
+ 			if (num_io_timeout > MAX_STATUS_IO_TIMEOUT) {
+ 				cifs_server_dbg(VFS,
+ 						"Number of request timeouts exceeded %d. Reconnecting",
+ 						MAX_STATUS_IO_TIMEOUT);
+ 
+ 				pending_reconnect = true;
++>>>>>>> 69cba9d3c128 (cifs: fix mid leak during reconnection after timeout threshold):fs/smb/client/connect.c
  				num_io_timeout = 0;
- 				continue;
  			}
  		}
  
* Unmerged path fs/cifs/connect.c
