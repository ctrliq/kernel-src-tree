perf record: Introduce thread specific data array

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Alexey Bayduraev <alexey.v.bayduraev@linux.intel.com>
commit 415ccb58f68a6bebcbb9db373973394a6af3d553
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/415ccb58.failed

Introduce thread specific data object and array of such objects
to store and manage thread local data. Implement functions to
allocate, initialize, finalize and release thread specific data.

Thread local maps and overwrite_maps arrays keep pointers to
mmap buffer objects to serve according to maps thread mask.
Thread local pollfd array keeps event fds connected to mmaps
buffers according to maps thread mask.

Thread control commands are delivered via thread local comm pipes
and ctlfd_pos fd. External control commands (--control option)
are delivered via evlist ctlfd_pos fd and handled by the main
tool thread.

	Reviewed-by: Riccardo Mancini <rickyman7@gmail.com>
	Signed-off-by: Alexey Bayduraev <alexey.v.bayduraev@linux.intel.com>
	Tested-by: Jiri Olsa <jolsa@kernel.org>
	Tested-by: Riccardo Mancini <rickyman7@gmail.com>
	Acked-by: Namhyung Kim <namhyung@gmail.com>
	Cc: Adrian Hunter <adrian.hunter@intel.com>
	Cc: Alexander Antonov <alexander.antonov@linux.intel.com>
	Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
	Cc: Alexei Budankov <abudankov@huawei.com>
	Cc: Andi Kleen <ak@linux.intel.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Namhyung Kim <namhyung@kernel.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
Link: https://lore.kernel.org/r/fc9f74af6f822d9c0fa0e145c3564a760dbe3d4b.1642440724.git.alexey.v.bayduraev@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 415ccb58f68a6bebcbb9db373973394a6af3d553)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-record.c
diff --cc tools/perf/builtin-record.c
index a12318efae5a,0d4a34c66274..000000000000
--- a/tools/perf/builtin-record.c
+++ b/tools/perf/builtin-record.c
@@@ -87,6 -90,26 +90,29 @@@ struct switch_output 
  	int		 cur_file;
  };
  
++<<<<<<< HEAD
++=======
+ struct thread_mask {
+ 	struct mmap_cpu_mask	maps;
+ 	struct mmap_cpu_mask	affinity;
+ };
+ 
+ struct record_thread {
+ 	pid_t			tid;
+ 	struct thread_mask	*mask;
+ 	struct {
+ 		int		msg[2];
+ 		int		ack[2];
+ 	} pipes;
+ 	struct fdarray		pollfd;
+ 	int			ctlfd_pos;
+ 	int			nr_mmaps;
+ 	struct mmap		**maps;
+ 	struct mmap		**overwrite_maps;
+ 	struct record		*rec;
+ };
+ 
++>>>>>>> 415ccb58f68a (perf record: Introduce thread specific data array)
  struct record {
  	struct perf_tool	tool;
  	struct record_opts	opts;
@@@ -111,6 -134,10 +137,13 @@@
  	unsigned long long	samples;
  	struct mmap_cpu_mask	affinity_mask;
  	unsigned long		output_max_size;	/* = 0: unlimited */
++<<<<<<< HEAD
++=======
+ 	struct perf_debuginfod	debuginfod;
+ 	int			nr_threads;
+ 	struct thread_mask	*thread_masks;
+ 	struct record_thread	*thread_data;
++>>>>>>> 415ccb58f68a (perf record: Introduce thread specific data array)
  };
  
  static volatile int done;
* Unmerged path tools/perf/builtin-record.c
