cppc_cpufreq: Fix possible null pointer dereference

jira LE-1907
cve CVE-2024-38573
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Aleksandr Mishin <amishin@t-argos.ru>
commit cf7de25878a1f4508c69dc9f6819c21ba177dbfe
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/cf7de258.failed

cppc_cpufreq_get_rate() and hisi_cppc_cpufreq_get_rate() can be called from
different places with various parameters. So cpufreq_cpu_get() can return
null as 'policy' in some circumstances.
Fix this bug by adding null return check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.

Fixes: a28b2bfc099c ("cppc_cpufreq: replace per-cpu data array with a list")
	Signed-off-by: Aleksandr Mishin <amishin@t-argos.ru>
	Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
(cherry picked from commit cf7de25878a1f4508c69dc9f6819c21ba177dbfe)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpufreq/cppc_cpufreq.c
diff --cc drivers/cpufreq/cppc_cpufreq.c
index 4ff554c7f070,15f1d41920a3..000000000000
--- a/drivers/cpufreq/cppc_cpufreq.c
+++ b/drivers/cpufreq/cppc_cpufreq.c
@@@ -429,9 -741,15 +429,19 @@@ static unsigned int cppc_cpufreq_get_ra
  {
  	struct cppc_perf_fb_ctrs fb_ctrs_t0 = {0}, fb_ctrs_t1 = {0};
  	struct cpufreq_policy *policy = cpufreq_cpu_get(cpu);
++<<<<<<< HEAD
 +	struct cppc_cpudata *cpu_data = policy->driver_data;
++=======
+ 	struct cppc_cpudata *cpu_data;
+ 	u64 delivered_perf;
++>>>>>>> cf7de25878a1 (cppc_cpufreq: Fix possible null pointer dereference)
  	int ret;
  
+ 	if (!policy)
+ 		return -ENODEV;
+ 
+ 	cpu_data = policy->driver_data;
+ 
  	cpufreq_cpu_put(policy);
  
  	ret = cppc_get_perf_ctrs(cpu, &fb_ctrs_t0);
* Unmerged path drivers/cpufreq/cppc_cpufreq.c
