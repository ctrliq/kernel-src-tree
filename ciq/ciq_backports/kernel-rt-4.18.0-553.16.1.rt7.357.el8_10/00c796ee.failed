cifs: remove check of list iterator against head past the loop body

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Jakob Koschel <jakobkoschel@gmail.com>
commit 00c796eecba4898194ea549679797ee28f89a92f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/00c796ee.failed

When list_for_each_entry() completes the iteration over the whole list
without breaking the loop, the iterator value will be a bogus pointer
computed based on the head element.

While it is safe to use the pointer to determine if it was computed
based on the head element, either with list_entry_is_head() or
&pos->member == head, using the iterator variable after the loop should
be avoided.

In preparation to limit the scope of a list iterator to the list
traversal loop, use a dedicated pointer to point to the found element [1].

Link: https://lore.kernel.org/all/CAHk-=wgRr_D8CB-D9Kg-c=EHreAsk5SqXPwr9Y7k9sA6cWXJ6w@mail.gmail.com/ [1]
	Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Jakob Koschel <jakobkoschel@gmail.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 00c796eecba4898194ea549679797ee28f89a92f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2misc.c
diff --cc fs/cifs/smb2misc.c
index f3aaa2e43ec2,3fe47a88f47d..000000000000
--- a/fs/cifs/smb2misc.c
+++ b/fs/cifs/smb2misc.c
@@@ -166,13 -154,14 +167,19 @@@ smb2_check_message(char *buf, unsigned 
  
  		/* decrypt frame now that it is completely read in */
  		spin_lock(&cifs_tcp_ses_lock);
++<<<<<<< HEAD
 +		list_for_each_entry(ses, &srvr->smb_ses_list, smb_ses_list) {
 +			if (ses->Suid == thdr->SessionId)
++=======
+ 		list_for_each_entry(iter, &srvr->smb_ses_list, smb_ses_list) {
+ 			if (iter->Suid == le64_to_cpu(thdr->SessionId)) {
+ 				ses = iter;
++>>>>>>> 00c796eecba4 (cifs: remove check of list iterator against head past the loop body)
  				break;
+ 			}
  		}
  		spin_unlock(&cifs_tcp_ses_lock);
- 		if (list_entry_is_head(ses, &srvr->smb_ses_list,
- 				       smb_ses_list)) {
+ 		if (!ses) {
  			cifs_dbg(VFS, "no decryption - session id not found\n");
  			return 1;
  		}
* Unmerged path fs/cifs/smb2misc.c
