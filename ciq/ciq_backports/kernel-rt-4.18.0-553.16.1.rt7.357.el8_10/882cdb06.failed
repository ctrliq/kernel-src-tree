x86/cpu: Fix Gracemont uarch

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Peter Zijlstra <peterz@infradead.org>
commit 882cdb06b668488a42ef717a260c05ba7dc43a49
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/882cdb06.failed

Alderlake N is an E-core only product using Gracemont
micro-architecture. It fits the pre-existing naming scheme perfectly
fine, adhere to it.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
Link: https://lore.kernel.org/r/20230807150405.686834933@infradead.org
(cherry picked from commit 882cdb06b668488a42ef717a260c05ba7dc43a49)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/events/rapl.c
#	arch/x86/include/asm/intel-family.h
#	arch/x86/kernel/cpu/intel_epb.c
#	drivers/platform/x86/intel/pmc/core.c
#	drivers/powercap/intel_rapl_msr.c
#	drivers/thermal/intel/intel_tcc_cooling.c
diff --cc arch/x86/events/rapl.c
index 3ac57eb95655,1579429846cc..000000000000
--- a/arch/x86/events/rapl.c
+++ b/arch/x86/events/rapl.c
@@@ -799,8 -800,11 +799,12 @@@ static const struct x86_cpu_id rapl_mod
  	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_X,		&model_hsx),
  	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE_L,		&model_skl),
  	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE,		&model_skl),
 -	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE_L,		&model_skl),
 -	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE,		&model_skl),
  	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&model_skl),
  	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&model_skl),
++<<<<<<< HEAD
++=======
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	&model_skl),
++>>>>>>> 882cdb06b668 (x86/cpu: Fix Gracemont uarch)
  	X86_MATCH_INTEL_FAM6_MODEL(SAPPHIRERAPIDS_X,	&model_spr),
  	X86_MATCH_INTEL_FAM6_MODEL(EMERALDRAPIDS_X,	&model_spr),
  	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		&model_skl),
diff --cc arch/x86/include/asm/intel-family.h
index 56f4cffef12e,40413262b4cc..000000000000
--- a/arch/x86/include/asm/intel-family.h
+++ b/arch/x86/include/asm/intel-family.h
@@@ -104,9 -112,8 +104,14 @@@
  #define INTEL_FAM6_GRANITERAPIDS_X	0xAD
  #define INTEL_FAM6_GRANITERAPIDS_D	0xAE
  
++<<<<<<< HEAD
 +#define INTEL_FAM6_ALDERLAKE		0x97
 +#define INTEL_FAM6_ALDERLAKE_L		0x9A
 +#define INTEL_FAM6_ALDERLAKE_N		0xBE
++=======
+ #define INTEL_FAM6_ALDERLAKE		0x97	/* Golden Cove / Gracemont */
+ #define INTEL_FAM6_ALDERLAKE_L		0x9A	/* Golden Cove / Gracemont */
++>>>>>>> 882cdb06b668 (x86/cpu: Fix Gracemont uarch)
  
  #define INTEL_FAM6_RAPTORLAKE		0xB7
  #define INTEL_FAM6_RAPTORLAKE_P		0xBA
diff --cc arch/x86/kernel/cpu/intel_epb.c
index fd156bda79f3,e4c3ba91321c..000000000000
--- a/arch/x86/kernel/cpu/intel_epb.c
+++ b/arch/x86/kernel/cpu/intel_epb.c
@@@ -204,7 -204,12 +204,16 @@@ static int intel_epb_offline(unsigned i
  }
  
  static const struct x86_cpu_id intel_epb_normal[] = {
++<<<<<<< HEAD
 +	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L, 7),
++=======
+ 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,
+ 				   ENERGY_PERF_BIAS_NORMAL_POWERSAVE),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,
+ 				   ENERGY_PERF_BIAS_NORMAL_POWERSAVE),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,
+ 				   ENERGY_PERF_BIAS_NORMAL_POWERSAVE),
++>>>>>>> 882cdb06b668 (x86/cpu: Fix Gracemont uarch)
  	{}
  };
  
diff --cc drivers/platform/x86/intel/pmc/core.c
index 02b7374185b6,84c175b9721a..000000000000
--- a/drivers/platform/x86/intel/pmc/core.c
+++ b/drivers/platform/x86/intel/pmc/core.c
@@@ -1926,28 -1108,27 +1926,52 @@@ static void pmc_core_dbgfs_register(str
  }
  
  static const struct x86_cpu_id intel_pmc_core_ids[] = {
++<<<<<<< HEAD
 +	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE_L,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE_L,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE,		&spt_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(CANNONLAKE_L,	&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_L,		&icl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_NNPI,	&icl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE,		&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE_L,		&cnp_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE_L,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT,	&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_L,	&icl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_N,		&tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&adl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,        &tgl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		&adl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_S,	&adl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE,          &mtl_reg_map),
 +	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE_L,	&mtl_reg_map),
++=======
+ 	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE_L,		spt_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(SKYLAKE,		spt_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE_L,		spt_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(KABYLAKE,		spt_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(CANNONLAKE_L,	cnp_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_L,		icl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_NNPI,	icl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE,		cnp_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(COMETLAKE_L,		cnp_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE_L,		tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE,		tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT,	tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_L,	icl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		adl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,        tgl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		adl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_S,	adl_core_init),
+ 	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE_L,	mtl_core_init),
++>>>>>>> 882cdb06b668 (x86/cpu: Fix Gracemont uarch)
  	{}
  };
  
diff --cc drivers/powercap/intel_rapl_msr.c
index b3aac27ac3fb,1e775b0db211..000000000000
--- a/drivers/powercap/intel_rapl_msr.c
+++ b/drivers/powercap/intel_rapl_msr.c
@@@ -134,8 -136,22 +134,24 @@@ static int rapl_msr_write_raw(int cpu, 
  	return ra->err;
  }
  
++<<<<<<< HEAD
++=======
+ /* List of verified CPUs. */
+ static const struct x86_cpu_id pl4_support_ids[] = {
+ 	X86_MATCH_INTEL_FAM6_MODEL(TIGERLAKE_L, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE, NULL),
+ 	X86_MATCH_INTEL_FAM6_MODEL(METEORLAKE_L, NULL),
+ 	{}
+ };
+ 
++>>>>>>> 882cdb06b668 (x86/cpu: Fix Gracemont uarch)
  static int rapl_msr_probe(struct platform_device *pdev)
  {
 -	const struct x86_cpu_id *id = x86_match_cpu(pl4_support_ids);
  	int ret;
  
  	switch (boot_cpu_data.x86_vendor) {
* Unmerged path drivers/thermal/intel/intel_tcc_cooling.c
diff --git a/arch/x86/events/intel/core.c b/arch/x86/events/intel/core.c
index 044479712b57..be86ac6cd72e 100644
--- a/arch/x86/events/intel/core.c
+++ b/arch/x86/events/intel/core.c
@@ -5987,7 +5987,7 @@ __init int intel_pmu_init(void)
 		name = "Tremont";
 		break;
 
-	case INTEL_FAM6_ALDERLAKE_N:
+	case INTEL_FAM6_ATOM_GRACEMONT:
 		x86_pmu.mid_ack = true;
 		memcpy(hw_cache_event_ids, glp_hw_cache_event_ids,
 		       sizeof(hw_cache_event_ids));
diff --git a/arch/x86/events/intel/cstate.c b/arch/x86/events/intel/cstate.c
index 551741e79e03..f16752881e6e 100644
--- a/arch/x86/events/intel/cstate.c
+++ b/arch/x86/events/intel/cstate.c
@@ -671,6 +671,7 @@ static const struct x86_cpu_id intel_cstates_match[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_D,	&glm_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT,	&glm_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_L,	&glm_cstates),
+	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	&adl_cstates),
 
 	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_L,		&icl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE,		&icl_cstates),
@@ -684,7 +685,6 @@ static const struct x86_cpu_id intel_cstates_match[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&icl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&adl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&adl_cstates),
-	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_N,		&adl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		&adl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,	&adl_cstates),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_S,	&adl_cstates),
diff --git a/arch/x86/events/intel/uncore.c b/arch/x86/events/intel/uncore.c
index 3f4d28d9a936..6c808c61b93a 100644
--- a/arch/x86/events/intel/uncore.c
+++ b/arch/x86/events/intel/uncore.c
@@ -1857,7 +1857,6 @@ static const struct x86_cpu_id intel_uncore_match[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&rkl_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&adl_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&adl_uncore_init),
-	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_N,		&adl_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		&adl_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,	&adl_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_S,	&adl_uncore_init),
@@ -1866,6 +1865,7 @@ static const struct x86_cpu_id intel_uncore_match[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(SAPPHIRERAPIDS_X,	&spr_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(EMERALDRAPIDS_X,	&spr_uncore_init),
 	X86_MATCH_INTEL_FAM6_MODEL(ATOM_TREMONT_D,	&snr_uncore_init),
+	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	&adl_uncore_init),
 	{},
 };
 MODULE_DEVICE_TABLE(x86cpu, intel_uncore_match);
diff --git a/arch/x86/events/msr.c b/arch/x86/events/msr.c
index c65d8906cbcf..2b0bab696af7 100644
--- a/arch/x86/events/msr.c
+++ b/arch/x86/events/msr.c
@@ -104,7 +104,7 @@ static bool test_intel(int idx, void *data)
 	case INTEL_FAM6_ROCKETLAKE:
 	case INTEL_FAM6_ALDERLAKE:
 	case INTEL_FAM6_ALDERLAKE_L:
-	case INTEL_FAM6_ALDERLAKE_N:
+	case INTEL_FAM6_ATOM_GRACEMONT:
 	case INTEL_FAM6_RAPTORLAKE:
 	case INTEL_FAM6_RAPTORLAKE_P:
 	case INTEL_FAM6_RAPTORLAKE_S:
* Unmerged path arch/x86/events/rapl.c
* Unmerged path arch/x86/include/asm/intel-family.h
* Unmerged path arch/x86/kernel/cpu/intel_epb.c
diff --git a/arch/x86/mm/init.c b/arch/x86/mm/init.c
index 44ab4c0e1c5c..f6b2e15da5c7 100644
--- a/arch/x86/mm/init.c
+++ b/arch/x86/mm/init.c
@@ -215,7 +215,7 @@ static void __init probe_page_size_mask(void)
 static const struct x86_cpu_id invlpg_miss_ids[] = {
 	INTEL_MATCH(INTEL_FAM6_ALDERLAKE   ),
 	INTEL_MATCH(INTEL_FAM6_ALDERLAKE_L ),
-	INTEL_MATCH(INTEL_FAM6_ALDERLAKE_N ),
+	INTEL_MATCH(INTEL_FAM6_ATOM_GRACEMONT ),
 	INTEL_MATCH(INTEL_FAM6_RAPTORLAKE  ),
 	INTEL_MATCH(INTEL_FAM6_RAPTORLAKE_P),
 	INTEL_MATCH(INTEL_FAM6_RAPTORLAKE_S),
diff --git a/drivers/idle/intel_idle.c b/drivers/idle/intel_idle.c
index 0631d5c19236..f658515f9334 100644
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@ -928,7 +928,7 @@ static struct cpuidle_state adl_l_cstates[] __initdata = {
 		.enter = NULL }
 };
 
-static struct cpuidle_state adl_n_cstates[] __initdata = {
+static struct cpuidle_state gmt_cstates[] __initdata = {
 	{
 		.name = "C1",
 		.desc = "MWAIT 0x00",
@@ -1354,8 +1354,8 @@ static const struct idle_cpu idle_cpu_adl_l __initconst = {
 	.state_table = adl_l_cstates,
 };
 
-static const struct idle_cpu idle_cpu_adl_n __initconst = {
-	.state_table = adl_n_cstates,
+static const struct idle_cpu idle_cpu_gmt __initconst = {
+	.state_table = gmt_cstates,
 };
 
 static const struct idle_cpu idle_cpu_spr __initconst = {
@@ -1428,7 +1428,7 @@ static const struct x86_cpu_id intel_idle_ids[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(ICELAKE_D,		&idle_cpu_icx),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&idle_cpu_adl),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&idle_cpu_adl_l),
-	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_N,		&idle_cpu_adl_n),
+	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	&idle_cpu_gmt),
 	X86_MATCH_INTEL_FAM6_MODEL(SAPPHIRERAPIDS_X,	&idle_cpu_spr),
 	X86_MATCH_INTEL_FAM6_MODEL(EMERALDRAPIDS_X,	&idle_cpu_spr),
 	X86_MATCH_INTEL_FAM6_MODEL(XEON_PHI_KNL,	&idle_cpu_knl),
@@ -1868,7 +1868,7 @@ static void __init intel_idle_init_cstates_icpu(struct cpuidle_driver *drv)
 		break;
 	case INTEL_FAM6_ALDERLAKE:
 	case INTEL_FAM6_ALDERLAKE_L:
-	case INTEL_FAM6_ALDERLAKE_N:
+	case INTEL_FAM6_ATOM_GRACEMONT:
 		adl_idle_state_table_update();
 		break;
 	}
* Unmerged path drivers/platform/x86/intel/pmc/core.c
diff --git a/drivers/powercap/intel_rapl_common.c b/drivers/powercap/intel_rapl_common.c
index 5574a098ec8f..eef015fb82ee 100644
--- a/drivers/powercap/intel_rapl_common.c
+++ b/drivers/powercap/intel_rapl_common.c
@@ -1083,7 +1083,7 @@ static const struct x86_cpu_id rapl_ids[] __initconst = {
 	X86_MATCH_INTEL_FAM6_MODEL(ROCKETLAKE,		&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE,		&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_L,		&rapl_defaults_core),
-	X86_MATCH_INTEL_FAM6_MODEL(ALDERLAKE_N,		&rapl_defaults_core),
+	X86_MATCH_INTEL_FAM6_MODEL(ATOM_GRACEMONT,	&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE,		&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_S,	&rapl_defaults_core),
 	X86_MATCH_INTEL_FAM6_MODEL(RAPTORLAKE_P,        &rapl_defaults_core),
* Unmerged path drivers/powercap/intel_rapl_msr.c
* Unmerged path drivers/thermal/intel/intel_tcc_cooling.c
diff --git a/tools/power/x86/turbostat/turbostat.c b/tools/power/x86/turbostat/turbostat.c
index 341bde3b9878..e9210f21a7f1 100644
--- a/tools/power/x86/turbostat/turbostat.c
+++ b/tools/power/x86/turbostat/turbostat.c
@@ -5490,7 +5490,7 @@ unsigned int intel_model_duplicates(unsigned int model)
 	case INTEL_FAM6_LAKEFIELD:
 	case INTEL_FAM6_ALDERLAKE:
 	case INTEL_FAM6_ALDERLAKE_L:
-	case INTEL_FAM6_ALDERLAKE_N:
+	case INTEL_FAM6_ATOM_GRACEMONT:
 	case INTEL_FAM6_RAPTORLAKE:
 	case INTEL_FAM6_RAPTORLAKE_P:
 	case INTEL_FAM6_RAPTORLAKE_S:
