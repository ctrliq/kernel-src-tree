powerpc/64: Fix the definition of the fixmap area

jira LE-1907
cve CVE-2021-47018
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Christophe Leroy <christophe.leroy@csgroup.eu>
commit 9ccba66d4d2aff9a3909aa77d57ea8b7cc166f3c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/9ccba66d.failed

At the time being, the fixmap area is defined at the top of
the address space or just below KASAN.

This definition is not valid for PPC64.

For PPC64, use the top of the I/O space.

Because of circular dependencies, it is not possible to include
asm/fixmap.h in asm/book3s/64/pgtable.h , so define a fixed size
AREA at the top of the I/O space for fixmap and ensure during
build that the size is big enough.

Fixes: 265c3491c4bc ("powerpc: Add support for GENERIC_EARLY_IOREMAP")
	Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
	Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
Link: https://lore.kernel.org/r/0d51620eacf036d683d1a3c41328f69adb601dc0.1618925560.git.christophe.leroy@csgroup.eu

(cherry picked from commit 9ccba66d4d2aff9a3909aa77d57ea8b7cc166f3c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/powerpc/include/asm/book3s/64/pgtable.h
#	arch/powerpc/include/asm/fixmap.h
#	arch/powerpc/include/asm/nohash/64/pgtable.h
diff --cc arch/powerpc/include/asm/book3s/64/pgtable.h
index f0de9261e117,a666d561b44d..000000000000
--- a/arch/powerpc/include/asm/book3s/64/pgtable.h
+++ b/arch/powerpc/include/asm/book3s/64/pgtable.h
@@@ -347,7 -324,9 +348,13 @@@ extern unsigned long pci_io_base
  #define  PHB_IO_BASE	(ISA_IO_END)
  #define  PHB_IO_END	(KERN_IO_START + FULL_IO_SIZE)
  #define IOREMAP_BASE	(PHB_IO_END)
++<<<<<<< HEAD
 +#define IOREMAP_END	(KERN_IO_END)
++=======
+ #define IOREMAP_START	(ioremap_bot)
+ #define IOREMAP_END	(KERN_IO_END - FIXADDR_SIZE)
+ #define FIXADDR_SIZE	SZ_32M
++>>>>>>> 9ccba66d4d2a (powerpc/64: Fix the definition of the fixmap area)
  
  /* Advertise special mapping type for AGP */
  #define HAVE_PAGE_AGP
diff --cc arch/powerpc/include/asm/fixmap.h
index 9c7927a7c5c4,947b5b9c4424..000000000000
--- a/arch/powerpc/include/asm/fixmap.h
+++ b/arch/powerpc/include/asm/fixmap.h
@@@ -23,7 -23,17 +23,21 @@@
  #include <asm/kmap_size.h>
  #endif
  
++<<<<<<< HEAD
 +#define FIXADDR_TOP	((unsigned long)(-PAGE_SIZE))
++=======
+ #ifdef CONFIG_PPC64
+ #define FIXADDR_TOP	(IOREMAP_END + FIXADDR_SIZE)
+ #else
+ #define FIXADDR_SIZE	0
+ #ifdef CONFIG_KASAN
+ #include <asm/kasan.h>
+ #define FIXADDR_TOP	(KASAN_SHADOW_START - PAGE_SIZE)
+ #else
+ #define FIXADDR_TOP	((unsigned long)(-PAGE_SIZE))
+ #endif
+ #endif
++>>>>>>> 9ccba66d4d2a (powerpc/64: Fix the definition of the fixmap area)
  
  /*
   * Here we define all the compile-time 'special' virtual
@@@ -45,9 -55,10 +59,10 @@@
   */
  enum fixed_addresses {
  	FIX_HOLE,
+ #ifdef CONFIG_PPC32
  	/* reserve the top 128K for early debugging purposes */
  	FIX_EARLY_DEBUG_TOP = FIX_HOLE,
 -	FIX_EARLY_DEBUG_BASE = FIX_EARLY_DEBUG_TOP+(ALIGN(SZ_128K, PAGE_SIZE)/PAGE_SIZE)-1,
 +	FIX_EARLY_DEBUG_BASE = FIX_EARLY_DEBUG_TOP+((128*1024)/PAGE_SIZE)-1,
  #ifdef CONFIG_HIGHMEM
  	FIX_KMAP_BEGIN,	/* reserved pte's for temporary kernel mappings */
  	FIX_KMAP_END = FIX_KMAP_BEGIN + (KM_MAX_IDX * NR_CPUS) - 1,
@@@ -58,8 -69,24 +73,20 @@@
  	FIX_IMMR_START,
  	FIX_IMMR_BASE = __ALIGN_MASK(FIX_IMMR_START, FIX_IMMR_SIZE - 1) - 1 +
  		       FIX_IMMR_SIZE,
 -#endif
 -#ifdef CONFIG_PPC_83xx
 -	/* For IMMR we need an aligned 2M area */
 -#define FIX_IMMR_SIZE	(SZ_2M / PAGE_SIZE)
 -	FIX_IMMR_START,
 -	FIX_IMMR_BASE = __ALIGN_MASK(FIX_IMMR_START, FIX_IMMR_SIZE - 1) - 1 +
 -		       FIX_IMMR_SIZE,
  #endif
  	/* FIX_PCIE_MCFG, */
++<<<<<<< HEAD
++=======
+ #endif /* CONFIG_PPC32 */
+ 	__end_of_permanent_fixed_addresses,
+ 
+ #define NR_FIX_BTMAPS		(SZ_256K / PAGE_SIZE)
+ #define FIX_BTMAPS_SLOTS	16
+ #define TOTAL_FIX_BTMAPS	(NR_FIX_BTMAPS * FIX_BTMAPS_SLOTS)
+ 
+ 	FIX_BTMAP_END = __end_of_permanent_fixed_addresses,
+ 	FIX_BTMAP_BEGIN = FIX_BTMAP_END + TOTAL_FIX_BTMAPS - 1,
++>>>>>>> 9ccba66d4d2a (powerpc/64: Fix the definition of the fixmap area)
  	__end_of_fixed_addresses
  };
  
@@@ -73,8 -105,17 +100,19 @@@
  static inline void __set_fixmap(enum fixed_addresses idx,
  				phys_addr_t phys, pgprot_t flags)
  {
++<<<<<<< HEAD
 +	map_kernel_page(fix_to_virt(idx), phys, flags);
++=======
+ 	BUILD_BUG_ON(IS_ENABLED(CONFIG_PPC64) && __FIXADDR_SIZE > FIXADDR_SIZE);
+ 
+ 	if (__builtin_constant_p(idx))
+ 		BUILD_BUG_ON(idx >= __end_of_fixed_addresses);
+ 	else if (WARN_ON(idx >= __end_of_fixed_addresses))
+ 		return;
+ 
+ 	map_kernel_page(__fix_to_virt(idx), phys, flags);
++>>>>>>> 9ccba66d4d2a (powerpc/64: Fix the definition of the fixmap area)
  }
  
 -#define __early_set_fixmap	__set_fixmap
 -
  #endif /* !__ASSEMBLY__ */
  #endif
diff --cc arch/powerpc/include/asm/nohash/64/pgtable.h
index 000f7255792a,57cd3892bfe0..000000000000
--- a/arch/powerpc/include/asm/nohash/64/pgtable.h
+++ b/arch/powerpc/include/asm/nohash/64/pgtable.h
@@@ -3,15 -3,14 +3,17 @@@
  #define _ASM_POWERPC_NOHASH_64_PGTABLE_H
  /*
   * This file contains the functions and defines necessary to modify and use
 - * the ppc64 non-hashed page table.
 + * the ppc64 hashed page table.
   */
  
+ #include <linux/sizes.h>
+ 
  #include <asm/nohash/64/pgtable-4k.h>
  #include <asm/barrier.h>
 -#include <asm/asm-const.h>
 +
 +#ifdef CONFIG_PPC_64K_PAGES
 +#error "Page size not supported"
 +#endif
  
  #define FIRST_USER_ADDRESS	0UL
  
@@@ -60,7 -55,9 +62,13 @@@
  #define  PHB_IO_BASE	(ISA_IO_END)
  #define  PHB_IO_END	(KERN_IO_START + FULL_IO_SIZE)
  #define IOREMAP_BASE	(PHB_IO_END)
++<<<<<<< HEAD
 +#define IOREMAP_END	(KERN_VIRT_START + KERN_VIRT_SIZE)
++=======
+ #define IOREMAP_START	(ioremap_bot)
+ #define IOREMAP_END	(KERN_VIRT_START + KERN_VIRT_SIZE - FIXADDR_SIZE)
+ #define FIXADDR_SIZE	SZ_32M
++>>>>>>> 9ccba66d4d2a (powerpc/64: Fix the definition of the fixmap area)
  
  
  /*
* Unmerged path arch/powerpc/include/asm/book3s/64/pgtable.h
* Unmerged path arch/powerpc/include/asm/fixmap.h
* Unmerged path arch/powerpc/include/asm/nohash/64/pgtable.h
