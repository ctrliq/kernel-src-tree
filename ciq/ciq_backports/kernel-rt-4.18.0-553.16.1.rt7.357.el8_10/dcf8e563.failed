tracing: Define the is_signed_type() macro once

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.16.1.rt7.357.el8_10
commit-author Bart Van Assche <bvanassche@acm.org>
commit dcf8e5633e2e69ad60b730ab5905608b756a032f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.16.1.rt7.357.el8_10/dcf8e563.failed

There are two definitions of the is_signed_type() macro: one in
<linux/overflow.h> and a second definition in <linux/trace_events.h>.

As suggested by Linus, move the definition of the is_signed_type() macro
into the <linux/compiler.h> header file.  Change the definition of the
is_signed_type() macro to make sure that it does not trigger any sparse
warnings with future versions of sparse for bitwise types.

Link: https://lore.kernel.org/all/CAHk-=whjH6p+qzwUdx5SOVVHjS3WvzJQr6mDUwhEyTf6pJWzaQ@mail.gmail.com/
Link: https://lore.kernel.org/all/CAHk-=wjQGnVfb4jehFR0XyZikdQvCZouE96xR_nnf5kqaM5qqQ@mail.gmail.com/
	Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
	Cc: Steven Rostedt <rostedt@goodmis.org>
	Acked-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit dcf8e5633e2e69ad60b730ab5905608b756a032f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/compiler.h
#	include/linux/overflow.h
#	include/linux/trace_events.h
diff --cc include/linux/compiler.h
index 3eb4b3399a22,7713d7bcdaea..000000000000
--- a/include/linux/compiler.h
+++ b/include/linux/compiler.h
@@@ -468,4 -239,18 +468,21 @@@ unsigned long read_word_at_a_time(cons
  /* &a[0] degrades to a pointer: a different type from an array */
  #define __must_be_array(a)	BUILD_BUG_ON_ZERO(__same_type((a), &(a)[0]))
  
++<<<<<<< HEAD
++=======
+ /*
+  * Whether 'type' is a signed type or an unsigned type. Supports scalar types,
+  * bool and also pointer types.
+  */
+ #define is_signed_type(type) (((type)(-1)) < (__force type)1)
+ 
+ /*
+  * This is needed in functions which generate the stack canary, see
+  * arch/x86/kernel/smpboot.c::start_secondary() for an example.
+  */
+ #define prevent_tail_call_optimization()	mb()
+ 
+ #include <asm/rwonce.h>
+ 
++>>>>>>> dcf8e5633e2e (tracing: Define the is_signed_type() macro once)
  #endif /* __LINUX_COMPILER_H */
diff --cc include/linux/overflow.h
index 50ae29d3c1ae,0eb3b192f07a..000000000000
--- a/include/linux/overflow.h
+++ b/include/linux/overflow.h
@@@ -33,8 -30,6 +33,11 @@@
   * https://mail-index.netbsd.org/tech-misc/2007/02/05/0000.html -
   * credit to Christian Biere.
   */
++<<<<<<< HEAD
 +#define is_signed_type(type)       (((type)(-1)) < (type)1)
 +#define is_unsigned_type(type) (!is_signed_type(type))
++=======
++>>>>>>> dcf8e5633e2e (tracing: Define the is_signed_type() macro once)
  #define __type_half_max(type) ((type)1 << (8*sizeof(type) - 1 - is_signed_type(type)))
  #define type_max(T) ((T)((__type_half_max(T) - 1) + __type_half_max(T)))
  #define type_min(T) ((T)((T)-type_max(T)-(T)1))
diff --cc include/linux/trace_events.h
index 2ada87cc50af,8401dec93c15..000000000000
--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@@ -545,10 -814,10 +545,14 @@@ extern int trace_add_event_call(struct 
  extern int trace_remove_event_call(struct trace_event_call *call);
  extern int trace_event_get_offsets(struct trace_event_call *call);
  
++<<<<<<< HEAD
 +#define is_signed_type(type)	(((type)(-1)) < (type)1)
 +
++=======
+ int ftrace_set_clr_event(struct trace_array *tr, char *buf, int set);
++>>>>>>> dcf8e5633e2e (tracing: Define the is_signed_type() macro once)
  int trace_set_clr_event(const char *system, const char *event, int set);
 -int trace_array_set_clr_event(struct trace_array *tr, const char *system,
 -		const char *event, bool enable);
 +
  /*
   * The double __builtin_constant_p is because gcc will give us an error
   * if we try to allocate the static variable to fmt if it is not a
* Unmerged path include/linux/compiler.h
* Unmerged path include/linux/overflow.h
* Unmerged path include/linux/trace_events.h
