smb2: small refactor in smb2_check_message()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Enzo Matsumiya <ematsumiya@suse.de>
commit da3847894fddc27ca95d5ac0012f444a77a5e0c3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/da384789.failed

If the command is SMB2_IOCTL, OutputLength and OutputContext are
optional and can be zero, so return early and skip calculated length
check.

Move the mismatched length message to the end of the check, to avoid
unnecessary logs when the check was not a real miscalculation.

Also change the pr_warn_once() to a pr_warn() so we're sure to get a
log for the real mismatches.

	Signed-off-by: Enzo Matsumiya <ematsumiya@suse.de>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit da3847894fddc27ca95d5ac0012f444a77a5e0c3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2misc.c
diff --cc fs/cifs/smb2misc.c
index f3aaa2e43ec2,818cc4dee0e2..000000000000
--- a/fs/cifs/smb2misc.c
+++ b/fs/cifs/smb2misc.c
@@@ -145,15 -132,15 +145,25 @@@ static __u32 get_neg_ctxt_len(struct sm
  }
  
  int
- smb2_check_message(char *buf, unsigned int len, struct TCP_Server_Info *srvr)
+ smb2_check_message(char *buf, unsigned int len, struct TCP_Server_Info *server)
  {
++<<<<<<< HEAD
 +	struct smb2_sync_hdr *shdr = (struct smb2_sync_hdr *)buf;
 +	struct smb2_sync_pdu *pdu = (struct smb2_sync_pdu *)shdr;
 +	__u64 mid;
 +	__u32 clc_len;  /* calculated length */
 +	int command;
 +	int pdu_size = sizeof(struct smb2_sync_pdu);
 +	int hdr_size = sizeof(struct smb2_sync_hdr);
++=======
+ 	struct smb2_hdr *shdr = (struct smb2_hdr *)buf;
+ 	struct smb2_pdu *pdu = (struct smb2_pdu *)shdr;
+ 	int hdr_size = sizeof(struct smb2_hdr);
+ 	int pdu_size = sizeof(struct smb2_pdu);
+ 	int command;
+ 	__u32 calc_len; /* calculated length */
+ 	__u64 mid;
++>>>>>>> da3847894fdd (smb2: small refactor in smb2_check_message())
  
  	/*
  	 * Add function to do table lookup of StructureSize by command
@@@ -166,13 -153,15 +176,19 @@@
  
  		/* decrypt frame now that it is completely read in */
  		spin_lock(&cifs_tcp_ses_lock);
++<<<<<<< HEAD
 +		list_for_each_entry(ses, &srvr->smb_ses_list, smb_ses_list) {
 +			if (ses->Suid == thdr->SessionId)
++=======
+ 		list_for_each_entry(iter, &server->smb_ses_list, smb_ses_list) {
+ 			if (iter->Suid == le64_to_cpu(thdr->SessionId)) {
+ 				ses = iter;
++>>>>>>> da3847894fdd (smb2: small refactor in smb2_check_message())
  				break;
 -			}
  		}
  		spin_unlock(&cifs_tcp_ses_lock);
 -		if (!ses) {
 +		if (list_entry_is_head(ses, &srvr->smb_ses_list,
 +				       smb_ses_list)) {
  			cifs_dbg(VFS, "no decryption - session id not found\n");
  			return 1;
  		}
diff --git a/fs/cifs/connect.c b/fs/cifs/connect.c
index 6e27e4672066..3288a9517c2a 100644
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@ -853,19 +853,18 @@ int
 cifs_handle_standard(struct TCP_Server_Info *server, struct mid_q_entry *mid)
 {
 	char *buf = server->large_buf ? server->bigbuf : server->smallbuf;
-	int length;
+	int rc;
 
 	/*
 	 * We know that we received enough to get to the MID as we
 	 * checked the pdu_length earlier. Now check to see
-	 * if the rest of the header is OK. We borrow the length
-	 * var for the rest of the loop to avoid a new stack var.
+	 * if the rest of the header is OK.
 	 *
 	 * 48 bytes is enough to display the header and a little bit
 	 * into the payload for debugging purposes.
 	 */
-	length = server->ops->check_message(buf, server->total_read, server);
-	if (length != 0)
+	rc = server->ops->check_message(buf, server->total_read, server);
+	if (rc)
 		cifs_dump_mem("Bad SMB: ", buf,
 			min_t(unsigned int, server->total_read, 48));
 
@@ -880,9 +879,9 @@ cifs_handle_standard(struct TCP_Server_Info *server, struct mid_q_entry *mid)
 		return -1;
 
 	if (!mid)
-		return length;
+		return rc;
 
-	handle_mid(mid, server, buf, length);
+	handle_mid(mid, server, buf, rc);
 	return 0;
 }
 
* Unmerged path fs/cifs/smb2misc.c
