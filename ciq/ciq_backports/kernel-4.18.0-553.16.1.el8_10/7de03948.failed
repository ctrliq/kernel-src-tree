cifs: Fix in error types returned for out-of-credit situations.

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Shyam Prasad N <sprasad@microsoft.com>
commit 7de0394801da4f759684c4a33cf62f12da6e447d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/7de03948.failed

For failure by timeout waiting for credits, changed the error
returned to the app with EBUSY, instead of ENOTSUPP. This is done
because this situation is possible even in non-buggy cases. i.e.
overloaded server can return 0 credits until done with outstanding
requests. And this feels like a better error to return to the app.

For cases of zero credits found even when there are no requests
in flight, replaced ENOTSUPP with EDEADLK, since we're avoiding
deadlock here by returning error.

	Signed-off-by: Shyam Prasad N <sprasad@microsoft.com>
	Reviewed-by: Pavel Shilovsky <pshilov@microsoft.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 7de0394801da4f759684c4a33cf62f12da6e447d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/transport.c
diff --cc fs/cifs/transport.c
index 1fc2e1808b9a,39e87705840d..000000000000
--- a/fs/cifs/transport.c
+++ b/fs/cifs/transport.c
@@@ -679,7 -683,11 +679,15 @@@ wait_for_compound_request(struct TCP_Se
  		 */
  		if (server->in_flight == 0) {
  			spin_unlock(&server->req_lock);
++<<<<<<< HEAD
 +			return -ENOTSUPP;
++=======
+ 			trace_smb3_insufficient_credits(server->CurrentMid,
+ 					server->hostname, scredits, sin_flight);
+ 			cifs_dbg(FYI, "%s: %d requests in flight, needed %d total=%d\n",
+ 					__func__, sin_flight, num, scredits);
+ 			return -EDEADLK;
++>>>>>>> 7de0394801da (cifs: Fix in error types returned for out-of-credit situations.)
  		}
  	}
  	spin_unlock(&server->req_lock);
* Unmerged path fs/cifs/transport.c
