smb3: workaround negprot bug in some Samba servers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Steve French <stfrench@microsoft.com>
commit 32f319183c439b239294cb2d70ada3564c4c7c39
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/32f31918.failed

Mount can now fail to older Samba servers due to a server
bug handling padding at the end of the last negotiate
context (negotiate contexts typically are rounded up to 8
bytes by adding padding if needed). This server bug can
be avoided by switching the order of negotiate contexts,
placing a negotiate context at the end that does not
require padding (prior to the recent netname context fix
this was the case on the client).

Fixes: 73130a7b1ac9 ("smb3: fix empty netname context on secondary channels")
	Reported-by: Julian Sikorski <belegdol@gmail.com>
	Tested-by: Julian Sikorski <belegdol+github@gmail.com>
	Reviewed-by: Shyam Prasad N <sprasad@microsoft.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 32f319183c439b239294cb2d70ada3564c4c7c39)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2pdu.c
diff --cc fs/cifs/smb2pdu.c
index 2c2185ee9128,c705de32e225..000000000000
--- a/fs/cifs/smb2pdu.c
+++ b/fs/cifs/smb2pdu.c
@@@ -536,6 -571,26 +536,29 @@@ assemble_neg_contexts(struct smb2_negot
  	*total_len += ctxt_len;
  	pneg_ctxt += ctxt_len;
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * secondary channels don't have the hostname field populated
+ 	 * use the hostname field in the primary channel instead
+ 	 */
+ 	hostname = CIFS_SERVER_IS_CHAN(server) ?
+ 		server->primary_server->hostname : server->hostname;
+ 	if (hostname && (hostname[0] != 0)) {
+ 		ctxt_len = build_netname_ctxt((struct smb2_netname_neg_context *)pneg_ctxt,
+ 					      hostname);
+ 		*total_len += ctxt_len;
+ 		pneg_ctxt += ctxt_len;
+ 		neg_context_count = 3;
+ 	} else
+ 		neg_context_count = 2;
+ 
+ 	build_posix_ctxt((struct smb2_posix_neg_context *)pneg_ctxt);
+ 	*total_len += sizeof(struct smb2_posix_neg_context);
+ 	pneg_ctxt += sizeof(struct smb2_posix_neg_context);
+ 	neg_context_count++;
+ 
++>>>>>>> 32f319183c43 (smb3: workaround negprot bug in some Samba servers)
  	if (server->compress_algorithm) {
  		build_compression_ctxt((struct smb2_compression_capabilities_context *)
  				pneg_ctxt);
* Unmerged path fs/cifs/smb2pdu.c
