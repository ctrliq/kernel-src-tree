cifs: fix missing null session check in mount

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Steve French <stfrench@microsoft.com>
commit 63f94e946fafcfc5080b4a4aec9770158268e4ee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/63f94e94.failed

Although it is unlikely to be have ended up with a null
session pointer calling cifs_try_adding_channels in cifs_mount.
Coverity correctly notes that we are already checking for
it earlier (when we return from do_dfs_failover), so at
a minimum to clarify the code we should make sure we also
check for it when we exit the loop so we don't end up calling
cifs_try_adding_channels or mount_setup_tlink with a null
ses pointer.

Addresses-Coverity: 1505608 ("Derefernce after null check")
	Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 63f94e946fafcfc5080b4a4aec9770158268e4ee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/connect.c
diff --cc fs/cifs/connect.c
index 8525871b8537,a1e870232114..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -3520,10 -3508,8 +3520,14 @@@ int cifs_mount(struct cifs_sb_info *cif
  			rc = -ELOOP;
  	} while (rc == -EREMOTE);
  
++<<<<<<< HEAD
 +	if (rc || !tcon) {
 +		rc = rc ? rc : -ENOENT;
++=======
+ 	if (rc || !tcon || !ses)
++>>>>>>> 63f94e946faf (cifs: fix missing null session check in mount)
  		goto error;
 +	}
  
  	kfree(ref_path);
  	/*
* Unmerged path fs/cifs/connect.c
