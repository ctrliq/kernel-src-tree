cifs: protect srv_count with cifs_tcp_ses_lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Steve French <stfrench@microsoft.com>
commit 446e21482e8c10b96d540862c5f6a37009436f00
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/446e2148.failed

Updates to the srv_count field are protected elsewhere
with the cifs_tcp_ses_lock spinlock.  Add one missing place
(cifs_get_tcp_sesion).

CC: Shyam Prasad N <sprasad@microsoft.com>
Addresses-Coverity: 1494149 ("Data Race Condition")
	Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 446e21482e8c10b96d540862c5f6a37009436f00)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/connect.c
diff --cc fs/cifs/connect.c
index 81cb3cdf4f3a,b98711b62897..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -1402,6 -1451,12 +1402,15 @@@ cifs_get_tcp_session(struct smb3_fs_con
  	tcp_ses->in_flight = 0;
  	tcp_ses->max_in_flight = 0;
  	tcp_ses->credits = 1;
++<<<<<<< HEAD
++=======
+ 	if (primary_server) {
+ 		spin_lock(&cifs_tcp_ses_lock);
+ 		++primary_server->srv_count;
+ 		tcp_ses->primary_server = primary_server;
+ 		spin_unlock(&cifs_tcp_ses_lock);
+ 	}
++>>>>>>> 446e21482e8c (cifs: protect srv_count with cifs_tcp_ses_lock)
  	init_waitqueue_head(&tcp_ses->response_q);
  	init_waitqueue_head(&tcp_ses->request_q);
  	INIT_LIST_HEAD(&tcp_ses->pending_mid_q);
* Unmerged path fs/cifs/connect.c
