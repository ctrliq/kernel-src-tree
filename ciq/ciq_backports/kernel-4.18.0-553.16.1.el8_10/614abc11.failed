gfs2: Fold qd_fish into gfs2_quota_sync

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit 614abc11870ee7ec5a32c81b7ecf4232ede48ecb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/614abc11.failed

The split between qd_fish() and gfs2_quota_sync() is rather unfortunate
as qd_fish() is repeatedly called to scan sdp->sd_quota_list only to
find the next object to that needs syncing; if there are multiple
objects on the list that need syncing, it makes more sense to grab them
all in one go.  This is relatively easy to do when qd_fish() is folded
into gfs2_quota_sync().

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 614abc11870ee7ec5a32c81b7ecf4232ede48ecb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/quota.c
diff --cc fs/gfs2/quota.c
index a5ead0a8fccb,ae02403407aa..000000000000
--- a/fs/gfs2/quota.c
+++ b/fs/gfs2/quota.c
@@@ -1296,10 -1298,13 +1262,16 @@@ int gfs2_quota_sync(struct super_block 
  	struct gfs2_sbd *sdp = sb->s_fs_info;
  	struct gfs2_quota_data **qda;
  	unsigned int max_qd = PAGE_SIZE / sizeof(struct gfs2_holder);
- 	unsigned int num_qd;
- 	unsigned int x;
  	int error = 0;
  
++<<<<<<< HEAD
++=======
+ 	if (sb_rdonly(sdp->sd_vfs))
+ 		return 0;
+ 	if (!qd_changed(sdp))
+ 		return 0;
+ 
++>>>>>>> 614abc11870e (gfs2: Fold qd_fish into gfs2_quota_sync)
  	qda = kcalloc(max_qd, sizeof(struct gfs2_quota_data *), GFP_KERNEL);
  	if (!qda)
  		return -ENOMEM;
* Unmerged path fs/gfs2/quota.c
