cifs: Fix connections leak when tlink setup failed

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
commit 1dcdf5f5b2137185cbdd5385f29949ab3da4f00c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/1dcdf5f5.failed

If the tlink setup failed, lost to put the connections, then
the module refcnt leak since the cifsd kthread not exit.

Also leak the fscache info, and for next mount with fsc, it will
print the follow errors:
  CIFS: Cache volume key already in use (cifs,127.0.0.1:445,TEST)

Let's check the result of tlink setup, and do some cleanup.

Fixes: 56c762eb9bee ("cifs: Refactor out cifs_mount()")
	Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
	Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 1dcdf5f5b2137185cbdd5385f29949ab3da4f00c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/connect.c
diff --cc fs/cifs/connect.c
index 6e27e4672066,9db9527c61cf..000000000000
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@@ -3680,19 -3852,22 +3680,29 @@@ int cifs_mount(struct cifs_sb_info *cif
  	kfree(cifs_sb->prepath);
  	cifs_sb->prepath = ctx->prepath;
  	ctx->prepath = NULL;
 -	uuid_copy(&cifs_sb->dfs_mount_id, &mnt_ctx.mount_id);
 +	uuid_copy(&cifs_sb->dfs_mount_id, &mount_id);
  
  out:
++<<<<<<< HEAD
 +	free_xid(xid);
 +	cifs_try_adding_channels(cifs_sb, ses);
 +	return mount_setup_tlink(cifs_sb, ses, tcon);
++=======
+ 	cifs_try_adding_channels(cifs_sb, mnt_ctx.ses);
+ 	rc = mount_setup_tlink(cifs_sb, mnt_ctx.ses, mnt_ctx.tcon);
+ 	if (rc)
+ 		goto error;
+ 
+ 	free_xid(mnt_ctx.xid);
+ 	return rc;
++>>>>>>> 1dcdf5f5b213 (cifs: Fix connections leak when tlink setup failed)
  
  error:
 -	dfs_cache_put_refsrv_sessions(&mnt_ctx.mount_id);
 -	kfree(mnt_ctx.origin_fullpath);
 -	kfree(mnt_ctx.leaf_fullpath);
 -	mount_put_conns(&mnt_ctx);
 +	kfree(ref_path);
 +	kfree(full_path);
 +	kfree(cifs_sb->origin_fullpath);
 +	dfs_cache_put_refsrv_sessions(&mount_id);
 +	mount_put_conns(cifs_sb, xid, server, ses, tcon);
  	return rc;
  }
  #else
@@@ -3716,12 -3888,15 +3726,21 @@@ int cifs_mount(struct cifs_sb_info *cif
  			goto error;
  	}
  
++<<<<<<< HEAD
 +	free_xid(xid);
 +
 +	return mount_setup_tlink(cifs_sb, ses, tcon);
++=======
+ 	rc = mount_setup_tlink(cifs_sb, mnt_ctx.ses, mnt_ctx.tcon);
+ 	if (rc)
+ 		goto error;
+ 
+ 	free_xid(mnt_ctx.xid);
+ 	return rc;
++>>>>>>> 1dcdf5f5b213 (cifs: Fix connections leak when tlink setup failed)
  
  error:
 -	mount_put_conns(&mnt_ctx);
 +	mount_put_conns(cifs_sb, xid, server, ses, tcon);
  	return rc;
  }
  #endif
* Unmerged path fs/cifs/connect.c
