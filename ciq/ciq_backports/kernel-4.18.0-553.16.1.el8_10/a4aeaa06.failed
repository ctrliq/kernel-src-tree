mm: khugepaged: skip huge page collapse for special files

jira LE-1907
cve CVE-2021-47491
Rebuild_History Non-Buildable kernel-4.18.0-553.16.1.el8_10
commit-author Yang Shi <shy828301@gmail.com>
commit a4aeaa06d45e90f9b279f0b09de84bd00006e733
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.16.1.el8_10/a4aeaa06.failed

The read-only THP for filesystems will collapse THP for files opened
readonly and mapped with VM_EXEC.  The intended usecase is to avoid TLB
misses for large text segments.  But it doesn't restrict the file types
so a THP could be collapsed for a non-regular file, for example, block
device, if it is opened readonly and mapped with EXEC permission.  This
may cause bugs, like [1] and [2].

This is definitely not the intended usecase, so just collapse THP for
regular files in order to close the attack surface.

[shy828301@gmail.com: fix vm_file check [3]]

Link: https://lore.kernel.org/lkml/CACkBjsYwLYLRmX8GpsDpMthagWOjWWrNxqY6ZLNQVr6yx+f5vA@mail.gmail.com/ [1]
Link: https://lore.kernel.org/linux-mm/000000000000c6a82505ce284e4c@google.com/ [2]
Link: https://lkml.kernel.org/r/CAHbLzkqTW9U3VvTu1Ki5v_cLRC9gHW+znBukg_ycergE0JWj-A@mail.gmail.com [3]
Link: https://lkml.kernel.org/r/20211027195221.3825-1-shy828301@gmail.com
Fixes: 99cb0dbd47a1 ("mm,thp: add read-only THP support for (non-shmem) FS")
	Signed-off-by: Hugh Dickins <hughd@google.com>
	Signed-off-by: Yang Shi <shy828301@gmail.com>
	Reported-by: Hao Sun <sunhao.th@gmail.com>
	Reported-by: syzbot+aae069be1de40fb11825@syzkaller.appspotmail.com
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Cc: Song Liu <songliubraving@fb.com>
	Cc: Andrea Righi <andrea.righi@canonical.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit a4aeaa06d45e90f9b279f0b09de84bd00006e733)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/khugepaged.c
diff --cc mm/khugepaged.c
index cf375f21b6b4,8a8b3aa92937..000000000000
--- a/mm/khugepaged.c
+++ b/mm/khugepaged.c
@@@ -422,11 -457,13 +424,19 @@@ static bool hugepage_vma_check(struct v
  	if (!(vm_flags & VM_HUGEPAGE) && !khugepaged_always())
  		return false;
  
- 	/* Read-only file mappings need to be aligned for THP to work. */
+ 	/* Only regular file is valid */
  	if (IS_ENABLED(CONFIG_READ_ONLY_THP_FOR_FS) && vma->vm_file &&
++<<<<<<< HEAD
 +	    (vm_flags & VM_DENYWRITE)) {
 +		return IS_ALIGNED((vma->vm_start >> PAGE_SHIFT) - vma->vm_pgoff,
 +				HPAGE_PMD_NR);
++=======
+ 	    (vm_flags & VM_EXEC)) {
+ 		struct inode *inode = vma->vm_file->f_inode;
+ 
+ 		return !inode_is_open_for_write(inode) &&
+ 			S_ISREG(inode->i_mode);
++>>>>>>> a4aeaa06d45e (mm: khugepaged: skip huge page collapse for special files)
  	}
  
  	if (!vma->anon_vma || vma->vm_ops)
* Unmerged path mm/khugepaged.c
