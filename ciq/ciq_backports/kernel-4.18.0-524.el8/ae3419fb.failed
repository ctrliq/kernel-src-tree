vc_screen: don't clobber return value in vcs_read

jira LE-1907
cve CVE-2023-3567
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Thomas Weißschuh <linux@weissschuh.net>
commit ae3419fbac845b4d3f3a9fae4cc80c68d82cdf6e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/ae3419fb.failed

Commit 226fae124b2d ("vc_screen: move load of struct vc_data pointer in
vcs_read() to avoid UAF") moved the call to vcs_vc() into the loop.

While doing this it also moved the unconditional assignment of

	ret = -ENXIO;

This unconditional assignment was valid outside the loop but within it
it clobbers the actual value of ret.

To avoid this only assign "ret = -ENXIO" when actually needed.

[ Also, the 'goto unlock_out" needs to be just a "break", so that it
  does the right thing when it exits on later iterations when partial
  success has happened - Linus ]

	Reported-by: Storm Dragon <stormdragon2976@gmail.com>
Link: https://lore.kernel.org/lkml/Y%2FKS6vdql2pIsCiI@hotmail.com/
Fixes: 226fae124b2d ("vc_screen: move load of struct vc_data pointer in vcs_read() to avoid UAF")
	Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
Link: https://lore.kernel.org/lkml/64981d94-d00c-4b31-9063-43ad0a384bde@t-8ch.de/
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit ae3419fbac845b4d3f3a9fae4cc80c68d82cdf6e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tty/vt/vc_screen.c
diff --cc drivers/tty/vt/vc_screen.c
index e4a66e1fd05f,1dc07f9214d5..000000000000
--- a/drivers/tty/vt/vc_screen.c
+++ b/drivers/tty/vt/vc_screen.c
@@@ -233,10 -400,14 +233,21 @@@ vcs_read(struct file *file, char __use
  	read = 0;
  	ret = 0;
  	while (count) {
++<<<<<<< HEAD
 +		char *con_buf0, *con_buf_start;
 +		long this_round, size;
 +		ssize_t orig_count;
 +		long p = pos;
++=======
+ 		unsigned int this_round, skip = 0;
+ 		int size;
+ 
+ 		vc = vcs_vc(inode, &viewed);
+ 		if (!vc) {
+ 			ret = -ENXIO;
+ 			break;
+ 		}
++>>>>>>> ae3419fbac84 (vc_screen: don't clobber return value in vcs_read)
  
  		/* Check whether we are above size each round,
  		 * as copy_to_user at the end of this loop
* Unmerged path drivers/tty/vt/vc_screen.c
