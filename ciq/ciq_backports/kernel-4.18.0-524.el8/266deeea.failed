s390/ism: Do not unregister clients with registered DMBs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Niklas Schnelle <schnelle@linux.ibm.com>
commit 266deeea34ffd28c6b6a63edf2af9b5a07161c24
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/266deeea.failed

When ism_unregister_client() is called but the client still has DMBs
registered it returns -EBUSY and prints an error. This only happens
after the client has already been unregistered however. This is
unexpected as the unregister claims to have failed. Furthermore as this
implies a client bug a WARN() is more appropriate. Thus move the
deregistration after the check and use WARN().

Fixes: 89e7d2ba61b7 ("net/ism: Add new API for client registration")
	Signed-off-by: Niklas Schnelle <schnelle@linux.ibm.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 266deeea34ffd28c6b6a63edf2af9b5a07161c24)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/net/ism_drv.c
diff --cc drivers/s390/net/ism_drv.c
index f5bfc50915ca,6df7f377d2f9..000000000000
--- a/drivers/s390/net/ism_drv.c
+++ b/drivers/s390/net/ism_drv.c
@@@ -84,28 -94,34 +84,39 @@@ int ism_unregister_client(struct ism_cl
  	struct ism_dev *ism;
  	unsigned long flags;
  	int rc = 0;
 +	int i;
  
  	mutex_lock(&ism_dev_list.mutex);
++<<<<<<< HEAD
 +	spin_lock_irqsave(&clients_lock, flags);
 +	clients[client->id] = NULL;
 +	if (client->id + 1 == max_client)
 +		max_client--;
 +	spin_unlock_irqrestore(&clients_lock, flags);
++=======
++>>>>>>> 266deeea34ff (s390/ism: Do not unregister clients with registered DMBs)
  	list_for_each_entry(ism, &ism_dev_list.list, list) {
 -		spin_lock_irqsave(&ism->lock, flags);
 -		/* Stop forwarding IRQs and events */
 -		ism->subs[client->id] = NULL;
 -		for (int i = 0; i < ISM_NR_DMBS; ++i) {
 +		for (i = 0; i < ISM_NR_DMBS; ++i) {
  			if (ism->sba_client_arr[i] == client->id) {
- 				pr_err("%s: attempt to unregister client '%s'"
- 				       "with registered dmb(s)\n", __func__,
- 				       client->name);
+ 				WARN(1, "%s: attempt to unregister '%s' with registered dmb(s)\n",
+ 				     __func__, client->name);
  				rc = -EBUSY;
- 				goto out;
+ 				goto err_reg_dmb;
  			}
  		}
 -		spin_unlock_irqrestore(&ism->lock, flags);
  	}
- out:
  	mutex_unlock(&ism_dev_list.mutex);
  
+ 	mutex_lock(&clients_lock);
+ 	clients[client->id] = NULL;
+ 	if (client->id + 1 == max_client)
+ 		max_client--;
+ 	mutex_unlock(&clients_lock);
+ 	return rc;
+ 
+ err_reg_dmb:
+ 	spin_unlock_irqrestore(&ism->lock, flags);
+ 	mutex_unlock(&ism_dev_list.mutex);
  	return rc;
  }
  EXPORT_SYMBOL_GPL(ism_unregister_client);
* Unmerged path drivers/s390/net/ism_drv.c
