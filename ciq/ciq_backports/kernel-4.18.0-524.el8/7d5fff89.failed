dm raid: protect md_stop() with 'reconfig_mutex'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Yu Kuai <yukuai3@huawei.com>
commit 7d5fff8982a2199d49ec067818af7d84d4f95ca0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/7d5fff89.failed

__md_stop_writes() and __md_stop() will modify many fields that are
protected by 'reconfig_mutex', and all the callers will grab
'reconfig_mutex' except for md_stop().

Also, update md_stop() to make certain 'reconfig_mutex' is held using
lockdep_assert_held().

Fixes: 9d09e663d550 ("dm: raid456 basic support")
	Signed-off-by: Yu Kuai <yukuai3@huawei.com>
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit 7d5fff8982a2199d49ec067818af7d84d4f95ca0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-raid.c
diff --cc drivers/md/dm-raid.c
index 4a68fa198ec7,becdb689190e..000000000000
--- a/drivers/md/dm-raid.c
+++ b/drivers/md/dm-raid.c
@@@ -3325,8 -3310,9 +3325,13 @@@ static void raid_dtr(struct dm_target *
  {
  	struct raid_set *rs = ti->private;
  
++<<<<<<< HEAD
 +	list_del_init(&rs->callbacks.list);
++=======
+ 	mddev_lock_nointr(&rs->md);
++>>>>>>> 7d5fff8982a2 (dm raid: protect md_stop() with 'reconfig_mutex')
  	md_stop(&rs->md);
+ 	mddev_unlock(&rs->md);
  	raid_set_free(rs);
  }
  
* Unmerged path drivers/md/dm-raid.c
diff --git a/drivers/md/md.c b/drivers/md/md.c
index ecd0e795edee..9235f23894a5 100644
--- a/drivers/md/md.c
+++ b/drivers/md/md.c
@@ -6402,6 +6402,8 @@ static void __md_stop(struct mddev *mddev)
 
 void md_stop(struct mddev *mddev)
 {
+	lockdep_assert_held(&mddev->reconfig_mutex);
+
 	/* stop the array and free an attached data structures.
 	 * This is called from dm-raid
 	 */
