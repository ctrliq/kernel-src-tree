dm thin: disable discards for thin-pool if no_discard_passdown

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit fa375646241b5350f7326fd4d686891b95d9fbe5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/fa375646.failed

Also rename disable_passdown_if_not_supported to
disable_discard_passdown_if_not_supported.

And fold passdown_enabled() into only caller.

	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit fa375646241b5350f7326fd4d686891b95d9fbe5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-thin.c
diff --cc drivers/md/dm-thin.c
index 1a4c097dcde1,5b0c2f004dbb..000000000000
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@@ -4099,7 -4093,16 +4094,20 @@@ static void pool_io_hints(struct dm_tar
  	 * They get transferred to the live pool in bind_control_target()
  	 * called from pool_preresume().
  	 */
++<<<<<<< HEAD
 +	if (!pt->adjusted_pf.discard_enabled) {
++=======
+ 
+ 	if (pt->adjusted_pf.discard_enabled) {
+ 		disable_discard_passdown_if_not_supported(pt);
+ 		if (!pt->adjusted_pf.discard_passdown)
+ 			limits->max_discard_sectors = 0;
+ 		/*
+ 		 * The pool uses the same discard limits as the underlying data
+ 		 * device.  DM core has already set this up.
+ 		 */
+ 	} else {
++>>>>>>> fa375646241b (dm thin: disable discards for thin-pool if no_discard_passdown)
  		/*
  		 * Must explicitly disallow stacking discard limits otherwise the
  		 * block layer will stack them if pool's data device has support.
* Unmerged path drivers/md/dm-thin.c
