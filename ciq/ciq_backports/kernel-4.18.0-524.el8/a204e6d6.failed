mm/slub: remove unneeded return value of slab_pad_check

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Miaohe Lin <linmiaohe@huawei.com>
commit a204e6d626126d33f34f43374d5abd00141f3e65
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/a204e6d6.failed

The return value of slab_pad_check is never used. So we can make it return
void now.

	Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
	Reviewed-by: Hyeonggon Yoo <42.hyeyoo@gmail.com>
	Signed-off-by: Vlastimil Babka <vbabka@suse.cz>
Link: https://lore.kernel.org/r/20220419120352.37825-1-linmiaohe@huawei.com
(cherry picked from commit a204e6d626126d33f34f43374d5abd00141f3e65)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/slub.c
diff --cc mm/slub.c
index 4ece4a8929e7,bfed9cfba36a..000000000000
--- a/mm/slub.c
+++ b/mm/slub.c
@@@ -988,7 -1021,7 +988,11 @@@ static int check_pad_bytes(struct kmem_
  }
  
  /* Check the pad bytes at the end of a slab page */
++<<<<<<< HEAD
 +static int slab_pad_check(struct kmem_cache *s, struct page *page)
++=======
+ static void slab_pad_check(struct kmem_cache *s, struct slab *slab)
++>>>>>>> a204e6d62612 (mm/slub: remove unneeded return value of slab_pad_check)
  {
  	u8 *start;
  	u8 *fault;
@@@ -998,10 -1031,10 +1002,10 @@@
  	int remainder;
  
  	if (!(s->flags & SLAB_POISON))
- 		return 1;
+ 		return;
  
 -	start = slab_address(slab);
 -	length = slab_size(slab);
 +	start = page_address(page);
 +	length = page_size(page);
  	end = start + length;
  	remainder = length % s->size;
  	if (!remainder)
@@@ -1021,10 -1054,9 +1025,9 @@@
  	print_section(KERN_ERR, "Padding ", pad, remainder);
  
  	restore_bytes(s, "slab padding", POISON_INUSE, fault, end);
- 	return 0;
  }
  
 -static int check_object(struct kmem_cache *s, struct slab *slab,
 +static int check_object(struct kmem_cache *s, struct page *page,
  					void *object, u8 val)
  {
  	u8 *p = object;
@@@ -1608,14 -1641,13 +1611,19 @@@ static inline int free_debug_processing
  	void *head, void *tail, int bulk_cnt,
  	unsigned long addr) { return 0; }
  
++<<<<<<< HEAD
 +static inline int slab_pad_check(struct kmem_cache *s, struct page *page)
 +			{ return 1; }
 +static inline int check_object(struct kmem_cache *s, struct page *page,
++=======
+ static inline void slab_pad_check(struct kmem_cache *s, struct slab *slab) {}
+ static inline int check_object(struct kmem_cache *s, struct slab *slab,
++>>>>>>> a204e6d62612 (mm/slub: remove unneeded return value of slab_pad_check)
  			void *object, u8 val) { return 1; }
  static inline void add_full(struct kmem_cache *s, struct kmem_cache_node *n,
 -					struct slab *slab) {}
 +					struct page *page) {}
  static inline void remove_full(struct kmem_cache *s, struct kmem_cache_node *n,
 -					struct slab *slab) {}
 +					struct page *page) {}
  slab_flags_t kmem_cache_flags(unsigned int object_size,
  	slab_flags_t flags, const char *name)
  {
* Unmerged path mm/slub.c
