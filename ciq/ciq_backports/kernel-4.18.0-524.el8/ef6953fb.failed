dm thin: update .io_hints methods to not require handling discards last

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-524.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit ef6953fb68fe52a13cd154509d1ac9f9748c6051
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-524.el8/ef6953fb.failed

Removes assumptions about what might follow the discard setup code
(previously the code would return early if discards not enabled).

Makes it possible to add more capabilites to the end of each .io_hints
method (which is the natural thing to do when adding new features).

	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit ef6953fb68fe52a13cd154509d1ac9f9748c6051)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-thin.c
diff --cc drivers/md/dm-thin.c
index 1a4c097dcde1,ebcfd84e8b7f..000000000000
--- a/drivers/md/dm-thin.c
+++ b/drivers/md/dm-thin.c
@@@ -4103,19 -4109,9 +4110,11 @@@ static void pool_io_hints(struct dm_tar
  		/*
  		 * Must explicitly disallow stacking discard limits otherwise the
  		 * block layer will stack them if pool's data device has support.
 +		 * QUEUE_FLAG_DISCARD wouldn't be set but there is no way for the
 +		 * user to see that, so make sure to set all discard limits to 0.
  		 */
  		limits->discard_granularity = 0;
- 		return;
  	}
- 
- 	disable_passdown_if_not_supported(pt);
- 
- 	/*
- 	 * The pool uses the same discard limits as the underlying data
- 	 * device.  DM core has already set this up.
- 	 */
  }
  
  static struct target_type pool_target = {
@@@ -4493,11 -4495,10 +4492,18 @@@ static void thin_io_hints(struct dm_tar
  	struct thin_c *tc = ti->private;
  	struct pool *pool = tc->pool;
  
++<<<<<<< HEAD
 +	if (!pool->pf.discard_enabled)
 +		return;
 +
 +	limits->discard_granularity = pool->sectors_per_block << SECTOR_SHIFT;
 +	limits->max_discard_sectors = 2048 * 1024 * 16; /* 16G */
++=======
+ 	if (pool->pf.discard_enabled) {
+ 		limits->discard_granularity = pool->sectors_per_block << SECTOR_SHIFT;
+ 		limits->max_discard_sectors = pool->sectors_per_block * BIO_PRISON_MAX_RANGE;
+ 	}
++>>>>>>> ef6953fb68fe (dm thin: update .io_hints methods to not require handling discards last)
  }
  
  static struct target_type thin_target = {
* Unmerged path drivers/md/dm-thin.c
