x86/amd_nb: Add PCI ID for family 19h model 78h

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-527.el8
commit-author Mario Limonciello <mario.limonciello@amd.com>
commit 23a5b8bb022c1e071ca91b1a9c10f0ad6a0966e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-527.el8/23a5b8bb.failed

Commit

  310e782a99c7 ("platform/x86/amd: pmc: Utilize SMN index 0 for driver probe")

switched to using amd_smn_read() which relies upon the misc PCI ID used
by DF function 3 being included in a table.  The ID for model 78h is
missing in that table, so amd_smn_read() doesn't work.

Add the missing ID into amd_nb, restoring s2idle on this system.

  [ bp: Simplify commit message. ]

Fixes: 310e782a99c7 ("platform/x86/amd: pmc: Utilize SMN index 0 for driver probe")
	Signed-off-by: Mario Limonciello <mario.limonciello@amd.com>
	Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
	Acked-by: Bjorn Helgaas <bhelgaas@google.com>  # pci_ids.h
	Acked-by: Guenter Roeck <linux@roeck-us.net>
Link: https://lore.kernel.org/r/20230427053338.16653-2-mario.limonciello@amd.com
(cherry picked from commit 23a5b8bb022c1e071ca91b1a9c10f0ad6a0966e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/amd_nb.c
#	include/linux/pci_ids.h
diff --cc arch/x86/kernel/amd_nb.c
index f3e885f3dd0f,7e331e8f3692..000000000000
--- a/arch/x86/kernel/amd_nb.c
+++ b/arch/x86/kernel/amd_nb.c
@@@ -30,8 -34,11 +30,14 @@@
  #define PCI_DEVICE_ID_AMD_19H_M40H_ROOT	0x14b5
  #define PCI_DEVICE_ID_AMD_19H_M40H_DF_F4 0x167d
  #define PCI_DEVICE_ID_AMD_19H_M50H_DF_F4 0x166e
++<<<<<<< HEAD
++=======
+ #define PCI_DEVICE_ID_AMD_19H_M60H_DF_F4 0x14e4
+ #define PCI_DEVICE_ID_AMD_19H_M70H_DF_F4 0x14f4
+ #define PCI_DEVICE_ID_AMD_19H_M78H_DF_F4 0x12fc
++>>>>>>> 23a5b8bb022c (x86/amd_nb: Add PCI ID for family 19h model 78h)
  
 -/* Protect the PCI config register pairs used for SMN. */
 +/* Protect the PCI config register pairs used for SMN and DF indirect access. */
  static DEFINE_MUTEX(smn_mutex);
  
  static u32 *flush_words;
@@@ -67,6 -78,9 +73,12 @@@ static const struct pci_device_id amd_n
  	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M10H_DF_F3) },
  	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M40H_DF_F3) },
  	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M50H_DF_F3) },
++<<<<<<< HEAD
++=======
+ 	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M60H_DF_F3) },
+ 	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M70H_DF_F3) },
+ 	{ PCI_DEVICE(PCI_VENDOR_ID_AMD, PCI_DEVICE_ID_AMD_19H_M78H_DF_F3) },
++>>>>>>> 23a5b8bb022c (x86/amd_nb: Add PCI ID for family 19h model 78h)
  	{}
  };
  
diff --cc include/linux/pci_ids.h
index e2fd0ee487a4,95f33dadb2be..000000000000
--- a/include/linux/pci_ids.h
+++ b/include/linux/pci_ids.h
@@@ -555,6 -565,9 +555,12 @@@
  #define PCI_DEVICE_ID_AMD_19H_M10H_DF_F3 0x14b0
  #define PCI_DEVICE_ID_AMD_19H_M40H_DF_F3 0x167c
  #define PCI_DEVICE_ID_AMD_19H_M50H_DF_F3 0x166d
++<<<<<<< HEAD
++=======
+ #define PCI_DEVICE_ID_AMD_19H_M60H_DF_F3 0x14e3
+ #define PCI_DEVICE_ID_AMD_19H_M70H_DF_F3 0x14f3
+ #define PCI_DEVICE_ID_AMD_19H_M78H_DF_F3 0x12fb
++>>>>>>> 23a5b8bb022c (x86/amd_nb: Add PCI ID for family 19h model 78h)
  #define PCI_DEVICE_ID_AMD_CNB17H_F3	0x1703
  #define PCI_DEVICE_ID_AMD_LANCE		0x2000
  #define PCI_DEVICE_ID_AMD_LANCE_HOME	0x2001
* Unmerged path arch/x86/kernel/amd_nb.c
* Unmerged path include/linux/pci_ids.h
