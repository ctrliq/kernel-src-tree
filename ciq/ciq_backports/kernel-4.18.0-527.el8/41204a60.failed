cpuidle: driver: Update microsecond values of state parameters as needed

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-527.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit 41204a607679ccca7eabff9f2871b969d6ef2ce3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-527.el8/41204a60.failed

If the cpuidle driver provides the target residency and exit latency in
nanoseconds, the corresponding values in microseconds need to be set to
reflect the provided numbers in order for the sysfs interface to show
them correctly, so make __cpuidle_driver_init() do that.

	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Tested-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
(cherry picked from commit 41204a607679ccca7eabff9f2871b969d6ef2ce3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/cpuidle/driver.c
diff --cc drivers/cpuidle/driver.c
index beeb85ad6333,d9cda7f6ccb9..000000000000
--- a/drivers/cpuidle/driver.c
+++ b/drivers/cpuidle/driver.c
@@@ -183,9 -181,17 +183,23 @@@ static void __cpuidle_driver_init(struc
  		 */
  		if (s->target_residency > 0)
  			s->target_residency_ns = s->target_residency * NSEC_PER_USEC;
++<<<<<<< HEAD
 +
 +		if (s->exit_latency > 0)
 +			s->exit_latency_ns = s->exit_latency * NSEC_PER_USEC;
++=======
+ 		else if (s->target_residency_ns < 0)
+ 			s->target_residency_ns = 0;
+ 		else
+ 			s->target_residency = div_u64(s->target_residency_ns, NSEC_PER_USEC);
+ 
+ 		if (s->exit_latency > 0)
+ 			s->exit_latency_ns = s->exit_latency * NSEC_PER_USEC;
+ 		else if (s->exit_latency_ns < 0)
+ 			s->exit_latency_ns =  0;
+ 		else
+ 			s->exit_latency = div_u64(s->exit_latency_ns, NSEC_PER_USEC);
++>>>>>>> 41204a607679 (cpuidle: driver: Update microsecond values of state parameters as needed)
  	}
  }
  
* Unmerged path drivers/cpuidle/driver.c
