bnxt_en: Add support for user configured RSS key

jira LE-2290
Rebuild_History Non-Buildable kernel-5.14.0-503.21.1.el9_5
commit-author Pavan Chebbi <pavan.chebbi@broadcom.com>
commit 5de1fce3369564ca6b9eed339838c51ec6290270
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-503.21.1.el9_5/5de1fce3.failed

Store the user configured or generated Toeplitz key in
bp->rss_hash_key.  The key stays constant across ifdown/ifup
unless updated by the user.

	Signed-off-by: Pavan Chebbi <pavan.chebbi@broadcom.com>
	Signed-off-by: Michael Chan <michael.chan@broadcom.com>
Link: https://lore.kernel.org/r/20240205223202.25341-12-michael.chan@broadcom.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 5de1fce3369564ca6b9eed339838c51ec6290270)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --cc drivers/net/ethernet/broadcom/bnxt/bnxt.c
index e15f15706158,b66002171e36..000000000000
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.c
@@@ -4177,10 -4242,32 +4177,39 @@@ static void bnxt_init_vnics(struct bnx
  		vnic->fw_l2_ctx_id = INVALID_HW_RING_ID;
  
  		if (bp->vnic_info[i].rss_hash_key) {
++<<<<<<< HEAD
 +			if (i == 0)
 +				get_random_bytes(vnic->rss_hash_key,
 +					      HW_HASH_KEY_SIZE);
 +			else
++=======
+ 			if (!i) {
+ 				u8 *key = (void *)vnic->rss_hash_key;
+ 				int k;
+ 
+ 				if (!bp->rss_hash_key_valid &&
+ 				    !bp->rss_hash_key_updated) {
+ 					get_random_bytes(bp->rss_hash_key,
+ 							 HW_HASH_KEY_SIZE);
+ 					bp->rss_hash_key_updated = true;
+ 				}
+ 
+ 				memcpy(vnic->rss_hash_key, bp->rss_hash_key,
+ 				       HW_HASH_KEY_SIZE);
+ 
+ 				if (!bp->rss_hash_key_updated)
+ 					continue;
+ 
+ 				bp->rss_hash_key_updated = false;
+ 				bp->rss_hash_key_valid = true;
+ 
+ 				bp->toeplitz_prefix = 0;
+ 				for (k = 0; k < 8; k++) {
+ 					bp->toeplitz_prefix <<= 8;
+ 					bp->toeplitz_prefix |= key[k];
+ 				}
+ 			} else {
++>>>>>>> 5de1fce33695 (bnxt_en: Add support for user configured RSS key)
  				memcpy(vnic->rss_hash_key,
  				       bp->vnic_info[0].rss_hash_key,
  				       HW_HASH_KEY_SIZE);
* Unmerged path drivers/net/ethernet/broadcom/bnxt/bnxt.c
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt.h b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
index 936229d39a0f..f236f09e93be 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt.h
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt.h
@@ -2164,6 +2164,10 @@ struct bnxt {
 #define BNXT_RSS_CAP_NEW_RSS_CAP		BIT(2)
 #define BNXT_RSS_CAP_RSS_TCAM			BIT(3)
 
+	u8			rss_hash_key[HW_HASH_KEY_SIZE];
+	u8			rss_hash_key_valid:1;
+	u8			rss_hash_key_updated:1;
+
 	u16			max_mtu;
 	u16			tso_max_segs;
 	u8			max_tc;
diff --git a/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c b/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
index 514f8ae1ae6f..5c8e044cfc3b 100644
--- a/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
+++ b/drivers/net/ethernet/broadcom/bnxt/bnxt_ethtool.c
@@ -1361,8 +1361,10 @@ static int bnxt_set_rxfh(struct net_device *dev,
 	if (rxfh->hfunc && rxfh->hfunc != ETH_RSS_HASH_TOP)
 		return -EOPNOTSUPP;
 
-	if (rxfh->key)
-		return -EOPNOTSUPP;
+	if (rxfh->key) {
+		memcpy(bp->rss_hash_key, rxfh->key, HW_HASH_KEY_SIZE);
+		bp->rss_hash_key_updated = true;
+	}
 
 	if (rxfh->indir) {
 		u32 i, pad, tbl_size = bnxt_get_rxfh_indir_size(dev);
