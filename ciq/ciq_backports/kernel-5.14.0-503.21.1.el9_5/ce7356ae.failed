mptcp: cope racing subflow creation in mptcp_rcv_space_adjust

jira LE-2290
cve CVE-2024-53122
Rebuild_History Non-Buildable kernel-5.14.0-503.21.1.el9_5
Rebuild_CHGLOG: - CVE-2024-53122 mptcp: cope racing subflow creation in mptcp_rcv_space_adjust (Patrick Talbert) [RHEL-70083 RHEL-69670] {CVE-2024-53122}
Rebuild_FUZZ: 89.05%
commit-author Paolo Abeni <pabeni@redhat.com>
commit ce7356ae35943cc6494cc692e62d51a734062b7d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-503.21.1.el9_5/ce7356ae.failed

Additional active subflows - i.e. created by the in kernel path
manager - are included into the subflow list before starting the
3whs.

A racing recvmsg() spooling data received on an already established
subflow would unconditionally call tcp_cleanup_rbuf() on all the
current subflows, potentially hitting a divide by zero error on
the newly created ones.

Explicitly check that the subflow is in a suitable state before
invoking tcp_cleanup_rbuf().

Fixes: c76c6956566f ("mptcp: call tcp_cleanup_rbuf on subflows")
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Reviewed-by: Matthieu Baerts (NGI0) <matttbe@kernel.org>
Link: https://patch.msgid.link/02374660836e1b52afc91966b7535c8c5f7bafb0.1731060874.git.pabeni@redhat.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit ce7356ae35943cc6494cc692e62d51a734062b7d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/mptcp/protocol.c
diff --cc net/mptcp/protocol.c
index bc1ce6b89e7f,48d480982b78..000000000000
--- a/net/mptcp/protocol.c
+++ b/net/mptcp/protocol.c
@@@ -2057,8 -2081,9 +2057,14 @@@ static void mptcp_rcv_space_adjust(stru
  				ssk = mptcp_subflow_tcp_sock(subflow);
  				slow = lock_sock_fast(ssk);
  				WRITE_ONCE(ssk->sk_rcvbuf, rcvbuf);
++<<<<<<< HEAD
 +				tcp_sk(ssk)->window_clamp = window_clamp;
 +				tcp_cleanup_rbuf(ssk, 1);
++=======
+ 				WRITE_ONCE(tcp_sk(ssk)->window_clamp, window_clamp);
+ 				if (tcp_can_send_ack(ssk))
+ 					tcp_cleanup_rbuf(ssk, 1);
++>>>>>>> ce7356ae3594 (mptcp: cope racing subflow creation in mptcp_rcv_space_adjust)
  				unlock_sock_fast(ssk, slow);
  			}
  		}
* Unmerged path net/mptcp/protocol.c
