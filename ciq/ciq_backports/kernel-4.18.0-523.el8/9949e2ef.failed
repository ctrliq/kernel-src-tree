bonding: fix send_peer_notif overflow

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-523.el8
commit-author Hangbin Liu <liuhangbin@gmail.com>
commit 9949e2efb54eb3001cb2f6512ff3166dddbfb75d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-523.el8/9949e2ef.failed

Bonding send_peer_notif was defined as u8. Since commit 07a4ddec3ce9
("bonding: add an option to specify a delay between peer notifications").
the bond->send_peer_notif will be num_peer_notif multiplied by
peer_notif_delay, which is u8 * u32. This would cause the send_peer_notif
overflow easily. e.g.

  ip link add bond0 type bond mode 1 miimon 100 num_grat_arp 30 peer_notify_delay 1000

To fix the overflow, let's set the send_peer_notif to u32 and limit
peer_notif_delay to 300s.

	Reported-by: Liang Li <liali@redhat.com>
Closes: https://bugzilla.redhat.com/show_bug.cgi?id=2090053
Fixes: 07a4ddec3ce9 ("bonding: add an option to specify a delay between peer notifications")
	Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 9949e2efb54eb3001cb2f6512ff3166dddbfb75d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/bonding/bond_netlink.c
diff --cc drivers/net/bonding/bond_netlink.c
index 1d8d74713710,27cbe148f0db..000000000000
--- a/drivers/net/bonding/bond_netlink.c
+++ b/drivers/net/bonding/bond_netlink.c
@@@ -109,7 -119,9 +114,13 @@@ static const struct nla_policy bond_pol
  	[IFLA_BOND_AD_ACTOR_SYSTEM]	= { .type = NLA_BINARY,
  					    .len  = ETH_ALEN },
  	[IFLA_BOND_TLB_DYNAMIC_LB]	= { .type = NLA_U8 },
++<<<<<<< HEAD
 +	[IFLA_BOND_PEER_NOTIF_DELAY]    = { .type = NLA_U32 },
++=======
+ 	[IFLA_BOND_PEER_NOTIF_DELAY]    = NLA_POLICY_FULL_RANGE(NLA_U32, &delay_range),
+ 	[IFLA_BOND_MISSED_MAX]		= { .type = NLA_U8 },
+ 	[IFLA_BOND_NS_IP6_TARGET]	= { .type = NLA_NESTED },
++>>>>>>> 9949e2efb54e (bonding: fix send_peer_notif overflow)
  };
  
  static const struct nla_policy bond_slave_policy[IFLA_BOND_SLAVE_MAX + 1] = {
* Unmerged path drivers/net/bonding/bond_netlink.c
diff --git a/drivers/net/bonding/bond_options.c b/drivers/net/bonding/bond_options.c
index 39b88a0635a5..8c123fb522bc 100644
--- a/drivers/net/bonding/bond_options.c
+++ b/drivers/net/bonding/bond_options.c
@@ -163,6 +163,12 @@ static const struct bond_opt_value bond_num_peer_notif_tbl[] = {
 	{ NULL,      -1,  0}
 };
 
+static const struct bond_opt_value bond_peer_notif_delay_tbl[] = {
+	{ "off",     0,   0},
+	{ "maxval",  300000, BOND_VALFLAG_MAX},
+	{ NULL,      -1,  0}
+};
+
 static const struct bond_opt_value bond_primary_reselect_tbl[] = {
 	{ "always",  BOND_PRI_RESELECT_ALWAYS,  BOND_VALFLAG_DEFAULT},
 	{ "better",  BOND_PRI_RESELECT_BETTER,  0},
@@ -449,7 +455,7 @@ static const struct bond_option bond_opts[BOND_OPT_LAST] = {
 		.id = BOND_OPT_PEER_NOTIF_DELAY,
 		.name = "peer_notif_delay",
 		.desc = "Delay between each peer notification on failover event, in milliseconds",
-		.values = bond_intmax_tbl,
+		.values = bond_peer_notif_delay_tbl,
 		.set = bond_option_peer_notif_delay_set
 	}
 };
diff --git a/include/net/bonding.h b/include/net/bonding.h
index 5056c8fe4d1e..8325f5f55eb5 100644
--- a/include/net/bonding.h
+++ b/include/net/bonding.h
@@ -226,7 +226,7 @@ struct bonding {
 	 */
 	spinlock_t mode_lock;
 	spinlock_t stats_lock;
-	u8	 send_peer_notif;
+	u32	 send_peer_notif;
 	u8       igmp_retrans;
 #ifdef CONFIG_PROC_FS
 	struct   proc_dir_entry *proc_entry;
