s390/vfio_ap: use TAPQ to verify reset in progress completes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-523.el8
commit-author Tony Krowiak <akrowiak@linux.ibm.com>
commit 3ba41768105c70faa1e1677c173a9eedc31c5094
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-523.el8/3ba41768.failed

To eliminate the repeated calls to the PQAP(ZAPQ) function to verify that
a reset in progress completed successfully and ensure that error response
codes get appropriately logged, let's call the apq_reset_check() function
when the ZAPQ response code indicates that a reset that is already in
progress.

	Signed-off-by: Tony Krowiak <akrowiak@linux.ibm.com>
	Reviewed-by: Jason J. Herne <jjherne@linux.ibm.com>
	Reviewed-by: Harald Freudenberger <freude@linux.ibm.com>
Link: https://lore.kernel.org/r/20230118203111.529766-4-akrowiak@linux.ibm.com
	Signed-off-by: Christian Borntraeger <borntraeger@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit 3ba41768105c70faa1e1677c173a9eedc31c5094)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/vfio_ap_ops.c
diff --cc drivers/s390/crypto/vfio_ap_ops.c
index 063ff78013f3,bc9a814e6508..000000000000
--- a/drivers/s390/crypto/vfio_ap_ops.c
+++ b/drivers/s390/crypto/vfio_ap_ops.c
@@@ -30,7 -32,8 +30,12 @@@
  
  static int vfio_ap_mdev_reset_queues(struct ap_queue_table *qtable);
  static struct vfio_ap_queue *vfio_ap_find_queue(int apqn);
++<<<<<<< HEAD
 +static int vfio_ap_mdev_reset_queue(struct vfio_ap_queue *q, unsigned int retry);
++=======
+ static const struct vfio_device_ops vfio_ap_matrix_dev_ops;
+ static int vfio_ap_mdev_reset_queue(struct vfio_ap_queue *q);
++>>>>>>> 3ba41768105c (s390/vfio_ap: use TAPQ to verify reset in progress completes)
  
  /**
   * get_update_locks_for_kvm: Acquire the locks required to dynamically update a
* Unmerged path drivers/s390/crypto/vfio_ap_ops.c
