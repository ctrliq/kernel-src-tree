gfs2: Rename SDF_{FS_FROZEN => FREEZE_INITIATOR}

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-477.27.1.el8_8
commit-author Andreas Gruenbacher <agruenba@redhat.com>
commit cad1e15804a83afd9a5c1d95a428d60d1f9c0340
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-477.27.1.el8_8/cad1e158.failed

Rename the SDF_FS_FROZEN flag to SDF_FREEZE_INITIATOR to indicate more
clearly that the node that has this flag set is the initiator of the
freeze.

	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com
(cherry picked from commit cad1e15804a83afd9a5c1d95a428d60d1f9c0340)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/super.c
diff --cc fs/gfs2/super.c
index f0078c4bdb56,9a428e09d38c..000000000000
--- a/fs/gfs2/super.c
+++ b/fs/gfs2/super.c
@@@ -701,8 -691,8 +701,13 @@@ void gfs2_freeze_func(struct work_struc
  		gfs2_freeze_unlock(&freeze_gh);
  	}
  	deactivate_super(sb);
++<<<<<<< HEAD
 +	clear_bit(SDF_FS_FROZEN, &sdp->sd_flags);
 +	wake_up_bit(&sdp->sd_flags, SDF_FS_FROZEN);
++=======
+ 	clear_bit_unlock(SDF_FREEZE_INITIATOR, &sdp->sd_flags);
+ 	wake_up_bit(&sdp->sd_flags, SDF_FREEZE_INITIATOR);
++>>>>>>> cad1e15804a8 (gfs2: Rename SDF_{FS_FROZEN => FREEZE_INITIATOR})
  	return;
  }
  
diff --git a/fs/gfs2/incore.h b/fs/gfs2/incore.h
index a5f7b8007a85..1b411ddf2442 100644
--- a/fs/gfs2/incore.h
+++ b/fs/gfs2/incore.h
@@ -605,7 +605,7 @@ enum {
 	SDF_RORECOVERY		= 7, /* read only recovery */
 	SDF_SKIP_DLM_UNLOCK	= 8,
 	SDF_FORCE_AIL_FLUSH     = 9,
-	SDF_FS_FROZEN           = 10,
+	SDF_FREEZE_INITIATOR	= 10,
 	SDF_WITHDRAWING		= 11, /* Will withdraw eventually */
 	SDF_WITHDRAW_IN_PROG	= 12, /* Withdraw is in progress */
 	SDF_REMOTE_WITHDRAW	= 13, /* Performing remote recovery */
* Unmerged path fs/gfs2/super.c
diff --git a/fs/gfs2/sys.c b/fs/gfs2/sys.c
index 72a071f12c50..48ce2454b075 100644
--- a/fs/gfs2/sys.c
+++ b/fs/gfs2/sys.c
@@ -114,7 +114,7 @@ static ssize_t status_show(struct gfs2_sbd *sdp, char *buf)
 		     test_bit(SDF_RORECOVERY, &f),
 		     test_bit(SDF_SKIP_DLM_UNLOCK, &f),
 		     test_bit(SDF_FORCE_AIL_FLUSH, &f),
-		     test_bit(SDF_FS_FROZEN, &f),
+		     test_bit(SDF_FREEZE_INITIATOR, &f),
 		     test_bit(SDF_WITHDRAWING, &f),
 		     test_bit(SDF_WITHDRAW_IN_PROG, &f),
 		     test_bit(SDF_REMOTE_WITHDRAW, &f),
diff --git a/fs/gfs2/util.c b/fs/gfs2/util.c
index 8db57f0f2c81..994167abed7f 100644
--- a/fs/gfs2/util.c
+++ b/fs/gfs2/util.c
@@ -188,7 +188,7 @@ static void signal_our_withdraw(struct gfs2_sbd *sdp)
 	}
 	sdp->sd_jinode_gh.gh_flags |= GL_NOCACHE;
 	gfs2_glock_dq(&sdp->sd_jinode_gh);
-	if (test_bit(SDF_FS_FROZEN, &sdp->sd_flags)) {
+	if (test_bit(SDF_FREEZE_INITIATOR, &sdp->sd_flags)) {
 		/* Make sure gfs2_thaw_super works if partially-frozen */
 		flush_work(&sdp->sd_freeze_work);
 		atomic_set(&sdp->sd_freeze_state, SFS_FROZEN);
