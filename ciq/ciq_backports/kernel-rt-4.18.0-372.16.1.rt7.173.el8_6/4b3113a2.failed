gfs2: remove RDF_UPTODATE flag

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.16.1.rt7.173.el8_6
commit-author Bob Peterson <rpeterso@redhat.com>
commit 4b3113a2573168e382fb64397ba1481f3b2a1ad7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.16.1.rt7.173.el8_6/4b3113a2.failed

The new GLF_INSTANTIATE_NEEDED flag obsoletes the old rgrp flag
GFS2_RDF_UPTODATE, so this patch replaces it like we did with inodes.

	Signed-off-by: Bob Peterson <rpeterso@redhat.com>
	Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
(cherry picked from commit 4b3113a2573168e382fb64397ba1481f3b2a1ad7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/gfs2/rgrp.c
diff --cc fs/gfs2/rgrp.c
index 7e8aeb333719,0fb3c01bc557..000000000000
--- a/fs/gfs2/rgrp.c
+++ b/fs/gfs2/rgrp.c
@@@ -1291,13 -1285,6 +1290,16 @@@ static int update_rgrp_lvb(struct gfs2_
  	return 0;
  }
  
++<<<<<<< HEAD
 +int gfs2_rgrp_go_lock(struct gfs2_holder *gh)
 +{
 +	struct gfs2_rgrpd *rgd = gh->gh_gl->gl_object;
 +
 +	return gfs2_rgrp_bh_get(rgd);
 +}
 +
++=======
++>>>>>>> 4b3113a25731 (gfs2: remove RDF_UPTODATE flag)
  /**
   * gfs2_rgrp_brelse - Release RG bitmaps read in with gfs2_rgrp_bh_get()
   * @rgd: The resource group
diff --git a/fs/gfs2/glops.c b/fs/gfs2/glops.c
index 2e08b899f53d..ec8421145f01 100644
--- a/fs/gfs2/glops.c
+++ b/fs/gfs2/glops.c
@@ -228,7 +228,7 @@ static void rgrp_go_inval(struct gfs2_glock *gl, int flags)
 	gfs2_rgrp_brelse(rgd);
 	WARN_ON_ONCE(!(flags & DIO_METADATA));
 	truncate_inode_pages_range(mapping, start, end);
-	rgd->rd_flags &= ~GFS2_RDF_UPTODATE;
+	set_bit(GLF_INSTANTIATE_NEEDED, &gl->gl_flags);
 }
 
 static void gfs2_rgrp_go_dump(struct seq_file *seq, struct gfs2_glock *gl,
diff --git a/fs/gfs2/incore.h b/fs/gfs2/incore.h
index 105717b0019c..42dbc313b67a 100644
--- a/fs/gfs2/incore.h
+++ b/fs/gfs2/incore.h
@@ -122,7 +122,6 @@ struct gfs2_rgrpd {
 	u32 rd_flags;
 	u32 rd_extfail_pt;		/* extent failure point */
 #define GFS2_RDF_CHECK		0x10000000 /* check for unlinked inodes */
-#define GFS2_RDF_UPTODATE	0x20000000 /* rg is up to date */
 #define GFS2_RDF_ERROR		0x40000000 /* error in rg */
 #define GFS2_RDF_PREFERRED	0x80000000 /* This rgrp is preferred */
 #define GFS2_RDF_MASK		0xf0000000 /* mask for internal flags */
* Unmerged path fs/gfs2/rgrp.c
