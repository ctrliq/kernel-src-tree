net/sched: act_ct: fix ref leak when switching zones

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.16.1.rt7.173.el8_6
commit-author Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
commit bcb74e132a76ce0502bb33d5b65533a4ed72d159
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.16.1.rt7.173.el8_6/bcb74e13.failed

When switching zones or network namespaces without doing a ct clear in
between, it is now leaking a reference to the old ct entry. That's
because tcf_ct_skb_nfct_cached() returns false and
tcf_ct_flow_table_lookup() may simply overwrite it.

The fix is to, as the ct entry is not reusable, free it already at
tcf_ct_skb_nfct_cached().

	Reported-by: Florian Westphal <fw@strlen.de>
Fixes: 2f131de361f6 ("net/sched: act_ct: Fix flow table lookup after ct clear or switching zones")
	Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit bcb74e132a76ce0502bb33d5b65533a4ed72d159)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_ct.c
diff --cc net/sched/act_ct.c
index e5c924a5128e,b1f502fce595..000000000000
--- a/net/sched/act_ct.c
+++ b/net/sched/act_ct.c
@@@ -593,10 -675,7 +593,14 @@@ static bool tcf_ct_skb_nfct_cached(stru
  		if (nf_ct_is_confirmed(ct))
  			nf_ct_kill(ct);
  
++<<<<<<< HEAD
 +		nf_conntrack_put(&ct->ct_general);
 +		nf_ct_set(skb, NULL, IP_CT_UNTRACKED);
 +
 +		return false;
++=======
+ 		goto drop_ct;
++>>>>>>> bcb74e132a76 (net/sched: act_ct: fix ref leak when switching zones)
  	}
  
  	return true;
* Unmerged path net/sched/act_ct.c
