USB: core: Fix docs warning caused by wireless_status feature

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-526.el8
commit-author Bastien Nocera <hadess@hadess.net>
commit 539adfedbd2d5cda2f9e2d83b35b364834b67d58
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-526.el8/539adfed.failed

Fix wrongly named 'dev' parameter in doc block, should have been iface:
drivers/usb/core/message.c:1939: warning: Function parameter or member 'iface' not described in 'usb_set_wireless_status'
drivers/usb/core/message.c:1939: warning: Excess function parameter 'dev' description in 'usb_set_wireless_status'

And fix missing struct member doc in kernel API, and reorder to
match struct:
include/linux/usb.h:270: warning: Function parameter or member 'wireless_status_work' not described in 'usb_interface'

	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Link: https://lore.kernel.org/linux-next/20230405114807.5a57bf46@canb.auug.org.au/T/#t
Fixes: 0a4db185f078 ("USB: core: Add API to change the wireless_status")
	Signed-off-by: Bastien Nocera <hadess@hadess.net>
	Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Link: https://lore.kernel.org/r/20230405092754.36579-1-hadess@hadess.net
[bentiss: fix checkpatch warning]
	Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
(cherry picked from commit 539adfedbd2d5cda2f9e2d83b35b364834b67d58)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/core/message.c
diff --cc drivers/usb/core/message.c
index ca5526b767be,b5811620f1de..000000000000
--- a/drivers/usb/core/message.c
+++ b/drivers/usb/core/message.c
@@@ -1903,6 -1908,45 +1903,48 @@@ static void __usb_queue_reset_device(st
  	usb_put_intf(iface);	/* Undo _get_ in usb_queue_reset_device() */
  }
  
++<<<<<<< HEAD
++=======
+ /*
+  * Internal function to set the wireless_status sysfs attribute
+  * See usb_set_wireless_status() for more details
+  */
+ static void __usb_wireless_status_intf(struct work_struct *ws)
+ {
+ 	struct usb_interface *iface =
+ 		container_of(ws, struct usb_interface, wireless_status_work);
+ 
+ 	device_lock(iface->dev.parent);
+ 	if (iface->sysfs_files_created)
+ 		usb_update_wireless_status_attr(iface);
+ 	device_unlock(iface->dev.parent);
+ 	usb_put_intf(iface);	/* Undo _get_ in usb_set_wireless_status() */
+ }
+ 
+ /**
+  * usb_set_wireless_status - sets the wireless_status struct member
+  * @iface: the interface to modify
+  * @status: the new wireless status
+  *
+  * Set the wireless_status struct member to the new value, and emit
+  * sysfs changes as necessary.
+  *
+  * Returns: 0 on success, -EALREADY if already set.
+  */
+ int usb_set_wireless_status(struct usb_interface *iface,
+ 		enum usb_wireless_status status)
+ {
+ 	if (iface->wireless_status == status)
+ 		return -EALREADY;
+ 
+ 	usb_get_intf(iface);
+ 	iface->wireless_status = status;
+ 	schedule_work(&iface->wireless_status_work);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(usb_set_wireless_status);
++>>>>>>> 539adfedbd2d (USB: core: Fix docs warning caused by wireless_status feature)
  
  /*
   * usb_set_configuration - Makes a particular device setting be current
* Unmerged path drivers/usb/core/message.c
diff --git a/include/linux/usb.h b/include/linux/usb.h
index d7580b040d7e..8551b22c9b5b 100644
--- a/include/linux/usb.h
+++ b/include/linux/usb.h
@@ -197,6 +197,10 @@ usb_find_last_int_out_endpoint(struct usb_host_interface *alt,
  *	following a reset or suspend operation it doesn't support.
  * @authorized: This allows to (de)authorize individual interfaces instead
  *	a whole device in contrast to the device authorization.
+ * @wireless_status: if the USB device uses a receiver/emitter combo, whether
+ *	the emitter is connected.
+ * @wireless_status_work: Used for scheduling wireless status changes
+ *	from atomic context.
  * @dev: driver model's view of this device
  * @usb_dev: if an interface is bound to the USB major, this will point
  *	to the sysfs representation for that device.
