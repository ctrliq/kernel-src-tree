ethtool: runtime-resume netdev parent before ethtool ioctl ops

jira LE-3201
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.47.1.rt7.388.el8_10
commit-author Heiner Kallweit <hkallweit1@gmail.com>
commit f32a213765739f2a1db319346799f130a3d08820
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.47.1.rt7.388.el8_10/f32a2137.failed

If a network device is runtime-suspended then:
- network device may be flagged as detached and all ethtool ops (even if not
  accessing the device) will fail because netif_device_present() returns
  false
- ethtool ops may fail because device is not accessible (e.g. because being
  in D3 in case of a PCI device)

It may not be desirable that userspace can't use even simple ethtool ops
that not access the device if interface or link is down. To be more friendly
to userspace let's ensure that device is runtime-resumed when executing the
respective ethtool op in kernel.

	Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f32a213765739f2a1db319346799f130a3d08820)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ethtool/ioctl.c
diff --cc net/ethtool/ioctl.c
index 8e50e7d5e44d,81fa36a4c9c4..000000000000
--- a/net/ethtool/ioctl.c
+++ b/net/ethtool/ioctl.c
@@@ -26,8 -24,9 +26,9 @@@
  #include <linux/rtnetlink.h>
  #include <linux/sched/signal.h>
  #include <linux/net.h>
+ #include <linux/pm_runtime.h>
  #include <net/devlink.h>
 -#include <net/xdp_sock_drv.h>
 +#include RH_KABI_HIDE_INCLUDE(<net/xdp_sock_drv.h>)
  #include <net/flow_offload.h>
  #include <linux/ethtool_netlink.h>
  #include <generated/utsrelease.h>
@@@ -2715,7 -2693,6 +2716,10 @@@ __dev_ethtool(struct net *net, struct i
  	int rc;
  	netdev_features_t old_features;
  
++<<<<<<< HEAD
 +	dev = __dev_get_by_name(net, ifr->ifr_name);
++=======
++>>>>>>> f32a21376573 (ethtool: runtime-resume netdev parent before ethtool ioctl ops)
  	if (!dev)
  		return -ENODEV;
  
* Unmerged path net/ethtool/ioctl.c
