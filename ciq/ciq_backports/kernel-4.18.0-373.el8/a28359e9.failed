net/mlx5e: Add PTP-RX statistics

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Aya Levin <ayal@nvidia.com>
commit a28359e922c681a23c01e4858175d9e98c5ff88a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/a28359e9.failed

Like PTP-TX, once the PTP-RX is opened, corresponding statistics appear.
Add indication that PTP-RX was ever opened: rx_ptp_opened. If any of the
PTP RX or TX were opened, display the PTP channel's statistics.

	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Signed-off-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit a28359e922c681a23c01e4858175d9e98c5ff88a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en.h
#	drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en.h
index 9cd4c188c5a0,8f6ccd54057a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en.h
@@@ -859,10 -856,11 +859,15 @@@ struct mlx5e_priv 
  	struct mlx5e_stats         stats;
  	struct mlx5e_channel_stats channel_stats[MLX5E_MAX_NUM_CHANNELS];
  	struct mlx5e_channel_stats trap_stats;
 -	struct mlx5e_ptp_stats     ptp_stats;
 +	struct mlx5e_port_ptp_stats port_ptp_stats;
  	u16                        max_nch;
  	u8                         max_opened_tc;
++<<<<<<< HEAD
 +	bool                       port_ptp_opened;
++=======
+ 	bool                       tx_ptp_opened;
+ 	bool                       rx_ptp_opened;
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  	struct hwtstamp_config     tstamp;
  	u16                        q_counter;
  	u16                        drop_rq_q_counter;
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
index 1c19000d2cca,f67e51d8291a..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
@@@ -403,13 -407,21 +403,30 @@@ static void mlx5e_stats_grp_sw_update_s
  {
  	int i;
  
++<<<<<<< HEAD
 +	if (!priv->port_ptp_opened)
++=======
+ 	if (!priv->tx_ptp_opened && !priv->rx_ptp_opened)
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  		return;
  
 -	mlx5e_stats_grp_sw_update_stats_ch_stats(s, &priv->ptp_stats.ch);
 +	mlx5e_stats_grp_sw_update_stats_ch_stats(s, &priv->port_ptp_stats.ch);
  
++<<<<<<< HEAD
 +	for (i = 0; i < priv->max_opened_tc; i++) {
 +		mlx5e_stats_grp_sw_update_stats_sq(s, &priv->port_ptp_stats.sq[i]);
++=======
+ 	if (priv->tx_ptp_opened) {
+ 		for (i = 0; i < priv->max_opened_tc; i++) {
+ 			mlx5e_stats_grp_sw_update_stats_sq(s, &priv->ptp_stats.sq[i]);
+ 
+ 			/* https://gcc.gnu.org/bugzilla/show_bug.cgi?id=92657 */
+ 			barrier();
+ 		}
+ 	}
+ 	if (priv->rx_ptp_opened) {
+ 		mlx5e_stats_grp_sw_update_stats_rq_stats(s, &priv->ptp_stats.rq);
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  
  		/* https://gcc.gnu.org/bugzilla/show_bug.cgi?id=92657 */
  		barrier();
@@@ -1844,17 -1892,24 +1894,35 @@@ static MLX5E_DECLARE_STATS_GRP_OP_UPDAT
  
  static MLX5E_DECLARE_STATS_GRP_OP_NUM_STATS(ptp)
  {
++<<<<<<< HEAD
 +	return priv->port_ptp_opened ?
 +	       NUM_PTP_CH_STATS +
 +	       ((NUM_PTP_SQ_STATS + NUM_PTP_CQ_STATS) * priv->max_opened_tc) :
 +	       0;
++=======
+ 	int num = NUM_PTP_CH_STATS;
+ 
+ 	if (!priv->tx_ptp_opened && !priv->rx_ptp_opened)
+ 		return 0;
+ 
+ 	if (priv->tx_ptp_opened)
+ 		num += (NUM_PTP_SQ_STATS + NUM_PTP_CQ_STATS) * priv->max_opened_tc;
+ 	if (priv->rx_ptp_opened)
+ 		num += NUM_PTP_RQ_STATS;
+ 
+ 	return num;
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  }
  
  static MLX5E_DECLARE_STATS_GRP_OP_FILL_STRS(ptp)
  {
  	int i, tc;
  
++<<<<<<< HEAD
 +	if (!priv->port_ptp_opened)
++=======
+ 	if (!priv->tx_ptp_opened && !priv->rx_ptp_opened)
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  		return idx;
  
  	for (i = 0; i < NUM_PTP_CH_STATS; i++)
@@@ -1877,26 -1939,33 +1952,51 @@@ static MLX5E_DECLARE_STATS_GRP_OP_FILL_
  {
  	int i, tc;
  
++<<<<<<< HEAD
 +	if (!priv->port_ptp_opened)
++=======
+ 	if (!priv->tx_ptp_opened && !priv->rx_ptp_opened)
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  		return idx;
  
  	for (i = 0; i < NUM_PTP_CH_STATS; i++)
  		data[idx++] =
 -			MLX5E_READ_CTR64_CPU(&priv->ptp_stats.ch,
 +			MLX5E_READ_CTR64_CPU(&priv->port_ptp_stats.ch,
  					     ptp_ch_stats_desc, i);
  
++<<<<<<< HEAD
 +	for (tc = 0; tc < priv->max_opened_tc; tc++)
 +		for (i = 0; i < NUM_PTP_SQ_STATS; i++)
 +			data[idx++] =
 +				MLX5E_READ_CTR64_CPU(&priv->port_ptp_stats.sq[tc],
 +						     ptp_sq_stats_desc, i);
- 
- 	for (tc = 0; tc < priv->max_opened_tc; tc++)
- 		for (i = 0; i < NUM_PTP_CQ_STATS; i++)
++=======
+ 	if (priv->tx_ptp_opened) {
+ 		for (tc = 0; tc < priv->max_opened_tc; tc++)
+ 			for (i = 0; i < NUM_PTP_SQ_STATS; i++)
+ 				data[idx++] =
+ 					MLX5E_READ_CTR64_CPU(&priv->ptp_stats.sq[tc],
+ 							     ptp_sq_stats_desc, i);
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
+ 
+ 		for (tc = 0; tc < priv->max_opened_tc; tc++)
+ 			for (i = 0; i < NUM_PTP_CQ_STATS; i++)
+ 				data[idx++] =
+ 					MLX5E_READ_CTR64_CPU(&priv->ptp_stats.cq[tc],
+ 							     ptp_cq_stats_desc, i);
+ 	}
+ 	if (priv->rx_ptp_opened) {
+ 		for (i = 0; i < NUM_PTP_RQ_STATS; i++)
  			data[idx++] =
++<<<<<<< HEAD
 +				MLX5E_READ_CTR64_CPU(&priv->port_ptp_stats.cq[tc],
 +						     ptp_cq_stats_desc, i);
 +
++=======
+ 				MLX5E_READ_CTR64_CPU(&priv->ptp_stats.rq,
+ 						     ptp_rq_stats_desc, i);
+ 	}
++>>>>>>> a28359e922c6 (net/mlx5e: Add PTP-RX statistics)
  	return idx;
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en.h
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
index f9afbdefded5..a632985e995b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/ptp.c
@@ -487,6 +487,9 @@ int mlx5e_port_ptp_open(struct mlx5e_priv *priv, struct mlx5e_params *params,
 	if (unlikely(err))
 		goto err_napi_del;
 
+	if (test_bit(MLX5E_PTP_STATE_RX, c->state))
+		priv->rx_ptp_opened = true;
+
 	*cp = c;
 
 	kvfree(cparams);
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index fca0e8f30721..c3d6dd7d4944 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -3498,6 +3498,13 @@ void mlx5e_fold_sw_stats64(struct mlx5e_priv *priv, struct rtnl_link_stats64 *s)
 			s->tx_dropped    += sq_stats->dropped;
 		}
 	}
+	if (priv->rx_ptp_opened) {
+		struct mlx5e_rq_stats *rq_stats = &priv->ptp_stats.rq;
+
+		s->rx_packets   += rq_stats->packets;
+		s->rx_bytes     += rq_stats->bytes;
+		s->multicast    += rq_stats->mcast_packets;
+	}
 }
 
 void
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_stats.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
index 5aaebb1db17b..8a0ac0f8264b 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_stats.h
@@ -54,6 +54,7 @@
 #define MLX5E_DECLARE_PTP_TX_STAT(type, fld) "ptp_tx%d_"#fld, offsetof(type, fld)
 #define MLX5E_DECLARE_PTP_CH_STAT(type, fld) "ptp_ch_"#fld, offsetof(type, fld)
 #define MLX5E_DECLARE_PTP_CQ_STAT(type, fld) "ptp_cq%d_"#fld, offsetof(type, fld)
+#define MLX5E_DECLARE_PTP_RQ_STAT(type, fld) "ptp_rq%d_"#fld, offsetof(type, fld)
 
 #define MLX5E_DECLARE_QOS_TX_STAT(type, fld) "qos_tx%d_"#fld, offsetof(type, fld)
 
