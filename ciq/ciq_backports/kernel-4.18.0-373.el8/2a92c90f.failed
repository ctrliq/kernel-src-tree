software node: Fix device_add_software_node()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Heikki Krogerus <heikki.krogerus@linux.intel.com>
commit 2a92c90f2ecca4475d6050f2f938a1755a8954cc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/2a92c90f.failed

The function device_add_software_node() was meant to
register the node supplied to it, but only if that node
wasn't already registered. Right now the function attempts
to always register the node. That will cause a failure with
nodes that are already registered.

Fixing that by incrementing the reference count of the nodes
that have already been registered, and only registering the
new nodes. Also, clarifying the behaviour in the function
documentation.

Fixes: e68d0119e328 ("software node: Introduce device_add_software_node()")
	Signed-off-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Tested-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 2a92c90f2ecca4475d6050f2f938a1755a8954cc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/swnode.c
#	include/linux/property.h
diff --cc drivers/base/swnode.c
index a113c24c8871,fa3719ef80e4..000000000000
--- a/drivers/base/swnode.c
+++ b/drivers/base/swnode.c
@@@ -990,6 -1003,61 +990,64 @@@ void fwnode_remove_software_node(struc
  EXPORT_SYMBOL_GPL(fwnode_remove_software_node);
  
  /**
++<<<<<<< HEAD
++=======
+  * device_add_software_node - Assign software node to a device
+  * @dev: The device the software node is meant for.
+  * @node: The software node.
+  *
+  * This function will make @node the secondary firmware node pointer of @dev. If
+  * @dev has no primary node, then @node will become the primary node. The
+  * function will register @node automatically if it wasn't already registered.
+  */
+ int device_add_software_node(struct device *dev, const struct software_node *node)
+ {
+ 	struct swnode *swnode;
+ 	int ret;
+ 
+ 	/* Only one software node per device. */
+ 	if (dev_to_swnode(dev))
+ 		return -EBUSY;
+ 
+ 	swnode = software_node_to_swnode(node);
+ 	if (swnode) {
+ 		kobject_get(&swnode->kobj);
+ 	} else {
+ 		ret = software_node_register(node);
+ 		if (ret)
+ 			return ret;
+ 
+ 		swnode = software_node_to_swnode(node);
+ 	}
+ 
+ 	set_secondary_fwnode(dev, &swnode->fwnode);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_GPL(device_add_software_node);
+ 
+ /**
+  * device_remove_software_node - Remove device's software node
+  * @dev: The device with the software node.
+  *
+  * This function will unregister the software node of @dev.
+  */
+ void device_remove_software_node(struct device *dev)
+ {
+ 	struct swnode *swnode;
+ 
+ 	swnode = dev_to_swnode(dev);
+ 	if (!swnode)
+ 		return;
+ 
+ 	software_node_notify(dev, KOBJ_REMOVE);
+ 	set_secondary_fwnode(dev, NULL);
+ 	kobject_put(&swnode->kobj);
+ }
+ EXPORT_SYMBOL_GPL(device_remove_software_node);
+ 
+ /**
++>>>>>>> 2a92c90f2ecc (software node: Fix device_add_software_node())
   * device_create_managed_software_node - Create a software node for a device
   * @dev: The device the software node is assigned to.
   * @properties: Device properties for the software node.
diff --cc include/linux/property.h
index b56f82009d9e,dd4687b56239..000000000000
--- a/include/linux/property.h
+++ b/include/linux/property.h
@@@ -459,6 -488,9 +459,12 @@@ fwnode_create_software_node(const struc
  			    const struct fwnode_handle *parent);
  void fwnode_remove_software_node(struct fwnode_handle *fwnode);
  
++<<<<<<< HEAD
++=======
+ int device_add_software_node(struct device *dev, const struct software_node *node);
+ void device_remove_software_node(struct device *dev);
+ 
++>>>>>>> 2a92c90f2ecc (software node: Fix device_add_software_node())
  int device_create_managed_software_node(struct device *dev,
  					const struct property_entry *properties,
  					const struct software_node *parent);
* Unmerged path drivers/base/swnode.c
* Unmerged path include/linux/property.h
