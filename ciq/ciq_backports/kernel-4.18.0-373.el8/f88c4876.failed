net/mlx5: Fix setting number of EQs of SFs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Shay Drory <shayd@nvidia.com>
commit f88c4876347400a577598e06f1b230a7b19ee0e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/f88c4876.failed

When setting number of completion EQs of the SF, consider number of
online CPUs.
Without this consideration, when number of online cpus are less than 8,
unnecessary 8 completion EQs are allocated.

Fixes: c36326d38d93 ("net/mlx5: Round-Robin EQs over IRQs")
	Signed-off-by: Shay Drory <shayd@nvidia.com>
	Reviewed-by: Parav Pandit <parav@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit f88c4876347400a577598e06f1b230a7b19ee0e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
index 9ba149578ea8,763c83a02380..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
@@@ -458,6 -630,16 +458,19 @@@ void mlx5_irq_table_destroy(struct mlx5
  	pci_free_irq_vectors(dev->pdev);
  }
  
++<<<<<<< HEAD
++=======
+ int mlx5_irq_table_get_sfs_vec(struct mlx5_irq_table *table)
+ {
+ 	if (table->sf_comp_pool)
+ 		return min_t(int, num_online_cpus(),
+ 			     table->sf_comp_pool->xa_num_irqs.max -
+ 			     table->sf_comp_pool->xa_num_irqs.min + 1);
+ 	else
+ 		return mlx5_irq_table_get_num_comp(table);
+ }
+ 
++>>>>>>> f88c48763474 (net/mlx5: Fix setting number of EQs of SFs)
  struct mlx5_irq_table *mlx5_irq_table_get(struct mlx5_core_dev *dev)
  {
  #ifdef CONFIG_MLX5_SF
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
