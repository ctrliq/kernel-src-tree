ASoC: constify of_phandle_args in snd_soc_get_dai_name()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Krzysztof Kozlowski <krzk@kernel.org>
commit 933f98be60a7b9c287acb081fb5d6659dd5e0441
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/933f98be.failed

The pointer to of_phandle_args passed to snd_soc_get_dai_name() and
of_xlate_dai_name() implementations is not modified.  Since it is being
used only to translate passed OF node to a DAI name, it should not be
modified, so mark it as const for correctness and safer code.

	Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>
Link: https://lore.kernel.org/r/20210221153024.453583-1-krzk@kernel.org
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 933f98be60a7b9c287acb081fb5d6659dd5e0441)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/meson/aiu-acodec-ctrl.c
#	sound/soc/meson/aiu-codec-ctrl.c
#	sound/soc/meson/aiu.c
#	sound/soc/meson/aiu.h
#	sound/soc/qcom/lpass-cpu.c
diff --cc sound/soc/qcom/lpass-cpu.c
index 0718a0fff9cb,4762286b33fe..000000000000
--- a/sound/soc/qcom/lpass-cpu.c
+++ b/sound/soc/qcom/lpass-cpu.c
@@@ -355,8 -339,30 +355,32 @@@ int asoc_qcom_lpass_cpu_dai_probe(struc
  }
  EXPORT_SYMBOL_GPL(asoc_qcom_lpass_cpu_dai_probe);
  
++<<<<<<< HEAD
++=======
+ static int asoc_qcom_of_xlate_dai_name(struct snd_soc_component *component,
+ 				   const struct of_phandle_args *args,
+ 				   const char **dai_name)
+ {
+ 	struct lpass_data *drvdata = snd_soc_component_get_drvdata(component);
+ 	struct lpass_variant *variant = drvdata->variant;
+ 	int id = args->args[0];
+ 	int ret = -EINVAL;
+ 	int i;
+ 
+ 	for (i = 0; i  < variant->num_dai; i++) {
+ 		if (variant->dai_driver[i].id == id) {
+ 			*dai_name = variant->dai_driver[i].name;
+ 			ret = 0;
+ 			break;
+ 		}
+ 	}
+ 
+ 	return ret;
+ }
+ 
++>>>>>>> 933f98be60a7 (ASoC: constify of_phandle_args in snd_soc_get_dai_name())
  static const struct snd_soc_component_driver lpass_cpu_comp_driver = {
  	.name = "lpass-cpu",
 -	.of_xlate_dai_name = asoc_qcom_of_xlate_dai_name,
  };
  
  static bool lpass_cpu_regmap_writeable(struct device *dev, unsigned int reg)
* Unmerged path sound/soc/meson/aiu-acodec-ctrl.c
* Unmerged path sound/soc/meson/aiu-codec-ctrl.c
* Unmerged path sound/soc/meson/aiu.c
* Unmerged path sound/soc/meson/aiu.h
diff --git a/include/sound/soc-component.h b/include/sound/soc-component.h
index 2eee793d8dc1..18b8f4c620f4 100644
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -101,7 +101,7 @@ struct snd_soc_component_driver {
 
 	/* DT */
 	int (*of_xlate_dai_name)(struct snd_soc_component *component,
-				 struct of_phandle_args *args,
+				 const struct of_phandle_args *args,
 				 const char **dai_name);
 	int (*of_xlate_dai_id)(struct snd_soc_component *comment,
 			       struct device_node *endpoint);
@@ -456,7 +456,7 @@ void snd_soc_component_remove(struct snd_soc_component *component);
 int snd_soc_component_of_xlate_dai_id(struct snd_soc_component *component,
 				      struct device_node *ep);
 int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
-					struct of_phandle_args *args,
+					const struct of_phandle_args *args,
 					const char **dai_name);
 int snd_soc_component_compr_open(struct snd_soc_component *component,
 				 struct snd_compr_stream *cstream);
diff --git a/include/sound/soc.h b/include/sound/soc.h
index d38428773834..9541af110529 100644
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -1257,7 +1257,7 @@ unsigned int snd_soc_daifmt_parse_clock_provider_raw(struct device_node *np,
 		snd_soc_daifmt_parse_clock_provider_as_bitmap(np, prefix))
 
 int snd_soc_get_dai_id(struct device_node *ep);
-int snd_soc_get_dai_name(struct of_phandle_args *args,
+int snd_soc_get_dai_name(const struct of_phandle_args *args,
 			 const char **dai_name);
 int snd_soc_of_get_dai_name(struct device_node *of_node,
 			    const char **dai_name);
* Unmerged path sound/soc/meson/aiu-acodec-ctrl.c
* Unmerged path sound/soc/meson/aiu-codec-ctrl.c
* Unmerged path sound/soc/meson/aiu.c
* Unmerged path sound/soc/meson/aiu.h
* Unmerged path sound/soc/qcom/lpass-cpu.c
diff --git a/sound/soc/qcom/qdsp6/q6afe-dai.c b/sound/soc/qcom/qdsp6/q6afe-dai.c
index 4e1f101281e7..e8915519f427 100644
--- a/sound/soc/qcom/qdsp6/q6afe-dai.c
+++ b/sound/soc/qcom/qdsp6/q6afe-dai.c
@@ -1315,7 +1315,7 @@ static struct snd_soc_dai_driver q6afe_dais[] = {
 };
 
 static int q6afe_of_xlate_dai_name(struct snd_soc_component *component,
-				   struct of_phandle_args *args,
+				   const struct of_phandle_args *args,
 				   const char **dai_name)
 {
 	int id = args->args[0];
diff --git a/sound/soc/soc-component.c b/sound/soc/soc-component.c
index ee3fe55d2913..c76ff9c59dfb 100644
--- a/sound/soc/soc-component.c
+++ b/sound/soc/soc-component.c
@@ -365,7 +365,7 @@ int snd_soc_component_of_xlate_dai_id(struct snd_soc_component *component,
 }
 
 int snd_soc_component_of_xlate_dai_name(struct snd_soc_component *component,
-					struct of_phandle_args *args,
+					const struct of_phandle_args *args,
 					const char **dai_name)
 {
 	if (component->driver->of_xlate_dai_name)
diff --git a/sound/soc/soc-core.c b/sound/soc/soc-core.c
index d694a72eaa5c..5853bed522e5 100644
--- a/sound/soc/soc-core.c
+++ b/sound/soc/soc-core.c
@@ -3200,7 +3200,7 @@ int snd_soc_get_dai_id(struct device_node *ep)
 }
 EXPORT_SYMBOL_GPL(snd_soc_get_dai_id);
 
-int snd_soc_get_dai_name(struct of_phandle_args *args,
+int snd_soc_get_dai_name(const struct of_phandle_args *args,
 				const char **dai_name)
 {
 	struct snd_soc_component *pos;
