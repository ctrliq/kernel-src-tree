netfilter: conntrack: move synack init code to helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Florian Westphal <fw@strlen.de>
commit cc4f9d62037ebcb811f4908bba2986c01df1bd50
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/cc4f9d62.failed

It seems more readable to use a common helper in the followup fix rather
than copypaste or goto.

No functional change intended.  The function is only called for syn-ack
or syn in repy direction in case of simultaneous open.

	Signed-off-by: Florian Westphal <fw@strlen.de>
	Acked-by: Jozsef Kadlecsik <kadlec@netfilter.org>
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit cc4f9d62037ebcb811f4908bba2986c01df1bd50)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_conntrack_proto_tcp.c
diff --cc net/netfilter/nf_conntrack_proto_tcp.c
index 947c78a08e5c,88c89e97d8a2..000000000000
--- a/net/netfilter/nf_conntrack_proto_tcp.c
+++ b/net/netfilter/nf_conntrack_proto_tcp.c
@@@ -461,8 -446,33 +461,38 @@@ static void tcp_sack(const struct sk_bu
  	}
  }
  
++<<<<<<< HEAD
 +static bool tcp_in_window(const struct nf_conn *ct,
 +			  struct ip_ct_tcp *state,
++=======
+ static void tcp_init_sender(struct ip_ct_tcp_state *sender,
+ 			    struct ip_ct_tcp_state *receiver,
+ 			    const struct sk_buff *skb,
+ 			    unsigned int dataoff,
+ 			    const struct tcphdr *tcph,
+ 			    u32 end, u32 win)
+ {
+ 	/* SYN-ACK in reply to a SYN
+ 	 * or SYN from reply direction in simultaneous open.
+ 	 */
+ 	sender->td_end =
+ 	sender->td_maxend = end;
+ 	sender->td_maxwin = (win == 0 ? 1 : win);
+ 
+ 	tcp_options(skb, dataoff, tcph, sender);
+ 	/* RFC 1323:
+ 	 * Both sides must send the Window Scale option
+ 	 * to enable window scaling in either direction.
+ 	 */
+ 	if (!(sender->flags & IP_CT_TCP_FLAG_WINDOW_SCALE &&
+ 	      receiver->flags & IP_CT_TCP_FLAG_WINDOW_SCALE)) {
+ 		sender->td_scale = 0;
+ 		receiver->td_scale = 0;
+ 	}
+ }
+ 
+ static bool tcp_in_window(struct nf_conn *ct,
++>>>>>>> cc4f9d62037e (netfilter: conntrack: move synack init code to helper)
  			  enum ip_conntrack_dir dir,
  			  unsigned int index,
  			  const struct sk_buff *skb,
* Unmerged path net/netfilter/nf_conntrack_proto_tcp.c
