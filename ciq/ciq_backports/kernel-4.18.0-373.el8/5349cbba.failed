net/mlx5e: Fix conflict with HW TS and CQE compression

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Aya Levin <ayal@nvidia.com>
commit 5349cbba754ee54f6cca8b946aa9172f1ac60b8c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/5349cbba.failed

When a driver's profile doesn't support a dedicated PTP-RQ,
configuration of CQE compression while HW TS is configured should fail.

Fixes: 885b8cfb161e ("net/mlx5e: Update ethtool setting of CQE compression")
	Signed-off-by: Aya Levin <ayal@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Reviewed-by: Tariq Toukan <tariqt@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 5349cbba754ee54f6cca8b946aa9172f1ac60b8c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
index f0d51e7c3d41,d6513aef5cd4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
@@@ -1919,15 -1894,23 +1919,29 @@@ int mlx5e_modify_rx_cqe_compression_loc
  	if (curr_val == new_val)
  		return 0;
  
++<<<<<<< HEAD
 +	new_channels.params = priv->channels.params;
 +	MLX5E_SET_PFLAG(&new_channels.params, MLX5E_PFLAG_RX_CQE_COMPRESS, new_val);
++=======
+ 	if (new_val && !priv->profile->rx_ptp_support &&
+ 	    priv->tstamp.rx_filter != HWTSTAMP_FILTER_NONE) {
+ 		netdev_err(priv->netdev,
+ 			   "Profile doesn't support enabling of CQE compression while hardware time-stamping is enabled.\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	new_params = priv->channels.params;
+ 	MLX5E_SET_PFLAG(&new_params, MLX5E_PFLAG_RX_CQE_COMPRESS, new_val);
+ 	if (priv->tstamp.rx_filter != HWTSTAMP_FILTER_NONE)
+ 		new_params.ptp_rx = new_val;
++>>>>>>> 5349cbba754e (net/mlx5e: Fix conflict with HW TS and CQE compression)
  
 -	if (new_params.ptp_rx == priv->channels.params.ptp_rx)
 -		err = mlx5e_safe_switch_params(priv, &new_params, NULL, NULL, true);
 -	else
 -		err = mlx5e_safe_switch_params(priv, &new_params, mlx5e_ptp_rx_manage_fs_ctx,
 -					       &new_params.ptp_rx, true);
 +	if (!test_bit(MLX5E_STATE_OPENED, &priv->state)) {
 +		priv->channels.params = new_channels.params;
 +		return 0;
 +	}
 +
 +	err = mlx5e_safe_switch_channels(priv, &new_channels, NULL, NULL);
  	if (err)
  		return err;
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_ethtool.c
