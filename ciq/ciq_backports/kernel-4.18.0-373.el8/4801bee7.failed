ALSA: usb-audio: Add lowlatency module option

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 4801bee7d5a36c199b734a28cde5259183aff822
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/4801bee7.failed

For making user to switch back to the old playback mode, this patch
adds a new module option 'lowlatency' to snd-usb-audio driver.
When user face a regression due to the recent low-latency playback
support, they can test easily by passing lowlatency=0 option without
rebuilding the kernel.

Fixes: 307cc9baac5c ("ALSA: usb-audio: Reduce latency at playback start, take#2")
Link: https://lore.kernel.org/r/20210829073830.22686-1-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 4801bee7d5a36c199b734a28cde5259183aff822)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/pcm.c
diff --cc sound/usb/pcm.c
index 8432926ab61b,5dc9266180e3..000000000000
--- a/sound/usb/pcm.c
+++ b/sound/usb/pcm.c
@@@ -605,6 -614,15 +605,18 @@@ static int snd_usb_pcm_prepare(struct s
  	subs->period_elapsed_pending = 0;
  	runtime->delay = 0;
  
++<<<<<<< HEAD
++=======
+ 	/* check whether early start is needed for playback stream */
+ 	subs->early_playback_start =
+ 		subs->direction == SNDRV_PCM_STREAM_PLAYBACK &&
+ 		(!chip->lowlatency ||
+ 		 (subs->data_endpoint->nominal_queue_size >= subs->buffer_bytes));
+ 
+ 	if (subs->early_playback_start)
+ 		ret = start_endpoints(subs);
+ 
++>>>>>>> 4801bee7d5a3 (ALSA: usb-audio: Add lowlatency module option)
   unlock:
  	snd_usb_unlock_shutdown(chip);
  	return ret;
diff --git a/sound/usb/card.c b/sound/usb/card.c
index 34b638ead5b1..01ec98d4875a 100644
--- a/sound/usb/card.c
+++ b/sound/usb/card.c
@@ -69,6 +69,7 @@ static int pid[SNDRV_CARDS] = { [0 ... (SNDRV_CARDS-1)] = -1 };
 static int device_setup[SNDRV_CARDS]; /* device parameter for this card */
 static bool ignore_ctl_error;
 static bool autoclock = true;
+static bool lowlatency = true;
 static char *quirk_alias[SNDRV_CARDS];
 static char *delayed_register[SNDRV_CARDS];
 static bool implicit_fb[SNDRV_CARDS];
@@ -94,6 +95,8 @@ MODULE_PARM_DESC(ignore_ctl_error,
 		 "Ignore errors from USB controller for mixer interfaces.");
 module_param(autoclock, bool, 0444);
 MODULE_PARM_DESC(autoclock, "Enable auto-clock selection for UAC2 devices (default: yes).");
+module_param(lowlatency, bool, 0444);
+MODULE_PARM_DESC(lowlatency, "Enable low latency playback (default: yes).");
 module_param_array(quirk_alias, charp, NULL, 0444);
 MODULE_PARM_DESC(quirk_alias, "Quirk aliases, e.g. 0123abcd:5678beef.");
 module_param_array(delayed_register, charp, NULL, 0444);
@@ -603,6 +606,7 @@ static int snd_usb_audio_create(struct usb_interface *intf,
 	chip->setup = device_setup[idx];
 	chip->generic_implicit_fb = implicit_fb[idx];
 	chip->autoclock = autoclock;
+	chip->lowlatency = lowlatency;
 	atomic_set(&chip->active, 1); /* avoid autopm during probing */
 	atomic_set(&chip->usage_count, 0);
 	atomic_set(&chip->shutdown, 0);
* Unmerged path sound/usb/pcm.c
diff --git a/sound/usb/usbaudio.h b/sound/usb/usbaudio.h
index c0a3ac71bf0a..8ac520693328 100644
--- a/sound/usb/usbaudio.h
+++ b/sound/usb/usbaudio.h
@@ -55,6 +55,7 @@ struct snd_usb_audio {
 	bool generic_implicit_fb;	/* from the 'implicit_fb' module param */
 	bool autoclock;			/* from the 'autoclock' module param */
 
+	bool lowlatency;		/* from the 'lowlatency' module param */
 	struct usb_host_interface *ctrl_intf;	/* the audio control interface */
 };
 
