ALSA: memalloc: Drop superfluous snd_dma_buffer_sync() declaration

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 7d2a0df24227337cf42b024c91708f542ca4ff90
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/7d2a0df2.failed

snd_dma_buffer_sync() is declared twice, and the one outside the ifdef
CONFIG_HAS_DMA could lead to a build error when CONFIG_HAS_DMA=n.
As it's an overlooked leftover after rebase, drop this line.

Fixes: a25684a95646 ("ALSA: memalloc: Support for non-contiguous page allocation")
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
Link: https://lore.kernel.org/r/20211019165402.4fa82c38@canb.auug.org.au
Link: https://lore.kernel.org/r/20211019060536.26089-1-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 7d2a0df24227337cf42b024c91708f542ca4ff90)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/sound/memalloc.h
diff --cc include/sound/memalloc.h
index 3ab084438fdc,653dfffb3ac8..000000000000
--- a/include/sound/memalloc.h
+++ b/include/sound/memalloc.h
@@@ -123,6 -85,39 +123,42 @@@ int snd_dma_alloc_pages(int type, struc
  int snd_dma_alloc_pages_fallback(int type, struct device *dev, size_t size,
                                   struct snd_dma_buffer *dmab);
  void snd_dma_free_pages(struct snd_dma_buffer *dmab);
++<<<<<<< HEAD
++=======
+ int snd_dma_buffer_mmap(struct snd_dma_buffer *dmab,
+ 			struct vm_area_struct *area);
+ 
+ enum snd_dma_sync_mode { SNDRV_DMA_SYNC_CPU, SNDRV_DMA_SYNC_DEVICE };
+ #ifdef CONFIG_HAS_DMA
+ void snd_dma_buffer_sync(struct snd_dma_buffer *dmab,
+ 			 enum snd_dma_sync_mode mode);
+ #else
+ static inline void snd_dma_buffer_sync(struct snd_dma_buffer *dmab,
+ 				       enum snd_dma_sync_mode mode) {}
+ #endif
+ 
+ dma_addr_t snd_sgbuf_get_addr(struct snd_dma_buffer *dmab, size_t offset);
+ struct page *snd_sgbuf_get_page(struct snd_dma_buffer *dmab, size_t offset);
+ unsigned int snd_sgbuf_get_chunk_size(struct snd_dma_buffer *dmab,
+ 				      unsigned int ofs, unsigned int size);
+ 
+ /* device-managed memory allocator */
+ struct snd_dma_buffer *snd_devm_alloc_dir_pages(struct device *dev, int type,
+ 						enum dma_data_direction dir,
+ 						size_t size);
+ 
+ static inline struct snd_dma_buffer *
+ snd_devm_alloc_pages(struct device *dev, int type, size_t size)
+ {
+ 	return snd_devm_alloc_dir_pages(dev, type, DMA_BIDIRECTIONAL, size);
+ }
+ 
+ static inline struct sg_table *
+ snd_dma_noncontig_sg_table(struct snd_dma_buffer *dmab)
+ {
+ 	return dmab->private_data;
+ }
++>>>>>>> 7d2a0df24227 (ALSA: memalloc: Drop superfluous snd_dma_buffer_sync() declaration)
  
  #endif /* __SOUND_MEMALLOC_H */
  
* Unmerged path include/sound/memalloc.h
