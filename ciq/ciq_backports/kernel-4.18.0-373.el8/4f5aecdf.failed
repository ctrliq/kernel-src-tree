crash_core, vmcoreinfo: append 'SECTION_SIZE_BITS' to vmcoreinfo

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Pingfan Liu <kernelfans@gmail.com>
commit 4f5aecdff25f59fb5ea456d5152a913906ecf287
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/4f5aecdf.failed

As mentioned in kernel commit 1d50e5d0c505 ("crash_core, vmcoreinfo:
Append 'MAX_PHYSMEM_BITS' to vmcoreinfo"), SECTION_SIZE_BITS in the
formula:

    #define SECTIONS_SHIFT    (MAX_PHYSMEM_BITS - SECTION_SIZE_BITS)

Besides SECTIONS_SHIFT, SECTION_SIZE_BITS is also used to calculate
PAGES_PER_SECTION in makedumpfile just like kernel.

Unfortunately, this arch-dependent macro SECTION_SIZE_BITS changes, e.g.
recently in kernel commit f0b13ee23241 ("arm64/sparsemem: reduce
SECTION_SIZE_BITS").  But user space wants a stable interface to get
this info.  Such info is impossible to be deduced from a crashdump
vmcore.  Hence append SECTION_SIZE_BITS to vmcoreinfo.

Link: https://lkml.kernel.org/r/20210608103359.84907-1-kernelfans@gmail.com
Link: http://lists.infradead.org/pipermail/kexec/2021-June/022676.html
	Signed-off-by: Pingfan Liu <kernelfans@gmail.com>
	Acked-by: Baoquan He <bhe@redhat.com>
	Cc: Bhupesh Sharma <bhupesh.sharma@linaro.org>
	Cc: Kazuhito Hagio <k-hagio@ab.jp.nec.com>
	Cc: Dave Young <dyoung@redhat.com>
	Cc: Boris Petkov <bp@alien8.de>
	Cc: Ingo Molnar <mingo@kernel.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: James Morse <james.morse@arm.com>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Michael Ellerman <mpe@ellerman.id.au>
	Cc: Paul Mackerras <paulus@samba.org>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Dave Anderson <anderson@redhat.com>
	Cc: <stable@vger.kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 4f5aecdff25f59fb5ea456d5152a913906ecf287)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/crash_core.c
diff --cc kernel/crash_core.c
index 1d5f035f619e,684a6061a13a..000000000000
--- a/kernel/crash_core.c
+++ b/kernel/crash_core.c
@@@ -445,6 -464,8 +445,11 @@@ static int __init crash_save_vmcoreinfo
  	VMCOREINFO_LENGTH(mem_section, NR_SECTION_ROOTS);
  	VMCOREINFO_STRUCT_SIZE(mem_section);
  	VMCOREINFO_OFFSET(mem_section, section_mem_map);
++<<<<<<< HEAD
++=======
+ 	VMCOREINFO_NUMBER(SECTION_SIZE_BITS);
+ 	VMCOREINFO_NUMBER(MAX_PHYSMEM_BITS);
++>>>>>>> 4f5aecdff25f (crash_core, vmcoreinfo: append 'SECTION_SIZE_BITS' to vmcoreinfo)
  #endif
  	VMCOREINFO_STRUCT_SIZE(page);
  	VMCOREINFO_STRUCT_SIZE(pglist_data);
* Unmerged path kernel/crash_core.c
