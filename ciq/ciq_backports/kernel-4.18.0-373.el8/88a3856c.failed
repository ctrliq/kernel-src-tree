tee/optee/shm_pool: fix application of sizeof to pointer

jira LE-1907
cve CVE-2021-44733
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author jing yangyang <jing.yangyang@zte.com.cn>
commit 88a3856c0a8c03188db7913f4d49379432fe1f93
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/88a3856c.failed

sizeof when applied to a pointer typed expression gives the size of
the pointer.

./drivers/tee/optee/shm_pool.c:38:28-34: ERROR application of sizeof to pointer

This issue was detected with the help of Coccinelle.

	Reviewed-by: Daniel Thompson <daniel.thompson@linaro.org>
	Reported-by: Zeal Robot <zealci@zte.com.cn>
	Signed-off-by: jing yangyang <jing.yangyang@zte.com.cn>
	Signed-off-by: Jens Wiklander <jens.wiklander@linaro.org>
(cherry picked from commit 88a3856c0a8c03188db7913f4d49379432fe1f93)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/tee/optee/shm_pool.c
diff --cc drivers/tee/optee/shm_pool.c
index 49397813fff1,d167039af519..000000000000
--- a/drivers/tee/optee/shm_pool.c
+++ b/drivers/tee/optee/shm_pool.c
@@@ -35,7 -27,38 +35,37 @@@ static int pool_op_alloc(struct tee_shm
  	shm->paddr = page_to_phys(page);
  	shm->size = PAGE_SIZE << order;
  
++<<<<<<< HEAD
++=======
+ 	/*
+ 	 * Shared memory private to the OP-TEE driver doesn't need
+ 	 * to be registered with OP-TEE.
+ 	 */
+ 	if (!(shm->flags & TEE_SHM_PRIV)) {
+ 		unsigned int nr_pages = 1 << order, i;
+ 		struct page **pages;
+ 
+ 		pages = kcalloc(nr_pages, sizeof(*pages), GFP_KERNEL);
+ 		if (!pages) {
+ 			rc = -ENOMEM;
+ 			goto err;
+ 		}
+ 
+ 		for (i = 0; i < nr_pages; i++) {
+ 			pages[i] = page;
+ 			page++;
+ 		}
+ 
+ 		shm->flags |= TEE_SHM_REGISTER;
+ 		rc = optee_shm_register(shm->ctx, shm, pages, nr_pages,
+ 					(unsigned long)shm->kaddr);
+ 		kfree(pages);
+ 		if (rc)
+ 			goto err;
+ 	}
+ 
++>>>>>>> 88a3856c0a8c (tee/optee/shm_pool: fix application of sizeof to pointer)
  	return 0;
 -
 -err:
 -	__free_pages(page, order);
 -	return rc;
  }
  
  static void pool_op_free(struct tee_shm_pool_mgr *poolm,
* Unmerged path drivers/tee/optee/shm_pool.c
