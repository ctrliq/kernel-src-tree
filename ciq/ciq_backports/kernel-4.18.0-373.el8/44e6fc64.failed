ALSA: usb-audio: Move autosuspend quirk into quirk_flags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Takashi Iwai <tiwai@suse.de>
commit 44e6fc64dfebf48811219a9c24666b4b87dc0ec5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/44e6fc64.failed

The auto-suspend suppression workaround for Lenovo machines are
handled in quirks-table.h.  Now it's more easier to handle with
quirk_flags.

Link: https://lore.kernel.org/r/20210729074404.19728-2-tiwai@suse.de
	Signed-off-by: Takashi Iwai <tiwai@suse.de>
(cherry picked from commit 44e6fc64dfebf48811219a9c24666b4b87dc0ec5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/usb/quirks.c
#	sound/usb/usbaudio.h
diff --cc sound/usb/quirks.c
index 9c3d234c8b32,1cffb87e5026..000000000000
--- a/sound/usb/quirks.c
+++ b/sound/usb/quirks.c
@@@ -595,9 -570,7 +586,8 @@@ int snd_usb_create_quirk(struct snd_usb
  		[QUIRK_AUDIO_STANDARD_INTERFACE] = create_standard_audio_quirk,
  		[QUIRK_AUDIO_FIXED_ENDPOINT] = create_fixed_stream_quirk,
  		[QUIRK_AUDIO_EDIROL_UAXX] = create_uaxx_quirk,
 +		[QUIRK_AUDIO_ALIGN_TRANSFER] = create_align_transfer_quirk,
  		[QUIRK_AUDIO_STANDARD_MIXER] = create_standard_mixer_quirk,
- 		[QUIRK_SETUP_DISABLE_AUTOSUSPEND] = setup_disable_autosuspend,
  	};
  
  	if (quirk->type < QUIRK_TYPE_COUNT) {
@@@ -1913,12 -1810,79 +1903,33 @@@ static const struct usb_audio_quirk_fla
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x05a7, 0x1020, /* Bose Companion 5 */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x05e1, 0x0408, /* Syntek STK1160 */
 -		   QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x05e1, 0x0480, /* Hauppauge Woodbury */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x0644, 0x8043, /* TEAC UD-501/UD-501V2/UD-503/NT-503 */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
 -		   QUIRK_FLAG_IFACE_DELAY),
 -	DEVICE_FLG(0x0644, 0x8044, /* Esoteric D-05X */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
 -		   QUIRK_FLAG_IFACE_DELAY),
 -	DEVICE_FLG(0x0644, 0x804a, /* TEAC UD-301 */
 -		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY |
 -		   QUIRK_FLAG_IFACE_DELAY),
  	DEVICE_FLG(0x074d, 0x3553, /* Outlaw RR2150 (Micronas UAC3553B) */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x0951, 0x16ad, /* Kingston HyperX */
 -		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
 -	DEVICE_FLG(0x0b0e, 0x0349, /* Jabra 550a */
 -		   QUIRK_FLAG_CTL_MSG_DELAY_1M),
 -	DEVICE_FLG(0x0fd9, 0x0008, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
  	DEVICE_FLG(0x1395, 0x740a, /* Sennheiser DECT */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
++<<<<<<< HEAD
++=======
+ 	DEVICE_FLG(0x154e, 0x1002, /* Denon DCD-1500RE */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x1003, /* Denon DA-300USB */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x3005, /* Marantz HD-DAC1 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x3006, /* Marantz SA-14S1 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
+ 	DEVICE_FLG(0x154e, 0x500e, /* Denon DN-X1600 */
+ 		   QUIRK_FLAG_IGNORE_CLOCK_SOURCE),
+ 	DEVICE_FLG(0x1686, 0x00dd, /* Zoom R16/24 */
+ 		   QUIRK_FLAG_TX_LENGTH | QUIRK_FLAG_CTL_MSG_DELAY_1M),
+ 	DEVICE_FLG(0x17aa, 0x1046, /* Lenovo ThinkStation P620 Rear Line-in, Line-out and Microphone */
+ 		   QUIRK_FLAG_DISABLE_AUTOSUSPEND),
+ 	DEVICE_FLG(0x17aa, 0x104d, /* Lenovo ThinkStation P620 Internal Speaker + Front Headset */
+ 		   QUIRK_FLAG_DISABLE_AUTOSUSPEND),
+ 	DEVICE_FLG(0x1852, 0x5065, /* Luxman DA-06 */
+ 		   QUIRK_FLAG_ITF_USB_DSD_DAC | QUIRK_FLAG_CTL_MSG_DELAY),
++>>>>>>> 44e6fc64dfeb (ALSA: usb-audio: Move autosuspend quirk into quirk_flags)
  	DEVICE_FLG(0x1901, 0x0191, /* GE B850V3 CP2114 audio interface */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
 -	DEVICE_FLG(0x2040, 0x7200, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7201, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7210, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7211, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7213, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7217, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721b, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721e, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x721f, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7240, /* Hauppauge HVR-850 */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7260, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7270, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7280, /* Hauppauge HVR-950Q */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x7281, /* Hauppauge HVR-950Q-MXL */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
 -	DEVICE_FLG(0x2040, 0x8200, /* Hauppauge Woodbury */
 -		   QUIRK_FLAG_SHARE_MEDIA_DEVICE | QUIRK_FLAG_ALIGN_TRANSFER),
  	DEVICE_FLG(0x21b4, 0x0081, /* AudioQuest DragonFly */
  		   QUIRK_FLAG_GET_SAMPLE_RATE),
  	DEVICE_FLG(0x2912, 0x30c8, /* Audioengine D1 */
diff --cc sound/usb/usbaudio.h
index c0a3ac71bf0a,ce31d58f810f..000000000000
--- a/sound/usb/usbaudio.h
+++ b/sound/usb/usbaudio.h
@@@ -98,10 -100,7 +98,8 @@@ enum quirk_type 
  	QUIRK_AUDIO_STANDARD_INTERFACE,
  	QUIRK_AUDIO_FIXED_ENDPOINT,
  	QUIRK_AUDIO_EDIROL_UAXX,
 +	QUIRK_AUDIO_ALIGN_TRANSFER,
  	QUIRK_AUDIO_STANDARD_MIXER,
- 	QUIRK_SETUP_FMT_AFTER_RESUME,
- 	QUIRK_SETUP_DISABLE_AUTOSUSPEND,
  
  	QUIRK_TYPE_COUNT
  };
@@@ -130,8 -129,49 +128,55 @@@ extern bool snd_usb_skip_validation
   * QUIRK_FLAG_GET_SAMPLE_RATE:
   *  Skip reading sample rate for devices, as some devices behave inconsistently
   *  or return error
++<<<<<<< HEAD
 + */
 +
 +#define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
++=======
+  * QUIRK_FLAG_SHARE_MEDIA_DEVICE:
+  *  Create Media Controller API entries
+  * QUIRK_FLAG_ALIGN_TRANSFER:
+  *  Allow alignment on audio sub-slot (channel samples) rather than on audio
+  *  slots (audio frames)
+  * QUIRK_TX_LENGTH:
+  *  Add length specifier to transfers
+  * QUIRK_FLAG_PLAYBACK_FIRST:
+  *  Start playback stream at first even in implement feedback mode
+  * QUIRK_FLAG_SKIP_CLOCK_SELECTOR:
+  *  Skip clock selector setup; the device may reset to invalid state
+  * QUIRK_FLAG_IGNORE_CLOCK_SOURCE:
+  *  Ignore errors from clock source search; i.e. hardcoded clock
+  * QUIRK_FLAG_ITF_USB_DSD_DAC:
+  *  Indicates the device is for ITF-USB DSD based DACs that need a vendor cmd
+  *  to switch between PCM and native DSD mode
+  * QUIRK_FLAG_CTL_MSG_DELAY:
+  *  Add a delay of 20ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_1M:
+  *  Add a delay of 1-2ms at each control message handling
+  * QUIRK_FLAG_CTL_MSG_DELAY_5M:
+  *  Add a delay of 5-6ms at each control message handling
+  * QUIRK_FLAG_IFACE_DELAY:
+  *  Add a delay of 50ms at each interface setup
+  * QUIRK_FLAG_VALIDATE_RATES:
+  *  Perform sample rate validations at probe
+  * QUIRK_FLAG_DISABLE_AUTOSUSPEND:
+  *  Disable runtime PM autosuspend
+  */
+ 
+ #define QUIRK_FLAG_GET_SAMPLE_RATE	(1U << 0)
+ #define QUIRK_FLAG_SHARE_MEDIA_DEVICE	(1U << 1)
+ #define QUIRK_FLAG_ALIGN_TRANSFER	(1U << 2)
+ #define QUIRK_FLAG_TX_LENGTH		(1U << 3)
+ #define QUIRK_FLAG_PLAYBACK_FIRST	(1U << 4)
+ #define QUIRK_FLAG_SKIP_CLOCK_SELECTOR	(1U << 5)
+ #define QUIRK_FLAG_IGNORE_CLOCK_SOURCE	(1U << 6)
+ #define QUIRK_FLAG_ITF_USB_DSD_DAC	(1U << 7)
+ #define QUIRK_FLAG_CTL_MSG_DELAY	(1U << 8)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_1M	(1U << 9)
+ #define QUIRK_FLAG_CTL_MSG_DELAY_5M	(1U << 10)
+ #define QUIRK_FLAG_IFACE_DELAY		(1U << 11)
+ #define QUIRK_FLAG_VALIDATE_RATES	(1U << 12)
+ #define QUIRK_FLAG_DISABLE_AUTOSUSPEND	(1U << 13)
++>>>>>>> 44e6fc64dfeb (ALSA: usb-audio: Move autosuspend quirk into quirk_flags)
  
  #endif /* __USBAUDIO_H */
diff --git a/sound/usb/card.c b/sound/usb/card.c
index d2bdd26c46d9..01ff0827693f 100644
--- a/sound/usb/card.c
+++ b/sound/usb/card.c
@@ -784,6 +784,9 @@ static int usb_audio_probe(struct usb_interface *intf,
 
 	dev_set_drvdata(&dev->dev, chip);
 
+	if (chip->quirk_flags & QUIRK_FLAG_DISABLE_AUTOSUSPEND)
+		usb_disable_autosuspend(interface_to_usbdev(intf));
+
 	/*
 	 * For devices with more than one control interface, we assume the
 	 * first contains the audio controls. We might need a more specific
@@ -896,7 +899,7 @@ static void usb_audio_disconnect(struct usb_interface *intf)
 		}
 	}
 
-	if (chip->quirk_type == QUIRK_SETUP_DISABLE_AUTOSUSPEND)
+	if (chip->quirk_flags & QUIRK_FLAG_DISABLE_AUTOSUSPEND)
 		usb_enable_autosuspend(interface_to_usbdev(intf));
 
 	chip->num_interfaces--;
diff --git a/sound/usb/quirks-table.h b/sound/usb/quirks-table.h
index d644b31c4c7f..cd059913a7f8 100644
--- a/sound/usb/quirks-table.h
+++ b/sound/usb/quirks-table.h
@@ -2730,23 +2730,6 @@ YAMAHA_DEVICE(0x7010, "UB99"),
 	}
 },
 
-/* Lenovo ThinkStation P620 Rear Line-in, Line-out and Microphone */
-{
-	USB_DEVICE(0x17aa, 0x1046),
-	.driver_info = (unsigned long) & (const struct snd_usb_audio_quirk) {
-		.ifnum = QUIRK_ANY_INTERFACE,
-		.type = QUIRK_SETUP_DISABLE_AUTOSUSPEND
-	}
-},
-/* Lenovo ThinkStation P620 Internal Speaker + Front Headset */
-{
-	USB_DEVICE(0x17aa, 0x104d),
-	.driver_info = (unsigned long) & (const struct snd_usb_audio_quirk) {
-		.ifnum = QUIRK_ANY_INTERFACE,
-		.type = QUIRK_SETUP_DISABLE_AUTOSUSPEND
-	}
-},
-
 /* Native Instruments MK2 series */
 {
 	/* Komplete Audio 6 */
* Unmerged path sound/usb/quirks.c
* Unmerged path sound/usb/usbaudio.h
