net/mlx5e: Avoid creating tunnel headers for local route

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Roi Dayan <roid@nvidia.com>
commit c623c95afa56bf4bf64e4f58742dc94616ef83db
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/c623c95a.failed

It could be local and remote are on the same machine and the route
result will be a local route which will result in creating encap id
with src/dst mac address of 0.

Fixes: a54e20b4fcae ("net/mlx5e: Add basic TC tunnel set action for SRIOV offloads")
	Signed-off-by: Roi Dayan <roid@nvidia.com>
	Reviewed-by: Maor Dickman <maord@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit c623c95afa56bf4bf64e4f58742dc94616ef83db)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
index 702e6a55a091,1e2d117082d4..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
@@@ -124,7 -124,12 +124,16 @@@ static int mlx5e_route_lookup_ipv4_get(
  	if (IS_ERR(rt))
  		return PTR_ERR(rt);
  
++<<<<<<< HEAD
 +	if (mlx5_lag_is_multipath(mdev) && !rt->rt_gateway) {
++=======
+ 	if (rt->rt_type != RTN_UNICAST) {
+ 		ret = -ENETUNREACH;
+ 		goto err_rt_release;
+ 	}
+ 
+ 	if (mlx5_lag_is_multipath(mdev) && rt->rt_gw_family != AF_INET) {
++>>>>>>> c623c95afa56 (net/mlx5e: Avoid creating tunnel headers for local route)
  		ret = -ENETUNREACH;
  		goto err_rt_release;
  	}
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tc_tun.c
