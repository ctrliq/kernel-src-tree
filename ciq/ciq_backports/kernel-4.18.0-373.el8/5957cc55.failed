net/mlx5: Set all field of mlx5_irq before inserting it to the xarray

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Shay Drory <shayd@nvidia.com>
commit 5957cc557dc5d52c3448be15c2474f33224b89b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/5957cc55.failed

Currently irq->pool is set after the irq is insert to the xarray.
Set irq->pool before the irq is inserted to the xarray.

Fixes: 71e084e26414 ("net/mlx5: Allocating a pool of MSI-X vectors for SFs")
	Signed-off-by: Shay Drory <shayd@nvidia.com>
	Reviewed-by: Parav Pandit <parav@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 5957cc557dc5d52c3448be15c2474f33224b89b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
index aa053fe222d5,7b923f6b5462..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
@@@ -201,15 -214,15 +201,25 @@@ static struct mlx5_irq *irq_request(str
  		err = -ENOMEM;
  		goto err_cpumask;
  	}
++<<<<<<< HEAD
 +	err = xa_alloc(&pool->irqs, &irq->index, irq, pool->xa_num_irqs,
 +		       GFP_KERNEL);
++=======
+ 	irq->pool = pool;
+ 	kref_init(&irq->kref);
+ 	irq->index = i;
+ 	err = xa_err(xa_store(&pool->irqs, irq->index, irq, GFP_KERNEL));
++>>>>>>> 5957cc557dc5 (net/mlx5: Set all field of mlx5_irq before inserting it to the xarray)
  	if (err) {
  		mlx5_core_err(dev, "Failed to alloc xa entry for irq(%u). err = %d\n",
  			      irq->index, err);
  		goto err_xa;
  	}
++<<<<<<< HEAD
 +	irq->pool = pool;
 +	kref_init(&irq->kref);
++=======
++>>>>>>> 5957cc557dc5 (net/mlx5: Set all field of mlx5_irq before inserting it to the xarray)
  	return irq;
  err_xa:
  	free_cpumask_var(irq->mask);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/pci_irq.c
