selftests: bpf: Less strict size check in sockopt_sk

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-373.el8
commit-author Felix Maurer <fmaurer@redhat.com>
commit fc1ca95585aa4f51e9776f01dffedc1591458c31
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-373.el8/fc1ca955.failed

Originally, the kernel strictly checked the size of the optval in
getsockopt(TCP_ZEROCOPY_RECEIVE) to be equal to sizeof(struct
tcp_zerocopy_receive). With c8856c0514549, this was changed to allow
optvals of different sizes.

The bpf code in the sockopt_sk test was still performing the strict size
check. This fix adapts the kernel behavior from c8856c0514549 in the
selftest, i.e., just check if the required fields are there.

Fixes: 9cacf81f81611 ("bpf: Remove extra lock_sock for TCP_ZEROCOPY_RECEIVE")
	Signed-off-by: Felix Maurer <fmaurer@redhat.com>
	Reviewed-by: Stanislav Fomichev <sdf@google.com>
Link: https://lore.kernel.org/r/6f569cca2e45473f9a724d54d03fdfb45f29e35f.1643129402.git.fmaurer@redhat.com
	Signed-off-by: Alexei Starovoitov <ast@kernel.org>
(cherry picked from commit fc1ca95585aa4f51e9776f01dffedc1591458c31)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/bpf/progs/sockopt_sk.c
diff --cc tools/testing/selftests/bpf/progs/sockopt_sk.c
index 8acdb99b5959,c8d810010a94..000000000000
--- a/tools/testing/selftests/bpf/progs/sockopt_sk.c
+++ b/tools/testing/selftests/bpf/progs/sockopt_sk.c
@@@ -64,11 -72,12 +64,17 @@@ int _getsockopt(struct bpf_sockopt *ctx
  		 * reasons.
  		 */
  
++<<<<<<< HEAD
 +		if (optval + sizeof(struct tcp_zerocopy_receive) > optval_end)
 +			return 0; /* EPERM, bounds check */
++=======
+ 		/* Check that optval contains address (__u64) */
+ 		if (optval + sizeof(__u64) > optval_end)
+ 			return 0; /* bounds check */
++>>>>>>> fc1ca95585aa (selftests: bpf: Less strict size check in sockopt_sk)
  
  		if (((struct tcp_zerocopy_receive *)optval)->address != 0)
 -			return 0; /* unexpected data */
 +			return 0; /* EPERM, unexpected data */
  
  		return 1;
  	}
* Unmerged path tools/testing/selftests/bpf/progs/sockopt_sk.c
