net/mlx5: E-switch: Change eswitch mode only via devlink command

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Chris Mi <cmi@nvidia.com>
commit b6f2846afc0c3dafd58452a74a51499734d9f451
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/b6f2846a.failed

Enable or disable switchdev according to the eswitch mode set by
devlink command. So it is not changed by other functions anymore.

	Signed-off-by: Chris Mi <cmi@nvidia.com>
	Reviewed-by: Roi Dayan <roid@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit b6f2846afc0c3dafd58452a74a51499734d9f451)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
#	drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
index 7af76810cb8f,b938632f89ff..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
@@@ -1285,11 -1282,6 +1282,14 @@@ int mlx5_eswitch_enable_locked(struct m
  	return 0;
  
  abort:
++<<<<<<< HEAD
 +	esw->mode = MLX5_ESWITCH_NONE;
 +
 +	if (mode == MLX5_ESWITCH_OFFLOADS)
 +		mlx5_rescan_drivers(esw->dev);
 +
++=======
++>>>>>>> b6f2846afc0c (net/mlx5: E-switch: Change eswitch mode only via devlink command)
  	mlx5_esw_acls_ns_cleanup(esw);
  	return err;
  }
@@@ -1316,8 -1308,8 +1316,13 @@@ int mlx5_eswitch_enable(struct mlx5_esw
  		mlx5_lag_disable_change(esw->dev);
  
  	down_write(&esw->mode_lock);
++<<<<<<< HEAD
 +	if (esw->mode == MLX5_ESWITCH_NONE) {
 +		ret = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_LEGACY, num_vfs);
++=======
+ 	if (!mlx5_esw_is_fdb_created(esw)) {
+ 		ret = mlx5_eswitch_enable_locked(esw, num_vfs);
++>>>>>>> b6f2846afc0c (net/mlx5: E-switch: Change eswitch mode only via devlink command)
  	} else {
  		enum mlx5_eswitch_vport_event vport_events;
  
diff --cc drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
index aaa5e6840908,e224ec7005a6..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@@ -2171,9 -2179,8 +2171,14 @@@ static int esw_offloads_start(struct ml
  {
  	int err, err1;
  
++<<<<<<< HEAD
 +	mlx5_eswitch_disable_locked(esw, false);
 +	err = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_OFFLOADS,
 +					 esw->dev->priv.sriov.num_vfs);
++=======
+ 	esw->mode = MLX5_ESWITCH_OFFLOADS;
+ 	err = mlx5_eswitch_enable_locked(esw, esw->dev->priv.sriov.num_vfs);
++>>>>>>> b6f2846afc0c (net/mlx5: E-switch: Change eswitch mode only via devlink command)
  	if (err) {
  		NL_SET_ERR_MSG_MOD(extack,
  				   "Failed setting eswitch to offloads");
@@@ -3225,13 -3238,12 +3231,18 @@@ static int esw_offloads_stop(struct mlx
  {
  	int err, err1;
  
++<<<<<<< HEAD
 +	mlx5_eswitch_disable_locked(esw, false);
 +	err = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_LEGACY,
 +					 MLX5_ESWITCH_IGNORE_NUM_VFS);
++=======
+ 	esw->mode = MLX5_ESWITCH_LEGACY;
+ 	err = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_IGNORE_NUM_VFS);
++>>>>>>> b6f2846afc0c (net/mlx5: E-switch: Change eswitch mode only via devlink command)
  	if (err) {
  		NL_SET_ERR_MSG_MOD(extack, "Failed setting eswitch to legacy");
- 		err1 = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_OFFLOADS,
- 						  MLX5_ESWITCH_IGNORE_NUM_VFS);
+ 		esw->mode = MLX5_ESWITCH_OFFLOADS;
+ 		err1 = mlx5_eswitch_enable_locked(esw, MLX5_ESWITCH_IGNORE_NUM_VFS);
  		if (err1) {
  			NL_SET_ERR_MSG_MOD(extack,
  					   "Failed setting eswitch back to offloads");
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
index 7682abe70a34..607034fc9d9a 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -351,7 +351,7 @@ int mlx5_eswitch_init(struct mlx5_core_dev *dev);
 void mlx5_eswitch_cleanup(struct mlx5_eswitch *esw);
 
 #define MLX5_ESWITCH_IGNORE_NUM_VFS (-1)
-int mlx5_eswitch_enable_locked(struct mlx5_eswitch *esw, int mode, int num_vfs);
+int mlx5_eswitch_enable_locked(struct mlx5_eswitch *esw, int num_vfs);
 int mlx5_eswitch_enable(struct mlx5_eswitch *esw, int num_vfs);
 void mlx5_eswitch_disable_locked(struct mlx5_eswitch *esw, bool clear_vf);
 void mlx5_eswitch_disable(struct mlx5_eswitch *esw, bool clear_vf);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
