x86/tdx: Port I/O: Add early boot support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Andi Kleen <ak@linux.intel.com>
commit 32e72854fa5fef6bc72e27c54f31897db9092acb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/32e72854.failed

TDX guests cannot do port I/O directly. The TDX module triggers a #VE
exception to let the guest kernel emulate port I/O by converting them
into TDCALLs to call the host.

But before IDT handlers are set up, port I/O cannot be emulated using
normal kernel #VE handlers. To support the #VE-based emulation during
this boot window, add a minimal early #VE handler support in early
exception handlers. This is similar to what AMD SEV does. This is
mainly to support earlyprintk's serial driver, as well as potentially
the VGA driver.

The early handler only supports I/O-related #VE exceptions. Unhandled or
failed exceptions will be handled via early_fixup_exceptions() (like
normal exception failures). At runtime I/O-related #VE exceptions (along
with other types) handled by virt_exception_kernel().

	Signed-off-by: Andi Kleen <ak@linux.intel.com>
	Signed-off-by: Kuppuswamy Sathyanarayanan <sathyanarayanan.kuppuswamy@linux.intel.com>
	Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
	Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
	Reviewed-by: Dan Williams <dan.j.williams@intel.com>
	Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
	Reviewed-by: Dave Hansen <dave.hansen@linux.intel.com>
Link: https://lkml.kernel.org/r/20220405232939.73860-19-kirill.shutemov@linux.intel.com
(cherry picked from commit 32e72854fa5fef6bc72e27c54f31897db9092acb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/coco/tdx/tdx.c
#	arch/x86/include/asm/tdx.h
* Unmerged path arch/x86/coco/tdx/tdx.c
* Unmerged path arch/x86/include/asm/tdx.h
* Unmerged path arch/x86/coco/tdx/tdx.c
* Unmerged path arch/x86/include/asm/tdx.h
diff --git a/arch/x86/kernel/head64.c b/arch/x86/kernel/head64.c
index 5fe9616a9d85..f6f93929f1d3 100644
--- a/arch/x86/kernel/head64.c
+++ b/arch/x86/kernel/head64.c
@@ -415,6 +415,9 @@ void __init do_early_exception(struct pt_regs *regs, int trapnr)
 	    trapnr == X86_TRAP_VC && handle_vc_boot_ghcb(regs))
 		return;
 
+	if (trapnr == X86_TRAP_VE && tdx_early_handle_ve(regs))
+		return;
+
 	early_fixup_exception(regs, trapnr);
 }
 
