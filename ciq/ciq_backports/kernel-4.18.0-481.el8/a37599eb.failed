usb: typec: mux: Add CONFIG guards for functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Prashant Malani <pmalani@chromium.org>
commit a37599ebfb656c2af4ca119de556eba29b6926d6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/a37599eb.failed

There are some drivers that can use the Type C mux API, but don't have
to. Introduce CONFIG guards for the mux functions so that drivers can
include the header file and not run into compilation errors on systems
which don't have CONFIG_TYPEC enabled. When CONFIG_TYPEC is not enabled,
the Type C mux functions will be stub versions of the original calls.

	Reported-by: kernel test robot <lkp@intel.com>
	Reviewed-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
	Reviewed-by: Heikki Krogerus <heikki.krogerus@linux.intel.com>
	Reviewed-by: AngeloGioacchino Del Regno <angelogioacchino.delregno@collabora.com>
	Tested-by: Nícolas F. R. A. Prado <nfraprado@collabora.com>
	Signed-off-by: Prashant Malani <pmalani@chromium.org>
Link: https://lore.kernel.org/r/20220615172129.1314056-3-pmalani@chromium.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a37599ebfb656c2af4ca119de556eba29b6926d6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/usb/typec_mux.h
diff --cc include/linux/usb/typec_mux.h
index a9d9957933dc,9292f0e07846..000000000000
--- a/include/linux/usb/typec_mux.h
+++ b/include/linux/usb/typec_mux.h
@@@ -61,17 -65,47 +63,57 @@@ struct typec_mux *fwnode_typec_mux_get(
  void typec_mux_put(struct typec_mux *mux);
  int typec_mux_set(struct typec_mux *mux, struct typec_mux_state *state);
  
++<<<<<<< HEAD
 +static inline struct typec_mux *
 +typec_mux_get(struct device *dev, const struct typec_altmode_desc *desc)
 +{
 +	return fwnode_typec_mux_get(dev_fwnode(dev), desc);
 +}
 +
 +struct typec_mux *
++=======
+ struct typec_mux_dev *
++>>>>>>> a37599ebfb65 (usb: typec: mux: Add CONFIG guards for functions)
  typec_mux_register(struct device *parent, const struct typec_mux_desc *desc);
 -void typec_mux_unregister(struct typec_mux_dev *mux);
 +void typec_mux_unregister(struct typec_mux *mux);
  
 -void typec_mux_set_drvdata(struct typec_mux_dev *mux, void *data);
 -void *typec_mux_get_drvdata(struct typec_mux_dev *mux);
 +void typec_mux_set_drvdata(struct typec_mux *mux, void *data);
 +void *typec_mux_get_drvdata(struct typec_mux *mux);
  
+ #else
+ 
+ static inline struct typec_mux *fwnode_typec_mux_get(struct fwnode_handle *fwnode,
+ 				       const struct typec_altmode_desc *desc)
+ {
+ 	return NULL;
+ }
+ 
+ static inline void typec_mux_put(struct typec_mux *mux) {}
+ 
+ static inline int typec_mux_set(struct typec_mux *mux, struct typec_mux_state *state)
+ {
+ 	return 0;
+ }
+ 
+ static inline struct typec_mux_dev *
+ typec_mux_register(struct device *parent, const struct typec_mux_desc *desc)
+ {
+ 	return ERR_PTR(-EOPNOTSUPP);
+ }
+ static inline void typec_mux_unregister(struct typec_mux_dev *mux) {}
+ 
+ static inline void typec_mux_set_drvdata(struct typec_mux_dev *mux, void *data) {}
+ static inline void *typec_mux_get_drvdata(struct typec_mux_dev *mux)
+ {
+ 	return ERR_PTR(-EOPNOTSUPP);
+ }
+ 
+ #endif /* CONFIG_TYPEC */
+ 
+ static inline struct typec_mux *
+ typec_mux_get(struct device *dev, const struct typec_altmode_desc *desc)
+ {
+ 	return fwnode_typec_mux_get(dev_fwnode(dev), desc);
+ }
+ 
  #endif /* __USB_TYPEC_MUX */
* Unmerged path include/linux/usb/typec_mux.h
