regmap: permit to set reg_update_bits with bulk implementation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Christian Marangi <ansuelsmth@gmail.com>
commit 739f872e48d47c97fa17a86a7b3356771b75240c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/739f872e.failed

A regmap may still require to set a custom reg_update_bits instead of
relying to the regmap_bus_read/write general function.

Permit to set it in the map if provided by the regmap config.

	Signed-off-by: Christian Marangi <ansuelsmth@gmail.com>
Link: https://lore.kernel.org/r/20220715201032.19507-1-ansuelsmth@gmail.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 739f872e48d47c97fa17a86a7b3356771b75240c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/regmap/regmap.c
diff --cc drivers/base/regmap/regmap.c
index 254f69af4709,fee221c5008c..000000000000
--- a/drivers/base/regmap/regmap.c
+++ b/drivers/base/regmap/regmap.c
@@@ -835,7 -880,18 +835,22 @@@ struct regmap *__regmap_init(struct dev
  		map->read_flag_mask = bus->read_flag_mask;
  	}
  
++<<<<<<< HEAD
 +	if (!bus) {
++=======
+ 	if (config && config->read && config->write) {
+ 		map->reg_read  = _regmap_bus_read;
+ 		if (config->reg_update_bits)
+ 			map->reg_update_bits = config->reg_update_bits;
+ 
+ 		/* Bulk read/write */
+ 		map->read = config->read;
+ 		map->write = config->write;
+ 
+ 		reg_endian = REGMAP_ENDIAN_NATIVE;
+ 		val_endian = REGMAP_ENDIAN_NATIVE;
+ 	} else if (!bus) {
++>>>>>>> 739f872e48d4 (regmap: permit to set reg_update_bits with bulk implementation)
  		map->reg_read  = config->reg_read;
  		map->reg_write = config->reg_write;
  		map->reg_update_bits = config->reg_update_bits;
* Unmerged path drivers/base/regmap/regmap.c
