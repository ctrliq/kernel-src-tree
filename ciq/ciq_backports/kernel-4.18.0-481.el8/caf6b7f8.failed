can: can-dev: move to netif_napi_add_weight()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Jakub Kicinski <kuba@kernel.org>
commit caf6b7f81e053dfdc5f16e943b355bc954e0de34
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/caf6b7f8.failed

We want to remove the weight argument from the basic version of the
netif_napi_add() call. Move all the callers in drivers/net/can that
pass a custom weight (i.e. not NAPI_POLL_WEIGHT or 64) to the
netif_napi_add_weight() API.

Link: https://lore.kernel.org/all/20220517002345.1812104-1-kuba@kernel.org
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
	Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
(cherry picked from commit caf6b7f81e053dfdc5f16e943b355bc954e0de34)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/can/c_can/c_can.c
#	drivers/net/can/dev/rx-offload.c
#	drivers/net/can/rcar/rcar_canfd.c
diff --cc drivers/net/can/c_can/c_can.c
index 606b7d8ffe13,2034dbe30958..000000000000
--- a/drivers/net/can/c_can/c_can.c
+++ b/drivers/net/can/c_can/c_can.c
@@@ -1169,7 -1230,24 +1169,28 @@@ struct net_device *alloc_c_can_dev(void
  		return NULL;
  
  	priv = netdev_priv(dev);
++<<<<<<< HEAD:drivers/net/can/c_can/c_can.c
 +	netif_napi_add(dev, &priv->napi, c_can_poll, C_CAN_NAPI_WEIGHT);
++=======
+ 	priv->msg_obj_num = msg_obj_num;
+ 	priv->msg_obj_rx_num = msg_obj_num - msg_obj_tx_num;
+ 	priv->msg_obj_rx_first = 1;
+ 	priv->msg_obj_rx_last =
+ 		priv->msg_obj_rx_first + priv->msg_obj_rx_num - 1;
+ 	priv->msg_obj_rx_mask = GENMASK(priv->msg_obj_rx_num - 1, 0);
+ 
+ 	priv->msg_obj_tx_num = msg_obj_tx_num;
+ 	priv->msg_obj_tx_first = priv->msg_obj_rx_last + 1;
+ 	priv->msg_obj_tx_last =
+ 		priv->msg_obj_tx_first + priv->msg_obj_tx_num - 1;
+ 
+ 	priv->tx.head = 0;
+ 	priv->tx.tail = 0;
+ 	priv->tx.obj_num = msg_obj_tx_num;
+ 
+ 	netif_napi_add_weight(dev, &priv->napi, c_can_poll,
+ 			      priv->msg_obj_rx_num);
++>>>>>>> caf6b7f81e05 (can: can-dev: move to netif_napi_add_weight()):drivers/net/can/c_can/c_can_main.c
  
  	priv->dev = dev;
  	priv->can.bittiming_const = &c_can_bittiming_const;
diff --cc drivers/net/can/rcar/rcar_canfd.c
index 602c19e23f05,f75ebaa35519..000000000000
--- a/drivers/net/can/rcar/rcar_canfd.c
+++ b/drivers/net/can/rcar/rcar_canfd.c
@@@ -1599,8 -1789,11 +1599,16 @@@ static int rcar_canfd_channel_probe(str
  	priv->gpriv = gpriv;
  	SET_NETDEV_DEV(ndev, &pdev->dev);
  
++<<<<<<< HEAD
 +	netif_napi_add(ndev, &priv->napi, rcar_canfd_rx_poll,
 +		       RCANFD_NAPI_WEIGHT);
++=======
+ 	netif_napi_add_weight(ndev, &priv->napi, rcar_canfd_rx_poll,
+ 			      RCANFD_NAPI_WEIGHT);
+ 	spin_lock_init(&priv->tx_lock);
+ 	devm_can_led_init(ndev);
+ 	gpriv->ch[priv->channel] = priv;
++>>>>>>> caf6b7f81e05 (can: can-dev: move to netif_napi_add_weight())
  	err = register_candev(ndev);
  	if (err) {
  		dev_err(&pdev->dev,
* Unmerged path drivers/net/can/dev/rx-offload.c
diff --git a/drivers/net/can/at91_can.c b/drivers/net/can/at91_can.c
index 1718c20f9c99..3475bcc8324a 100644
--- a/drivers/net/can/at91_can.c
+++ b/drivers/net/can/at91_can.c
@@ -1336,7 +1336,7 @@ static int at91_can_probe(struct platform_device *pdev)
 	priv->pdata = dev_get_platdata(&pdev->dev);
 	priv->mb0_id = 0x7ff;
 
-	netif_napi_add(dev, &priv->napi, at91_poll, get_mb_rx_num(priv));
+	netif_napi_add_weight(dev, &priv->napi, at91_poll, get_mb_rx_num(priv));
 
 	if (at91_is_sam9263(priv))
 		dev->sysfs_groups[0] = &at91_sysfs_attr_group;
* Unmerged path drivers/net/can/c_can/c_can.c
* Unmerged path drivers/net/can/dev/rx-offload.c
diff --git a/drivers/net/can/grcan.c b/drivers/net/can/grcan.c
index 7eec1d9f86a0..dbadc6998803 100644
--- a/drivers/net/can/grcan.c
+++ b/drivers/net/can/grcan.c
@@ -1630,7 +1630,7 @@ static int grcan_setup_netdev(struct platform_device *ofdev,
 		timer_setup(&priv->hang_timer, grcan_initiate_running_reset, 0);
 	}
 
-	netif_napi_add(dev, &priv->napi, grcan_poll, GRCAN_NAPI_WEIGHT);
+	netif_napi_add_weight(dev, &priv->napi, grcan_poll, GRCAN_NAPI_WEIGHT);
 
 	SET_NETDEV_DEV(dev, &ofdev->dev);
 	dev_info(&ofdev->dev, "regs=0x%p, irq=%d, clock=%d\n",
diff --git a/drivers/net/can/janz-ican3.c b/drivers/net/can/janz-ican3.c
index adfdb66a486e..b72f375e2de3 100644
--- a/drivers/net/can/janz-ican3.c
+++ b/drivers/net/can/janz-ican3.c
@@ -1913,7 +1913,7 @@ static int ican3_probe(struct platform_device *pdev)
 	mod = netdev_priv(ndev);
 	mod->ndev = ndev;
 	mod->num = pdata->modno;
-	netif_napi_add(ndev, &mod->napi, ican3_napi, ICAN3_RX_BUFFERS);
+	netif_napi_add_weight(ndev, &mod->napi, ican3_napi, ICAN3_RX_BUFFERS);
 	skb_queue_head_init(&mod->echoq);
 	spin_lock_init(&mod->lock);
 	init_completion(&mod->termination_comp);
diff --git a/drivers/net/can/mscan/mscan.c b/drivers/net/can/mscan/mscan.c
index acb708fc1463..e3759fe1ebaf 100644
--- a/drivers/net/can/mscan/mscan.c
+++ b/drivers/net/can/mscan/mscan.c
@@ -696,7 +696,7 @@ struct net_device *alloc_mscandev(void)
 
 	dev->flags |= IFF_ECHO;	/* we support local echo */
 
-	netif_napi_add(dev, &priv->napi, mscan_rx_poll, 8);
+	netif_napi_add_weight(dev, &priv->napi, mscan_rx_poll, 8);
 
 	priv->can.bittiming_const = &mscan_bittiming_const;
 	priv->can.do_set_bittiming = mscan_do_set_bittiming;
diff --git a/drivers/net/can/pch_can.c b/drivers/net/can/pch_can.c
index c1317889d3d8..2a84a0894c35 100644
--- a/drivers/net/can/pch_can.c
+++ b/drivers/net/can/pch_can.c
@@ -1229,7 +1229,7 @@ static int pch_can_probe(struct pci_dev *pdev,
 	ndev->netdev_ops = &pch_can_netdev_ops;
 	priv->can.clock.freq = PCH_CAN_CLK; /* Hz */
 
-	netif_napi_add(ndev, &priv->napi, pch_can_poll, PCH_RX_OBJ_END);
+	netif_napi_add_weight(ndev, &priv->napi, pch_can_poll, PCH_RX_OBJ_END);
 
 	rc = pci_enable_msi(priv->dev);
 	if (rc) {
diff --git a/drivers/net/can/rcar/rcar_can.c b/drivers/net/can/rcar/rcar_can.c
index 11662f479e76..5ad4c93d38fe 100644
--- a/drivers/net/can/rcar/rcar_can.c
+++ b/drivers/net/can/rcar/rcar_can.c
@@ -815,8 +815,8 @@ static int rcar_can_probe(struct platform_device *pdev)
 	platform_set_drvdata(pdev, ndev);
 	SET_NETDEV_DEV(ndev, &pdev->dev);
 
-	netif_napi_add(ndev, &priv->napi, rcar_can_rx_poll,
-		       RCAR_CAN_NAPI_WEIGHT);
+	netif_napi_add_weight(ndev, &priv->napi, rcar_can_rx_poll,
+			      RCAR_CAN_NAPI_WEIGHT);
 	err = register_candev(ndev);
 	if (err) {
 		dev_err(&pdev->dev, "register_candev() failed, error %d\n",
* Unmerged path drivers/net/can/rcar/rcar_canfd.c
diff --git a/drivers/net/can/xilinx_can.c b/drivers/net/can/xilinx_can.c
index 5a24039733ef..9d63e66f2364 100644
--- a/drivers/net/can/xilinx_can.c
+++ b/drivers/net/can/xilinx_can.c
@@ -1352,7 +1352,7 @@ static int xcan_probe(struct platform_device *pdev)
 
 	priv->can.clock.freq = clk_get_rate(priv->can_clk);
 
-	netif_napi_add(ndev, &priv->napi, xcan_rx_poll, rx_max);
+	netif_napi_add_weight(ndev, &priv->napi, xcan_rx_poll, rx_max);
 
 	ret = register_candev(ndev);
 	if (ret) {
