writeback: Fix inode->i_io_list not be protected by inode->i_lock error

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Jchao Sun <sunjunchao2870@gmail.com>
commit 10e14073107dd0b6d97d9516a02845a8e501c2c9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/10e14073.failed

Commit b35250c0816c ("writeback: Protect inode->i_io_list with
inode->i_lock") made inode->i_io_list not only protected by
wb->list_lock but also inode->i_lock, but inode_io_list_move_locked()
was missed. Add lock there and also update comment describing
things protected by inode->i_lock. This also fixes a race where
__mark_inode_dirty() could move inode under flush worker's hands
and thus sync(2) could miss writing some inodes.

Fixes: b35250c0816c ("writeback: Protect inode->i_io_list with inode->i_lock")
Link: https://lore.kernel.org/r/20220524150540.12552-1-sunjunchao2870@gmail.com
CC: stable@vger.kernel.org
	Signed-off-by: Jchao Sun <sunjunchao2870@gmail.com>
	Signed-off-by: Jan Kara <jack@suse.cz>
(cherry picked from commit 10e14073107dd0b6d97d9516a02845a8e501c2c9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/fs-writeback.c
diff --cc fs/fs-writeback.c
index 82057f0b9841,05221366a16d..000000000000
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@@ -2405,7 -2363,8 +2411,12 @@@ static noinline void block_dump___mark_
  void __mark_inode_dirty(struct inode *inode, int flags)
  {
  	struct super_block *sb = inode->i_sb;
++<<<<<<< HEAD
 +	int dirtytime;
++=======
+ 	int dirtytime = 0;
+ 	struct bdi_writeback *wb = NULL;
++>>>>>>> 10e14073107d (writeback: Fix inode->i_io_list not be protected by inode->i_lock error)
  
  	trace_writeback_mark_inode_dirty(inode, flags);
  
* Unmerged path fs/fs-writeback.c
diff --git a/fs/inode.c b/fs/inode.c
index 6cd6e8e5f6af..341a403ea98e 100644
--- a/fs/inode.c
+++ b/fs/inode.c
@@ -26,7 +26,7 @@
  * Inode locking rules:
  *
  * inode->i_lock protects:
- *   inode->i_state, inode->i_hash, __iget()
+ *   inode->i_state, inode->i_hash, __iget(), inode->i_io_list
  * Inode LRU list locks protect:
  *   inode->i_sb->s_inode_lru, inode->i_lru
  * inode->i_sb->s_inode_list_lock protects:
