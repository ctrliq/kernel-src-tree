net/mlx5: Add exit route when waiting for FW

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Gavin Li <gavinl@nvidia.com>
commit 8324a02c342a36336114a497130826612ed5520d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/8324a02c.failed

Currently, removing a device needs to get the driver interface lock before
doing any cleanup. If the driver is waiting in a loop for FW init, there
is no way to cancel the wait, instead the device cleanup waits for the
loop to conclude and release the lock.

To allow immediate response to remove device commands, check the TEARDOWN
flag while waiting for FW init, and exit the loop if it has been set.

	Signed-off-by: Gavin Li <gavinl@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 8324a02c342a36336114a497130826612ed5520d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index e4de392627c6,f28a3526aafa..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -1635,10 -1603,7 +1636,14 @@@ static void remove_one(struct pci_dev *
  	struct mlx5_core_dev *dev  = pci_get_drvdata(pdev);
  	struct devlink *devlink = priv_to_devlink(dev);
  
++<<<<<<< HEAD
 +	/* mlx5_drain_fw_reset() is using devlink APIs. Hence, we must drain
 +	 * fw_reset before unregistering the devlink.
 +	 */
 +	mlx5_drain_fw_reset(dev);
++=======
+ 	set_bit(MLX5_BREAK_FW_WAIT, &dev->intf_state);
++>>>>>>> 8324a02c342a (net/mlx5: Add exit route when waiting for FW)
  	devlink_unregister(devlink);
  	mlx5_sriov_disable(pdev);
  	mlx5_crdump_disable(dev);
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --git a/include/linux/mlx5/driver.h b/include/linux/mlx5/driver.h
index 9424503eb8d3..b5e97abcee20 100644
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@ -632,6 +632,7 @@ enum mlx5_device_state {
 
 enum mlx5_interface_state {
 	MLX5_INTERFACE_STATE_UP = BIT(0),
+	MLX5_BREAK_FW_WAIT = BIT(1),
 };
 
 enum mlx5_pci_status {
