perf/x86/intel/uncore: Update sysfs-devices-mapping file

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Alexander Antonov <alexander.antonov@linux.intel.com>
commit 61fb0f7e974ac00ead611c00a57efdafac7785b5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/61fb0f7e.failed

Add description for /sys/devices/uncore_upi_*/die* attributes to
sysfs-devices-mapping.

	Signed-off-by: Alexander Antonov <alexander.antonov@linux.intel.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Kan Liang <kan.liang@linux.intel.com>
Link: https://lore.kernel.org/r/20221117122833.3103580-11-alexander.antonov@linux.intel.com
(cherry picked from commit 61fb0f7e974ac00ead611c00a57efdafac7785b5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/ABI/testing/sysfs-devices-mapping
diff --cc Documentation/ABI/testing/sysfs-devices-mapping
index 490ccfd67f12,2eee1446ad4c..000000000000
--- a/Documentation/ABI/testing/sysfs-devices-mapping
+++ b/Documentation/ABI/testing/sysfs-devices-mapping
@@@ -8,26 -8,55 +8,63 @@@ Description
                  block.
                  For example, on 4-die Xeon platform with up to 6 IIO stacks per
                  die and, therefore, 6 IIO PMON blocks per die, the mapping of
 -                IIO PMON block 0 exposes as the following::
 -
 -		    $ ls /sys/devices/uncore_iio_0/die*
 -		    -r--r--r-- /sys/devices/uncore_iio_0/die0
 -		    -r--r--r-- /sys/devices/uncore_iio_0/die1
 -		    -r--r--r-- /sys/devices/uncore_iio_0/die2
 -		    -r--r--r-- /sys/devices/uncore_iio_0/die3
 -
 -		    $ tail /sys/devices/uncore_iio_0/die*
 -		    ==> /sys/devices/uncore_iio_0/die0 <==
 -		    0000:00
 -		    ==> /sys/devices/uncore_iio_0/die1 <==
 -		    0000:40
 -		    ==> /sys/devices/uncore_iio_0/die2 <==
 -		    0000:80
 -		    ==> /sys/devices/uncore_iio_0/die3 <==
 -		    0000:c0
 +                IIO PMON block 0 exposes as the following:
  
 +                $ ls /sys/devices/uncore_iio_0/die*
 +                -r--r--r-- /sys/devices/uncore_iio_0/die0
 +                -r--r--r-- /sys/devices/uncore_iio_0/die1
 +                -r--r--r-- /sys/devices/uncore_iio_0/die2
 +                -r--r--r-- /sys/devices/uncore_iio_0/die3
 +
 +                $ tail /sys/devices/uncore_iio_0/die*
 +                ==> /sys/devices/uncore_iio_0/die0 <==
 +                0000:00
 +                ==> /sys/devices/uncore_iio_0/die1 <==
 +                0000:40
 +                ==> /sys/devices/uncore_iio_0/die2 <==
 +                0000:80
 +                ==> /sys/devices/uncore_iio_0/die3 <==
 +                0000:c0
 +
++<<<<<<< HEAD
 +                Which means:
 +                IIO PMU 0 on die 0 belongs to PCI RP on bus 0x00, domain 0x0000
 +                IIO PMU 0 on die 1 belongs to PCI RP on bus 0x40, domain 0x0000
 +                IIO PMU 0 on die 2 belongs to PCI RP on bus 0x80, domain 0x0000
 +                IIO PMU 0 on die 3 belongs to PCI RP on bus 0xc0, domain 0x0000
++=======
+                 Which means::
+ 
+ 		    IIO PMU 0 on die 0 belongs to PCI RP on bus 0x00, domain 0x0000
+ 		    IIO PMU 0 on die 1 belongs to PCI RP on bus 0x40, domain 0x0000
+ 		    IIO PMU 0 on die 2 belongs to PCI RP on bus 0x80, domain 0x0000
+ 		    IIO PMU 0 on die 3 belongs to PCI RP on bus 0xc0, domain 0x0000
+ 
+ What:           /sys/devices/uncore_upi_x/dieX
+ Date:           March 2022
+ Contact:        Alexander Antonov <alexander.antonov@linux.intel.com>
+ Description:
+                 Each /sys/devices/uncore_upi_X/dieY file holds "upi_Z,die_W"
+                 value that means UPI link number X on die Y is connected to UPI
+                 link Z on die W and this link between sockets can be monitored
+                 by UPI PMON block.
+                 For example, 4-die Sapphire Rapids platform has the following
+                 UPI 0 topology::
+ 
+ 		    # tail /sys/devices/uncore_upi_0/die*
+ 		    ==> /sys/devices/uncore_upi_0/die0 <==
+ 		    upi_1,die_1
+ 		    ==> /sys/devices/uncore_upi_0/die1 <==
+ 		    upi_0,die_3
+ 		    ==> /sys/devices/uncore_upi_0/die2 <==
+ 		    upi_1,die_3
+ 		    ==> /sys/devices/uncore_upi_0/die3 <==
+ 		    upi_0,die_1
+ 
+                 Which means::
+ 
+ 		    UPI link 0 on die 0 is connected to UPI link 1 on die 1
+ 		    UPI link 0 on die 1 is connected to UPI link 0 on die 3
+ 		    UPI link 0 on die 2 is connected to UPI link 1 on die 3
 -		    UPI link 0 on die 3 is connected to UPI link 0 on die 1
++		    UPI link 0 on die 3 is connected to UPI link 0 on die 1
++>>>>>>> 61fb0f7e974a (perf/x86/intel/uncore: Update sysfs-devices-mapping file)
* Unmerged path Documentation/ABI/testing/sysfs-devices-mapping
