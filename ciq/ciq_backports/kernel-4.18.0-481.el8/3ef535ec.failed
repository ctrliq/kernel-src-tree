net/mlx5e: Use XFRM state direction instead of flags

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-481.el8
commit-author Leon Romanovsky <leonro@nvidia.com>
commit 3ef535eccea33b2a4fce20f4f298e09647350d71
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-481.el8/3ef535ec.failed

Convert mlx5 driver to use XFRM state direction.

	Reviewed-by: Raed Salem <raeds@nvidia.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
(cherry picked from commit 3ef535eccea33b2a4fce20f4f298e09647350d71)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
index 027d80b77b28,2a8fd7020622..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
@@@ -182,16 -171,10 +182,16 @@@ mlx5e_ipsec_build_accel_xfrm_attrs(stru
  			attrs->flags |= MLX5_ACCEL_ESP_FLAGS_ESN_STATE_OVERLAP;
  	}
  
 +	/* rx handle */
 +	attrs->sa_handle = sa_entry->handle;
 +
 +	/* algo type */
 +	attrs->keymat_type = MLX5_ACCEL_ESP_KEYMAT_AES_GCM;
 +
  	/* action */
- 	attrs->action = (!(x->xso.flags & XFRM_OFFLOAD_INBOUND)) ?
- 			MLX5_ACCEL_ESP_ACTION_ENCRYPT :
- 			MLX5_ACCEL_ESP_ACTION_DECRYPT;
+ 	attrs->action = (x->xso.dir == XFRM_DEV_OFFLOAD_OUT) ?
+ 				MLX5_ACCEL_ESP_ACTION_ENCRYPT :
+ 				      MLX5_ACCEL_ESP_ACTION_DECRYPT;
  	/* flags */
  	attrs->flags |= (x->props.mode == XFRM_MODE_TRANSPORT) ?
  			MLX5_ACCEL_ESP_FLAGS_TRANSPORT :
@@@ -335,8 -306,8 +335,13 @@@ static int mlx5e_xfrm_add_state(struct 
  	if (err)
  		goto err_hw_ctx;
  
++<<<<<<< HEAD
 +	if (x->xso.flags & XFRM_OFFLOAD_INBOUND) {
 +		err = mlx5e_ipsec_sadb_rx_add(sa_entry, sa_handle);
++=======
+ 	if (x->xso.dir == XFRM_DEV_OFFLOAD_IN) {
+ 		err = mlx5e_ipsec_sadb_rx_add(sa_entry);
++>>>>>>> 3ef535eccea3 (net/mlx5e: Use XFRM state direction instead of flags)
  		if (err)
  			goto err_add_rule;
  	} else {
@@@ -365,10 -333,7 +370,14 @@@ static void mlx5e_xfrm_del_state(struc
  {
  	struct mlx5e_ipsec_sa_entry *sa_entry = to_ipsec_sa_entry(x);
  
++<<<<<<< HEAD
 +	if (!sa_entry)
 +		return;
 +
 +	if (x->xso.flags & XFRM_OFFLOAD_INBOUND)
++=======
+ 	if (x->xso.dir == XFRM_DEV_OFFLOAD_IN)
++>>>>>>> 3ef535eccea3 (net/mlx5e: Use XFRM state direction instead of flags)
  		mlx5e_ipsec_sadb_rx_del(sa_entry);
  }
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec.c
