tracing/perf: Fix double put of trace event when init fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-545.el8
commit-author Steven Rostedt (Google) <rostedt@goodmis.org>
commit 7249921d94ff64f67b733eca0b68853a62032b3d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-545.el8/7249921d.failed

If in perf_trace_event_init(), the perf_trace_event_open() fails, then it
will call perf_trace_event_unreg() which will not only unregister the perf
trace event, but will also call the put() function of the tp_event.

The problem here is that the trace_event_try_get_ref() is called by the
caller of perf_trace_event_init() and if perf_trace_event_init() returns a
failure, it will then call trace_event_put(). But since the
perf_trace_event_unreg() already called the trace_event_put() function, it
triggers a WARN_ON().

 WARNING: CPU: 1 PID: 30309 at kernel/trace/trace_dynevent.c:46 trace_event_dyn_put_ref+0x15/0x20

If perf_trace_event_reg() does not call the trace_event_try_get_ref() then
the perf_trace_event_unreg() should not be calling trace_event_put(). This
breaks symmetry and causes bugs like these.

Pull out the trace_event_put() from perf_trace_event_unreg() and call it
in the locations that perf_trace_event_unreg() is called. This not only
fixes this bug, but also brings back the proper symmetry of the reg/unreg
vs get/put logic.

Link: https://lore.kernel.org/all/cover.1660347763.git.kjlx@templeofstupid.com/
Link: https://lkml.kernel.org/r/20220816192817.43d5e17f@gandalf.local.home

	Cc: stable@vger.kernel.org
Fixes: 1d18538e6a092 ("tracing: Have dynamic events have a ref counter")
	Reported-by: Krister Johansen <kjlx@templeofstupid.com>
	Reviewed-by: Krister Johansen <kjlx@templeofstupid.com>
	Tested-by: Krister Johansen <kjlx@templeofstupid.com>
	Acked-by: Jiri Olsa <jolsa@kernel.org>
	Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
(cherry picked from commit 7249921d94ff64f67b733eca0b68853a62032b3d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/trace_event_perf.c
diff --cc kernel/trace/trace_event_perf.c
index 9abf9a750939,61e3a2620fa3..000000000000
--- a/kernel/trace/trace_event_perf.c
+++ b/kernel/trace/trace_event_perf.c
@@@ -175,8 -176,6 +175,11 @@@ static void perf_trace_event_unreg(stru
  			perf_trace_buf[i] = NULL;
  		}
  	}
++<<<<<<< HEAD
 +out:
 +	module_put(tp_event->mod);
++=======
++>>>>>>> 7249921d94ff (tracing/perf: Fix double put of trace event when init fails)
  }
  
  static int perf_trace_event_open(struct perf_event *p_event)
* Unmerged path kernel/trace/trace_event_perf.c
