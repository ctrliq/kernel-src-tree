tracing/osnoise: Fix notify new tracing_max_latency

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-533.el8
commit-author Daniel Bristot de Oliveira <bristot@kernel.org>
commit d3cba7f02cd82118c32651c73374d8a5a459d9a6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-533.el8/d3cba7f0.failed

osnoise/timerlat tracers are reporting new max latency on instances
where the tracing is off, creating inconsistencies between the max
reported values in the trace and in the tracing_max_latency. Thus
only report new tracing_max_latency on active tracing instances.

Link: https://lkml.kernel.org/r/ecd109fde4a0c24ab0f00ba1e9a144ac19a91322.1680104184.git.bristot@kernel.org

	Cc: stable@vger.kernel.org
Fixes: dae181349f1e ("tracing/osnoise: Support a list of trace_array *tr")
	Signed-off-by: Daniel Bristot de Oliveira <bristot@kernel.org>
	Signed-off-by: Steven Rostedt (Google) <rostedt@goodmis.org>
(cherry picked from commit d3cba7f02cd82118c32651c73374d8a5a459d9a6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/trace/trace_osnoise.c
diff --cc kernel/trace/trace_osnoise.c
index 65712b57c017,4496975f2029..000000000000
--- a/kernel/trace/trace_osnoise.c
+++ b/kernel/trace/trace_osnoise.c
@@@ -1310,8 -1296,10 +1310,12 @@@ static void notify_new_max_latency(u64 
  	rcu_read_lock();
  	list_for_each_entry_rcu(inst, &osnoise_instances, list) {
  		tr = inst->tr;
++<<<<<<< HEAD
 +		if (tr->max_latency < latency)
++=======
+ 		if (tracer_tracing_is_on(tr) && tr->max_latency < latency) {
++>>>>>>> d3cba7f02cd8 (tracing/osnoise: Fix notify new tracing_max_latency)
  			tr->max_latency = latency;
 -			latency_fsnotify(tr);
 -		}
  	}
  	rcu_read_unlock();
  }
* Unmerged path kernel/trace/trace_osnoise.c
