clocksource/drivers/arm_arch_timer: Force inlining of erratum_set_next_event_generic()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-543.el8
commit-author Marc Zyngier <maz@kernel.org>
commit 1edb7e74a7d3d64dc4e69e7059b4eea526d19a10
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-543.el8/1edb7e74.failed

With some specific kernel configuration and Clang, the kernel fails
to like with something like:

ld.lld: error: undefined symbol: __compiletime_assert_200
>>> referenced by arch_timer.h:156 (./arch/arm64/include/asm/arch_timer.h:156)
>>>               clocksource/arm_arch_timer.o:(erratum_set_next_event_generic) in archive drivers/built-in.a

ld.lld: error: undefined symbol: __compiletime_assert_197
>>> referenced by arch_timer.h:133 (./arch/arm64/include/asm/arch_timer.h:133)
>>>               clocksource/arm_arch_timer.o:(erratum_set_next_event_generic) in archive drivers/built-in.a
make: *** [Makefile:1161: vmlinux] Error 1

These are due to the BUILD_BUG() macros contained in the low-level
accessors (arch_timer_reg_{write,read}_cp15) being emitted, as the
access type wasn't known at compile time.

Fix this by making erratum_set_next_event_generic() __force_inline,
resulting in the 'access' parameter to be resolved at compile time,
similarly to what is already done for set_next_event().

Fixes: 4775bc63f880 ("Add build-time guards for unhandled register accesses")
	Reported-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Daniel Lezcano <daniel.lezcano@linaro.org>
	Cc: Sami Tolvanen <samitolvanen@google.com>
	Cc: Nick Desaulniers <ndesaulniers@google.com>
	Tested-by: Sami Tolvanen <samitolvanen@google.com>
	Reviewed-by: Nathan Chancellor <nathan@kernel.org>
	Tested-by: Nathan Chancellor <nathan@kernel.org>
Link: https://lore.kernel.org/r/20211117113532.3895208-1-maz@kernel.org
	Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
(cherry picked from commit 1edb7e74a7d3d64dc4e69e7059b4eea526d19a10)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/clocksource/arm_arch_timer.c
diff --cc drivers/clocksource/arm_arch_timer.c
index 589bc35f2e59,1ecd52f903b8..000000000000
--- a/drivers/clocksource/arm_arch_timer.c
+++ b/drivers/clocksource/arm_arch_timer.c
@@@ -382,8 -394,13 +382,18 @@@ EXPORT_SYMBOL_GPL(timer_unstable_counte
  
  static atomic_t timer_unstable_counter_workaround_in_use = ATOMIC_INIT(0);
  
++<<<<<<< HEAD
 +static void erratum_set_next_event_tval_generic(const int access, unsigned long evt,
 +						struct clock_event_device *clk)
++=======
+ /*
+  * Force the inlining of this function so that the register accesses
+  * can be themselves correctly inlined.
+  */
+ static __always_inline
+ void erratum_set_next_event_generic(const int access, unsigned long evt,
+ 				    struct clock_event_device *clk)
++>>>>>>> 1edb7e74a7d3 (clocksource/drivers/arm_arch_timer: Force inlining of erratum_set_next_event_generic())
  {
  	unsigned long ctrl;
  	u64 cval;
* Unmerged path drivers/clocksource/arm_arch_timer.c
