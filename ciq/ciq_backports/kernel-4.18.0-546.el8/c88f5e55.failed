dm-integrity: recheck the integrity tag after a failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-546.el8
commit-author Mikulas Patocka <mpatocka@redhat.com>
commit c88f5e553fe38b2ffc4c33d08654e5281b297677
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-546.el8/c88f5e55.failed

If a userspace process reads (with O_DIRECT) multiple blocks into the same
buffer, dm-integrity reports an error [1]. The error is reported in a log
and it may cause RAID leg being kicked out of the array.

This commit fixes dm-integrity, so that if integrity verification fails,
the data is read again into a kernel buffer (where userspace can't modify
it) and the integrity tag is rechecked. If the recheck succeeds, the
content of the kernel buffer is copied into the user buffer; if the
recheck fails, an integrity error is reported.

[1] https://people.redhat.com/~mpatocka/testcases/blk-auth-modify/read2.c

	Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit c88f5e553fe38b2ffc4c33d08654e5281b297677)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-integrity.c
diff --cc drivers/md/dm-integrity.c
index f8a57682f671,e46c798c5c36..000000000000
--- a/drivers/md/dm-integrity.c
+++ b/drivers/md/dm-integrity.c
@@@ -1779,11 -1851,8 +1854,16 @@@ again
  						checksums_ptr - checksums, dio->op == REQ_OP_READ ? TAG_CMP : TAG_WRITE);
  			if (unlikely(r)) {
  				if (r > 0) {
++<<<<<<< HEAD
 +					char b[BDEVNAME_SIZE];
 +					DMERR_LIMIT("%s: Checksum failed at sector 0x%llx", bio_devname(bio, b),
 +						    (sector - ((r + ic->tag_size - 1) / ic->tag_size)));
 +					r = -EILSEQ;
 +					atomic64_inc(&ic->number_of_mismatches);
++=======
+ 					integrity_recheck(dio);
+ 					goto skip_io;
++>>>>>>> c88f5e553fe3 (dm-integrity: recheck the integrity tag after a failure)
  				}
  				if (likely(checksums != checksums_onstack))
  					kfree(checksums);
* Unmerged path drivers/md/dm-integrity.c
