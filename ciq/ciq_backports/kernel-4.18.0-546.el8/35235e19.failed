cifs: Replace remaining 1-element arrays

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-546.el8
commit-author Kees Cook <keescook@chromium.org>
commit 35235e19b393b54db0e0d7c424d658ba45f20468
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-546.el8/35235e19.failed

The kernel is globally removing the ambiguous 0-length and 1-element
arrays in favor of flexible arrays, so that we can gain both compile-time
and run-time array bounds checking[1].

Replace the trailing 1-element array with a flexible array in the
following structures:

	struct cifs_spnego_msg
	struct cifs_quota_data
	struct get_dfs_referral_rsp
	struct file_alt_name_info
	NEGOTIATE_RSP
	SESSION_SETUP_ANDX
	TCONX_REQ
	TCONX_RSP
	TCONX_RSP_EXT
	ECHO_REQ
	ECHO_RSP
	OPEN_REQ
	OPENX_REQ
	LOCK_REQ
	RENAME_REQ
	COPY_REQ
	COPY_RSP
	NT_RENAME_REQ
	DELETE_FILE_REQ
	DELETE_DIRECTORY_REQ
	CREATE_DIRECTORY_REQ
	QUERY_INFORMATION_REQ
	SETATTR_REQ
	TRANSACT_IOCTL_REQ
	TRANSACT_CHANGE_NOTIFY_REQ
	TRANSACTION2_QPI_REQ
	TRANSACTION2_SPI_REQ
	TRANSACTION2_FFIRST_REQ
	TRANSACTION2_GET_DFS_REFER_REQ
	FILE_UNIX_LINK_INFO
	FILE_DIRECTORY_INFO
	FILE_FULL_DIRECTORY_INFO
	SEARCH_ID_FULL_DIR_INFO
	FILE_BOTH_DIRECTORY_INFO
	FIND_FILE_STANDARD_INFO

Replace the trailing 1-element array with a flexible array, but leave
the existing structure padding:

	FILE_ALL_INFO
	FILE_UNIX_INFO

Remove unused structures:

	struct gea
	struct gealist

Adjust all related size calculations to match the changes to sizeof().

No machine code output differences are produced after these changes.

[1] For lots of details, see both:
    https://docs.kernel.org/process/deprecated.html#zero-length-and-one-element-arrays
    https://people.kernel.org/kees/bounded-flexible-arrays-in-c

	Cc: Steve French <sfrench@samba.org>
	Cc: Paulo Alcantara <pc@cjr.nz>
	Cc: Ronnie Sahlberg <lsahlber@redhat.com>
	Cc: Shyam Prasad N <sprasad@microsoft.com>
	Cc: linux-cifs@vger.kernel.org
	Cc: samba-technical@lists.samba.org
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit 35235e19b393b54db0e0d7c424d658ba45f20468)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/cifspdu.h
#	fs/cifs/smb2pdu.h
diff --cc fs/cifs/cifspdu.h
index faa6ad2c95de,445e3eaebcc1..000000000000
--- a/fs/cifs/cifspdu.h
+++ b/fs/cifs/cifspdu.h
@@@ -1474,8 -1429,8 +1474,13 @@@ typedef struct smb_com_transaction_chan
  	__u8 WatchTree;  /* 1 = Monitor subdirectories */
  	__u8 Reserved2;
  	__le16 ByteCount;
++<<<<<<< HEAD
 +/* 	__u8 Pad[3];*/
 +/*	__u8 Data[1];*/
++=======
+ /*	__u8 Pad[3];*/
+ /*	__u8 Data[];*/
++>>>>>>> 35235e19b393 (cifs: Replace remaining 1-element arrays)
  } __attribute__((packed)) TRANSACT_CHANGE_NOTIFY_REQ;
  
  /* BB eventually change to use generic ntransact rsp struct
diff --cc fs/cifs/smb2pdu.h
index fa57b03ca98c,3ad7ec44317c..000000000000
--- a/fs/cifs/smb2pdu.h
+++ b/fs/cifs/smb2pdu.h
@@@ -1738,6 -356,24 +1738,27 @@@ struct smb2_file_id_information 
  	__u64  VolatileFileId; /* opaque endianness */
  } __packed; /* level 59 */
  
++<<<<<<< HEAD
++=======
+ /* See MS-FSCC 2.4.18 */
+ struct smb2_file_id_extd_directory_info {
+ 	__le32 NextEntryOffset;
+ 	__u32 FileIndex;
+ 	__le64 CreationTime;
+ 	__le64 LastAccessTime;
+ 	__le64 LastWriteTime;
+ 	__le64 ChangeTime;
+ 	__le64 EndOfFile;
+ 	__le64 AllocationSize;
+ 	__le32 FileAttributes;
+ 	__le32 FileNameLength;
+ 	__le32 EaSize; /* EA size */
+ 	__le32 ReparsePointTag; /* valid if FILE_ATTR_REPARSE_POINT set in FileAttributes */
+ 	__le64 UniqueId; /* inode num - le since Samba puts ino in low 32 bit */
+ 	char FileName[];
+ } __packed; /* level 60 */
+ 
++>>>>>>> 35235e19b393 (cifs: Replace remaining 1-element arrays)
  extern char smb2_padding[7];
  
  /* equivalent of the contents of SMB3.1.1 POSIX open context response */
diff --git a/fs/cifs/cifs_spnego.h b/fs/cifs/cifs_spnego.h
index 31bef9ee078b..7ba9fbcff191 100644
--- a/fs/cifs/cifs_spnego.h
+++ b/fs/cifs/cifs_spnego.h
@@ -36,7 +36,7 @@ struct cifs_spnego_msg {
 	uint32_t	flags;
 	uint32_t	sesskey_len;
 	uint32_t	secblob_len;
-	uint8_t		data[1];
+	uint8_t		data[];
 };
 
 #ifdef __KERNEL__
* Unmerged path fs/cifs/cifspdu.h
diff --git a/fs/cifs/readdir.c b/fs/cifs/readdir.c
index 78aa7ce89781..7ceb92f8b16b 100644
--- a/fs/cifs/readdir.c
+++ b/fs/cifs/readdir.c
@@ -509,7 +509,7 @@ static char *nxt_dir_entry(char *old_entry, char *end_of_smb, int level)
 		FIND_FILE_STANDARD_INFO *pfData;
 		pfData = (FIND_FILE_STANDARD_INFO *)pDirInfo;
 
-		new_entry = old_entry + sizeof(FIND_FILE_STANDARD_INFO) +
+		new_entry = old_entry + sizeof(FIND_FILE_STANDARD_INFO) + 1 +
 				pfData->FileNameLength;
 	} else {
 		u32 next_offset = le32_to_cpu(pDirInfo->NextEntryOffset);
@@ -527,9 +527,9 @@ static char *nxt_dir_entry(char *old_entry, char *end_of_smb, int level)
 			 new_entry, end_of_smb, old_entry);
 		return NULL;
 	} else if (((level == SMB_FIND_FILE_INFO_STANDARD) &&
-		    (new_entry + sizeof(FIND_FILE_STANDARD_INFO) > end_of_smb))
+		    (new_entry + sizeof(FIND_FILE_STANDARD_INFO) + 1 > end_of_smb))
 		  || ((level != SMB_FIND_FILE_INFO_STANDARD) &&
-		   (new_entry + sizeof(FILE_DIRECTORY_INFO) > end_of_smb)))  {
+		   (new_entry + sizeof(FILE_DIRECTORY_INFO) + 1 > end_of_smb)))  {
 		cifs_dbg(VFS, "search entry %p extends after end of SMB %p\n",
 			 new_entry, end_of_smb);
 		return NULL;
diff --git a/fs/cifs/smb2pdu.c b/fs/cifs/smb2pdu.c
index 688737135aa3..a638d32413bc 100644
--- a/fs/cifs/smb2pdu.c
+++ b/fs/cifs/smb2pdu.c
@@ -4691,10 +4691,10 @@ smb2_parse_query_directory(struct cifs_tcon *tcon,
 
 	switch (srch_inf->info_level) {
 	case SMB_FIND_FILE_DIRECTORY_INFO:
-		info_buf_size = sizeof(FILE_DIRECTORY_INFO) - 1;
+		info_buf_size = sizeof(FILE_DIRECTORY_INFO);
 		break;
 	case SMB_FIND_FILE_ID_FULL_DIR_INFO:
-		info_buf_size = sizeof(SEARCH_ID_FULL_DIR_INFO) - 1;
+		info_buf_size = sizeof(SEARCH_ID_FULL_DIR_INFO);
 		break;
 	case SMB_FIND_FILE_POSIX_INFO:
 		/* note that posix payload are variable size */
* Unmerged path fs/cifs/smb2pdu.h
