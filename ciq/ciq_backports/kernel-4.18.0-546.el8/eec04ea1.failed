smb: client: fix OOB in receive_encrypted_standard()

jira LE-1907
cve CVE-2024-0565
Rebuild_History Non-Buildable kernel-4.18.0-546.el8
commit-author Paulo Alcantara <pc@manguebit.com>
commit eec04ea119691e65227a97ce53c0da6b9b74b0b7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-546.el8/eec04ea1.failed

Fix potential OOB in receive_encrypted_standard() if server returned a
large shdr->NextCommand that would end up writing off the end of
@next_buffer.

Fixes: b24df3e30cbf ("cifs: update receive_encrypted_standard to handle compounded responses")
	Cc: stable@vger.kernel.org
	Reported-by: Robert Morris <rtm@csail.mit.edu>
	Signed-off-by: Paulo Alcantara (SUSE) <pc@manguebit.com>
	Signed-off-by: Steve French <stfrench@microsoft.com>
(cherry picked from commit eec04ea119691e65227a97ce53c0da6b9b74b0b7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/cifs/smb2ops.c
diff --cc fs/cifs/smb2ops.c
index be2adafb89a0,a6f4948adcbb..000000000000
--- a/fs/cifs/smb2ops.c
+++ b/fs/cifs/smb2ops.c
@@@ -4883,9 -4940,10 +4883,10 @@@ receive_encrypted_standard(struct TCP_S
  {
  	int ret, length;
  	char *buf = server->smallbuf;
 -	struct smb2_hdr *shdr;
 +	struct smb2_sync_hdr *shdr;
  	unsigned int pdu_length = server->pdu_size;
  	unsigned int buf_size;
+ 	unsigned int next_cmd;
  	struct mid_q_entry *mid_entry;
  	int next_is_large;
  	char *next_buffer = NULL;
@@@ -4913,8 -4971,11 +4914,16 @@@
  
  	next_is_large = server->large_buf;
  one_more:
++<<<<<<< HEAD:fs/cifs/smb2ops.c
 +	shdr = (struct smb2_sync_hdr *)buf;
 +	if (shdr->NextCommand) {
++=======
+ 	shdr = (struct smb2_hdr *)buf;
+ 	next_cmd = le32_to_cpu(shdr->NextCommand);
+ 	if (next_cmd) {
+ 		if (WARN_ON_ONCE(next_cmd > pdu_length))
+ 			return -1;
++>>>>>>> eec04ea11969 (smb: client: fix OOB in receive_encrypted_standard()):fs/smb/client/smb2ops.c
  		if (next_is_large)
  			next_buffer = (char *)cifs_buf_get();
  		else
* Unmerged path fs/cifs/smb2ops.c
