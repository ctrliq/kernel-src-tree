kernfs: Improve kernfs_notify() poll notification latency

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Radu Rendec <radu.rendec@gmail.com>
commit 03c0a9208bb10821e5e3f1c81e6218df32524311
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/03c0a920.failed

kernfs_notify() does two notifications: poll and fsnotify. Originally,
both notifications were done from scheduled work context and all that
kernfs_notify() did was schedule the work.

This patch simply moves the poll notification from the scheduled work
handler to kernfs_notify(). The fsnotify notification still needs to be
done from scheduled work context because it can sleep (it needs to lock
a mutex).

If the poll notification is time critical (the notified thread needs to
wake as quickly as possible), it's better to do it from kernfs_notify()
directly. One example is calling sysfs_notify_dirent() from a hardware
interrupt handler to wake up a thread and handle the interrupt in user
space.

	Signed-off-by: Radu Rendec <radu.rendec@gmail.com>
	Acked-by: Tejun Heo <tj@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 03c0a9208bb10821e5e3f1c81e6218df32524311)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/kernfs/file.c
diff --cc fs/kernfs/file.c
index aa39ee8de87b,f8d5021a652e..000000000000
--- a/fs/kernfs/file.c
+++ b/fs/kernfs/file.c
@@@ -866,9 -857,7 +866,8 @@@ static __poll_t kernfs_fop_poll(struct 
  static void kernfs_notify_workfn(struct work_struct *work)
  {
  	struct kernfs_node *kn;
- 	struct kernfs_open_node *on;
  	struct kernfs_super_info *info;
 +	struct kernfs_root *root;
  repeat:
  	/* pop one off the notify_list */
  	spin_lock_irq(&kernfs_notify_lock);
@@@ -881,20 -870,8 +880,23 @@@
  	kn->attr.notify_next = NULL;
  	spin_unlock_irq(&kernfs_notify_lock);
  
++<<<<<<< HEAD
 +	/* kick poll */
 +	spin_lock_irq(&kernfs_open_node_lock);
 +
 +	on = kn->attr.open;
 +	if (on) {
 +		atomic_inc(&on->event);
 +		wake_up_interruptible(&on->poll);
 +	}
 +
 +	spin_unlock_irq(&kernfs_open_node_lock);
 +
 +	root = kernfs_root(kn);
++=======
++>>>>>>> 03c0a9208bb1 (kernfs: Improve kernfs_notify() poll notification latency)
  	/* kick fsnotify */
 -	mutex_lock(&kernfs_mutex);
 +	down_write(&root->kernfs_rwsem);
  
  	list_for_each_entry(info, &kernfs_root(kn)->supers, node) {
  		struct kernfs_node *parent;
* Unmerged path fs/kernfs/file.c
