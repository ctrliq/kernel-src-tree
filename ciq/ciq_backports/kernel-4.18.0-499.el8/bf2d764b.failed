ASoC: SOF: Intel: hda-codec: add stop_cmd_io helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit bf2d764b84abfd880eee50d6982dade9224d1734
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/bf2d764b.failed

One more helper to split controller and codec

	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Reviewed-by: Bard Liao <yung-chuan.liao@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
Link: https://lore.kernel.org/r/20221027193540.259520-11-pierre-louis.bossart@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit bf2d764b84abfd880eee50d6982dade9224d1734)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-codec.c
#	sound/soc/sof/intel/hda.h
diff --cc sound/soc/sof/intel/hda-codec.c
index 054ae8172679,e1cd52ead7eb..000000000000
--- a/sound/soc/sof/intel/hda-codec.c
+++ b/sound/soc/sof/intel/hda-codec.c
@@@ -246,7 -224,87 +246,91 @@@ void hda_codec_probe_bus(struct snd_sof
  		}
  	}
  }
++<<<<<<< HEAD
 +EXPORT_SYMBOL(hda_codec_probe_bus);
++=======
+ EXPORT_SYMBOL_NS(hda_codec_probe_bus, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_check_for_state_change(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 	unsigned int codec_mask;
+ 
+ 	codec_mask = snd_hdac_chip_readw(bus, STATESTS);
+ 	if (codec_mask) {
+ 		hda_codec_jack_check(sdev);
+ 		snd_hdac_chip_writew(bus, STATESTS, codec_mask);
+ 	}
+ }
+ EXPORT_SYMBOL_NS(hda_codec_check_for_state_change, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_detect_mask(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	/* Accept unsolicited responses */
+ 	snd_hdac_chip_updatel(bus, GCTL, AZX_GCTL_UNSOL, AZX_GCTL_UNSOL);
+ 
+ 	/* detect codecs */
+ 	if (!bus->codec_mask) {
+ 		bus->codec_mask = snd_hdac_chip_readw(bus, STATESTS);
+ 		dev_dbg(bus->dev, "codec_mask = 0x%lx\n", bus->codec_mask);
+ 	}
+ 
+ 	if (hda_codec_mask != -1) {
+ 		bus->codec_mask &= hda_codec_mask;
+ 		dev_dbg(bus->dev, "filtered codec_mask = 0x%lx\n",
+ 			bus->codec_mask);
+ 	}
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_detect_mask, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_init_cmd_io(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	/* initialize the codec command I/O */
+ 	snd_hdac_bus_init_cmd_io(bus);
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_init_cmd_io, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_stop_cmd_io(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	/* initialize the codec command I/O */
+ 	snd_hdac_bus_stop_cmd_io(bus);
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_stop_cmd_io, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_rirb_status_clear(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	/* clear rirb status */
+ 	snd_hdac_chip_writeb(bus, RIRBSTS, RIRB_INT_MASK);
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_rirb_status_clear, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_set_codec_wakeup(struct snd_sof_dev *sdev, bool status)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	snd_hdac_set_codec_wakeup(bus, status);
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_set_codec_wakeup, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ void hda_codec_device_remove(struct snd_sof_dev *sdev)
+ {
+ 	struct hdac_bus *bus = sof_to_bus(sdev);
+ 
+ 	/* codec removal, invoke bus_device_remove */
+ 	snd_hdac_ext_bus_device_remove(bus);
+ }
+ EXPORT_SYMBOL_NS_GPL(hda_codec_device_remove, SND_SOC_SOF_HDA_AUDIO_CODEC);
+ 
+ #endif /* CONFIG_SND_SOC_SOF_HDA_AUDIO_CODEC */
++>>>>>>> bf2d764b84ab (ASoC: SOF: Intel: hda-codec: add stop_cmd_io helper)
  
  #if IS_ENABLED(CONFIG_SND_SOC_SOF_HDA_AUDIO_CODEC) && IS_ENABLED(CONFIG_SND_HDA_CODEC_HDMI)
  
diff --cc sound/soc/sof/intel/hda.h
index 2c791f9becb9,8fefff6fcce6..000000000000
--- a/sound/soc/sof/intel/hda.h
+++ b/sound/soc/sof/intel/hda.h
@@@ -714,12 -714,31 +714,37 @@@ void sof_hda_bus_init(struct hdac_bus *
  /*
   * HDA Codec operations.
   */
 -void hda_codec_probe_bus(struct snd_sof_dev *sdev);
 +void hda_codec_probe_bus(struct snd_sof_dev *sdev,
 +			 bool hda_codec_use_common_hdmi);
  void hda_codec_jack_wake_enable(struct snd_sof_dev *sdev, bool enable);
  void hda_codec_jack_check(struct snd_sof_dev *sdev);
++<<<<<<< HEAD
 +
 +#endif /* CONFIG_SND_SOC_SOF_HDA */
++=======
+ void hda_codec_check_for_state_change(struct snd_sof_dev *sdev);
+ void hda_codec_init_cmd_io(struct snd_sof_dev *sdev);
+ void hda_codec_stop_cmd_io(struct snd_sof_dev *sdev);
+ void hda_codec_detect_mask(struct snd_sof_dev *sdev);
+ void hda_codec_rirb_status_clear(struct snd_sof_dev *sdev);
+ void hda_codec_set_codec_wakeup(struct snd_sof_dev *sdev, bool status);
+ void hda_codec_device_remove(struct snd_sof_dev *sdev);
+ 
+ #else
+ 
+ static inline void hda_codec_probe_bus(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_jack_wake_enable(struct snd_sof_dev *sdev, bool enable) { }
+ static inline void hda_codec_jack_check(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_check_for_state_change(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_init_cmd_io(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_stop_cmd_io(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_detect_mask(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_rirb_status_clear(struct snd_sof_dev *sdev) { }
+ static inline void hda_codec_set_codec_wakeup(struct snd_sof_dev *sdev, bool status) { }
+ static inline void hda_codec_device_remove(struct snd_sof_dev *sdev) { }
+ 
+ #endif /* CONFIG_SND_SOC_SOF_HDA_AUDIO_CODEC */
++>>>>>>> bf2d764b84ab (ASoC: SOF: Intel: hda-codec: add stop_cmd_io helper)
  
  #if IS_ENABLED(CONFIG_SND_SOC_SOF_HDA_AUDIO_CODEC) && IS_ENABLED(CONFIG_SND_HDA_CODEC_HDMI)
  
* Unmerged path sound/soc/sof/intel/hda-codec.c
diff --git a/sound/soc/sof/intel/hda-ctrl.c b/sound/soc/sof/intel/hda-ctrl.c
index 449e1e93505e..36b3bf9e2b42 100644
--- a/sound/soc/sof/intel/hda-ctrl.c
+++ b/sound/soc/sof/intel/hda-ctrl.c
@@ -328,10 +328,8 @@ void hda_dsp_ctrl_stop_chip(struct snd_sof_dev *sdev)
 	snd_sof_dsp_write(sdev, HDA_DSP_HDA_BAR, SOF_HDA_INTSTS,
 			  SOF_HDA_INT_CTRL_EN | SOF_HDA_INT_ALL_STREAM);
 
-#if IS_ENABLED(CONFIG_SND_SOC_SOF_HDA)
-	/* disable CORB/RIRB */
-	snd_hdac_bus_stop_cmd_io(bus);
-#endif
+	hda_codec_stop_cmd_io(sdev);
+
 	/* disable position buffer */
 	if (bus->use_posbuf && bus->posbuf.addr) {
 		snd_sof_dsp_write(sdev, HDA_DSP_HDA_BAR,
* Unmerged path sound/soc/sof/intel/hda.h
