ASoC: SOF: Intel: hda-mlink: special-case HDaudio regular links

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
commit 4c2d4e446d5673db2c653a6e53ca9be908582c4e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/4c2d4e44.failed

For backwards compatibility, HDaudio/iDISP links are powered-on when
exiting reset, and the existing driver forces them to be powered-off
when entering S0ix. In addition, the get/put helpers are invoked
directly by the ASoC codec drivers, which a historical layering
violation.

Extended links are powered-on by software only, during the probe and
DAI startup phases. This calls for a different handling of the
'regular' and 'extended' audio links.

	Signed-off-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
	Reviewed-by: Rander Wang <rander.wang@intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Signed-off-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Takashi Iwai <tiwai@suse.de>
Link: https://lore.kernel.org/r/20230404104127.5629-8-peter.ujfalusi@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 4c2d4e446d5673db2c653a6e53ca9be908582c4e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/intel/hda-mlink.c
diff --cc sound/soc/sof/intel/hda-mlink.c
index 2f512ba2a874,8a66c0a67589..000000000000
--- a/sound/soc/sof/intel/hda-mlink.c
+++ b/sound/soc/sof/intel/hda-mlink.c
@@@ -52,9 -255,14 +52,13 @@@ void hda_bus_ml_put_all(struct hdac_bu
  {
  	struct hdac_ext_link *hlink;
  
- 	list_for_each_entry(hlink, &bus->hlink_list, list)
- 		snd_hdac_ext_bus_link_put(bus, hlink);
+ 	list_for_each_entry(hlink, &bus->hlink_list, list) {
+ 		struct hdac_ext2_link *h2link = hdac_ext_link_to_ext2(hlink);
+ 
+ 		if (!h2link->alt)
+ 			snd_hdac_ext_bus_link_put(bus, hlink);
+ 	}
  }
 -EXPORT_SYMBOL_NS(hda_bus_ml_put_all, SND_SOC_SOF_HDA_MLINK);
  
  void hda_bus_ml_reset_losidv(struct hdac_bus *bus)
  {
@@@ -64,5 -272,45 +68,46 @@@
  	list_for_each_entry(hlink, &bus->hlink_list, list)
  		writel(0, hlink->ml_addr + AZX_REG_ML_LOSIDV);
  }
++<<<<<<< HEAD
++=======
+ EXPORT_SYMBOL_NS(hda_bus_ml_reset_losidv, SND_SOC_SOF_HDA_MLINK);
+ 
+ int hda_bus_ml_resume(struct hdac_bus *bus)
+ {
+ 	struct hdac_ext_link *hlink;
+ 	int ret;
+ 
+ 	/* power up links that were active before suspend */
+ 	list_for_each_entry(hlink, &bus->hlink_list, list) {
+ 		struct hdac_ext2_link *h2link = hdac_ext_link_to_ext2(hlink);
+ 
+ 		if (!h2link->alt && hlink->ref_count) {
+ 			ret = snd_hdac_ext_bus_link_power_up(hlink);
+ 			if (ret < 0)
+ 				return ret;
+ 		}
+ 	}
+ 	return 0;
+ }
+ EXPORT_SYMBOL_NS(hda_bus_ml_resume, SND_SOC_SOF_HDA_MLINK);
+ 
+ int hda_bus_ml_suspend(struct hdac_bus *bus)
+ {
+ 	struct hdac_ext_link *hlink;
+ 	int ret;
+ 
+ 	list_for_each_entry(hlink, &bus->hlink_list, list) {
+ 		struct hdac_ext2_link *h2link = hdac_ext_link_to_ext2(hlink);
+ 
+ 		if (!h2link->alt) {
+ 			ret = snd_hdac_ext_bus_link_power_down(hlink);
+ 			if (ret < 0)
+ 				return ret;
+ 		}
+ 	}
+ 	return 0;
+ }
+ EXPORT_SYMBOL_NS(hda_bus_ml_suspend, SND_SOC_SOF_HDA_MLINK);
++>>>>>>> 4c2d4e446d56 (ASoC: SOF: Intel: hda-mlink: special-case HDaudio regular links)
  
  #endif
 -
 -MODULE_LICENSE("Dual BSD/GPL");
* Unmerged path sound/soc/sof/intel/hda-mlink.c
