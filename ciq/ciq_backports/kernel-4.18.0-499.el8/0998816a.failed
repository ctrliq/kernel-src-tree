ASoC: cs42l42: Export some functions for SoundWire

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Richard Fitzgerald <rf@opensource.cirrus.com>
commit 0998816ab2d85d67ebace9993b5a97e79a24d816
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/0998816a.failed

Export functions that will be needed by a SoundWire module.

	Signed-off-by: Richard Fitzgerald <rf@opensource.cirrus.com>
	Signed-off-by: Stefan Binding <sbinding@opensource.cirrus.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20230127165111.3010960-6-sbinding@opensource.cirrus.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 0998816ab2d85d67ebace9993b5a97e79a24d816)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/cs42l42.h
diff --cc sound/soc/codecs/cs42l42.h
index b3095b8751ab,ef8219f48910..000000000000
--- a/sound/soc/codecs/cs42l42.h
+++ b/sound/soc/codecs/cs42l42.h
@@@ -50,4 -53,26 +50,29 @@@ struct  cs42l42_private 
  	bool init_done;
  };
  
++<<<<<<< HEAD
++=======
+ extern const struct regmap_range_cfg cs42l42_page_range;
+ extern const struct regmap_config cs42l42_regmap;
+ extern const struct snd_soc_component_driver cs42l42_soc_component;
+ extern struct snd_soc_dai_driver cs42l42_dai;
+ 
+ bool cs42l42_readable_register(struct device *dev, unsigned int reg);
+ bool cs42l42_volatile_register(struct device *dev, unsigned int reg);
+ 
+ int cs42l42_pll_config(struct snd_soc_component *component,
+ 		       unsigned int clk, unsigned int sample_rate);
+ void cs42l42_src_config(struct snd_soc_component *component, unsigned int sample_rate);
+ int cs42l42_mute_stream(struct snd_soc_dai *dai, int mute, int stream);
+ irqreturn_t cs42l42_irq_thread(int irq, void *data);
+ int cs42l42_suspend(struct device *dev);
+ int cs42l42_resume(struct device *dev);
+ void cs42l42_resume_restore(struct device *dev);
+ int cs42l42_common_probe(struct cs42l42_private *cs42l42,
+ 			 const struct snd_soc_component_driver *component_drv,
+ 			 struct snd_soc_dai_driver *dai);
+ int cs42l42_init(struct cs42l42_private *cs42l42);
+ void cs42l42_common_remove(struct cs42l42_private *cs42l42);
+ 
++>>>>>>> 0998816ab2d8 (ASoC: cs42l42: Export some functions for SoundWire)
  #endif /* __CS42L42_H__ */
diff --git a/sound/soc/codecs/cs42l42.c b/sound/soc/codecs/cs42l42.c
index 956a47b8038e..6d8f88ee94c2 100644
--- a/sound/soc/codecs/cs42l42.c
+++ b/sound/soc/codecs/cs42l42.c
@@ -649,8 +649,8 @@ static const struct cs42l42_pll_params pll_ratio_table[] = {
 	{ 24576000, 1, 0x03, 0x40, 0x000000, 0x03, 0x10, 12288000, 128, 1}
 };
 
-static int cs42l42_pll_config(struct snd_soc_component *component, unsigned int clk,
-			      unsigned int sample_rate)
+int cs42l42_pll_config(struct snd_soc_component *component, unsigned int clk,
+		       unsigned int sample_rate)
 {
 	struct cs42l42_private *cs42l42 = snd_soc_component_get_drvdata(component);
 	int i;
@@ -736,8 +736,9 @@ static int cs42l42_pll_config(struct snd_soc_component *component, unsigned int
 
 	return -EINVAL;
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_pll_config, SND_SOC_CS42L42_CORE);
 
-static void cs42l42_src_config(struct snd_soc_component *component, unsigned int sample_rate)
+void cs42l42_src_config(struct snd_soc_component *component, unsigned int sample_rate)
 {
 	struct cs42l42_private *cs42l42 = snd_soc_component_get_drvdata(component);
 	unsigned int fs;
@@ -769,6 +770,7 @@ static void cs42l42_src_config(struct snd_soc_component *component, unsigned int
 				      CS42L42_CLK_OASRC_SEL_MASK,
 				      fs << CS42L42_CLK_OASRC_SEL_SHIFT);
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_src_config, SND_SOC_CS42L42_CORE);
 
 static int cs42l42_asp_config(struct snd_soc_component *component,
 			      unsigned int sclk, unsigned int sample_rate)
@@ -1009,7 +1011,7 @@ static int cs42l42_set_bclk_ratio(struct snd_soc_dai *dai,
 	return 0;
 }
 
-static int cs42l42_mute_stream(struct snd_soc_dai *dai, int mute, int stream)
+int cs42l42_mute_stream(struct snd_soc_dai *dai, int mute, int stream)
 {
 	struct snd_soc_component *component = dai->component;
 	struct cs42l42_private *cs42l42 = snd_soc_component_get_drvdata(component);
@@ -1102,6 +1104,7 @@ static int cs42l42_mute_stream(struct snd_soc_dai *dai, int mute, int stream)
 
 	return 0;
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_mute_stream, SND_SOC_CS42L42_CORE);
 
 #define CS42L42_FORMATS (SNDRV_PCM_FMTBIT_S16_LE |\
 			 SNDRV_PCM_FMTBIT_S24_LE |\
@@ -1643,7 +1646,7 @@ static const struct cs42l42_irq_params irq_params_table[] = {
 		CS42L42_TSRS_PLUG_VAL_MASK}
 };
 
-static irqreturn_t cs42l42_irq_thread(int irq, void *data)
+irqreturn_t cs42l42_irq_thread(int irq, void *data)
 {
 	struct cs42l42_private *cs42l42 = (struct cs42l42_private *)data;
 	unsigned int stickies[12];
@@ -1760,6 +1763,7 @@ static irqreturn_t cs42l42_irq_thread(int irq, void *data)
 
 	return IRQ_HANDLED;
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_irq_thread, SND_SOC_CS42L42_CORE);
 
 static void cs42l42_set_interrupt_masks(struct cs42l42_private *cs42l42)
 {
* Unmerged path sound/soc/codecs/cs42l42.h
