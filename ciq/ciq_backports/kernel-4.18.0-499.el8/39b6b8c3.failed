KVM: SVM: Add AVIC doorbell tracepoint

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit 39b6b8c35cf37970e07e9081c0e7d1083930b2f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/39b6b8c3.failed

Add a tracepoint to track number of doorbells being sent
to signal a running vCPU to process IRQ after being injected.

	Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Message-Id: <20220519102709.24125-17-suravee.suthikulpanit@amd.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 39b6b8c35cf37970e07e9081c0e7d1083930b2f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/trace.h
#	arch/x86/kvm/x86.c
diff --cc arch/x86/kvm/trace.h
index e3a24b8f04be,bc85622e28b2..000000000000
--- a/arch/x86/kvm/trace.h
+++ b/arch/x86/kvm/trace.h
@@@ -1459,6 -1470,44 +1459,47 @@@ TRACE_EVENT(kvm_avic_ga_log
  		  __entry->vmid, __entry->vcpuid)
  );
  
++<<<<<<< HEAD
++=======
+ TRACE_EVENT(kvm_avic_kick_vcpu_slowpath,
+ 	    TP_PROTO(u32 icrh, u32 icrl, u32 index),
+ 	    TP_ARGS(icrh, icrl, index),
+ 
+ 	TP_STRUCT__entry(
+ 		__field(u32, icrh)
+ 		__field(u32, icrl)
+ 		__field(u32, index)
+ 	),
+ 
+ 	TP_fast_assign(
+ 		__entry->icrh = icrh;
+ 		__entry->icrl = icrl;
+ 		__entry->index = index;
+ 	),
+ 
+ 	TP_printk("icrh:icrl=%#08x:%08x, index=%u",
+ 		  __entry->icrh, __entry->icrl, __entry->index)
+ );
+ 
+ TRACE_EVENT(kvm_avic_doorbell,
+ 	    TP_PROTO(u32 vcpuid, u32 apicid),
+ 	    TP_ARGS(vcpuid, apicid),
+ 
+ 	TP_STRUCT__entry(
+ 		__field(u32, vcpuid)
+ 		__field(u32, apicid)
+ 	),
+ 
+ 	TP_fast_assign(
+ 		__entry->vcpuid = vcpuid;
+ 		__entry->apicid = apicid;
+ 	),
+ 
+ 	TP_printk("vcpuid=%u, apicid=%u",
+ 		  __entry->vcpuid, __entry->apicid)
+ );
+ 
++>>>>>>> 39b6b8c35cf3 (KVM: SVM: Add AVIC doorbell tracepoint)
  TRACE_EVENT(kvm_hv_timer_state,
  		TP_PROTO(unsigned int vcpu_id, unsigned int hv_timer_in_use),
  		TP_ARGS(vcpu_id, hv_timer_in_use),
diff --cc arch/x86/kvm/x86.c
index d5c8a8210410,d88600e41ff8..000000000000
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@@ -12735,6 -13327,8 +12735,11 @@@ EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_pi_irt
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_avic_unaccelerated_access);
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_avic_incomplete_ipi);
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_avic_ga_log);
++<<<<<<< HEAD
++=======
+ EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_avic_kick_vcpu_slowpath);
+ EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_avic_doorbell);
++>>>>>>> 39b6b8c35cf3 (KVM: SVM: Add AVIC doorbell tracepoint)
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_apicv_accept_irq);
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_vmgexit_enter);
  EXPORT_TRACEPOINT_SYMBOL_GPL(kvm_vmgexit_exit);
diff --git a/arch/x86/kvm/svm/avic.c b/arch/x86/kvm/svm/avic.c
index f18067e428ce..d6e8aa159ec0 100644
--- a/arch/x86/kvm/svm/avic.c
+++ b/arch/x86/kvm/svm/avic.c
@@ -298,8 +298,10 @@ void avic_ring_doorbell(struct kvm_vcpu *vcpu)
 	 */
 	int cpu = READ_ONCE(vcpu->cpu);
 
-	if (cpu != get_cpu())
+	if (cpu != get_cpu()) {
 		wrmsrl(MSR_AMD64_SVM_AVIC_DOORBELL, kvm_cpu_get_apicid(cpu));
+		trace_kvm_avic_doorbell(vcpu->vcpu_id, kvm_cpu_get_apicid(cpu));
+	}
 	put_cpu();
 }
 
* Unmerged path arch/x86/kvm/trace.h
* Unmerged path arch/x86/kvm/x86.c
