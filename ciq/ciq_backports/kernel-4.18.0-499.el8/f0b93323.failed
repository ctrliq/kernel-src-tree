lib/string_helpers: Introduce parse_int_array_user()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Cezary Rojewski <cezary.rojewski@intel.com>
commit f0b933236ec97de5ee49c60aae57a9c5c4dadc87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/f0b93323.failed

Add new helper function to allow for splitting specified user string
into a sequence of integers. Internally it makes use of get_options() so
the returned sequence contains the integers extracted plus an additional
element that begins the sequence and specifies the integers count.

	Suggested-by: Andy Shevchenko <andy.shevchenko@gmail.com>
	Reviewed-by: Andy Shevchenko <andy.shevchenko@gmail.com>
	Signed-off-by: Cezary Rojewski <cezary.rojewski@intel.com>
Link: https://lore.kernel.org/r/20220904102840.862395-2-cezary.rojewski@intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit f0b933236ec97de5ee49c60aae57a9c5c4dadc87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/string_helpers.h
diff --cc include/linux/string_helpers.h
index 167a62d34acd,dc2e726fd820..000000000000
--- a/include/linux/string_helpers.h
+++ b/include/linux/string_helpers.h
@@@ -19,10 -21,12 +19,19 @@@ enum string_size_units 
  void string_get_size(u64 size, u64 blk_size, enum string_size_units units,
  		     char *buf, int len);
  
++<<<<<<< HEAD
 +#define UNESCAPE_SPACE		0x01
 +#define UNESCAPE_OCTAL		0x02
 +#define UNESCAPE_HEX		0x04
 +#define UNESCAPE_SPECIAL	0x08
++=======
+ int parse_int_array_user(const char __user *from, size_t count, int **array);
+ 
+ #define UNESCAPE_SPACE		BIT(0)
+ #define UNESCAPE_OCTAL		BIT(1)
+ #define UNESCAPE_HEX		BIT(2)
+ #define UNESCAPE_SPECIAL	BIT(3)
++>>>>>>> f0b933236ec9 (lib/string_helpers: Introduce parse_int_array_user())
  #define UNESCAPE_ANY		\
  	(UNESCAPE_SPACE | UNESCAPE_OCTAL | UNESCAPE_HEX | UNESCAPE_SPECIAL)
  
* Unmerged path include/linux/string_helpers.h
diff --git a/lib/string_helpers.c b/lib/string_helpers.c
index add5039546eb..f52aee5225b0 100644
--- a/lib/string_helpers.c
+++ b/lib/string_helpers.c
@@ -129,6 +129,50 @@ void string_get_size(u64 size, u64 blk_size, const enum string_size_units units,
 }
 EXPORT_SYMBOL(string_get_size);
 
+/**
+ * parse_int_array_user - Split string into a sequence of integers
+ * @from:	The user space buffer to read from
+ * @count:	The maximum number of bytes to read
+ * @array:	Returned pointer to sequence of integers
+ *
+ * On success @array is allocated and initialized with a sequence of
+ * integers extracted from the @from plus an additional element that
+ * begins the sequence and specifies the integers count.
+ *
+ * Caller takes responsibility for freeing @array when it is no longer
+ * needed.
+ */
+int parse_int_array_user(const char __user *from, size_t count, int **array)
+{
+	int *ints, nints;
+	char *buf;
+	int ret = 0;
+
+	buf = memdup_user_nul(from, count);
+	if (IS_ERR(buf))
+		return PTR_ERR(buf);
+
+	get_options(buf, 0, &nints);
+	if (!nints) {
+		ret = -ENOENT;
+		goto free_buf;
+	}
+
+	ints = kcalloc(nints + 1, sizeof(*ints), GFP_KERNEL);
+	if (!ints) {
+		ret = -ENOMEM;
+		goto free_buf;
+	}
+
+	get_options(buf, nints + 1, ints);
+	*array = ints;
+
+free_buf:
+	kfree(buf);
+	return ret;
+}
+EXPORT_SYMBOL(parse_int_array_user);
+
 static bool unescape_space(char **src, char **dst)
 {
 	char *p = *dst, *q = *src;
