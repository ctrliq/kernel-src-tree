ASoC: SOF: amd: Enable cache for AMD Rembrandt platform

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author V sujith kumar Reddy <Vsujithkumar.Reddy@amd.com>
commit b5ba646142195d63dd1aae69bc15457fca5aeb78
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/b5ba6461.failed

Enable DSP cache for ACP memory

	Signed-off-by: V sujith kumar Reddy <Vsujithkumar.Reddy@amd.com>
Link: https://lore.kernel.org/r/20221213071640.3038853-1-Vsujithkumar.Reddy@amd.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit b5ba646142195d63dd1aae69bc15457fca5aeb78)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/amd/acp-dsp-offset.h
#	sound/soc/sof/amd/acp.h
diff --cc sound/soc/sof/amd/acp-dsp-offset.h
index 56cefd4a84fc,920155dee819..000000000000
--- a/sound/soc/sof/amd/acp-dsp-offset.h
+++ b/sound/soc/sof/amd/acp-dsp-offset.h
@@@ -77,5 -84,9 +77,13 @@@
  #define ACP_SHA_PSP_ACK                         0x1C74
  
  #define ACP_SCRATCH_REG_0			0x10000
++<<<<<<< HEAD
 +
++=======
+ #define ACP6X_DSP_FUSION_RUNSTALL		0x0644
+ 
+ /* Cache window registers */
+ #define ACP_DSP0_CACHE_OFFSET0			0x0420
+ #define ACP_DSP0_CACHE_SIZE0			0x0424
++>>>>>>> b5ba64614219 (ASoC: SOF: amd: Enable cache for AMD Rembrandt platform)
  #endif
diff --cc sound/soc/sof/amd/acp.h
index 4c42b8fd6abf,4314094a97fd..000000000000
--- a/sound/soc/sof/amd/acp.h
+++ b/sound/soc/sof/amd/acp.h
@@@ -64,6 -66,22 +64,25 @@@
  #define MBOX_READY_MASK				0x80000000
  #define MBOX_STATUS_MASK			0xFFFF
  
++<<<<<<< HEAD
++=======
+ #define BOX_SIZE_512				0x200
+ #define BOX_SIZE_1024				0x400
+ 
+ #define EXCEPT_MAX_HDR_SIZE			0x400
+ #define AMD_STACK_DUMP_SIZE			32
+ 
+ #define SRAM1_SIZE				0x13A000
+ 
+ enum clock_source {
+ 	ACP_CLOCK_96M = 0,
+ 	ACP_CLOCK_48M,
+ 	ACP_CLOCK_24M,
+ 	ACP_CLOCK_ACLK,
+ 	ACP_CLOCK_MCLK,
+ };
+ 
++>>>>>>> b5ba64614219 (ASoC: SOF: amd: Enable cache for AMD Rembrandt platform)
  struct  acp_atu_grp_pte {
  	u32 low;
  	u32 high;
* Unmerged path sound/soc/sof/amd/acp-dsp-offset.h
diff --git a/sound/soc/sof/amd/acp-loader.c b/sound/soc/sof/amd/acp-loader.c
index d71c3ccf0641..eceb9d2be21b 100644
--- a/sound/soc/sof/amd/acp-loader.c
+++ b/sound/soc/sof/amd/acp-loader.c
@@ -150,6 +150,7 @@ static void configure_pte_for_fw_loading(int type, int num_pages, struct acp_dev
 int acp_dsp_pre_fw_run(struct snd_sof_dev *sdev)
 {
 	struct pci_dev *pci = to_pci_dev(sdev->dev);
+	const struct sof_amd_acp_desc *desc = get_chip_info(sdev->pdata);
 	struct acp_dev_data *adata;
 	unsigned int src_addr, size_fw;
 	u32 page_count, dma_size;
@@ -182,6 +183,12 @@ int acp_dsp_pre_fw_run(struct snd_sof_dev *sdev)
 	if (ret < 0)
 		dev_err(sdev->dev, "acp dma transfer status: %d\n", ret);
 
+	if (desc->rev > 3) {
+		/* Cache Window enable */
+		snd_sof_dsp_write(sdev, ACP_DSP_BAR, ACP_DSP0_CACHE_OFFSET0, desc->sram_pte_offset);
+		snd_sof_dsp_write(sdev, ACP_DSP_BAR, ACP_DSP0_CACHE_SIZE0, SRAM1_SIZE | BIT(31));
+	}
+
 	/* Free memory once DMA is complete */
 	dma_size =  (PAGE_ALIGN(sdev->basefw.fw->size) >> PAGE_SHIFT) * ACP_PAGE_SIZE;
 	dma_free_coherent(&pci->dev, dma_size, adata->bin_buf, adata->sha_dma_addr);
* Unmerged path sound/soc/sof/amd/acp.h
