net: add pskb_may_pull_reason() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Eric Dumazet <edumazet@google.com>
commit 1fb2d41501f38192d8a19da585cd441cf8845697
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/1fb2d415.failed

pskb_may_pull() can fail for two different reasons.

Provide pskb_may_pull_reason() helper to distinguish
between these reasons.

It returns:

SKB_NOT_DROPPED_YET           : Success
SKB_DROP_REASON_PKT_TOO_SMALL : packet too small
SKB_DROP_REASON_NOMEM         : skb->head could not be resized

	Signed-off-by: Eric Dumazet <edumazet@google.com>
	Reviewed-by: David Ahern <dsahern@kernel.org>
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 1fb2d41501f38192d8a19da585cd441cf8845697)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/skbuff.h
diff --cc include/linux/skbuff.h
index 16143289a49f,d5602b15c714..000000000000
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@@ -2357,15 -2627,28 +2357,36 @@@ static inline void *skb_pull_inline(str
  	return unlikely(len > skb->len) ? NULL : __skb_pull(skb, len);
  }
  
 -void *skb_pull_data(struct sk_buff *skb, size_t len);
 -
  void *__pskb_pull_tail(struct sk_buff *skb, int delta);
  
++<<<<<<< HEAD
 +static inline void *__pskb_pull(struct sk_buff *skb, unsigned int len)
 +{
 +	if (len > skb_headlen(skb) &&
 +	    !__pskb_pull_tail(skb, len - skb_headlen(skb)))
 +		return NULL;
 +	skb->len -= len;
 +	return skb->data += len;
++=======
+ static inline enum skb_drop_reason
+ pskb_may_pull_reason(struct sk_buff *skb, unsigned int len)
+ {
+ 	if (likely(len <= skb_headlen(skb)))
+ 		return SKB_NOT_DROPPED_YET;
+ 
+ 	if (unlikely(len > skb->len))
+ 		return SKB_DROP_REASON_PKT_TOO_SMALL;
+ 
+ 	if (unlikely(!__pskb_pull_tail(skb, len - skb_headlen(skb))))
+ 		return SKB_DROP_REASON_NOMEM;
+ 
+ 	return SKB_NOT_DROPPED_YET;
+ }
+ 
+ static inline bool pskb_may_pull(struct sk_buff *skb, unsigned int len)
+ {
+ 	return pskb_may_pull_reason(skb, len) == SKB_NOT_DROPPED_YET;
++>>>>>>> 1fb2d41501f3 (net: add pskb_may_pull_reason() helper)
  }
  
  static inline void *pskb_pull(struct sk_buff *skb, unsigned int len)
* Unmerged path include/linux/skbuff.h
