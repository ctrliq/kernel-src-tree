ASoC: cs42l42: Export regmap elements to core namespace

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Martin Povišer <povik+lin@cutebit.org>
commit 30b679e2cb058c3dcf6d3ebdf10999f0a7a1644d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/30b679e2.failed

Export the regmap callbacks for indicating readable/volatile registers,
also the range structure, to the CS42L42 core namespace. This is in
advance of reusing these bits in a CS42L83 driver frontend.

	Signed-off-by: Martin Povišer <povik+lin@cutebit.org>
Link: https://lore.kernel.org/r/20220915094444.11434-9-povik+lin@cutebit.org
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 30b679e2cb058c3dcf6d3ebdf10999f0a7a1644d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/cs42l42.h
diff --cc sound/soc/codecs/cs42l42.h
index a8e0d5b414a5,be6f979c82ec..000000000000
--- a/sound/soc/codecs/cs42l42.h
+++ b/sound/soc/codecs/cs42l42.h
@@@ -50,4 -52,21 +50,24 @@@ struct  cs42l42_private 
  	bool init_done;
  };
  
++<<<<<<< HEAD
++=======
+ extern const struct regmap_range_cfg cs42l42_page_range;
+ extern const struct regmap_config cs42l42_regmap;
+ extern const struct snd_soc_component_driver cs42l42_soc_component;
+ extern struct snd_soc_dai_driver cs42l42_dai;
+ 
+ bool cs42l42_readable_register(struct device *dev, unsigned int reg);
+ bool cs42l42_volatile_register(struct device *dev, unsigned int reg);
+ 
+ int cs42l42_suspend(struct device *dev);
+ int cs42l42_resume(struct device *dev);
+ void cs42l42_resume_restore(struct device *dev);
+ int cs42l42_common_probe(struct cs42l42_private *cs42l42,
+ 			 const struct snd_soc_component_driver *component_drv,
+ 			 struct snd_soc_dai_driver *dai);
+ int cs42l42_init(struct cs42l42_private *cs42l42);
+ void cs42l42_common_remove(struct cs42l42_private *cs42l42);
+ 
++>>>>>>> 30b679e2cb05 (ASoC: cs42l42: Export regmap elements to core namespace)
  #endif /* __CS42L42_H__ */
diff --git a/sound/soc/codecs/cs42l42.c b/sound/soc/codecs/cs42l42.c
index 20d84db1a98f..64f4c3f5c826 100644
--- a/sound/soc/codecs/cs42l42.c
+++ b/sound/soc/codecs/cs42l42.c
@@ -172,7 +172,7 @@ static const struct reg_default cs42l42_reg_defaults[] = {
 	{ CS42L42_ASP_RX_DAI1_CH2_BIT_LSB,	0x00 },
 };
 
-static bool cs42l42_readable_register(struct device *dev, unsigned int reg)
+bool cs42l42_readable_register(struct device *dev, unsigned int reg)
 {
 	switch (reg) {
 	case CS42L42_PAGE_REGISTER:
@@ -331,8 +331,9 @@ static bool cs42l42_readable_register(struct device *dev, unsigned int reg)
 		return false;
 	}
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_readable_register, SND_SOC_CS42L42_CORE);
 
-static bool cs42l42_volatile_register(struct device *dev, unsigned int reg)
+bool cs42l42_volatile_register(struct device *dev, unsigned int reg)
 {
 	switch (reg) {
 	case CS42L42_DEVID_AB:
@@ -363,8 +364,9 @@ static bool cs42l42_volatile_register(struct device *dev, unsigned int reg)
 		return false;
 	}
 }
+EXPORT_SYMBOL_NS_GPL(cs42l42_volatile_register, SND_SOC_CS42L42_CORE);
 
-static const struct regmap_range_cfg cs42l42_page_range = {
+const struct regmap_range_cfg cs42l42_page_range = {
 	.name = "Pages",
 	.range_min = 0,
 	.range_max = CS42L42_MAX_REGISTER,
@@ -374,6 +376,7 @@ static const struct regmap_range_cfg cs42l42_page_range = {
 	.window_start = 0,
 	.window_len = 256,
 };
+EXPORT_SYMBOL_NS_GPL(cs42l42_page_range, SND_SOC_CS42L42_CORE);
 
 static const struct regmap_config cs42l42_regmap = {
 	.reg_bits = 8,
* Unmerged path sound/soc/codecs/cs42l42.h
