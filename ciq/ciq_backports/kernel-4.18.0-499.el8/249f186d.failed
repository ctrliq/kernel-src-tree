ASoC: SOF: Prepare set_stream_data_offset for compress API

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Daniel Baluta <daniel.baluta@nxp.com>
commit 249f186d6b0211fc59d83db128030f2b298063a1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/249f186d.failed

Make second parameter of set_stream_data_offset generic
in order to be used for both PCM and compress streams.

Current patch doesn't introduce any functional change,
just prepare the code for compress support.

	Reviewed-by: Paul Olaru <paul.olaru@nxp.com>
	Reviewed-by: Iuliana Prodan <iuliana.prodan@nxp.com>
	Reviewed-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: Peter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Signed-off-by: Daniel Baluta <daniel.baluta@nxp.com>
Link: https://lore.kernel.org/r/20230117122533.201708-3-daniel.baluta@oss.nxp.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 249f186d6b0211fc59d83db128030f2b298063a1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/amd/acp-ipc.c
#	sound/soc/sof/amd/acp.h
diff --cc sound/soc/sof/amd/acp-ipc.c
index 92f660afad80,4e0c48a36159..000000000000
--- a/sound/soc/sof/amd/acp-ipc.c
+++ b/sound/soc/sof/amd/acp-ipc.c
@@@ -182,7 -210,37 +182,32 @@@ int acp_sof_ipc_msg_data(struct snd_sof
  
  	return 0;
  }
++<<<<<<< HEAD
 +EXPORT_SYMBOL(acp_sof_ipc_msg_data);
++=======
+ EXPORT_SYMBOL_NS(acp_sof_ipc_msg_data, SND_SOC_SOF_AMD_COMMON);
+ 
+ int acp_set_stream_data_offset(struct snd_sof_dev *sdev,
+ 			       struct snd_sof_pcm_stream *sps,
+ 			       size_t posn_offset)
+ {
+ 	struct snd_pcm_substream *substream = sps->substream;
+ 	struct acp_dsp_stream *stream = substream->runtime->private_data;
+ 
+ 	/* check for unaligned offset or overflow */
+ 	if (posn_offset > sdev->stream_box.size ||
+ 	    posn_offset % sizeof(struct sof_ipc_stream_posn) != 0)
+ 		return -EINVAL;
+ 
+ 	stream->posn_offset = sdev->stream_box.offset + posn_offset;
+ 
+ 	dev_dbg(sdev->dev, "pcm: stream dir %d, posn mailbox offset is %zu",
+ 		substream->stream, stream->posn_offset);
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL_NS(acp_set_stream_data_offset, SND_SOC_SOF_AMD_COMMON);
++>>>>>>> 249f186d6b02 (ASoC: SOF: Prepare set_stream_data_offset for compress API)
  
  int acp_sof_ipc_get_mailbox_offset(struct snd_sof_dev *sdev)
  {
diff --cc sound/soc/sof/amd/acp.h
index 4c42b8fd6abf,39165ebf684b..000000000000
--- a/sound/soc/sof/amd/acp.h
+++ b/sound/soc/sof/amd/acp.h
@@@ -182,8 -212,11 +182,14 @@@ int acp_dsp_block_read(struct snd_sof_d
  
  /* IPC callbacks */
  irqreturn_t acp_sof_ipc_irq_thread(int irq, void *context);
 -int acp_sof_ipc_msg_data(struct snd_sof_dev *sdev, struct snd_sof_pcm_stream *sps,
 +int acp_sof_ipc_msg_data(struct snd_sof_dev *sdev, struct snd_pcm_substream *substream,
  			 void *p, size_t sz);
++<<<<<<< HEAD
++=======
+ int acp_set_stream_data_offset(struct snd_sof_dev *sdev,
+ 			       struct snd_sof_pcm_stream *sps,
+ 			       size_t posn_offset);
++>>>>>>> 249f186d6b02 (ASoC: SOF: Prepare set_stream_data_offset for compress API)
  int acp_sof_ipc_send_msg(struct snd_sof_dev *sdev,
  			 struct snd_sof_ipc_msg *msg);
  int acp_sof_ipc_get_mailbox_offset(struct snd_sof_dev *sdev);
* Unmerged path sound/soc/sof/amd/acp-ipc.c
* Unmerged path sound/soc/sof/amd/acp.h
diff --git a/sound/soc/sof/intel/hda-ipc.c b/sound/soc/sof/intel/hda-ipc.c
index a7c454e03952..b9835dbbd5dc 100644
--- a/sound/soc/sof/intel/hda-ipc.c
+++ b/sound/soc/sof/intel/hda-ipc.c
@@ -385,9 +385,10 @@ int hda_ipc_msg_data(struct snd_sof_dev *sdev,
 }
 
 int hda_set_stream_data_offset(struct snd_sof_dev *sdev,
-			       struct snd_pcm_substream *substream,
+			       struct snd_sof_pcm_stream *sps,
 			       size_t posn_offset)
 {
+	struct snd_pcm_substream *substream = sps->substream;
 	struct hdac_stream *hstream = substream->runtime->private_data;
 	struct sof_intel_hda_stream *hda_stream;
 
diff --git a/sound/soc/sof/intel/hda.h b/sound/soc/sof/intel/hda.h
index 34f01efb4413..d969eb1584ec 100644
--- a/sound/soc/sof/intel/hda.h
+++ b/sound/soc/sof/intel/hda.h
@@ -659,7 +659,7 @@ int hda_ipc_msg_data(struct snd_sof_dev *sdev,
 		     struct snd_pcm_substream *substream,
 		     void *p, size_t sz);
 int hda_set_stream_data_offset(struct snd_sof_dev *sdev,
-			       struct snd_pcm_substream *substream,
+			       struct snd_sof_pcm_stream *sps,
 			       size_t posn_offset);
 
 /*
diff --git a/sound/soc/sof/ipc3-pcm.c b/sound/soc/sof/ipc3-pcm.c
index f10bfc9bd5cb..b29d93e0d216 100644
--- a/sound/soc/sof/ipc3-pcm.c
+++ b/sound/soc/sof/ipc3-pcm.c
@@ -129,7 +129,8 @@ static int sof_ipc3_pcm_hw_params(struct snd_soc_component *component,
 		return ret;
 	}
 
-	ret = snd_sof_set_stream_data_offset(sdev, substream, ipc_params_reply.posn_offset);
+	ret = snd_sof_set_stream_data_offset(sdev, &spcm->stream[substream->stream],
+					     ipc_params_reply.posn_offset);
 	if (ret < 0) {
 		dev_err(component->dev, "%s: invalid stream data offset for PCM %d\n",
 			__func__, spcm->pcm.pcm_id);
diff --git a/sound/soc/sof/ops.h b/sound/soc/sof/ops.h
index c52752250565..b4773c4fd1b3 100644
--- a/sound/soc/sof/ops.h
+++ b/sound/soc/sof/ops.h
@@ -480,11 +480,11 @@ static inline int snd_sof_ipc_msg_data(struct snd_sof_dev *sdev,
 /* host side configuration of the stream's data offset in stream mailbox area */
 static inline int
 snd_sof_set_stream_data_offset(struct snd_sof_dev *sdev,
-			       struct snd_pcm_substream *substream,
+			       struct snd_sof_pcm_stream *sps,
 			       size_t posn_offset)
 {
 	if (sof_ops(sdev) && sof_ops(sdev)->set_stream_data_offset)
-		return sof_ops(sdev)->set_stream_data_offset(sdev, substream,
+		return sof_ops(sdev)->set_stream_data_offset(sdev, sps,
 							     posn_offset);
 
 	return 0;
diff --git a/sound/soc/sof/sof-priv.h b/sound/soc/sof/sof-priv.h
index 59d12da58646..8c841897f802 100644
--- a/sound/soc/sof/sof-priv.h
+++ b/sound/soc/sof/sof-priv.h
@@ -249,7 +249,7 @@ struct snd_sof_dsp_ops {
 
 	/* host side configuration of the stream's data offset in stream mailbox area */
 	int (*set_stream_data_offset)(struct snd_sof_dev *sdev,
-				      struct snd_pcm_substream *substream,
+				      struct snd_sof_pcm_stream *sps,
 				      size_t posn_offset); /* optional */
 
 	/* pre/post firmware run */
@@ -762,7 +762,7 @@ int sof_ipc_msg_data(struct snd_sof_dev *sdev,
 		     struct snd_pcm_substream *substream,
 		     void *p, size_t sz);
 int sof_set_stream_data_offset(struct snd_sof_dev *sdev,
-			       struct snd_pcm_substream *substream,
+			       struct snd_sof_pcm_stream *sps,
 			       size_t posn_offset);
 
 int sof_stream_pcm_open(struct snd_sof_dev *sdev,
diff --git a/sound/soc/sof/stream-ipc.c b/sound/soc/sof/stream-ipc.c
index 5f1ceeea893a..cbed0a89fffb 100644
--- a/sound/soc/sof/stream-ipc.c
+++ b/sound/soc/sof/stream-ipc.c
@@ -46,9 +46,10 @@ int sof_ipc_msg_data(struct snd_sof_dev *sdev,
 EXPORT_SYMBOL(sof_ipc_msg_data);
 
 int sof_set_stream_data_offset(struct snd_sof_dev *sdev,
-			       struct snd_pcm_substream *substream,
+			       struct snd_sof_pcm_stream *sps,
 			       size_t posn_offset)
 {
+	struct snd_pcm_substream *substream = sps->substream;
 	struct sof_stream *stream = substream->runtime->private_data;
 
 	/* check if offset is overflow or it is not aligned */
