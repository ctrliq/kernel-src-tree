s390/crypto: improve retry logic in case of master key change

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Harald Freudenberger <freude@linux.ibm.com>
commit 1daafea411f36cfa52eb58c2e7f9e2254fd42b28
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/1daafea4.failed

A master key change on a CCA card may cause an immediately
following request to derive an protected key from a secure
key to fail with error condition 8/2290. The recommendation
from firmware is to retry with 1 second sleep.

So now the low level cca functions return -EAGAIN when this
error condition is seen and the paes retry function will
evaluate the return value. Seeing EAGAIN and running in
process context results in trying to sleep for 1 s now.

	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Reviewed-by: Ingo Franzki <ifranzki@linux.ibm.com>
	Signed-off-by: Vasily Gorbik <gor@linux.ibm.com>
(cherry picked from commit 1daafea411f36cfa52eb58c2e7f9e2254fd42b28)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/s390/crypto/paes_s390.c
#	drivers/s390/crypto/zcrypt_ccamisc.c
diff --cc arch/s390/crypto/paes_s390.c
index fe9704b732cd,a279b7d23a5e..000000000000
--- a/arch/s390/crypto/paes_s390.c
+++ b/arch/s390/crypto/paes_s390.c
@@@ -22,6 -22,8 +22,11 @@@
  #include <linux/init.h>
  #include <linux/mutex.h>
  #include <linux/spinlock.h>
++<<<<<<< HEAD
++=======
+ #include <linux/delay.h>
+ #include <crypto/internal/skcipher.h>
++>>>>>>> 1daafea411f3 (s390/crypto: improve retry logic in case of master key change)
  #include <crypto/xts.h>
  #include <asm/cpacf.h>
  #include <asm/pkey.h>
diff --cc drivers/s390/crypto/zcrypt_ccamisc.c
index c736a9905f71,d68c0ed5e0dd..000000000000
--- a/drivers/s390/crypto/zcrypt_ccamisc.c
+++ b/drivers/s390/crypto/zcrypt_ccamisc.c
@@@ -660,9 -660,12 +660,18 @@@ int cca_sec2protkey(u16 cardnr, u16 dom
  	if (prepcblk->ccp_rtcode != 0) {
  		DEBUG_ERR("%s unwrap secure key failure, card response %d/%d\n",
  			  __func__,
++<<<<<<< HEAD
 +			  (int)prepcblk->ccp_rtcode,
 +			  (int)prepcblk->ccp_rscode);
 +		rc = -EIO;
++=======
+ 			  (int) prepcblk->ccp_rtcode,
+ 			  (int) prepcblk->ccp_rscode);
+ 		if (prepcblk->ccp_rtcode == 8 && prepcblk->ccp_rscode == 2290)
+ 			rc = -EAGAIN;
+ 		else
+ 			rc = -EIO;
++>>>>>>> 1daafea411f3 (s390/crypto: improve retry logic in case of master key change)
  		goto out;
  	}
  	if (prepcblk->ccp_rscode != 0) {
@@@ -1273,9 -1276,12 +1282,18 @@@ int cca_cipher2protkey(u16 cardnr, u16 
  		DEBUG_ERR(
  			"%s unwrap secure key failure, card response %d/%d\n",
  			__func__,
++<<<<<<< HEAD
 +			(int)prepcblk->ccp_rtcode,
 +			(int)prepcblk->ccp_rscode);
 +		rc = -EIO;
++=======
+ 			(int) prepcblk->ccp_rtcode,
+ 			(int) prepcblk->ccp_rscode);
+ 		if (prepcblk->ccp_rtcode == 8 && prepcblk->ccp_rscode == 2290)
+ 			rc = -EAGAIN;
+ 		else
+ 			rc = -EIO;
++>>>>>>> 1daafea411f3 (s390/crypto: improve retry logic in case of master key change)
  		goto out;
  	}
  	if (prepcblk->ccp_rscode != 0) {
@@@ -1439,9 -1445,12 +1457,18 @@@ int cca_ecc2protkey(u16 cardnr, u16 dom
  		DEBUG_ERR(
  			"%s unwrap secure key failure, card response %d/%d\n",
  			__func__,
++<<<<<<< HEAD
 +			(int)prepcblk->ccp_rtcode,
 +			(int)prepcblk->ccp_rscode);
 +		rc = -EIO;
++=======
+ 			(int) prepcblk->ccp_rtcode,
+ 			(int) prepcblk->ccp_rscode);
+ 		if (prepcblk->ccp_rtcode == 8 && prepcblk->ccp_rscode == 2290)
+ 			rc = -EAGAIN;
+ 		else
+ 			rc = -EIO;
++>>>>>>> 1daafea411f3 (s390/crypto: improve retry logic in case of master key change)
  		goto out;
  	}
  	if (prepcblk->ccp_rscode != 0) {
* Unmerged path arch/s390/crypto/paes_s390.c
* Unmerged path drivers/s390/crypto/zcrypt_ccamisc.c
