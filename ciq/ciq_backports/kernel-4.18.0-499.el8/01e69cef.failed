KVM: SVM: Fix x2APIC MSRs interception

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-499.el8
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit 01e69cef63f88d809181f62f03a01d7295f2d5a4
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-499.el8/01e69cef.failed

The index for svm_direct_access_msrs was incorrectly initialized with
the APIC MMIO register macros. Fix by introducing a macro for calculating
x2APIC MSRs.

Fixes: 5c127c85472c ("KVM: SVM: Adding support for configuring x2APIC MSRs interception")
	Cc: Maxim Levitsky <mlevitsk@redhat.com>
	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Message-Id: <20220718083833.222117-1-suravee.suthikulpanit@amd.com>
	Reviewed-by: Maxim Levitsky <mlevitsk@redhat.com>
	Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
(cherry picked from commit 01e69cef63f88d809181f62f03a01d7295f2d5a4)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kvm/svm/svm.c
diff --cc arch/x86/kvm/svm/svm.c
index 511235200d8c,aef63aae922d..000000000000
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@@ -100,6 -101,32 +102,35 @@@ static const struct svm_direct_access_m
  	{ .index = MSR_EFER,				.always = false },
  	{ .index = MSR_IA32_CR_PAT,			.always = false },
  	{ .index = MSR_AMD64_SEV_ES_GHCB,		.always = true  },
++<<<<<<< HEAD
++=======
+ 	{ .index = MSR_TSC_AUX,				.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ID),			.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_TASKPRI),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ARBPRI),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_PROCPRI),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_EOI),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_RRR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LDR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_DFR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_SPIV),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ISR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_TMR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_IRR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ESR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ICR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_ICR2),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVTT),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVTTHMR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVTPC),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVT0),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVT1),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_LVTERR),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_TMICT),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_TMCCT),		.always = false },
+ 	{ .index = X2APIC_MSR(APIC_TDCR),		.always = false },
++>>>>>>> 01e69cef63f8 (KVM: SVM: Fix x2APIC MSRs interception)
  	{ .index = MSR_INVALID,				.always = false },
  };
  
* Unmerged path arch/x86/kvm/svm/svm.c
