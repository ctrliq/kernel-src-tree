netfilter: nf_tables: GC transaction race with abort path

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-534.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit 720344340fb9be2765bbaab7b292ece0a4570eae
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-534.el8/72034434.failed

Abort path is missing a synchronization point with GC transactions. Add
GC sequence number hence any GC transaction losing race will be
discarded.

Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
	Signed-off-by: Florian Westphal <fw@strlen.de>
(cherry picked from commit 720344340fb9be2765bbaab7b292ece0a4570eae)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nf_tables_api.c
diff --cc net/netfilter/nf_tables_api.c
index 65617e020aff,a255456efae4..000000000000
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@@ -8261,9 -10336,14 +8261,20 @@@ static void nf_tables_cleanup(struct ne
  static int nf_tables_abort(struct net *net, struct sk_buff *skb,
  			   enum nfnl_abort_action action)
  {
++<<<<<<< HEAD
 +	int ret = __nf_tables_abort(net, action);
 +
 +	mutex_unlock(&net->nft_commit_mutex);
++=======
+ 	struct nftables_pernet *nft_net = nft_pernet(net);
+ 	unsigned int gc_seq;
+ 	int ret;
+ 
+ 	gc_seq = nft_gc_seq_begin(nft_net);
+ 	ret = __nf_tables_abort(net, action);
+ 	nft_gc_seq_end(nft_net, gc_seq);
+ 	mutex_unlock(&nft_net->commit_mutex);
++>>>>>>> 720344340fb9 (netfilter: nf_tables: GC transaction race with abort path)
  
  	return ret;
  }
* Unmerged path net/netfilter/nf_tables_api.c
