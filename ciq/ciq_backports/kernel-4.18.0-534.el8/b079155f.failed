netfilter: nft_set_hash: try later when GC hits EAGAIN on iteration

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-534.el8
commit-author Pablo Neira Ayuso <pablo@netfilter.org>
commit b079155faae94e9b3ab9337e82100a914ebb4e8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-534.el8/b079155f.failed

Skip GC run if iterator rewinds to the beginning with EAGAIN, otherwise GC
might collect the same element more than once.

Fixes: f6c383b8c31a ("netfilter: nf_tables: adapt set backend to use GC transaction API")
	Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
(cherry picked from commit b079155faae94e9b3ab9337e82100a914ebb4e8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nft_set_hash.c
diff --cc net/netfilter/nft_set_hash.c
index 037a2a90e4be,2013de934cef..000000000000
--- a/net/netfilter/nft_set_hash.c
+++ b/net/netfilter/nft_set_hash.c
@@@ -310,11 -338,21 +310,17 @@@ static void nft_rhash_gc(struct work_st
  
  	while ((he = rhashtable_walk_next(&hti))) {
  		if (IS_ERR(he)) {
++<<<<<<< HEAD
 +			if (PTR_ERR(he) != -EAGAIN)
 +				break;
 +			continue;
++=======
+ 			nft_trans_gc_destroy(gc);
+ 			gc = NULL;
+ 			goto try_later;
++>>>>>>> b079155faae9 (netfilter: nft_set_hash: try later when GC hits EAGAIN on iteration)
  		}
  
 -		/* Ruleset has been updated, try later. */
 -		if (READ_ONCE(nft_net->gc_seq) != gc_seq) {
 -			nft_trans_gc_destroy(gc);
 -			gc = NULL;
 -			goto try_later;
 -		}
 -
 -		if (nft_set_elem_is_dead(&he->ext))
 -			goto dead_elem;
 -
  		if (nft_set_ext_exists(&he->ext, NFT_SET_EXT_EXPRESSIONS) &&
  		    nft_rhash_expr_needs_gc_run(set, &he->ext))
  			goto needs_gc_run;
* Unmerged path net/netfilter/nft_set_hash.c
