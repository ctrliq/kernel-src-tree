netfilter: nf_tables: fix false-positive lockdep splat

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-534.el8
commit-author Florian Westphal <fw@strlen.de>
commit b9f052dc68f69dac89fe1e24693354c033daa091
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-534.el8/b9f052dc.failed

->abort invocation may cause splat on debug kernels:

WARNING: suspicious RCU usage
net/netfilter/nft_set_pipapo.c:1697 suspicious rcu_dereference_check() usage!
[..]
rcu_scheduler_active = 2, debug_locks = 1
1 lock held by nft/133554: [..] (nft_net->commit_mutex){+.+.}-{3:3}, at: nf_tables_valid_genid
[..]
 lockdep_rcu_suspicious+0x1ad/0x260
 nft_pipapo_abort+0x145/0x180
 __nf_tables_abort+0x5359/0x63d0
 nf_tables_abort+0x24/0x40
 nfnetlink_rcv+0x1a0a/0x22c0
 netlink_unicast+0x73c/0x900
 netlink_sendmsg+0x7f0/0xc20
 ____sys_sendmsg+0x48d/0x760

Transaction mutex is held, so parallel updates are not possible.
Switch to _protected and check mutex is held for lockdep enabled builds.

Fixes: 212ed75dc5fb ("netfilter: nf_tables: integrate pipapo into commit protocol")
	Signed-off-by: Florian Westphal <fw@strlen.de>
(cherry picked from commit b9f052dc68f69dac89fe1e24693354c033daa091)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/netfilter/nft_set_pipapo.c
diff --cc net/netfilter/nft_set_pipapo.c
index f7ee23bf2b06,5fa12cfc7b84..000000000000
--- a/net/netfilter/nft_set_pipapo.c
+++ b/net/netfilter/nft_set_pipapo.c
@@@ -1561,6 -1697,37 +1561,40 @@@ static void pipapo_commit(const struct 
  	priv->clone = new_clone;
  }
  
++<<<<<<< HEAD
++=======
+ static bool nft_pipapo_transaction_mutex_held(const struct nft_set *set)
+ {
+ #ifdef CONFIG_PROVE_LOCKING
+ 	const struct net *net = read_pnet(&set->net);
+ 
+ 	return lockdep_is_held(&nft_pernet(net)->commit_mutex);
+ #else
+ 	return true;
+ #endif
+ }
+ 
+ static void nft_pipapo_abort(const struct nft_set *set)
+ {
+ 	struct nft_pipapo *priv = nft_set_priv(set);
+ 	struct nft_pipapo_match *new_clone, *m;
+ 
+ 	if (!priv->dirty)
+ 		return;
+ 
+ 	m = rcu_dereference_protected(priv->match, nft_pipapo_transaction_mutex_held(set));
+ 
+ 	new_clone = pipapo_clone(m);
+ 	if (IS_ERR(new_clone))
+ 		return;
+ 
+ 	priv->dirty = false;
+ 
+ 	pipapo_free_match(priv->clone);
+ 	priv->clone = new_clone;
+ }
+ 
++>>>>>>> b9f052dc68f6 (netfilter: nf_tables: fix false-positive lockdep splat)
  /**
   * nft_pipapo_activate() - Mark element reference as active given key, commit
   * @net:	Network namespace
* Unmerged path net/netfilter/nft_set_pipapo.c
