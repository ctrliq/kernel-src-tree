ice: switch: use convenience macros to declare dummy pkt templates

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.10.1.el8_7
commit-author Alexander Lobakin <alexandr.lobakin@intel.com>
commit 07a28842bb4f65e66aa297a031a57dec4828d6a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.10.1.el8_7/07a28842.failed

Declarations of dummy/template packet headers and offsets can be
minified to improve readability and simplify adding new templates.
Move all the repetitive constructions into two macros and let them
do the name and type expansions.
Linewrap removal is yet another positive side effect.

	Signed-off-by: Alexander Lobakin <alexandr.lobakin@intel.com>
	Reviewed-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
	Tested-by: Marcin Szycik <marcin.szycik@linux.intel.com>
	Tested-by: Sandeep Penigalapati <sandeep.penigalapati@intel.com>
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
(cherry picked from commit 07a28842bb4f65e66aa297a031a57dec4828d6a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_switch.c
diff --cc drivers/net/ethernet/intel/ice/ice_switch.c
index 309bf07c29ba,cde9e480ea89..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_switch.c
+++ b/drivers/net/ethernet/intel/ice/ice_switch.c
@@@ -35,7 -35,28 +35,32 @@@ struct ice_dummy_pkt_offsets 
  	u16 offset; /* ICE_PROTOCOL_LAST indicates end of list */
  };
  
++<<<<<<< HEAD
 +static const struct ice_dummy_pkt_offsets dummy_gre_tcp_packet_offsets[] = {
++=======
+ struct ice_dummy_pkt_profile {
+ 	const struct ice_dummy_pkt_offsets *offsets;
+ 	const u8 *pkt;
+ 	u16 pkt_len;
+ };
+ 
+ #define ICE_DECLARE_PKT_OFFSETS(type)					\
+ 	static const struct ice_dummy_pkt_offsets			\
+ 	ice_dummy_##type##_packet_offsets[]
+ 
+ #define ICE_DECLARE_PKT_TEMPLATE(type)					\
+ 	static const u8 ice_dummy_##type##_packet[]
+ 
+ #define ICE_PKT_PROFILE(type) ({					\
+ 	(struct ice_dummy_pkt_profile){					\
+ 		.pkt		= ice_dummy_##type##_packet,		\
+ 		.pkt_len	= sizeof(ice_dummy_##type##_packet),	\
+ 		.offsets	= ice_dummy_##type##_packet_offsets,	\
+ 	};								\
+ })
+ 
+ ICE_DECLARE_PKT_OFFSETS(gre_tcp) = {
++>>>>>>> 07a28842bb4f (ice: switch: use convenience macros to declare dummy pkt templates)
  	{ ICE_MAC_OFOS,		0 },
  	{ ICE_ETYPE_OL,		12 },
  	{ ICE_IPV4_OFOS,	14 },
@@@ -726,6 -741,485 +745,488 @@@ ICE_DECLARE_PKT_TEMPLATE(vlan_udp_ipv6
  	0x00, 0x00, /* 2 bytes for 4 byte alignment */
  };
  
++<<<<<<< HEAD
++=======
+ /* Outer IPv4 + Outer UDP + GTP + Inner IPv4 + Inner TCP */
+ ICE_DECLARE_PKT_OFFSETS(ipv4_gtpu_ipv4_tcp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV4_OFOS,	14 },
+ 	{ ICE_UDP_OF,		34 },
+ 	{ ICE_GTP,		42 },
+ 	{ ICE_IPV4_IL,		62 },
+ 	{ ICE_TCP_IL,		82 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv4_gtpu_ipv4_tcp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x08, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x58, /* IP 14 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 34 */
+ 	0x00, 0x44, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x34, /* ICE_GTP Header 42 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 54 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x28, /* IP 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x06, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* TCP 82 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x50, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ /* Outer IPv4 + Outer UDP + GTP + Inner IPv4 + Inner UDP */
+ ICE_DECLARE_PKT_OFFSETS(ipv4_gtpu_ipv4_udp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV4_OFOS,	14 },
+ 	{ ICE_UDP_OF,		34 },
+ 	{ ICE_GTP,		42 },
+ 	{ ICE_IPV4_IL,		62 },
+ 	{ ICE_UDP_ILOS,		82 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv4_gtpu_ipv4_udp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x08, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x4c, /* IP 14 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 34 */
+ 	0x00, 0x38, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x28, /* ICE_GTP Header 42 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 54 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x1c, /* IP 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* UDP 82 */
+ 	0x00, 0x08, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ /* Outer IPv6 + Outer UDP + GTP + Inner IPv4 + Inner TCP */
+ ICE_DECLARE_PKT_OFFSETS(ipv4_gtpu_ipv6_tcp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV4_OFOS,	14 },
+ 	{ ICE_UDP_OF,		34 },
+ 	{ ICE_GTP,		42 },
+ 	{ ICE_IPV6_IL,		62 },
+ 	{ ICE_TCP_IL,		102 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv4_gtpu_ipv6_tcp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x08, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x6c, /* IP 14 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 34 */
+ 	0x00, 0x58, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x48, /* ICE_GTP Header 42 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 54 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 62 */
+ 	0x00, 0x14, 0x06, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* TCP 102 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x50, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv4_gtpu_ipv6_udp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV4_OFOS,	14 },
+ 	{ ICE_UDP_OF,		34 },
+ 	{ ICE_GTP,		42 },
+ 	{ ICE_IPV6_IL,		62 },
+ 	{ ICE_UDP_ILOS,		102 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv4_gtpu_ipv6_udp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x08, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x60, /* IP 14 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 34 */
+ 	0x00, 0x4c, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x3c, /* ICE_GTP Header 42 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 54 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 62 */
+ 	0x00, 0x08, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* UDP 102 */
+ 	0x00, 0x08, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv6_gtpu_ipv4_tcp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV6_OFOS,	14 },
+ 	{ ICE_UDP_OF,		54 },
+ 	{ ICE_GTP,		62 },
+ 	{ ICE_IPV4_IL,		82 },
+ 	{ ICE_TCP_IL,		102 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv6_gtpu_ipv4_tcp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x86, 0xdd,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 14 */
+ 	0x00, 0x44, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 54 */
+ 	0x00, 0x44, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x34, /* ICE_GTP Header 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 74 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x28, /* IP 82 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x06, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* TCP 102 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x50, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv6_gtpu_ipv4_udp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV6_OFOS,	14 },
+ 	{ ICE_UDP_OF,		54 },
+ 	{ ICE_GTP,		62 },
+ 	{ ICE_IPV4_IL,		82 },
+ 	{ ICE_UDP_ILOS,		102 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv6_gtpu_ipv4_udp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x86, 0xdd,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 14 */
+ 	0x00, 0x38, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 54 */
+ 	0x00, 0x38, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x28, /* ICE_GTP Header 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 74 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x1c, /* IP 82 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* UDP 102 */
+ 	0x00, 0x08, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv6_gtpu_ipv6_tcp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV6_OFOS,	14 },
+ 	{ ICE_UDP_OF,		54 },
+ 	{ ICE_GTP,		62 },
+ 	{ ICE_IPV6_IL,		82 },
+ 	{ ICE_TCP_IL,		122 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv6_gtpu_ipv6_tcp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x86, 0xdd,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 14 */
+ 	0x00, 0x58, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 54 */
+ 	0x00, 0x58, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x48, /* ICE_GTP Header 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 74 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 82 */
+ 	0x00, 0x14, 0x06, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* TCP 122 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x50, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv6_gtpu_ipv6_udp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV6_OFOS,	14 },
+ 	{ ICE_UDP_OF,		54 },
+ 	{ ICE_GTP,		62 },
+ 	{ ICE_IPV6_IL,		82 },
+ 	{ ICE_UDP_ILOS,		122 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv6_gtpu_ipv6_udp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* Ethernet 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x86, 0xdd,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 14 */
+ 	0x00, 0x4c, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x08, 0x68, /* UDP 54 */
+ 	0x00, 0x4c, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x3c, /* ICE_GTP Header 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* GTP_PDUSession_ExtensionHeader 74 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* IPv6 82 */
+ 	0x00, 0x08, 0x11, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00, 0x00, 0x00, /* UDP 122 */
+ 	0x00, 0x08, 0x00, 0x00,
+ 
+ 	0x00, 0x00, /* 2 bytes for 4 byte alignment */
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv4_gtpu_ipv4) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV4_OFOS,	14 },
+ 	{ ICE_UDP_OF,		34 },
+ 	{ ICE_GTP_NO_PAY,	42 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv4_gtpu_ipv4) = {
+ 	0x00, 0x00, 0x00, 0x00, /* ICE_MAC_OFOS 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x08, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x44, /* ICE_IPV4_OFOS 14 */
+ 	0x00, 0x00, 0x40, 0x00,
+ 	0x40, 0x11, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x08, 0x68, 0x08, 0x68, /* ICE_UDP_OF 34 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x34, 0xff, 0x00, 0x28, /* ICE_GTP 42 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x85,
+ 
+ 	0x02, 0x00, 0x00, 0x00, /* PDU Session extension header */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x45, 0x00, 0x00, 0x14, /* ICE_IPV4_IL 62 */
+ 	0x00, 0x00, 0x40, 0x00,
+ 	0x40, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00,
+ };
+ 
+ ICE_DECLARE_PKT_OFFSETS(ipv6_gtp) = {
+ 	{ ICE_MAC_OFOS,		0 },
+ 	{ ICE_IPV6_OFOS,	14 },
+ 	{ ICE_UDP_OF,		54 },
+ 	{ ICE_GTP_NO_PAY,	62 },
+ 	{ ICE_PROTOCOL_LAST,	0 },
+ };
+ 
+ ICE_DECLARE_PKT_TEMPLATE(ipv6_gtp) = {
+ 	0x00, 0x00, 0x00, 0x00, /* ICE_MAC_OFOS 0 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x86, 0xdd,
+ 
+ 	0x60, 0x00, 0x00, 0x00, /* ICE_IPV6_OFOS 14 */
+ 	0x00, 0x6c, 0x11, 0x00, /* Next header UDP*/
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x08, 0x68, 0x08, 0x68, /* ICE_UDP_OF 54 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x30, 0x00, 0x00, 0x28, /* ICE_GTP 62 */
+ 	0x00, 0x00, 0x00, 0x00,
+ 
+ 	0x00, 0x00,
+ };
+ 
++>>>>>>> 07a28842bb4f (ice: switch: use convenience macros to declare dummy pkt templates)
  #define ICE_SW_RULE_RX_TX_ETH_HDR_SIZE \
  	(offsetof(struct ice_aqc_sw_rules_elem, pdata.lkup_tx_rx.hdr) + \
  	 (DUMMY_ETH_HDR_LEN * \
* Unmerged path drivers/net/ethernet/intel/ice/ice_switch.c
