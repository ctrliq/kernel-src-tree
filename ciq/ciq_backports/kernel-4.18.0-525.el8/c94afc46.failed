memblock: use kfree() to release kmalloced memblock regions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-525.el8
commit-author Miaohe Lin <linmiaohe@huawei.com>
commit c94afc46cae7ad41b2ad6a99368147879f4b0e56
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-525.el8/c94afc46.failed

memblock.{reserved,memory}.regions may be allocated using kmalloc() in
memblock_double_array(). Use kfree() to release these kmalloced regions
indicated by memblock_{reserved,memory}_in_slab.

	Signed-off-by: Miaohe Lin <linmiaohe@huawei.com>
Fixes: 3010f876500f ("mm: discard memblock data later")
	Signed-off-by: Mike Rapoport <rppt@linux.ibm.com>
(cherry picked from commit c94afc46cae7ad41b2ad6a99368147879f4b0e56)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	mm/memblock.c
diff --cc mm/memblock.c
index fe23fa36fcfa,b12a364f2766..000000000000
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@@ -339,15 -366,23 +339,29 @@@ void __init memblock_discard(void
  		addr = __pa(memblock.reserved.regions);
  		size = PAGE_ALIGN(sizeof(struct memblock_region) *
  				  memblock.reserved.max);
++<<<<<<< HEAD
 +		__memblock_free_late(addr, size);
++=======
+ 		if (memblock_reserved_in_slab)
+ 			kfree(memblock.reserved.regions);
+ 		else
+ 			memblock_free_late(addr, size);
++>>>>>>> c94afc46cae7 (memblock: use kfree() to release kmalloced memblock regions)
  	}
  
  	if (memblock.memory.regions != memblock_memory_init_regions) {
  		addr = __pa(memblock.memory.regions);
  		size = PAGE_ALIGN(sizeof(struct memblock_region) *
  				  memblock.memory.max);
++<<<<<<< HEAD
 +		__memblock_free_late(addr, size);
++=======
+ 		if (memblock_memory_in_slab)
+ 			kfree(memblock.memory.regions);
+ 		else
+ 			memblock_free_late(addr, size);
++>>>>>>> c94afc46cae7 (memblock: use kfree() to release kmalloced memblock regions)
  	}
 -
 -	memblock_memory = NULL;
  }
  #endif
  
* Unmerged path mm/memblock.c
