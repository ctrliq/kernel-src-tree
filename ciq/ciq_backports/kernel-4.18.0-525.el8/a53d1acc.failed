kobject: kset_uevent_ops: make name() callback take a const *

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-525.el8
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit a53d1acc978321734a8fd7388f2c050a7219ab69
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-525.el8/a53d1acc.failed

The name() callback in struct kset_uevent_ops does not modify the
kobject passed into it, so make the pointer const to enforce this
restriction.  When doing so, fix up the single existing name() callback
to have the correct signature to preserve the build.

	Acked-by: Rafael J. Wysocki <rafael@kernel.org>
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Link: https://lore.kernel.org/r/20221121094649.1556002-4-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit a53d1acc978321734a8fd7388f2c050a7219ab69)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/core.c
#	include/linux/kobject.h
diff --cc drivers/base/core.c
index ba30c074559f,a3e14143ec0c..000000000000
--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@@ -2461,9 -2376,9 +2461,13 @@@ static int dev_uevent_filter(struct kse
  	return 0;
  }
  
++<<<<<<< HEAD
 +static const char *dev_uevent_name(struct kset *kset, struct kobject *kobj)
++=======
+ static const char *dev_uevent_name(const struct kobject *kobj)
++>>>>>>> a53d1acc9783 (kobject: kset_uevent_ops: make name() callback take a const *)
  {
- 	struct device *dev = kobj_to_dev(kobj);
+ 	const struct device *dev = kobj_to_dev(kobj);
  
  	if (dev->bus)
  		return dev->bus->name;
diff --cc include/linux/kobject.h
index 1a8c794143ff,58a5b75612e3..000000000000
--- a/include/linux/kobject.h
+++ b/include/linux/kobject.h
@@@ -145,10 -135,9 +145,16 @@@ struct kobj_uevent_env 
  };
  
  struct kset_uevent_ops {
++<<<<<<< HEAD
 +	int (* const filter)(struct kset *kset, struct kobject *kobj);
 +	const char *(* const name)(struct kset *kset, struct kobject *kobj);
 +	int (* const uevent)(struct kset *kset, struct kobject *kobj,
 +		      struct kobj_uevent_env *env);
++=======
+ 	int (* const filter)(const struct kobject *kobj);
+ 	const char *(* const name)(const struct kobject *kobj);
+ 	int (* const uevent)(struct kobject *kobj, struct kobj_uevent_env *env);
++>>>>>>> a53d1acc9783 (kobject: kset_uevent_ops: make name() callback take a const *)
  };
  
  struct kobj_attribute {
* Unmerged path drivers/base/core.c
* Unmerged path include/linux/kobject.h
