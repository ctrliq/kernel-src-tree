Bluetooth: btmtksdio: refactor btmtksdio_runtime_[suspend|resume]()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-509.el8
commit-author Mark Chen <mark-yw.chen@mediatek.com>
commit c7e301d7c85544607ccc52ca5f26d20c59485342
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-509.el8/c7e301d7.failed

Refactor btmtksdio_runtime_[suspend|resume]() to create the common
funcitons btmtksdio_[fw|drv]_pmctrl() shared with btmtksdio_[open|close]()
to avoid the redundant code as well.

This is also a prerequisite patch for the incoming patches.

Co-developed-by: Sean Wang <sean.wang@mediatek.com>
	Signed-off-by: Sean Wang <sean.wang@mediatek.com>
	Signed-off-by: Mark Chen <mark-yw.chen@mediatek.com>
	Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
(cherry picked from commit c7e301d7c85544607ccc52ca5f26d20c59485342)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/bluetooth/btmtksdio.c
diff --cc drivers/bluetooth/btmtksdio.c
index 9d69b7207cf2,8cbd49013d86..000000000000
--- a/drivers/bluetooth/btmtksdio.c
+++ b/drivers/bluetooth/btmtksdio.c
@@@ -576,8 -598,9 +624,14 @@@ static int btmtksdio_open(struct hci_de
  	if (err < 0)
  		goto err_release_host;
  
++<<<<<<< HEAD
 +	/* Get ownership from the device */
 +	sdio_writel(bdev->func, C_FW_OWN_REQ_CLR, MTK_REG_CHLPCR, &err);
++=======
+ 	set_bit(BTMTKSDIO_FUNC_ENABLED, &bdev->tx_state);
+ 
+ 	err = btmtksdio_drv_pmctrl(bdev);
++>>>>>>> c7e301d7c855 (Bluetooth: btmtksdio: refactor btmtksdio_runtime_[suspend|resume]())
  	if (err < 0)
  		goto err_disable_func;
  
@@@ -669,14 -683,9 +714,8 @@@ static int btmtksdio_close(struct hci_d
  
  	cancel_work_sync(&bdev->txrx_work);
  
- 	/* Return ownership to the device */
- 	sdio_writel(bdev->func, C_FW_OWN_REQ_SET, MTK_REG_CHLPCR, NULL);
- 
- 	err = readx_poll_timeout(btmtksdio_drv_own_query, bdev, status,
- 				 !(status & C_COM_DRV_OWN), 2000, 1000000);
- 	if (err < 0)
- 		bt_dev_err(bdev->hdev, "Cannot return ownership to device");
+ 	btmtksdio_fw_pmctrl(bdev);
  
 -	clear_bit(BTMTKSDIO_FUNC_ENABLED, &bdev->tx_state);
  	sdio_disable_func(bdev->func);
  
  	sdio_release_host(bdev->func);
@@@ -1084,18 -1200,14 +1122,18 @@@ static int btmtksdio_runtime_suspend(st
  	if (!bdev)
  		return 0;
  
++<<<<<<< HEAD
 +	sdio_claim_host(bdev->func);
++=======
+ 	if (!test_bit(BTMTKSDIO_FUNC_ENABLED, &bdev->tx_state))
+ 		return 0;
  
- 	sdio_writel(bdev->func, C_FW_OWN_REQ_SET, MTK_REG_CHLPCR, &err);
- 	if (err < 0)
- 		goto out;
+ 	sdio_set_host_pm_flags(func, MMC_PM_KEEP_POWER);
  
- 	err = readx_poll_timeout(btmtksdio_drv_own_query, bdev, status,
- 				 !(status & C_COM_DRV_OWN), 2000, 1000000);
- out:
- 	bt_dev_info(bdev->hdev, "status (%d) return ownership to device", err);
+ 	err = btmtksdio_fw_pmctrl(bdev);
++>>>>>>> c7e301d7c855 (Bluetooth: btmtksdio: refactor btmtksdio_runtime_[suspend|resume]())
  
- 	sdio_release_host(bdev->func);
+ 	bt_dev_info(bdev->hdev, "status (%d) return ownership to device", err);
  
  	return err;
  }
@@@ -1111,19 -1222,13 +1148,17 @@@ static int btmtksdio_runtime_resume(str
  	if (!bdev)
  		return 0;
  
++<<<<<<< HEAD
 +	sdio_claim_host(bdev->func);
++=======
+ 	if (!test_bit(BTMTKSDIO_FUNC_ENABLED, &bdev->tx_state))
+ 		return 0;
  
- 	sdio_writel(bdev->func, C_FW_OWN_REQ_CLR, MTK_REG_CHLPCR, &err);
- 	if (err < 0)
- 		goto out;
+ 	err = btmtksdio_drv_pmctrl(bdev);
++>>>>>>> c7e301d7c855 (Bluetooth: btmtksdio: refactor btmtksdio_runtime_[suspend|resume]())
  
- 	err = readx_poll_timeout(btmtksdio_drv_own_query, bdev, status,
- 				 status & C_COM_DRV_OWN, 2000, 1000000);
- out:
  	bt_dev_info(bdev->hdev, "status (%d) get ownership from device", err);
  
- 	sdio_release_host(bdev->func);
- 
  	return err;
  }
  
* Unmerged path drivers/bluetooth/btmtksdio.c
