asix: fix wrong return value in asix_check_host_enable()

jira LE-1907
cve CVE-2021-47101
Rebuild_History Non-Buildable kernel-4.18.0-553.22.1.el8_10
commit-author Pavel Skripkin <paskripkin@gmail.com>
commit d1652b70d07cc3eed96210c876c4879e1655f20e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.22.1.el8_10/d1652b70.failed

If asix_read_cmd() returns 0 on 30th interation, 0 will be returned from
asix_check_host_enable(), which is logically wrong. Fix it by returning
-ETIMEDOUT explicitly if we have exceeded 30 iterations

Also, replaced 30 with #define as suggested by Andrew

Fixes: a786e3195d6a ("net: asix: fix uninit value bugs")
	Reported-by: Andrew Lunn <andrew@lunn.ch>
	Signed-off-by: Pavel Skripkin <paskripkin@gmail.com>
	Reviewed-by: Andrew Lunn <andrew@lunn.ch>
Link: https://lore.kernel.org/r/ecd3470ce6c2d5697ac635d0d3b14a47defb4acb.1640117288.git.paskripkin@gmail.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit d1652b70d07cc3eed96210c876c4879e1655f20e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/usb/asix_common.c
diff --cc drivers/net/usb/asix_common.c
index 113993e61ac8,71682970be58..000000000000
--- a/drivers/net/usb/asix_common.c
+++ b/drivers/net/usb/asix_common.c
@@@ -75,6 -65,29 +77,32 @@@ void asix_write_cmd_async(struct usbne
  			       value, index, data, size);
  }
  
++<<<<<<< HEAD
++=======
+ static int asix_check_host_enable(struct usbnet *dev, int in_pm)
+ {
+ 	int i, ret;
+ 	u8 smsr;
+ 
+ 	for (i = 0; i < AX_HOST_EN_RETRIES; ++i) {
+ 		ret = asix_set_sw_mii(dev, in_pm);
+ 		if (ret == -ENODEV || ret == -ETIMEDOUT)
+ 			break;
+ 		usleep_range(1000, 1100);
+ 		ret = asix_read_cmd(dev, AX_CMD_STATMNGSTS_REG,
+ 				    0, 0, 1, &smsr, in_pm);
+ 		if (ret == -ENODEV)
+ 			break;
+ 		else if (ret < sizeof(smsr))
+ 			continue;
+ 		else if (smsr & AX_HOST_EN)
+ 			break;
+ 	}
+ 
+ 	return i >= AX_HOST_EN_RETRIES ? -ETIMEDOUT : ret;
+ }
+ 
++>>>>>>> d1652b70d07c (asix: fix wrong return value in asix_check_host_enable())
  static void reset_asix_rx_fixup_info(struct asix_rx_fixup_info *rx)
  {
  	/* Reset the variables that have a lifetime outside of
* Unmerged path drivers/net/usb/asix_common.c
