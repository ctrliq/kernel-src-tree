media: cec: core: add adap_unconfigured() callback

jira LE-1907
cve CVE-2024-23848
Rebuild_History Non-Buildable kernel-4.18.0-553.22.1.el8_10
commit-author Hans Verkuil <hverkuil-cisco@xs4all.nl>
commit 948a77aaecf202f722cf2264025f9987e5bd5c26
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.22.1.el8_10/948a77aa.failed

The adap_configured() callback was called with the adap->lock mutex
held if the 'configured' argument was false, and without the adap->lock
mutex held if that argument was true.

That was very confusing, and so split this up in a adap_unconfigured()
callback and a high-level configured() callback.

This also makes it easier to understand when the mutex is held: all
low-level adap_* callbacks are called with the mutex held. All other
callbacks are called without that mutex held.

	Signed-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
Fixes: f1b57164305d ("media: cec: add optional adap_configured callback")
	Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
(cherry picked from commit 948a77aaecf202f722cf2264025f9987e5bd5c26)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/cec/core/cec-adap.c
#	include/media/cec.h
diff --cc drivers/media/cec/core/cec-adap.c
index 714127e5a25c,09ca83c23329..000000000000
--- a/drivers/media/cec/core/cec-adap.c
+++ b/drivers/media/cec/core/cec-adap.c
@@@ -1351,6 -1348,7 +1351,10 @@@ static void cec_adap_unconfigure(struc
  	cec_flush(adap);
  	wake_up_interruptible(&adap->kthread_waitq);
  	cec_post_state_event(adap);
++<<<<<<< HEAD
++=======
+ 	call_void_op(adap, adap_unconfigured);
++>>>>>>> 948a77aaecf2 (media: cec: core: add adap_unconfigured() callback)
  }
  
  /*
@@@ -1541,6 -1539,7 +1545,10 @@@ configured
  	adap->kthread_config = NULL;
  	complete(&adap->config_completion);
  	mutex_unlock(&adap->lock);
++<<<<<<< HEAD
++=======
+ 	call_void_op(adap, configured);
++>>>>>>> 948a77aaecf2 (media: cec: core: add adap_unconfigured() callback)
  	return 0;
  
  unconfigure:
diff --cc include/media/cec.h
index c494f37771a8,9c007f83569a..000000000000
--- a/include/media/cec.h
+++ b/include/media/cec.h
@@@ -111,8 -118,11 +111,12 @@@ struct cec_adap_ops 
  	int (*adap_monitor_all_enable)(struct cec_adapter *adap, bool enable);
  	int (*adap_monitor_pin_enable)(struct cec_adapter *adap, bool enable);
  	int (*adap_log_addr)(struct cec_adapter *adap, u8 logical_addr);
++<<<<<<< HEAD
++=======
+ 	void (*adap_unconfigured)(struct cec_adapter *adap);
++>>>>>>> 948a77aaecf2 (media: cec: core: add adap_unconfigured() callback)
  	int (*adap_transmit)(struct cec_adapter *adap, u8 attempts,
  			     u32 signal_free_time, struct cec_msg *msg);
 -	void (*adap_nb_transmit_canceled)(struct cec_adapter *adap,
 -					  const struct cec_msg *msg);
  	void (*adap_status)(struct cec_adapter *adap, struct seq_file *file);
  	void (*adap_free)(struct cec_adapter *adap);
  
@@@ -120,7 -130,8 +124,12 @@@
  	int (*error_inj_show)(struct cec_adapter *adap, struct seq_file *sf);
  	bool (*error_inj_parse_line)(struct cec_adapter *adap, char *line);
  
++<<<<<<< HEAD
 +	/* High-level CEC message callback */
++=======
+ 	/* High-level CEC message callback, called without adap->lock held */
+ 	void (*configured)(struct cec_adapter *adap);
++>>>>>>> 948a77aaecf2 (media: cec: core: add adap_unconfigured() callback)
  	int (*received)(struct cec_adapter *adap, struct cec_msg *msg);
  };
  
* Unmerged path drivers/media/cec/core/cec-adap.c
* Unmerged path include/media/cec.h
