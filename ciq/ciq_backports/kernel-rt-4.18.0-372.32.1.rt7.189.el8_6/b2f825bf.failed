x86: Move RETPOLINE*_CFLAGS to arch Makefile

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Peter Zijlstra <peterz@infradead.org>
commit b2f825bfeda884f9d40386cc7d089d023017d2dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/b2f825bf.failed

Currently, RETPOLINE*_CFLAGS are defined in the top-level Makefile
but only x86 makes use of them. Move them there. If ever another
architecture finds the need, it can be reconsidered.

  [ bp: Massage a bit. ]

	Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Kees Cook <keescook@chromium.org>
	Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
Link: https://lkml.kernel.org/r/20211119165630.219152765@infradead.org
(cherry picked from commit b2f825bfeda884f9d40386cc7d089d023017d2dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Makefile
diff --cc Makefile
index d19eb4028fc8,b9ee63d6660c..000000000000
--- a/Makefile
+++ b/Makefile
@@@ -613,15 -688,10 +613,22 @@@ ifdef CONFIG_FUNCTION_TRACE
    CC_FLAGS_FTRACE := -pg
  endif
  
++<<<<<<< HEAD
 +# The arch Makefile can set ARCH_{CPP,A,C}FLAGS to override the default
 +# values of the respective KBUILD_* variables
 +ARCH_CPPFLAGS :=
 +ARCH_AFLAGS :=
 +ARCH_CFLAGS :=
 +include arch/$(SRCARCH)/Makefile
 +
 +ifeq ($(dot-config),1)
 +ifeq ($(KBUILD_EXTMOD),)
++=======
+ include $(srctree)/arch/$(SRCARCH)/Makefile
+ 
+ ifdef need-config
+ ifdef may-sync-config
++>>>>>>> b2f825bfeda8 (x86: Move RETPOLINE*_CFLAGS to arch Makefile)
  # Read in dependencies to all Kconfig* files, make sure to run syncconfig if
  # changes are detected. This should be included after arch/$(SRCARCH)/Makefile
  # because some architectures define CROSS_COMPILE there.
* Unmerged path Makefile
diff --git a/arch/x86/Makefile b/arch/x86/Makefile
index 7621048daf34..0feaaaaf2ab4 100644
--- a/arch/x86/Makefile
+++ b/arch/x86/Makefile
@@ -12,6 +12,17 @@ else
         KBUILD_DEFCONFIG := $(ARCH)_defconfig
 endif
 
+ifdef CONFIG_CC_IS_GCC
+RETPOLINE_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-extern -mindirect-branch-register)
+RETPOLINE_VDSO_CFLAGS	:= $(call cc-option,-mindirect-branch=thunk-inline -mindirect-branch-register)
+endif
+ifdef CONFIG_CC_IS_CLANG
+RETPOLINE_CFLAGS	:= -mretpoline-external-thunk
+RETPOLINE_VDSO_CFLAGS	:= -mretpoline
+endif
+export RETPOLINE_CFLAGS
+export RETPOLINE_VDSO_CFLAGS
+
 # For gcc stack alignment is specified with -mpreferred-stack-boundary,
 # clang has the option -mstack-alignment for that purpose.
 ifneq ($(call cc-option, -mpreferred-stack-boundary=4),)
