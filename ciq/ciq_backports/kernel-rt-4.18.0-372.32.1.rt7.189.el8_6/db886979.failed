x86/speculation: Use DECLARE_PER_CPU for x86_spec_ctrl_current

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Nathan Chancellor <nathan@kernel.org>
commit db886979683a8360ced9b24ab1125ad0c4d2cf76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/db886979.failed

Clang warns:

  arch/x86/kernel/cpu/bugs.c:58:21: error: section attribute is specified on redeclared variable [-Werror,-Wsection]
  DEFINE_PER_CPU(u64, x86_spec_ctrl_current);
                      ^
  arch/x86/include/asm/nospec-branch.h:283:12: note: previous declaration is here
  extern u64 x86_spec_ctrl_current;
             ^
  1 error generated.

The declaration should be using DECLARE_PER_CPU instead so all
attributes stay in sync.

	Cc: stable@vger.kernel.org
Fixes: fc02735b14ff ("KVM: VMX: Prevent guest RSB poisoning attacks with eIBRS")
	Reported-by: kernel test robot <lkp@intel.com>
	Signed-off-by: Nathan Chancellor <nathan@kernel.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit db886979683a8360ced9b24ab1125ad0c4d2cf76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/nospec-branch.h
diff --cc arch/x86/include/asm/nospec-branch.h
index 797212d0a956,10a3bfc1eb23..000000000000
--- a/arch/x86/include/asm/nospec-branch.h
+++ b/arch/x86/include/asm/nospec-branch.h
@@@ -11,15 -11,9 +11,16 @@@
  #include <asm/cpufeatures.h>
  #include <asm/msr-index.h>
  #include <asm/unwind_hints.h>
+ #include <asm/percpu.h>
  
 -#define RETPOLINE_THUNK_SIZE	32
 +/*
 + * This should be used immediately before a retpoline alternative. It tells
 + * objtool where the retpolines are so that it can make sense of the control
 + * flow by just reading the original instruction(s) and ignoring the
 + * alternatives.
 + */
 +#define ANNOTATE_NOSPEC_ALTERNATIVE \
 +	ANNOTATE_IGNORE_ALTERNATIVE
  
  /*
   * Fill the CPU return stack buffer.
@@@ -267,6 -281,9 +268,12 @@@ static inline void indirect_branch_pred
  
  /* The Intel SPEC CTRL MSR base value cache */
  extern u64 x86_spec_ctrl_base;
++<<<<<<< HEAD
++=======
+ DECLARE_PER_CPU(u64, x86_spec_ctrl_current);
+ extern void write_spec_ctrl_current(u64 val, bool force);
+ extern u64 spec_ctrl_current(void);
++>>>>>>> db886979683a (x86/speculation: Use DECLARE_PER_CPU for x86_spec_ctrl_current)
  
  /*
   * With retpoline, we must use IBRS to restrict branch prediction
* Unmerged path arch/x86/include/asm/nospec-branch.h
