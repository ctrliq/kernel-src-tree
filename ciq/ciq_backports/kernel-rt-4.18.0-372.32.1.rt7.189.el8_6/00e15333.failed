x86/retpoline: Swizzle retpoline thunk

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Peter Zijlstra <peterz@infradead.org>
commit 00e1533325fd1fb5459229fe37f235462649f668
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/00e15333.failed

Put the actual retpoline thunk as the original code so that it can
become more complicated. Specifically, it allows RET to be a JMP,
which can't be .altinstr_replacement since that doesn't do relocations
(except for the very first instruction).

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 00e1533325fd1fb5459229fe37f235462649f668)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/lib/retpoline.S
diff --cc arch/x86/lib/retpoline.S
index 363ec132df7e,2cdd62499d54..000000000000
--- a/arch/x86/lib/retpoline.S
+++ b/arch/x86/lib/retpoline.S
@@@ -4,18 -4,39 +4,30 @@@
  #include <linux/linkage.h>
  #include <asm/dwarf2.h>
  #include <asm/cpufeatures.h>
 -#include <asm/alternative.h>
 +#include <asm/alternative-asm.h>
  #include <asm/export.h>
  #include <asm/nospec-branch.h>
 -#include <asm/unwind_hints.h>
 -#include <asm/frame.h>
 -
 -	.section .text.__x86.indirect_thunk
 -
 -.macro RETPOLINE reg
 -	ANNOTATE_INTRA_FUNCTION_CALL
 -	call    .Ldo_rop_\@
 -.Lspec_trap_\@:
 -	UNWIND_HINT_EMPTY
 -	pause
 -	lfence
 -	jmp .Lspec_trap_\@
 -.Ldo_rop_\@:
 -	mov     %\reg, (%_ASM_SP)
 -	UNWIND_HINT_FUNC
 -	RET
 -.endm
  
  .macro THUNK reg
 +	.section .text.__x86.indirect_thunk
  
++<<<<<<< HEAD
 +SYM_FUNC_START(__x86_indirect_thunk_\reg)
 +	CFI_STARTPROC
 +	JMP_NOSPEC %\reg
 +	CFI_ENDPROC
 +SYM_FUNC_END(__x86_indirect_thunk_\reg)
++=======
+ 	.align RETPOLINE_THUNK_SIZE
+ SYM_INNER_LABEL(__x86_indirect_thunk_\reg, SYM_L_GLOBAL)
+ 	UNWIND_HINT_EMPTY
+ 	ANNOTATE_NOENDBR
+ 
+ 	ALTERNATIVE_2 __stringify(RETPOLINE \reg), \
+ 		      __stringify(lfence; ANNOTATE_RETPOLINE_SAFE; jmp *%\reg; int3), X86_FEATURE_RETPOLINE_LFENCE, \
+ 		      __stringify(ANNOTATE_RETPOLINE_SAFE; jmp *%\reg), ALT_NOT(X86_FEATURE_RETPOLINE)
+ 
++>>>>>>> 00e1533325fd (x86/retpoline: Swizzle retpoline thunk)
  .endm
  
  /*
* Unmerged path arch/x86/lib/retpoline.S
