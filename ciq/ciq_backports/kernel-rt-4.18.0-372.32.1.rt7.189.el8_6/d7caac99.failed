x86/cpu/amd: Add Spectral Chicken

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Peter Zijlstra <peterz@infradead.org>
commit d7caac991feeef1b871ee6988fd2c9725df09039
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/d7caac99.failed

Zen2 uarchs have an undocumented, unnamed, MSR that contains a chicken
bit for some speculation behaviour. It needs setting.

Note: very belatedly AMD released naming; it's now officially called
      MSR_AMD64_DE_CFG2 and MSR_AMD64_DE_CFG2_SUPPRESS_NOBR_PRED_BIT
      but shall remain the SPECTRAL CHICKEN.

	Suggested-by: Andrew Cooper <Andrew.Cooper3@citrix.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit d7caac991feeef1b871ee6988fd2c9725df09039)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/amd.c
#	arch/x86/kernel/cpu/hygon.c
diff --cc arch/x86/kernel/cpu/amd.c
index 45b1a646fe2e,8cf0659c0521..000000000000
--- a/arch/x86/kernel/cpu/amd.c
+++ b/arch/x86/kernel/cpu/amd.c
@@@ -846,8 -853,35 +846,28 @@@ static void init_amd_bd(struct cpuinfo_
  			wrmsrl_safe(MSR_F15H_IC_CFG, value);
  		}
  	}
 -
 -	/*
 -	 * Some BIOS implementations do not restore proper RDRAND support
 -	 * across suspend and resume. Check on whether to hide the RDRAND
 -	 * instruction support via CPUID.
 -	 */
 -	clear_rdrand_cpuid_bit(c);
  }
  
+ void init_spectral_chicken(struct cpuinfo_x86 *c)
+ {
+ 	u64 value;
+ 
+ 	/*
+ 	 * On Zen2 we offer this chicken (bit) on the altar of Speculation.
+ 	 *
+ 	 * This suppresses speculation from the middle of a basic block, i.e. it
+ 	 * suppresses non-branch predictions.
+ 	 *
+ 	 * We use STIBP as a heuristic to filter out Zen2 from the rest of F17H
+ 	 */
+ 	if (!cpu_has(c, X86_FEATURE_HYPERVISOR) && cpu_has(c, X86_FEATURE_AMD_STIBP)) {
+ 		if (!rdmsrl_safe(MSR_ZEN2_SPECTRAL_CHICKEN, &value)) {
+ 			value |= MSR_ZEN2_SPECTRAL_CHICKEN_BIT;
+ 			wrmsrl_safe(MSR_ZEN2_SPECTRAL_CHICKEN, value);
+ 		}
+ 	}
+ }
+ 
  static void init_amd_zn(struct cpuinfo_x86 *c)
  {
  	set_cpu_cap(c, X86_FEATURE_ZEN);
@@@ -892,7 -926,9 +912,13 @@@ static void init_amd(struct cpuinfo_x8
  	case 0x10: init_amd_gh(c); break;
  	case 0x12: init_amd_ln(c); break;
  	case 0x15: init_amd_bd(c); break;
++<<<<<<< HEAD
 +	case 0x17: fallthrough;
++=======
+ 	case 0x16: init_amd_jg(c); break;
+ 	case 0x17: init_spectral_chicken(c);
+ 		   fallthrough;
++>>>>>>> d7caac991fee (x86/cpu/amd: Add Spectral Chicken)
  	case 0x19: init_amd_zn(c); break;
  	}
  
* Unmerged path arch/x86/kernel/cpu/hygon.c
diff --git a/arch/x86/include/asm/msr-index.h b/arch/x86/include/asm/msr-index.h
index da23407eb73d..5fedc65c7e0b 100644
--- a/arch/x86/include/asm/msr-index.h
+++ b/arch/x86/include/asm/msr-index.h
@@ -508,6 +508,9 @@
 /* Fam 17h MSRs */
 #define MSR_F17H_IRPERF			0xc00000e9
 
+#define MSR_ZEN2_SPECTRAL_CHICKEN	0xc00110e3
+#define MSR_ZEN2_SPECTRAL_CHICKEN_BIT	BIT_ULL(1)
+
 /* Fam 16h MSRs */
 #define MSR_F16H_L2I_PERF_CTL		0xc0010230
 #define MSR_F16H_L2I_PERF_CTR		0xc0010231
* Unmerged path arch/x86/kernel/cpu/amd.c
diff --git a/arch/x86/kernel/cpu/cpu.h b/arch/x86/kernel/cpu/cpu.h
index 57bebb12938b..7bea58d58ac6 100644
--- a/arch/x86/kernel/cpu/cpu.h
+++ b/arch/x86/kernel/cpu/cpu.h
@@ -62,6 +62,8 @@ static inline void tsx_init(void) { }
 static inline void tsx_ap_init(void) { }
 #endif /* CONFIG_CPU_SUP_INTEL */
 
+extern void init_spectral_chicken(struct cpuinfo_x86 *c);
+
 extern void get_cpu_cap(struct cpuinfo_x86 *c);
 extern void cpu_detect_cache_sizes(struct cpuinfo_x86 *c);
 extern void init_scattered_cpuid_features(struct cpuinfo_x86 *c);
* Unmerged path arch/x86/kernel/cpu/hygon.c
