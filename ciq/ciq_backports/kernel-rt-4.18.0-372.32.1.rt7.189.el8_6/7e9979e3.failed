qed: Enhance rammod debug prints to provide pretty details

jira LE-1907
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Prabhakar Kushwaha <pkushwaha@marvell.com>
commit 7e9979e360075ef5db77e77d1e8ab3efbcba6eef
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/7e9979e3.failed

Instead of printing numbers of protocol IDs and rammod commands,
enhance debug prints to provide names. s_protocol_types[] and
s_ramrod_cmd_ids arrays[] are added to support along with APIs.

	Signed-off-by: Ariel Elior <aelior@marvell.com>
	Signed-off-by: Alok Prasad <palok@marvell.com>
	Signed-off-by: Prabhakar Kushwaha <pkushwaha@marvell.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 7e9979e360075ef5db77e77d1e8ab3efbcba6eef)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/qlogic/qed/qed_hsi.h
diff --cc drivers/net/ethernet/qlogic/qed/qed_hsi.h
index 467813418a64,ed1a84542ad2..000000000000
--- a/drivers/net/ethernet/qlogic/qed/qed_hsi.h
+++ b/drivers/net/ethernet/qlogic/qed/qed_hsi.h
@@@ -3009,2057 -2339,2263 +3009,2085 @@@ struct iro 
  	u16 size;
  };
  
 -/* Win 2 */
 -#define GTT_BAR0_MAP_REG_IGU_CMD	0x00f000UL
 -
 -/* Win 3 */
 -#define GTT_BAR0_MAP_REG_TSDM_RAM	0x010000UL
 -
 -/* Win 4 */
 -#define GTT_BAR0_MAP_REG_MSDM_RAM	0x011000UL
 -
 -/* Win 5 */
 -#define GTT_BAR0_MAP_REG_MSDM_RAM_1024	0x012000UL
 -
 -/* Win 6 */
 -#define GTT_BAR0_MAP_REG_MSDM_RAM_2048	0x013000UL
 -
 -/* Win 7 */
 -#define GTT_BAR0_MAP_REG_USDM_RAM	0x014000UL
 -
 -/* Win 8 */
 -#define GTT_BAR0_MAP_REG_USDM_RAM_1024	0x015000UL
 -
 -/* Win 9 */
 -#define GTT_BAR0_MAP_REG_USDM_RAM_2048	0x016000UL
 -
 -/* Win 10 */
 -#define GTT_BAR0_MAP_REG_XSDM_RAM	0x017000UL
 -
 -/* Win 11 */
 -#define GTT_BAR0_MAP_REG_XSDM_RAM_1024	0x018000UL
 -
 -/* Win 12 */
 -#define GTT_BAR0_MAP_REG_YSDM_RAM	0x019000UL
 +/***************************** Public Functions *******************************/
  
 -/* Win 13 */
 -#define GTT_BAR0_MAP_REG_PSDM_RAM	0x01a000UL
 -
 -/* Returns the VOQ based on port and TC */
 -#define VOQ(port, tc, max_phys_tcs_per_port)   ((tc) ==                       \
 -						PURE_LB_TC ? NUM_OF_PHYS_TCS *\
 -						MAX_NUM_PORTS_BB +            \
 -						(port) : (port) *             \
 -						(max_phys_tcs_per_port) + (tc))
 +/**
 + * @brief qed_dbg_set_bin_ptr - Sets a pointer to the binary data with debug
 + *	arrays.
 + *
 + * @param p_hwfn -	    HW device data
 + * @param bin_ptr - a pointer to the binary data with debug arrays.
 + */
 +enum dbg_status qed_dbg_set_bin_ptr(struct qed_hwfn *p_hwfn,
 +				    const u8 * const bin_ptr);
  
 -struct init_qm_pq_params;
 +/**
 + * @brief qed_read_regs - Reads registers into a buffer (using GRC).
 + *
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf - Destination buffer.
 + * @param addr - Source GRC address in dwords.
 + * @param len - Number of registers to read.
 + */
 +void qed_read_regs(struct qed_hwfn *p_hwfn,
 +		   struct qed_ptt *p_ptt, u32 *buf, u32 addr, u32 len);
  
  /**
 - * qed_qm_pf_mem_size(): Prepare QM ILT sizes.
 + * @brief qed_read_fw_info - Reads FW info from the chip.
   *
 - * @num_pf_cids: Number of connections used by this PF.
 - * @num_vf_cids: Number of connections used by VFs of this PF.
 - * @num_tids: Number of tasks used by this PF.
 - * @num_pf_pqs: Number of PQs used by this PF.
 - * @num_vf_pqs: Number of PQs used by VFs of this PF.
 + * The FW info contains FW-related information, such as the FW version,
 + * FW image (main/L2B/kuku), FW timestamp, etc.
 + * The FW info is read from the internal RAM of the first Storm that is not in
 + * reset.
   *
 - * Return: The required host memory size in 4KB units.
 + * @param p_hwfn -	    HW device data
 + * @param p_ptt -	    Ptt window used for writing the registers.
 + * @param fw_info -	Out: a pointer to write the FW info into.
   *
 - * Returns the required host memory size in 4KB units.
 - * Must be called before all QM init HSI functions.
 + * @return true if the FW info was read successfully from one of the Storms,
 + * or false if all Storms are in reset.
   */
 -u32 qed_qm_pf_mem_size(u32 num_pf_cids,
 -		       u32 num_vf_cids,
 -		       u32 num_tids, u16 num_pf_pqs, u16 num_vf_pqs);
 -
 -struct qed_qm_common_rt_init_params {
 -	u8 max_ports_per_engine;
 -	u8 max_phys_tcs_per_port;
 -	bool pf_rl_en;
 -	bool pf_wfq_en;
 -	bool global_rl_en;
 -	bool vport_wfq_en;
 -	struct init_qm_port_params *port_params;
 -	struct init_qm_global_rl_params
 -	global_rl_params[COMMON_MAX_QM_GLOBAL_RLS];
 -};
 -
 +bool qed_read_fw_info(struct qed_hwfn *p_hwfn,
 +		      struct qed_ptt *p_ptt, struct fw_info *fw_info);
  /**
 - * qed_qm_common_rt_init(): Prepare QM runtime init values for the
 - *                          engine phase.
 + * @brief qed_dbg_grc_config - Sets the value of a GRC parameter.
   *
 - * @p_hwfn: HW device data.
 - * @p_params: Parameters.
 + * @param p_hwfn -	HW device data
 + * @param grc_param -	GRC parameter
 + * @param val -		Value to set.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- grc_param is invalid
 + *	- val is outside the allowed boundaries
   */
 -int qed_qm_common_rt_init(struct qed_hwfn *p_hwfn,
 -			  struct qed_qm_common_rt_init_params *p_params);
 -
 -struct qed_qm_pf_rt_init_params {
 -	u8 port_id;
 -	u8 pf_id;
 -	u8 max_phys_tcs_per_port;
 -	bool is_pf_loading;
 -	u32 num_pf_cids;
 -	u32 num_vf_cids;
 -	u32 num_tids;
 -	u16 start_pq;
 -	u16 num_pf_pqs;
 -	u16 num_vf_pqs;
 -	u16 start_vport;
 -	u16 num_vports;
 -	u16 start_rl;
 -	u16 num_rls;
 -	u16 pf_wfq;
 -	u32 pf_rl;
 -	u32 link_speed;
 -	struct init_qm_pq_params *pq_params;
 -	struct init_qm_vport_params *vport_params;
 -	struct init_qm_rl_params *rl_params;
 -};
 +enum dbg_status qed_dbg_grc_config(struct qed_hwfn *p_hwfn,
 +				   enum dbg_grc_params grc_param, u32 val);
  
  /**
 - * qed_qm_pf_rt_init(): Prepare QM runtime init values for the PF phase.
 + * @brief qed_dbg_grc_set_params_default - Reverts all GRC parameters to their
 + *	default value.
 + *
 + * @param p_hwfn		- HW device data
 + */
 +void qed_dbg_grc_set_params_default(struct qed_hwfn *p_hwfn);
 +/**
 + * @brief qed_dbg_grc_get_dump_buf_size - Returns the required buffer size for
 + *	GRC Dump.
   *
 - * @p_hwfn:  HW device data.
 - * @p_ptt: Ptt window used for writing the registers
 - * @p_params: Parameters.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for the GRC Dump
 + *	data.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -int qed_qm_pf_rt_init(struct qed_hwfn *p_hwfn,
 -		      struct qed_ptt *p_ptt,
 -		      struct qed_qm_pf_rt_init_params *p_params);
 +enum dbg_status qed_dbg_grc_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +					      struct qed_ptt *p_ptt,
 +					      u32 *buf_size);
  
  /**
 - * qed_init_pf_wfq(): Initializes the WFQ weight of the specified PF.
 + * @brief qed_dbg_grc_dump - Dumps GRC data into the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers
 - * @pf_id: PF ID
 - * @pf_wfq: WFQ weight. Must be non-zero.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the collected GRC data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified dump buffer is too small
 + * Otherwise, returns ok.
   */
 -int qed_init_pf_wfq(struct qed_hwfn *p_hwfn,
 -		    struct qed_ptt *p_ptt, u8 pf_id, u16 pf_wfq);
 +enum dbg_status qed_dbg_grc_dump(struct qed_hwfn *p_hwfn,
 +				 struct qed_ptt *p_ptt,
 +				 u32 *dump_buf,
 +				 u32 buf_size_in_dwords,
 +				 u32 *num_dumped_dwords);
  
  /**
 - * qed_init_pf_rl(): Initializes the rate limit of the specified PF
 + * @brief qed_dbg_idle_chk_get_dump_buf_size - Returns the required buffer size
 + *	for idle check results.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @pf_id: PF ID.
 - * @pf_rl: rate limit in Mb/sec units
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for the idle check
 + *	data.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -int qed_init_pf_rl(struct qed_hwfn *p_hwfn,
 -		   struct qed_ptt *p_ptt, u8 pf_id, u32 pf_rl);
 +enum dbg_status qed_dbg_idle_chk_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +						   struct qed_ptt *p_ptt,
 +						   u32 *buf_size);
  
  /**
 - * qed_init_vport_wfq(): Initializes the WFQ weight of the specified VPORT
 + * @brief qed_dbg_idle_chk_dump - Performs idle check and writes the results
 + *	into the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers
 - * @first_tx_pq_id: An array containing the first Tx PQ ID associated
 - *                  with the VPORT for each TC. This array is filled by
 - *                  qed_qm_pf_rt_init
 - * @wfq: WFQ weight. Must be non-zero.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the idle check data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + * Otherwise, returns ok.
   */
 -int qed_init_vport_wfq(struct qed_hwfn *p_hwfn,
 -		       struct qed_ptt *p_ptt,
 -		       u16 first_tx_pq_id[NUM_OF_TCS], u16 wfq);
 +enum dbg_status qed_dbg_idle_chk_dump(struct qed_hwfn *p_hwfn,
 +				      struct qed_ptt *p_ptt,
 +				      u32 *dump_buf,
 +				      u32 buf_size_in_dwords,
 +				      u32 *num_dumped_dwords);
  
  /**
 - * qed_init_vport_tc_wfq(): Initializes the WFQ weight of the specified
 - *                          VPORT and TC.
 + * @brief qed_dbg_mcp_trace_get_dump_buf_size - Returns the required buffer size
 + *	for mcp trace results.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @first_tx_pq_id: The first Tx PQ ID associated with the VPORT and TC.
 - *                  (filled by qed_qm_pf_rt_init).
 - * @weight: VPORT+TC WFQ weight.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for mcp trace data.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the trace data in MCP scratchpad contain an invalid signature
 + *	- the bundle ID in NVRAM is invalid
 + *	- the trace meta data cannot be found (in NVRAM or image file)
 + * Otherwise, returns ok.
   */
 -int qed_init_vport_tc_wfq(struct qed_hwfn *p_hwfn,
 -			  struct qed_ptt *p_ptt,
 -			  u16 first_tx_pq_id, u16 weight);
 +enum dbg_status qed_dbg_mcp_trace_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +						    struct qed_ptt *p_ptt,
 +						    u32 *buf_size);
  
  /**
 - * qed_init_global_rl():  Initializes the rate limit of the specified
 - * rate limiter.
 + * @brief qed_dbg_mcp_trace_dump - Performs mcp trace and writes the results
 + *	into the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @rl_id: RL ID.
 - * @rate_limit: Rate limit in Mb/sec units
 - * @vport_rl_type: Vport RL type.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the mcp trace data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: 0 on success, -1 on error.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + *	- the trace data in MCP scratchpad contain an invalid signature
 + *	- the bundle ID in NVRAM is invalid
 + *	- the trace meta data cannot be found (in NVRAM or image file)
 + *	- the trace meta data cannot be read (from NVRAM or image file)
 + * Otherwise, returns ok.
   */
 -int qed_init_global_rl(struct qed_hwfn *p_hwfn,
 -		       struct qed_ptt *p_ptt,
 -		       u16 rl_id, u32 rate_limit,
 -		       enum init_qm_rl_type vport_rl_type);
 +enum dbg_status qed_dbg_mcp_trace_dump(struct qed_hwfn *p_hwfn,
 +				       struct qed_ptt *p_ptt,
 +				       u32 *dump_buf,
 +				       u32 buf_size_in_dwords,
 +				       u32 *num_dumped_dwords);
  
  /**
 - * qed_send_qm_stop_cmd(): Sends a stop command to the QM.
 + * @brief qed_dbg_reg_fifo_get_dump_buf_size - Returns the required buffer size
 + *	for grc trace fifo results.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @is_release_cmd: true for release, false for stop.
 - * @is_tx_pq: true for Tx PQs, false for Other PQs.
 - * @start_pq: first PQ ID to stop
 - * @num_pqs: Number of PQs to stop, starting from start_pq.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for reg fifo data.
   *
 - * Return: Bool, true if successful, false if timeout occurred while waiting
 - *         for QM command done.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -bool qed_send_qm_stop_cmd(struct qed_hwfn *p_hwfn,
 -			  struct qed_ptt *p_ptt,
 -			  bool is_release_cmd,
 -			  bool is_tx_pq, u16 start_pq, u16 num_pqs);
 +enum dbg_status qed_dbg_reg_fifo_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +						   struct qed_ptt *p_ptt,
 +						   u32 *buf_size);
  
  /**
 - * qed_set_vxlan_dest_port(): Initializes vxlan tunnel destination udp port.
 + * @brief qed_dbg_reg_fifo_dump - Reads the reg fifo and writes the results into
 + *	the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @dest_port: vxlan destination udp port.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the reg fifo data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + *	- DMAE transaction failed
 + * Otherwise, returns ok.
   */
 -void qed_set_vxlan_dest_port(struct qed_hwfn *p_hwfn,
 -			     struct qed_ptt *p_ptt, u16 dest_port);
 +enum dbg_status qed_dbg_reg_fifo_dump(struct qed_hwfn *p_hwfn,
 +				      struct qed_ptt *p_ptt,
 +				      u32 *dump_buf,
 +				      u32 buf_size_in_dwords,
 +				      u32 *num_dumped_dwords);
  
  /**
 - * qed_set_vxlan_enable(): Enable or disable VXLAN tunnel in HW.
 + * @brief qed_dbg_igu_fifo_get_dump_buf_size - Returns the required buffer size
 + *	for the IGU fifo results.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @vxlan_enable: vxlan enable flag.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for the IGU fifo
 + *	data.
   *
 - * Return: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -void qed_set_vxlan_enable(struct qed_hwfn *p_hwfn,
 -			  struct qed_ptt *p_ptt, bool vxlan_enable);
 +enum dbg_status qed_dbg_igu_fifo_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +						   struct qed_ptt *p_ptt,
 +						   u32 *buf_size);
  
  /**
 - * qed_set_gre_enable(): Enable or disable GRE tunnel in HW.
 + * @brief qed_dbg_igu_fifo_dump - Reads the IGU fifo and writes the results into
 + *	the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @eth_gre_enable: Eth GRE enable flag.
 - * @ip_gre_enable: IP GRE enable flag.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the IGU fifo data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + *	- DMAE transaction failed
 + * Otherwise, returns ok.
   */
 -void qed_set_gre_enable(struct qed_hwfn *p_hwfn,
 -			struct qed_ptt *p_ptt,
 -			bool eth_gre_enable, bool ip_gre_enable);
 +enum dbg_status qed_dbg_igu_fifo_dump(struct qed_hwfn *p_hwfn,
 +				      struct qed_ptt *p_ptt,
 +				      u32 *dump_buf,
 +				      u32 buf_size_in_dwords,
 +				      u32 *num_dumped_dwords);
  
  /**
 - * qed_set_geneve_dest_port(): Initializes geneve tunnel destination udp port
 + * @brief qed_dbg_protection_override_get_dump_buf_size - Returns the required
 + *	buffer size for protection override window results.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @dest_port: Geneve destination udp port.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for protection
 + *	override data.
   *
 - * Retur: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -void qed_set_geneve_dest_port(struct qed_hwfn *p_hwfn,
 -			      struct qed_ptt *p_ptt, u16 dest_port);
 -
 +enum dbg_status
 +qed_dbg_protection_override_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +					      struct qed_ptt *p_ptt,
 +					      u32 *buf_size);
  /**
 - * qed_set_geneve_enable(): Enable or disable GRE tunnel in HW.
 + * @brief qed_dbg_protection_override_dump - Reads protection override window
 + *	entries and writes the results into the specified buffer.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @eth_geneve_enable: Eth GENEVE enable flag.
 - * @ip_geneve_enable: IP GENEVE enable flag.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the protection override data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
   *
 - * Return: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + *	- DMAE transaction failed
 + * Otherwise, returns ok.
   */
 -void qed_set_geneve_enable(struct qed_hwfn *p_hwfn,
 -			   struct qed_ptt *p_ptt,
 -			   bool eth_geneve_enable, bool ip_geneve_enable);
 +enum dbg_status qed_dbg_protection_override_dump(struct qed_hwfn *p_hwfn,
 +						 struct qed_ptt *p_ptt,
 +						 u32 *dump_buf,
 +						 u32 buf_size_in_dwords,
 +						 u32 *num_dumped_dwords);
 +/**
 + * @brief qed_dbg_fw_asserts_get_dump_buf_size - Returns the required buffer
 + *	size for FW Asserts results.
 + *
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param buf_size - OUT: required buffer size (in dwords) for FW Asserts data.
 + *
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
 + */
 +enum dbg_status qed_dbg_fw_asserts_get_dump_buf_size(struct qed_hwfn *p_hwfn,
 +						     struct qed_ptt *p_ptt,
 +						     u32 *buf_size);
 +/**
 + * @brief qed_dbg_fw_asserts_dump - Reads the FW Asserts and writes the results
 + *	into the specified buffer.
 + *
 + * @param p_hwfn - HW device data
 + * @param p_ptt - Ptt window used for writing the registers.
 + * @param dump_buf - Pointer to write the FW Asserts data into.
 + * @param buf_size_in_dwords - Size of the specified buffer in dwords.
 + * @param num_dumped_dwords - OUT: number of dumped dwords.
 + *
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + *	- the specified buffer is too small
 + * Otherwise, returns ok.
 + */
 +enum dbg_status qed_dbg_fw_asserts_dump(struct qed_hwfn *p_hwfn,
 +					struct qed_ptt *p_ptt,
 +					u32 *dump_buf,
 +					u32 buf_size_in_dwords,
 +					u32 *num_dumped_dwords);
  
 -void qed_set_vxlan_no_l2_enable(struct qed_hwfn *p_hwfn,
 -				struct qed_ptt *p_ptt, bool enable);
 +/**
 + * @brief qed_dbg_read_attn - Reads the attention registers of the specified
 + * block and type, and writes the results into the specified buffer.
 + *
 + * @param p_hwfn -	 HW device data
 + * @param p_ptt -	 Ptt window used for writing the registers.
 + * @param block -	 Block ID.
 + * @param attn_type -	 Attention type.
 + * @param clear_status - Indicates if the attention status should be cleared.
 + * @param results -	 OUT: Pointer to write the read results into
 + *
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
 + */
 +enum dbg_status qed_dbg_read_attn(struct qed_hwfn *p_hwfn,
 +				  struct qed_ptt *p_ptt,
 +				  enum block_id block,
 +				  enum dbg_attn_type attn_type,
 +				  bool clear_status,
 +				  struct dbg_attn_block_result *results);
  
  /**
 - * qed_gft_disable(): Disable GFT.
 + * @brief qed_dbg_print_attn - Prints attention registers values in the
 + *	specified results struct.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @pf_id: PF on which to disable GFT.
 + * @param p_hwfn
 + * @param results - Pointer to the attention read results
   *
 - * Return: Void.
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
   */
 -void qed_gft_disable(struct qed_hwfn *p_hwfn, struct qed_ptt *p_ptt, u16 pf_id);
 +enum dbg_status qed_dbg_print_attn(struct qed_hwfn *p_hwfn,
 +				   struct dbg_attn_block_result *results);
 +
 +/******************************* Data Types **********************************/
 +
 +struct mcp_trace_format {
 +	u32 data;
 +#define MCP_TRACE_FORMAT_MODULE_MASK	0x0000ffff
 +#define MCP_TRACE_FORMAT_MODULE_OFFSET	0
 +#define MCP_TRACE_FORMAT_LEVEL_MASK	0x00030000
 +#define MCP_TRACE_FORMAT_LEVEL_OFFSET	16
 +#define MCP_TRACE_FORMAT_P1_SIZE_MASK	0x000c0000
 +#define MCP_TRACE_FORMAT_P1_SIZE_OFFSET 18
 +#define MCP_TRACE_FORMAT_P2_SIZE_MASK	0x00300000
 +#define MCP_TRACE_FORMAT_P2_SIZE_OFFSET 20
 +#define MCP_TRACE_FORMAT_P3_SIZE_MASK	0x00c00000
 +#define MCP_TRACE_FORMAT_P3_SIZE_OFFSET 22
 +#define MCP_TRACE_FORMAT_LEN_MASK	0xff000000
 +#define MCP_TRACE_FORMAT_LEN_OFFSET	24
 +
 +	char *format_str;
 +};
 +
 +/* MCP Trace Meta data structure */
 +struct mcp_trace_meta {
 +	u32 modules_num;
 +	char **modules;
 +	u32 formats_num;
 +	struct mcp_trace_format *formats;
 +	bool is_allocated;
 +};
 +
 +/* Debug Tools user data */
 +struct dbg_tools_user_data {
 +	struct mcp_trace_meta mcp_trace_meta;
 +	const u32 *mcp_trace_user_meta_buf;
 +};
 +
 +/******************************** Constants **********************************/
 +
 +#define MAX_NAME_LEN	16
 +
 +/***************************** Public Functions *******************************/
  
  /**
 - * qed_gft_config(): Enable and configure HW for GFT.
 + * @brief qed_dbg_user_set_bin_ptr - Sets a pointer to the binary data with
 + *	debug arrays.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @pf_id: PF on which to enable GFT.
 - * @tcp: Set profile tcp packets.
 - * @udp: Set profile udp  packet.
 - * @ipv4: Set profile ipv4 packet.
 - * @ipv6: Set profile ipv6 packet.
 - * @profile_type: Define packet same fields. Use enum gft_profile_type.
 + * @param p_hwfn - HW device data
 + * @param bin_ptr - a pointer to the binary data with debug arrays.
 + */
 +enum dbg_status qed_dbg_user_set_bin_ptr(struct qed_hwfn *p_hwfn,
 +					 const u8 * const bin_ptr);
 +
 +/**
 + * @brief qed_dbg_alloc_user_data - Allocates user debug data.
   *
 - * Return: Void.
 + * @param p_hwfn -		 HW device data
 + * @param user_data_ptr - OUT: a pointer to the allocated memory.
   */
 -void qed_gft_config(struct qed_hwfn *p_hwfn,
 -		    struct qed_ptt *p_ptt,
 -		    u16 pf_id,
 -		    bool tcp,
 -		    bool udp,
 -		    bool ipv4, bool ipv6, enum gft_profile_type profile_type);
 +enum dbg_status qed_dbg_alloc_user_data(struct qed_hwfn *p_hwfn,
 +					void **user_data_ptr);
  
  /**
 - * qed_enable_context_validation(): Enable and configure context
 - *                                  validation.
 + * @brief qed_dbg_get_status_str - Returns a string for the specified status.
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 + * @param status - a debug status code.
   *
 - * Return: Void.
 + * @return a string for the specified status
   */
 -void qed_enable_context_validation(struct qed_hwfn *p_hwfn,
 -				   struct qed_ptt *p_ptt);
 +const char *qed_dbg_get_status_str(enum dbg_status status);
  
  /**
 - * qed_calc_session_ctx_validation(): Calcualte validation byte for
 - *                                    session context.
 + * @brief qed_get_idle_chk_results_buf_size - Returns the required buffer size
 + *	for idle check results (in bytes).
   *
 - * @p_ctx_mem: Pointer to context memory.
 - * @ctx_size: Context size.
 - * @ctx_type: Context type.
 - * @cid: Context cid.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - idle check dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
   *
 - * Return: Void.
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_calc_session_ctx_validation(void *p_ctx_mem,
 -				     u16 ctx_size, u8 ctx_type, u32 cid);
 +enum dbg_status qed_get_idle_chk_results_buf_size(struct qed_hwfn *p_hwfn,
 +						  u32 *dump_buf,
 +						  u32  num_dumped_dwords,
 +						  u32 *results_buf_size);
 +/**
 + * @brief qed_print_idle_chk_results - Prints idle check results
 + *
 + * @param p_hwfn - HW device data
 + * @param dump_buf - idle check dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the idle check results.
 + * @param num_errors - OUT: number of errors found in idle check.
 + * @param num_warnings - OUT: number of warnings found in idle check.
 + *
 + * @return error if the parsing fails, ok otherwise.
 + */
 +enum dbg_status qed_print_idle_chk_results(struct qed_hwfn *p_hwfn,
 +					   u32 *dump_buf,
 +					   u32 num_dumped_dwords,
 +					   char *results_buf,
 +					   u32 *num_errors,
 +					   u32 *num_warnings);
  
  /**
 - * qed_calc_task_ctx_validation(): Calcualte validation byte for task
 - *                                 context.
 + * @brief qed_dbg_mcp_trace_set_meta_data - Sets the MCP Trace meta data.
   *
 - * @p_ctx_mem: Pointer to context memory.
 - * @ctx_size: Context size.
 - * @ctx_type: Context type.
 - * @tid: Context tid.
 + * Needed in case the MCP Trace dump doesn't contain the meta data (e.g. due to
 + * no NVRAM access).
   *
 - * Return: Void.
 + * @param data - pointer to MCP Trace meta data
 + * @param size - size of MCP Trace meta data in dwords
   */
 -void qed_calc_task_ctx_validation(void *p_ctx_mem,
 -				  u16 ctx_size, u8 ctx_type, u32 tid);
 +void qed_dbg_mcp_trace_set_meta_data(struct qed_hwfn *p_hwfn,
 +				     const u32 *meta_buf);
  
  /**
 - * qed_memset_session_ctx(): Memset session context to 0 while
 - *                            preserving validation bytes.
 + * @brief qed_get_mcp_trace_results_buf_size - Returns the required buffer size
 + *	for MCP Trace results (in bytes).
   *
 - * @p_ctx_mem: Pointer to context memory.
 - * @ctx_size: Size to initialzie.
 - * @ctx_type: Context type.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - MCP Trace dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
   *
 - * Return: Void.
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_memset_session_ctx(void *p_ctx_mem, u32 ctx_size, u8 ctx_type);
 +enum dbg_status qed_get_mcp_trace_results_buf_size(struct qed_hwfn *p_hwfn,
 +						   u32 *dump_buf,
 +						   u32 num_dumped_dwords,
 +						   u32 *results_buf_size);
  
  /**
 - * qed_memset_task_ctx(): Memset task context to 0 while preserving
 - *                        validation bytes.
 + * @brief qed_print_mcp_trace_results - Prints MCP Trace results
   *
 - * @p_ctx_mem: Pointer to context memory.
 - * @ctx_size: size to initialzie.
 - * @ctx_type: context type.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - mcp trace dump buffer, starting from the header.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the mcp trace results.
   *
 - * Return: Void.
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_memset_task_ctx(void *p_ctx_mem, u32 ctx_size, u8 ctx_type);
 +enum dbg_status qed_print_mcp_trace_results(struct qed_hwfn *p_hwfn,
 +					    u32 *dump_buf,
 +					    u32 num_dumped_dwords,
 +					    char *results_buf);
  
 -#define NUM_STORMS 6
 +/**
 + * @brief qed_print_mcp_trace_results_cont - Prints MCP Trace results, and
 + * keeps the MCP trace meta data allocated, to support continuous MCP Trace
 + * parsing. After the continuous parsing ends, mcp_trace_free_meta_data should
 + * be called to free the meta data.
 + *
 + * @param p_hwfn -	      HW device data
 + * @param dump_buf -	      mcp trace dump buffer, starting from the header.
 + * @param results_buf -	      buffer for printing the mcp trace results.
 + *
 + * @return error if the parsing fails, ok otherwise.
 + */
 +enum dbg_status qed_print_mcp_trace_results_cont(struct qed_hwfn *p_hwfn,
 +						 u32 *dump_buf,
 +						 char *results_buf);
  
  /**
 - * qed_get_protocol_type_str(): Get a string for Protocol type.
 + * @brief print_mcp_trace_line - Prints MCP Trace results for a single line
   *
 - * @protocol_type: Protocol type (using enum protocol_type).
 + * @param p_hwfn -	      HW device data
 + * @param dump_buf -	      mcp trace dump buffer, starting from the header.
 + * @param num_dumped_bytes -  number of bytes that were dumped.
 + * @param results_buf -	      buffer for printing the mcp trace results.
   *
 - * Return: String.
 + * @return error if the parsing fails, ok otherwise.
   */
 -const char *qed_get_protocol_type_str(u32 protocol_type);
 +enum dbg_status qed_print_mcp_trace_line(struct qed_hwfn *p_hwfn,
 +					 u8 *dump_buf,
 +					 u32 num_dumped_bytes,
 +					 char *results_buf);
  
  /**
 - * qed_get_ramrod_cmd_id_str(): Get a string for Ramrod command ID.
 + * @brief mcp_trace_free_meta_data - Frees the MCP Trace meta data.
 + * Should be called after continuous MCP Trace parsing.
   *
 - * @protocol_type: Protocol type (using enum protocol_type).
 - * @ramrod_cmd_id: Ramrod command ID (using per-protocol enum <protocol>_ramrod_cmd_id).
 + * @param p_hwfn - HW device data
 + */
 +void qed_mcp_trace_free_meta_data(struct qed_hwfn *p_hwfn);
 +
 +/**
 + * @brief qed_get_reg_fifo_results_buf_size - Returns the required buffer size
 + *	for reg_fifo results (in bytes).
   *
 - * Return: String.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - reg fifo dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
 + *
 + * @return error if the parsing fails, ok otherwise.
   */
 -const char *qed_get_ramrod_cmd_id_str(u32 protocol_type, u32 ramrod_cmd_id);
 +enum dbg_status qed_get_reg_fifo_results_buf_size(struct qed_hwfn *p_hwfn,
 +						  u32 *dump_buf,
 +						  u32 num_dumped_dwords,
 +						  u32 *results_buf_size);
  
  /**
 - * qed_set_rdma_error_level(): Sets the RDMA assert level.
 - *                             If the severity of the error will be
 - *                             above the level, the FW will assert.
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @assert_level: An array of assert levels for each storm.
 + * @brief qed_print_reg_fifo_results - Prints reg fifo results
   *
 - * Return: Void.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - reg fifo dump buffer, starting from the header.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the reg fifo results.
 + *
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_set_rdma_error_level(struct qed_hwfn *p_hwfn,
 -			      struct qed_ptt *p_ptt,
 -			      u8 assert_level[NUM_STORMS]);
 +enum dbg_status qed_print_reg_fifo_results(struct qed_hwfn *p_hwfn,
 +					   u32 *dump_buf,
 +					   u32 num_dumped_dwords,
 +					   char *results_buf);
 +
  /**
 - * qed_fw_overlay_mem_alloc(): Allocates and fills the FW overlay memory.
 + * @brief qed_get_igu_fifo_results_buf_size - Returns the required buffer size
 + *	for igu_fifo results (in bytes).
   *
 - * @p_hwfn: HW device data.
 - * @fw_overlay_in_buf: The input FW overlay buffer.
 - * @buf_size_in_bytes: The size of the input FW overlay buffer in bytes.
 - *		        must be aligned to dwords.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - IGU fifo dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
   *
 - * Return: A pointer to the allocated overlays memory,
 - * or NULL in case of failures.
 + * @return error if the parsing fails, ok otherwise.
   */
 -struct phys_mem_desc *
 -qed_fw_overlay_mem_alloc(struct qed_hwfn *p_hwfn,
 -			 const u32 *const fw_overlay_in_buf,
 -			 u32 buf_size_in_bytes);
 +enum dbg_status qed_get_igu_fifo_results_buf_size(struct qed_hwfn *p_hwfn,
 +						  u32 *dump_buf,
 +						  u32 num_dumped_dwords,
 +						  u32 *results_buf_size);
  
  /**
 - * qed_fw_overlay_init_ram(): Initializes the FW overlay RAM.
 + * @brief qed_print_igu_fifo_results - Prints IGU fifo results
   *
 - * @p_hwfn: HW device data.
 - * @p_ptt: Ptt window used for writing the registers.
 - * @fw_overlay_mem: the allocated FW overlay memory.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - IGU fifo dump buffer, starting from the header.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the IGU fifo results.
   *
 - * Return: Void.
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_fw_overlay_init_ram(struct qed_hwfn *p_hwfn,
 -			     struct qed_ptt *p_ptt,
 -			     struct phys_mem_desc *fw_overlay_mem);
 +enum dbg_status qed_print_igu_fifo_results(struct qed_hwfn *p_hwfn,
 +					   u32 *dump_buf,
 +					   u32 num_dumped_dwords,
 +					   char *results_buf);
  
  /**
 - * qed_fw_overlay_mem_free(): Frees the FW overlay memory.
 + * @brief qed_get_protection_override_results_buf_size - Returns the required
 + *	buffer size for protection override results (in bytes).
   *
 - * @p_hwfn: HW device data.
 - * @fw_overlay_mem: The allocated FW overlay memory to free.
 + * @param p_hwfn - HW device data
 + * @param dump_buf - protection override dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
   *
 - * Return: Void.
 + * @return error if the parsing fails, ok otherwise.
   */
 -void qed_fw_overlay_mem_free(struct qed_hwfn *p_hwfn,
 -			     struct phys_mem_desc **fw_overlay_mem);
 +enum dbg_status
 +qed_get_protection_override_results_buf_size(struct qed_hwfn *p_hwfn,
 +					     u32 *dump_buf,
 +					     u32 num_dumped_dwords,
 +					     u32 *results_buf_size);
  
 -#define PCICFG_OFFSET					0x2000
 -#define GRC_CONFIG_REG_PF_INIT_VF			0x624
 +/**
 + * @brief qed_print_protection_override_results - Prints protection override
 + *	results.
 + *
 + * @param p_hwfn - HW device data
 + * @param dump_buf - protection override dump buffer, starting from the header.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the reg fifo results.
 + *
 + * @return error if the parsing fails, ok otherwise.
 + */
 +enum dbg_status qed_print_protection_override_results(struct qed_hwfn *p_hwfn,
 +						      u32 *dump_buf,
 +						      u32 num_dumped_dwords,
 +						      char *results_buf);
  
 -/* First VF_NUM for PF is encoded in this register.
 - * The number of VFs assigned to a PF is assumed to be a multiple of 8.
 - * Software should program these bits based on Total Number of VFs programmed
 - * for each PF.
 - * Since registers from 0x000-0x7ff are spilt across functions, each PF will
 - * have the same location for the same 4 bits
 +/**
 + * @brief qed_get_fw_asserts_results_buf_size - Returns the required buffer size
 + *	for FW Asserts results (in bytes).
 + *
 + * @param p_hwfn - HW device data
 + * @param dump_buf - FW Asserts dump buffer.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf_size - OUT: required buffer size (in bytes) for the parsed
 + *	results.
 + *
 + * @return error if the parsing fails, ok otherwise.
   */
 -#define GRC_CR_PF_INIT_VF_PF_FIRST_VF_NUM_MASK		0xff
 +enum dbg_status qed_get_fw_asserts_results_buf_size(struct qed_hwfn *p_hwfn,
 +						    u32 *dump_buf,
 +						    u32 num_dumped_dwords,
 +						    u32 *results_buf_size);
  
 -/* Runtime array offsets */
 -#define DORQ_REG_PF_MAX_ICID_0_RT_OFFSET				0
 -#define DORQ_REG_PF_MAX_ICID_1_RT_OFFSET				1
 -#define DORQ_REG_PF_MAX_ICID_2_RT_OFFSET				2
 -#define DORQ_REG_PF_MAX_ICID_3_RT_OFFSET				3
 -#define DORQ_REG_PF_MAX_ICID_4_RT_OFFSET				4
 -#define DORQ_REG_PF_MAX_ICID_5_RT_OFFSET				5
 -#define DORQ_REG_PF_MAX_ICID_6_RT_OFFSET				6
 -#define DORQ_REG_PF_MAX_ICID_7_RT_OFFSET				7
 -#define DORQ_REG_VF_MAX_ICID_0_RT_OFFSET				8
 -#define DORQ_REG_VF_MAX_ICID_1_RT_OFFSET				9
 -#define DORQ_REG_VF_MAX_ICID_2_RT_OFFSET				10
 -#define DORQ_REG_VF_MAX_ICID_3_RT_OFFSET				11
 -#define DORQ_REG_VF_MAX_ICID_4_RT_OFFSET				12
 -#define DORQ_REG_VF_MAX_ICID_5_RT_OFFSET				13
 -#define DORQ_REG_VF_MAX_ICID_6_RT_OFFSET				14
 -#define DORQ_REG_VF_MAX_ICID_7_RT_OFFSET				15
 -#define DORQ_REG_VF_ICID_BIT_SHIFT_NORM_RT_OFFSET			16
 -#define DORQ_REG_PF_WAKE_ALL_RT_OFFSET					17
 -#define DORQ_REG_TAG1_ETHERTYPE_RT_OFFSET				18
 -#define IGU_REG_PF_CONFIGURATION_RT_OFFSET				19
 -#define IGU_REG_VF_CONFIGURATION_RT_OFFSET				20
 -#define IGU_REG_ATTN_MSG_ADDR_L_RT_OFFSET				21
 -#define IGU_REG_ATTN_MSG_ADDR_H_RT_OFFSET				22
 -#define IGU_REG_LEADING_EDGE_LATCH_RT_OFFSET				23
 -#define IGU_REG_TRAILING_EDGE_LATCH_RT_OFFSET				24
 -#define CAU_REG_CQE_AGG_UNIT_SIZE_RT_OFFSET				25
 -#define CAU_REG_SB_VAR_MEMORY_RT_OFFSET					26
 -#define CAU_REG_SB_VAR_MEMORY_RT_SIZE					736
 -#define CAU_REG_SB_ADDR_MEMORY_RT_OFFSET				762
 -#define CAU_REG_SB_ADDR_MEMORY_RT_SIZE					736
 -#define CAU_REG_PI_MEMORY_RT_OFFSET					1498
 -#define CAU_REG_PI_MEMORY_RT_SIZE					4416
 -#define PRS_REG_SEARCH_RESP_INITIATOR_TYPE_RT_OFFSET			5914
 -#define PRS_REG_TASK_ID_MAX_INITIATOR_PF_RT_OFFSET			5915
 -#define PRS_REG_TASK_ID_MAX_INITIATOR_VF_RT_OFFSET			5916
 -#define PRS_REG_TASK_ID_MAX_TARGET_PF_RT_OFFSET				5917
 -#define PRS_REG_TASK_ID_MAX_TARGET_VF_RT_OFFSET				5918
 -#define PRS_REG_SEARCH_TCP_RT_OFFSET					5919
 -#define PRS_REG_SEARCH_FCOE_RT_OFFSET					5920
 -#define PRS_REG_SEARCH_ROCE_RT_OFFSET					5921
 -#define PRS_REG_ROCE_DEST_QP_MAX_VF_RT_OFFSET				5922
 -#define PRS_REG_ROCE_DEST_QP_MAX_PF_RT_OFFSET				5923
 -#define PRS_REG_SEARCH_OPENFLOW_RT_OFFSET				5924
 -#define PRS_REG_SEARCH_NON_IP_AS_OPENFLOW_RT_OFFSET			5925
 -#define PRS_REG_OPENFLOW_SUPPORT_ONLY_KNOWN_OVER_IP_RT_OFFSET		5926
 -#define PRS_REG_OPENFLOW_SEARCH_KEY_MASK_RT_OFFSET			5927
 -#define PRS_REG_TAG_ETHERTYPE_0_RT_OFFSET				5928
 -#define PRS_REG_LIGHT_L2_ETHERTYPE_EN_RT_OFFSET				5929
 -#define SRC_REG_FIRSTFREE_RT_OFFSET					5930
 -#define SRC_REG_FIRSTFREE_RT_SIZE					2
 -#define SRC_REG_LASTFREE_RT_OFFSET					5932
 -#define SRC_REG_LASTFREE_RT_SIZE					2
 -#define SRC_REG_COUNTFREE_RT_OFFSET					5934
 -#define SRC_REG_NUMBER_HASH_BITS_RT_OFFSET				5935
 -#define PSWRQ2_REG_CDUT_P_SIZE_RT_OFFSET				5936
 -#define PSWRQ2_REG_CDUC_P_SIZE_RT_OFFSET				5937
 -#define PSWRQ2_REG_TM_P_SIZE_RT_OFFSET					5938
 -#define PSWRQ2_REG_QM_P_SIZE_RT_OFFSET					5939
 -#define PSWRQ2_REG_SRC_P_SIZE_RT_OFFSET					5940
 -#define PSWRQ2_REG_TSDM_P_SIZE_RT_OFFSET				5941
 -#define PSWRQ2_REG_TM_FIRST_ILT_RT_OFFSET				5942
 -#define PSWRQ2_REG_TM_LAST_ILT_RT_OFFSET				5943
 -#define PSWRQ2_REG_QM_FIRST_ILT_RT_OFFSET				5944
 -#define PSWRQ2_REG_QM_LAST_ILT_RT_OFFSET				5945
 -#define PSWRQ2_REG_SRC_FIRST_ILT_RT_OFFSET				5946
 -#define PSWRQ2_REG_SRC_LAST_ILT_RT_OFFSET				5947
 -#define PSWRQ2_REG_CDUC_FIRST_ILT_RT_OFFSET				5948
 -#define PSWRQ2_REG_CDUC_LAST_ILT_RT_OFFSET				5949
 -#define PSWRQ2_REG_CDUT_FIRST_ILT_RT_OFFSET				5950
 -#define PSWRQ2_REG_CDUT_LAST_ILT_RT_OFFSET				5951
 -#define PSWRQ2_REG_TSDM_FIRST_ILT_RT_OFFSET				5952
 -#define PSWRQ2_REG_TSDM_LAST_ILT_RT_OFFSET				5953
 -#define PSWRQ2_REG_TM_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5954
 -#define PSWRQ2_REG_CDUT_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5955
 -#define PSWRQ2_REG_CDUC_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5956
 -#define PSWRQ2_REG_TM_VF_BLOCKS_RT_OFFSET				5957
 -#define PSWRQ2_REG_CDUT_VF_BLOCKS_RT_OFFSET				5958
 -#define PSWRQ2_REG_CDUC_VF_BLOCKS_RT_OFFSET				5959
 -#define PSWRQ2_REG_TM_BLOCKS_FACTOR_RT_OFFSET				5960
 -#define PSWRQ2_REG_CDUT_BLOCKS_FACTOR_RT_OFFSET				5961
 -#define PSWRQ2_REG_CDUC_BLOCKS_FACTOR_RT_OFFSET				5962
 -#define PSWRQ2_REG_VF_BASE_RT_OFFSET					5963
 -#define PSWRQ2_REG_VF_LAST_ILT_RT_OFFSET				5964
 -#define PSWRQ2_REG_DRAM_ALIGN_WR_RT_OFFSET				5965
 -#define PSWRQ2_REG_DRAM_ALIGN_RD_RT_OFFSET				5966
 -#define PSWRQ2_REG_ILT_MEMORY_RT_OFFSET					5967
 -#define PSWRQ2_REG_ILT_MEMORY_RT_SIZE					22000
 -#define PGLUE_REG_B_VF_BASE_RT_OFFSET					27967
 -#define PGLUE_REG_B_MSDM_OFFSET_MASK_B_RT_OFFSET			27968
 -#define PGLUE_REG_B_MSDM_VF_SHIFT_B_RT_OFFSET				27969
 -#define PGLUE_REG_B_CACHE_LINE_SIZE_RT_OFFSET				27970
 -#define PGLUE_REG_B_PF_BAR0_SIZE_RT_OFFSET				27971
 -#define PGLUE_REG_B_PF_BAR1_SIZE_RT_OFFSET				27972
 -#define PGLUE_REG_B_VF_BAR1_SIZE_RT_OFFSET				27973
 -#define TM_REG_VF_ENABLE_CONN_RT_OFFSET					27974
 -#define TM_REG_PF_ENABLE_CONN_RT_OFFSET					27975
 -#define TM_REG_PF_ENABLE_TASK_RT_OFFSET					27976
 -#define TM_REG_GROUP_SIZE_RESOLUTION_CONN_RT_OFFSET			27977
 -#define TM_REG_GROUP_SIZE_RESOLUTION_TASK_RT_OFFSET			27978
 -#define TM_REG_CONFIG_CONN_MEM_RT_OFFSET				27979
 -#define TM_REG_CONFIG_CONN_MEM_RT_SIZE					416
 -#define TM_REG_CONFIG_TASK_MEM_RT_OFFSET				28395
 -#define TM_REG_CONFIG_TASK_MEM_RT_SIZE					512
 -#define QM_REG_MAXPQSIZE_0_RT_OFFSET					28907
 -#define QM_REG_MAXPQSIZE_1_RT_OFFSET					28908
 -#define QM_REG_MAXPQSIZE_2_RT_OFFSET					28909
 -#define QM_REG_MAXPQSIZETXSEL_0_RT_OFFSET				28910
 -#define QM_REG_MAXPQSIZETXSEL_1_RT_OFFSET				28911
 -#define QM_REG_MAXPQSIZETXSEL_2_RT_OFFSET				28912
 -#define QM_REG_MAXPQSIZETXSEL_3_RT_OFFSET				28913
 -#define QM_REG_MAXPQSIZETXSEL_4_RT_OFFSET				28914
 -#define QM_REG_MAXPQSIZETXSEL_5_RT_OFFSET				28915
 -#define QM_REG_MAXPQSIZETXSEL_6_RT_OFFSET				28916
 -#define QM_REG_MAXPQSIZETXSEL_7_RT_OFFSET				28917
 -#define QM_REG_MAXPQSIZETXSEL_8_RT_OFFSET				28918
 -#define QM_REG_MAXPQSIZETXSEL_9_RT_OFFSET				28919
 -#define QM_REG_MAXPQSIZETXSEL_10_RT_OFFSET				28920
 -#define QM_REG_MAXPQSIZETXSEL_11_RT_OFFSET				28921
 -#define QM_REG_MAXPQSIZETXSEL_12_RT_OFFSET				28922
 -#define QM_REG_MAXPQSIZETXSEL_13_RT_OFFSET				28923
 -#define QM_REG_MAXPQSIZETXSEL_14_RT_OFFSET				28924
 -#define QM_REG_MAXPQSIZETXSEL_15_RT_OFFSET				28925
 -#define QM_REG_MAXPQSIZETXSEL_16_RT_OFFSET				28926
 -#define QM_REG_MAXPQSIZETXSEL_17_RT_OFFSET				28927
 -#define QM_REG_MAXPQSIZETXSEL_18_RT_OFFSET				28928
 -#define QM_REG_MAXPQSIZETXSEL_19_RT_OFFSET				28929
 -#define QM_REG_MAXPQSIZETXSEL_20_RT_OFFSET				28930
 -#define QM_REG_MAXPQSIZETXSEL_21_RT_OFFSET				28931
 -#define QM_REG_MAXPQSIZETXSEL_22_RT_OFFSET				28932
 -#define QM_REG_MAXPQSIZETXSEL_23_RT_OFFSET				28933
 -#define QM_REG_MAXPQSIZETXSEL_24_RT_OFFSET				28934
 -#define QM_REG_MAXPQSIZETXSEL_25_RT_OFFSET				28935
 -#define QM_REG_MAXPQSIZETXSEL_26_RT_OFFSET				28936
 -#define QM_REG_MAXPQSIZETXSEL_27_RT_OFFSET				28937
 -#define QM_REG_MAXPQSIZETXSEL_28_RT_OFFSET				28938
 -#define QM_REG_MAXPQSIZETXSEL_29_RT_OFFSET				28939
 -#define QM_REG_MAXPQSIZETXSEL_30_RT_OFFSET				28940
 -#define QM_REG_MAXPQSIZETXSEL_31_RT_OFFSET				28941
 -#define QM_REG_MAXPQSIZETXSEL_32_RT_OFFSET				28942
 -#define QM_REG_MAXPQSIZETXSEL_33_RT_OFFSET				28943
 -#define QM_REG_MAXPQSIZETXSEL_34_RT_OFFSET				28944
 -#define QM_REG_MAXPQSIZETXSEL_35_RT_OFFSET				28945
 -#define QM_REG_MAXPQSIZETXSEL_36_RT_OFFSET				28946
 -#define QM_REG_MAXPQSIZETXSEL_37_RT_OFFSET				28947
 -#define QM_REG_MAXPQSIZETXSEL_38_RT_OFFSET				28948
 -#define QM_REG_MAXPQSIZETXSEL_39_RT_OFFSET				28949
 -#define QM_REG_MAXPQSIZETXSEL_40_RT_OFFSET				28950
 -#define QM_REG_MAXPQSIZETXSEL_41_RT_OFFSET				28951
 -#define QM_REG_MAXPQSIZETXSEL_42_RT_OFFSET				28952
 -#define QM_REG_MAXPQSIZETXSEL_43_RT_OFFSET				28953
 -#define QM_REG_MAXPQSIZETXSEL_44_RT_OFFSET				28954
 -#define QM_REG_MAXPQSIZETXSEL_45_RT_OFFSET				28955
 -#define QM_REG_MAXPQSIZETXSEL_46_RT_OFFSET				28956
 -#define QM_REG_MAXPQSIZETXSEL_47_RT_OFFSET				28957
 -#define QM_REG_MAXPQSIZETXSEL_48_RT_OFFSET				28958
 -#define QM_REG_MAXPQSIZETXSEL_49_RT_OFFSET				28959
 -#define QM_REG_MAXPQSIZETXSEL_50_RT_OFFSET				28960
 -#define QM_REG_MAXPQSIZETXSEL_51_RT_OFFSET				28961
 -#define QM_REG_MAXPQSIZETXSEL_52_RT_OFFSET				28962
 -#define QM_REG_MAXPQSIZETXSEL_53_RT_OFFSET				28963
 -#define QM_REG_MAXPQSIZETXSEL_54_RT_OFFSET				28964
 -#define QM_REG_MAXPQSIZETXSEL_55_RT_OFFSET				28965
 -#define QM_REG_MAXPQSIZETXSEL_56_RT_OFFSET				28966
 -#define QM_REG_MAXPQSIZETXSEL_57_RT_OFFSET				28967
 -#define QM_REG_MAXPQSIZETXSEL_58_RT_OFFSET				28968
 -#define QM_REG_MAXPQSIZETXSEL_59_RT_OFFSET				28969
 -#define QM_REG_MAXPQSIZETXSEL_60_RT_OFFSET				28970
 -#define QM_REG_MAXPQSIZETXSEL_61_RT_OFFSET				28971
 -#define QM_REG_MAXPQSIZETXSEL_62_RT_OFFSET				28972
 -#define QM_REG_MAXPQSIZETXSEL_63_RT_OFFSET				28973
 -#define QM_REG_BASEADDROTHERPQ_RT_OFFSET				28974
 -#define QM_REG_BASEADDROTHERPQ_RT_SIZE					128
 -#define QM_REG_PTRTBLOTHER_RT_OFFSET					29102
 -#define QM_REG_PTRTBLOTHER_RT_SIZE					256
 -#define QM_REG_VOQCRDLINE_RT_OFFSET					29358
 -#define QM_REG_VOQCRDLINE_RT_SIZE					20
 -#define QM_REG_VOQINITCRDLINE_RT_OFFSET					29378
 -#define QM_REG_VOQINITCRDLINE_RT_SIZE					20
 -#define QM_REG_AFULLQMBYPTHRPFWFQ_RT_OFFSET				29398
 -#define QM_REG_AFULLQMBYPTHRVPWFQ_RT_OFFSET				29399
 -#define QM_REG_AFULLQMBYPTHRPFRL_RT_OFFSET				29400
 -#define QM_REG_AFULLQMBYPTHRGLBLRL_RT_OFFSET				29401
 -#define QM_REG_AFULLOPRTNSTCCRDMASK_RT_OFFSET				29402
 -#define QM_REG_WRROTHERPQGRP_0_RT_OFFSET				29403
 -#define QM_REG_WRROTHERPQGRP_1_RT_OFFSET				29404
 -#define QM_REG_WRROTHERPQGRP_2_RT_OFFSET				29405
 -#define QM_REG_WRROTHERPQGRP_3_RT_OFFSET				29406
 -#define QM_REG_WRROTHERPQGRP_4_RT_OFFSET				29407
 -#define QM_REG_WRROTHERPQGRP_5_RT_OFFSET				29408
 -#define QM_REG_WRROTHERPQGRP_6_RT_OFFSET				29409
 -#define QM_REG_WRROTHERPQGRP_7_RT_OFFSET				29410
 -#define QM_REG_WRROTHERPQGRP_8_RT_OFFSET				29411
 -#define QM_REG_WRROTHERPQGRP_9_RT_OFFSET				29412
 -#define QM_REG_WRROTHERPQGRP_10_RT_OFFSET				29413
 -#define QM_REG_WRROTHERPQGRP_11_RT_OFFSET				29414
 -#define QM_REG_WRROTHERPQGRP_12_RT_OFFSET				29415
 -#define QM_REG_WRROTHERPQGRP_13_RT_OFFSET				29416
 -#define QM_REG_WRROTHERPQGRP_14_RT_OFFSET				29417
 -#define QM_REG_WRROTHERPQGRP_15_RT_OFFSET				29418
 -#define QM_REG_WRROTHERGRPWEIGHT_0_RT_OFFSET				29419
 -#define QM_REG_WRROTHERGRPWEIGHT_1_RT_OFFSET				29420
 -#define QM_REG_WRROTHERGRPWEIGHT_2_RT_OFFSET				29421
 -#define QM_REG_WRROTHERGRPWEIGHT_3_RT_OFFSET				29422
 -#define QM_REG_WRRTXGRPWEIGHT_0_RT_OFFSET				29423
 -#define QM_REG_WRRTXGRPWEIGHT_1_RT_OFFSET				29424
 -#define QM_REG_PQTX2PF_0_RT_OFFSET					29425
 -#define QM_REG_PQTX2PF_1_RT_OFFSET					29426
 -#define QM_REG_PQTX2PF_2_RT_OFFSET					29427
 -#define QM_REG_PQTX2PF_3_RT_OFFSET					29428
 -#define QM_REG_PQTX2PF_4_RT_OFFSET					29429
 -#define QM_REG_PQTX2PF_5_RT_OFFSET					29430
 -#define QM_REG_PQTX2PF_6_RT_OFFSET					29431
 -#define QM_REG_PQTX2PF_7_RT_OFFSET					29432
 -#define QM_REG_PQTX2PF_8_RT_OFFSET					29433
 -#define QM_REG_PQTX2PF_9_RT_OFFSET					29434
 -#define QM_REG_PQTX2PF_10_RT_OFFSET					29435
 -#define QM_REG_PQTX2PF_11_RT_OFFSET					29436
 -#define QM_REG_PQTX2PF_12_RT_OFFSET					29437
 -#define QM_REG_PQTX2PF_13_RT_OFFSET					29438
 -#define QM_REG_PQTX2PF_14_RT_OFFSET					29439
 -#define QM_REG_PQTX2PF_15_RT_OFFSET					29440
 -#define QM_REG_PQTX2PF_16_RT_OFFSET					29441
 -#define QM_REG_PQTX2PF_17_RT_OFFSET					29442
 -#define QM_REG_PQTX2PF_18_RT_OFFSET					29443
 -#define QM_REG_PQTX2PF_19_RT_OFFSET					29444
 -#define QM_REG_PQTX2PF_20_RT_OFFSET					29445
 -#define QM_REG_PQTX2PF_21_RT_OFFSET					29446
 -#define QM_REG_PQTX2PF_22_RT_OFFSET					29447
 -#define QM_REG_PQTX2PF_23_RT_OFFSET					29448
 -#define QM_REG_PQTX2PF_24_RT_OFFSET					29449
 -#define QM_REG_PQTX2PF_25_RT_OFFSET					29450
 -#define QM_REG_PQTX2PF_26_RT_OFFSET					29451
 -#define QM_REG_PQTX2PF_27_RT_OFFSET					29452
 -#define QM_REG_PQTX2PF_28_RT_OFFSET					29453
 -#define QM_REG_PQTX2PF_29_RT_OFFSET					29454
 -#define QM_REG_PQTX2PF_30_RT_OFFSET					29455
 -#define QM_REG_PQTX2PF_31_RT_OFFSET					29456
 -#define QM_REG_PQTX2PF_32_RT_OFFSET					29457
 -#define QM_REG_PQTX2PF_33_RT_OFFSET					29458
 -#define QM_REG_PQTX2PF_34_RT_OFFSET					29459
 -#define QM_REG_PQTX2PF_35_RT_OFFSET					29460
 -#define QM_REG_PQTX2PF_36_RT_OFFSET					29461
 -#define QM_REG_PQTX2PF_37_RT_OFFSET					29462
 -#define QM_REG_PQTX2PF_38_RT_OFFSET					29463
 -#define QM_REG_PQTX2PF_39_RT_OFFSET					29464
 -#define QM_REG_PQTX2PF_40_RT_OFFSET					29465
 -#define QM_REG_PQTX2PF_41_RT_OFFSET					29466
 -#define QM_REG_PQTX2PF_42_RT_OFFSET					29467
 -#define QM_REG_PQTX2PF_43_RT_OFFSET					29468
 -#define QM_REG_PQTX2PF_44_RT_OFFSET					29469
 -#define QM_REG_PQTX2PF_45_RT_OFFSET					29470
 -#define QM_REG_PQTX2PF_46_RT_OFFSET					29471
 -#define QM_REG_PQTX2PF_47_RT_OFFSET					29472
 -#define QM_REG_PQTX2PF_48_RT_OFFSET					29473
 -#define QM_REG_PQTX2PF_49_RT_OFFSET					29474
 -#define QM_REG_PQTX2PF_50_RT_OFFSET					29475
 -#define QM_REG_PQTX2PF_51_RT_OFFSET					29476
 -#define QM_REG_PQTX2PF_52_RT_OFFSET					29477
 -#define QM_REG_PQTX2PF_53_RT_OFFSET					29478
 -#define QM_REG_PQTX2PF_54_RT_OFFSET					29479
 -#define QM_REG_PQTX2PF_55_RT_OFFSET					29480
 -#define QM_REG_PQTX2PF_56_RT_OFFSET					29481
 -#define QM_REG_PQTX2PF_57_RT_OFFSET					29482
 -#define QM_REG_PQTX2PF_58_RT_OFFSET					29483
 -#define QM_REG_PQTX2PF_59_RT_OFFSET					29484
 -#define QM_REG_PQTX2PF_60_RT_OFFSET					29485
 -#define QM_REG_PQTX2PF_61_RT_OFFSET					29486
 -#define QM_REG_PQTX2PF_62_RT_OFFSET					29487
 -#define QM_REG_PQTX2PF_63_RT_OFFSET					29488
 -#define QM_REG_PQOTHER2PF_0_RT_OFFSET					29489
 -#define QM_REG_PQOTHER2PF_1_RT_OFFSET					29490
 -#define QM_REG_PQOTHER2PF_2_RT_OFFSET					29491
 -#define QM_REG_PQOTHER2PF_3_RT_OFFSET					29492
 -#define QM_REG_PQOTHER2PF_4_RT_OFFSET					29493
 -#define QM_REG_PQOTHER2PF_5_RT_OFFSET					29494
 -#define QM_REG_PQOTHER2PF_6_RT_OFFSET					29495
 -#define QM_REG_PQOTHER2PF_7_RT_OFFSET					29496
 -#define QM_REG_PQOTHER2PF_8_RT_OFFSET					29497
 -#define QM_REG_PQOTHER2PF_9_RT_OFFSET					29498
 -#define QM_REG_PQOTHER2PF_10_RT_OFFSET					29499
 -#define QM_REG_PQOTHER2PF_11_RT_OFFSET					29500
 -#define QM_REG_PQOTHER2PF_12_RT_OFFSET					29501
 -#define QM_REG_PQOTHER2PF_13_RT_OFFSET					29502
 -#define QM_REG_PQOTHER2PF_14_RT_OFFSET					29503
 -#define QM_REG_PQOTHER2PF_15_RT_OFFSET					29504
 -#define QM_REG_RLGLBLPERIOD_0_RT_OFFSET					29505
 -#define QM_REG_RLGLBLPERIOD_1_RT_OFFSET					29506
 -#define QM_REG_RLGLBLPERIODTIMER_0_RT_OFFSET				29507
 -#define QM_REG_RLGLBLPERIODTIMER_1_RT_OFFSET				29508
 -#define QM_REG_RLGLBLPERIODSEL_0_RT_OFFSET				29509
 -#define QM_REG_RLGLBLPERIODSEL_1_RT_OFFSET				29510
 -#define QM_REG_RLGLBLPERIODSEL_2_RT_OFFSET				29511
 -#define QM_REG_RLGLBLPERIODSEL_3_RT_OFFSET				29512
 -#define QM_REG_RLGLBLPERIODSEL_4_RT_OFFSET				29513
 -#define QM_REG_RLGLBLPERIODSEL_5_RT_OFFSET				29514
 -#define QM_REG_RLGLBLPERIODSEL_6_RT_OFFSET				29515
 -#define QM_REG_RLGLBLPERIODSEL_7_RT_OFFSET				29516
 -#define QM_REG_RLGLBLINCVAL_RT_OFFSET					29517
 -#define QM_REG_RLGLBLINCVAL_RT_SIZE					256
 -#define QM_REG_RLGLBLUPPERBOUND_RT_OFFSET				29773
 -#define QM_REG_RLGLBLUPPERBOUND_RT_SIZE					256
 -#define QM_REG_RLGLBLCRD_RT_OFFSET					30029
 -#define QM_REG_RLGLBLCRD_RT_SIZE					256
 -#define QM_REG_RLGLBLENABLE_RT_OFFSET					30285
 -#define QM_REG_RLPFPERIOD_RT_OFFSET					30286
 -#define QM_REG_RLPFPERIODTIMER_RT_OFFSET				30287
 -#define QM_REG_RLPFINCVAL_RT_OFFSET					30288
 -#define QM_REG_RLPFINCVAL_RT_SIZE					16
 -#define QM_REG_RLPFUPPERBOUND_RT_OFFSET					30304
 -#define QM_REG_RLPFUPPERBOUND_RT_SIZE					16
 -#define QM_REG_RLPFCRD_RT_OFFSET					30320
 -#define QM_REG_RLPFCRD_RT_SIZE						16
 -#define QM_REG_RLPFENABLE_RT_OFFSET					30336
 -#define QM_REG_RLPFVOQENABLE_RT_OFFSET					30337
 -#define QM_REG_WFQPFWEIGHT_RT_OFFSET					30338
 -#define QM_REG_WFQPFWEIGHT_RT_SIZE					16
 -#define QM_REG_WFQPFUPPERBOUND_RT_OFFSET				30354
 -#define QM_REG_WFQPFUPPERBOUND_RT_SIZE					16
 -#define QM_REG_WFQPFCRD_RT_OFFSET					30370
 -#define QM_REG_WFQPFCRD_RT_SIZE						160
 -#define QM_REG_WFQPFENABLE_RT_OFFSET					30530
 -#define QM_REG_WFQVPENABLE_RT_OFFSET					30531
 -#define QM_REG_BASEADDRTXPQ_RT_OFFSET					30532
 -#define QM_REG_BASEADDRTXPQ_RT_SIZE					512
 -#define QM_REG_TXPQMAP_RT_OFFSET					31044
 -#define QM_REG_TXPQMAP_RT_SIZE						512
 -#define QM_REG_WFQVPWEIGHT_RT_OFFSET					31556
 -#define QM_REG_WFQVPWEIGHT_RT_SIZE					512
 -#define QM_REG_WFQVPUPPERBOUND_RT_OFFSET				32068
 -#define QM_REG_WFQVPUPPERBOUND_RT_SIZE					512
 -#define QM_REG_WFQVPCRD_RT_OFFSET					32580
 -#define QM_REG_WFQVPCRD_RT_SIZE						512
 -#define QM_REG_WFQVPMAP_RT_OFFSET					33092
 -#define QM_REG_WFQVPMAP_RT_SIZE						512
 -#define QM_REG_PTRTBLTX_RT_OFFSET					33604
 -#define QM_REG_PTRTBLTX_RT_SIZE						1024
 -#define QM_REG_WFQPFCRD_MSB_RT_OFFSET					34628
 -#define QM_REG_WFQPFCRD_MSB_RT_SIZE					160
 -#define NIG_REG_TAG_ETHERTYPE_0_RT_OFFSET				34788
 -#define NIG_REG_BRB_GATE_DNTFWD_PORT_RT_OFFSET				34789
 -#define NIG_REG_OUTER_TAG_VALUE_LIST0_RT_OFFSET				34790
 -#define NIG_REG_OUTER_TAG_VALUE_LIST1_RT_OFFSET				34791
 -#define NIG_REG_OUTER_TAG_VALUE_LIST2_RT_OFFSET				34792
 -#define NIG_REG_OUTER_TAG_VALUE_LIST3_RT_OFFSET				34793
 -#define NIG_REG_LLH_FUNC_TAGMAC_CLS_TYPE_RT_OFFSET			34794
 -#define NIG_REG_LLH_FUNC_TAG_EN_RT_OFFSET				34795
 -#define NIG_REG_LLH_FUNC_TAG_EN_RT_SIZE					4
 -#define NIG_REG_LLH_FUNC_TAG_VALUE_RT_OFFSET				34799
 -#define NIG_REG_LLH_FUNC_TAG_VALUE_RT_SIZE				4
 -#define NIG_REG_LLH_FUNC_FILTER_VALUE_RT_OFFSET				34803
 -#define NIG_REG_LLH_FUNC_FILTER_VALUE_RT_SIZE				32
 -#define NIG_REG_LLH_FUNC_FILTER_EN_RT_OFFSET				34835
 -#define NIG_REG_LLH_FUNC_FILTER_EN_RT_SIZE				16
 -#define NIG_REG_LLH_FUNC_FILTER_MODE_RT_OFFSET				34851
 -#define NIG_REG_LLH_FUNC_FILTER_MODE_RT_SIZE				16
 -#define NIG_REG_LLH_FUNC_FILTER_PROTOCOL_TYPE_RT_OFFSET			34867
 -#define NIG_REG_LLH_FUNC_FILTER_PROTOCOL_TYPE_RT_SIZE			16
 -#define NIG_REG_LLH_FUNC_FILTER_HDR_SEL_RT_OFFSET			34883
 -#define NIG_REG_LLH_FUNC_FILTER_HDR_SEL_RT_SIZE				16
 -#define NIG_REG_TX_EDPM_CTRL_RT_OFFSET					34899
 -#define NIG_REG_PPF_TO_ENGINE_SEL_RT_OFFSET				34900
 -#define NIG_REG_PPF_TO_ENGINE_SEL_RT_SIZE				8
 -#define CDU_REG_CID_ADDR_PARAMS_RT_OFFSET				34908
 -#define CDU_REG_SEGMENT0_PARAMS_RT_OFFSET				34909
 -#define CDU_REG_SEGMENT1_PARAMS_RT_OFFSET				34910
 -#define CDU_REG_PF_SEG0_TYPE_OFFSET_RT_OFFSET				34911
 -#define CDU_REG_PF_SEG1_TYPE_OFFSET_RT_OFFSET				34912
 -#define CDU_REG_PF_SEG2_TYPE_OFFSET_RT_OFFSET				34913
 -#define CDU_REG_PF_SEG3_TYPE_OFFSET_RT_OFFSET				34914
 -#define CDU_REG_PF_FL_SEG0_TYPE_OFFSET_RT_OFFSET			34915
 -#define CDU_REG_PF_FL_SEG1_TYPE_OFFSET_RT_OFFSET			34916
 -#define CDU_REG_PF_FL_SEG2_TYPE_OFFSET_RT_OFFSET			34917
 -#define CDU_REG_PF_FL_SEG3_TYPE_OFFSET_RT_OFFSET			34918
 -#define CDU_REG_VF_SEG_TYPE_OFFSET_RT_OFFSET				34919
 -#define CDU_REG_VF_FL_SEG_TYPE_OFFSET_RT_OFFSET				34920
 -#define PBF_REG_TAG_ETHERTYPE_0_RT_OFFSET				34921
 -#define PBF_REG_BTB_SHARED_AREA_SIZE_RT_OFFSET				34922
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ0_RT_OFFSET			34923
 -#define PBF_REG_BTB_GUARANTEED_VOQ0_RT_OFFSET				34924
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ0_RT_OFFSET			34925
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ1_RT_OFFSET			34926
 -#define PBF_REG_BTB_GUARANTEED_VOQ1_RT_OFFSET				34927
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ1_RT_OFFSET			34928
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ2_RT_OFFSET			34929
 -#define PBF_REG_BTB_GUARANTEED_VOQ2_RT_OFFSET				34930
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ2_RT_OFFSET			34931
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ3_RT_OFFSET			34932
 -#define PBF_REG_BTB_GUARANTEED_VOQ3_RT_OFFSET				34933
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ3_RT_OFFSET			34934
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ4_RT_OFFSET			34935
 -#define PBF_REG_BTB_GUARANTEED_VOQ4_RT_OFFSET				34936
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ4_RT_OFFSET			34937
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ5_RT_OFFSET			34938
 -#define PBF_REG_BTB_GUARANTEED_VOQ5_RT_OFFSET				34939
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ5_RT_OFFSET			34940
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ6_RT_OFFSET			34941
 -#define PBF_REG_BTB_GUARANTEED_VOQ6_RT_OFFSET				34942
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ6_RT_OFFSET			34943
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ7_RT_OFFSET			34944
 -#define PBF_REG_BTB_GUARANTEED_VOQ7_RT_OFFSET				34945
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ7_RT_OFFSET			34946
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ8_RT_OFFSET			34947
 -#define PBF_REG_BTB_GUARANTEED_VOQ8_RT_OFFSET				34948
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ8_RT_OFFSET			34949
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ9_RT_OFFSET			34950
 -#define PBF_REG_BTB_GUARANTEED_VOQ9_RT_OFFSET				34951
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ9_RT_OFFSET			34952
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ10_RT_OFFSET			34953
 -#define PBF_REG_BTB_GUARANTEED_VOQ10_RT_OFFSET				34954
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ10_RT_OFFSET			34955
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ11_RT_OFFSET			34956
 -#define PBF_REG_BTB_GUARANTEED_VOQ11_RT_OFFSET				34957
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ11_RT_OFFSET			34958
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ12_RT_OFFSET			34959
 -#define PBF_REG_BTB_GUARANTEED_VOQ12_RT_OFFSET				34960
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ12_RT_OFFSET			34961
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ13_RT_OFFSET			34962
 -#define PBF_REG_BTB_GUARANTEED_VOQ13_RT_OFFSET				34963
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ13_RT_OFFSET			34964
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ14_RT_OFFSET			34965
 -#define PBF_REG_BTB_GUARANTEED_VOQ14_RT_OFFSET				34966
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ14_RT_OFFSET			34967
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ15_RT_OFFSET			34968
 -#define PBF_REG_BTB_GUARANTEED_VOQ15_RT_OFFSET				34969
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ15_RT_OFFSET			34970
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ16_RT_OFFSET			34971
 -#define PBF_REG_BTB_GUARANTEED_VOQ16_RT_OFFSET				34972
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ16_RT_OFFSET			34973
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ17_RT_OFFSET			34974
 -#define PBF_REG_BTB_GUARANTEED_VOQ17_RT_OFFSET				34975
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ17_RT_OFFSET			34976
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ18_RT_OFFSET			34977
 -#define PBF_REG_BTB_GUARANTEED_VOQ18_RT_OFFSET				34978
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ18_RT_OFFSET			34979
 -#define PBF_REG_YCMD_QS_NUM_LINES_VOQ19_RT_OFFSET			34980
 -#define PBF_REG_BTB_GUARANTEED_VOQ19_RT_OFFSET				34981
 -#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ19_RT_OFFSET			34982
 -#define XCM_REG_CON_PHY_Q3_RT_OFFSET					34983
 -
 -#define RUNTIME_ARRAY_SIZE						34984
 +/**
 + * @brief qed_print_fw_asserts_results - Prints FW Asserts results
 + *
 + * @param p_hwfn - HW device data
 + * @param dump_buf - FW Asserts dump buffer, starting from the header.
 + * @param num_dumped_dwords - number of dwords that were dumped.
 + * @param results_buf - buffer for printing the FW Asserts results.
 + *
 + * @return error if the parsing fails, ok otherwise.
 + */
 +enum dbg_status qed_print_fw_asserts_results(struct qed_hwfn *p_hwfn,
 +					     u32 *dump_buf,
 +					     u32 num_dumped_dwords,
 +					     char *results_buf);
  
 -/* Init Callbacks */
 -#define DMAE_READY_CB	0
 +/**
 + * @brief qed_dbg_parse_attn - Parses and prints attention registers values in
 + * the specified results struct.
 + *
 + * @param p_hwfn -  HW device data
 + * @param results - Pointer to the attention read results
 + *
 + * @return error if one of the following holds:
 + *	- the version wasn't set
 + * Otherwise, returns ok.
 + */
 +enum dbg_status qed_dbg_parse_attn(struct qed_hwfn *p_hwfn,
 +				   struct dbg_attn_block_result *results);
  
 -/* The eth storm context for the Tstorm */
 -struct tstorm_eth_conn_st_ctx {
 -	__le32 reserved[4];
 -};
 +/* Win 2 */
 +#define GTT_BAR0_MAP_REG_IGU_CMD	0x00f000UL
  
 -/* The eth storm context for the Pstorm */
 -struct pstorm_eth_conn_st_ctx {
 -	__le32 reserved[8];
 -};
 +/* Win 3 */
 +#define GTT_BAR0_MAP_REG_TSDM_RAM	0x010000UL
  
 -/* The eth storm context for the Xstorm */
 -struct xstorm_eth_conn_st_ctx {
 -	__le32 reserved[60];
 -};
 +/* Win 4 */
 +#define GTT_BAR0_MAP_REG_MSDM_RAM	0x011000UL
  
 -struct xstorm_eth_conn_ag_ctx {
 -	u8 reserved0;
 -	u8 state;
 -	u8 flags0;
 -#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM0_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM0_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED1_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED1_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED2_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED2_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM3_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM3_SHIFT	3
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED3_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED3_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED4_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED4_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED5_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED5_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED6_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED6_SHIFT	7
 -		u8 flags1;
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED7_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED7_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED8_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED8_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED9_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED9_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_BIT11_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_BIT11_SHIFT		3
 -#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED2_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED2_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED3_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED3_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_TX_RULE_ACTIVE_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_TX_RULE_ACTIVE_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_ACTIVE_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_ACTIVE_SHIFT	7
 -	u8 flags2;
 -#define XSTORM_ETH_CONN_AG_CTX_CF0_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF0_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_CF1_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF1_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_CF2_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF2_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF3_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF3_SHIFT	6
 -	u8 flags3;
 -#define XSTORM_ETH_CONN_AG_CTX_CF4_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF4_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_CF5_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF5_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_CF6_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF6_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF7_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF7_SHIFT	6
 -		u8 flags4;
 -#define XSTORM_ETH_CONN_AG_CTX_CF8_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF8_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_CF9_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF9_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_CF10_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF10_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF11_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF11_SHIFT	6
 -	u8 flags5;
 -#define XSTORM_ETH_CONN_AG_CTX_CF12_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF12_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_CF13_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF13_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_CF14_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF14_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF15_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_CF15_SHIFT	6
 -	u8 flags6;
 -#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_MASK		0x3
 -#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_MASK		0x3
 -#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_MASK			0x3
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_SHIFT			4
 -#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_MASK		0x3
 -#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_SHIFT		6
 -	u8 flags7;
 -#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_MASK		0x3
 -#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED10_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED10_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_MASK	0x3
 -#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF0EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF0EN_SHIFT		6
 -#define XSTORM_ETH_CONN_AG_CTX_CF1EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF1EN_SHIFT		7
 -	u8 flags8;
 -#define XSTORM_ETH_CONN_AG_CTX_CF2EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF2EN_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_CF3EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF3EN_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_CF4EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF4EN_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_CF5EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF5EN_SHIFT	3
 -#define XSTORM_ETH_CONN_AG_CTX_CF6EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF6EN_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_CF7EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF7EN_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_CF8EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF8EN_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_CF9EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF9EN_SHIFT	7
 -	u8 flags9;
 -#define XSTORM_ETH_CONN_AG_CTX_CF10EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF10EN_SHIFT			0
 -#define XSTORM_ETH_CONN_AG_CTX_CF11EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF11EN_SHIFT			1
 -#define XSTORM_ETH_CONN_AG_CTX_CF12EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF12EN_SHIFT			2
 -#define XSTORM_ETH_CONN_AG_CTX_CF13EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF13EN_SHIFT			3
 -#define XSTORM_ETH_CONN_AG_CTX_CF14EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF14EN_SHIFT			4
 -#define XSTORM_ETH_CONN_AG_CTX_CF15EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_CF15EN_SHIFT			5
 -#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_EN_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_EN_SHIFT	7
 -	u8 flags10;
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_EN_MASK			0x1
 -#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_EN_SHIFT		0
 -#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_EN_SHIFT		1
 -#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_EN_SHIFT		2
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED11_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED11_SHIFT		3
 -#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_EN_SHIFT		4
 -#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_EN_RESERVED_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_EN_RESERVED_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED12_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED12_SHIFT		6
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED13_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED13_SHIFT		7
 -	u8 flags11;
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED14_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED14_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED15_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RESERVED15_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_TX_DEC_RULE_EN_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_TX_DEC_RULE_EN_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_RULE5EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE5EN_SHIFT		3
 -#define XSTORM_ETH_CONN_AG_CTX_RULE6EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE6EN_SHIFT		4
 -#define XSTORM_ETH_CONN_AG_CTX_RULE7EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE7EN_SHIFT		5
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED1_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED1_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_RULE9EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE9EN_SHIFT		7
 -	u8 flags12;
 -#define XSTORM_ETH_CONN_AG_CTX_RULE10EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE10EN_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RULE11EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE11EN_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED2_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED2_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED3_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED3_SHIFT	3
 -#define XSTORM_ETH_CONN_AG_CTX_RULE14EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE14EN_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_RULE15EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE15EN_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_RULE16EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE16EN_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_RULE17EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE17EN_SHIFT	7
 -	u8 flags13;
 -#define XSTORM_ETH_CONN_AG_CTX_RULE18EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE18EN_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_RULE19EN_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_RULE19EN_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED4_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED4_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED5_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED5_SHIFT	3
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED6_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED6_SHIFT	4
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED7_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED7_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED8_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED8_SHIFT	6
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED9_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED9_SHIFT	7
 -	u8 flags14;
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_USE_EXT_HDR_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_USE_EXT_HDR_SHIFT	0
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_RAW_L3L4_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_RAW_L3L4_SHIFT	1
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_INBAND_PROP_HDR_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_INBAND_PROP_HDR_SHIFT	2
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_EXT_TUNNEL_MASK	0x1
 -#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_EXT_TUNNEL_SHIFT	3
 -#define XSTORM_ETH_CONN_AG_CTX_L2_EDPM_ENABLE_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_L2_EDPM_ENABLE_SHIFT		4
 -#define XSTORM_ETH_CONN_AG_CTX_ROCE_EDPM_ENABLE_MASK		0x1
 -#define XSTORM_ETH_CONN_AG_CTX_ROCE_EDPM_ENABLE_SHIFT	5
 -#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_MASK		0x3
 -#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_SHIFT		6
 -	u8 edpm_event_id;
 -	__le16 physical_q0;
 -	__le16 e5_reserved1;
 -	__le16 edpm_num_bds;
 -	__le16 tx_bd_cons;
 -	__le16 tx_bd_prod;
 -	__le16 updated_qm_pq_id;
 -	__le16 conn_dpi;
 -	u8 byte3;
 -	u8 byte4;
 -	u8 byte5;
 -	u8 byte6;
 -	__le32 reg0;
 -	__le32 reg1;
 -	__le32 reg2;
 -	__le32 reg3;
 -	__le32 reg4;
 -	__le32 reg5;
 -	__le32 reg6;
 -	__le16 word7;
 -	__le16 word8;
 -	__le16 word9;
 -	__le16 word10;
 -	__le32 reg7;
 -	__le32 reg8;
 -	__le32 reg9;
 -	u8 byte7;
 -	u8 byte8;
 -	u8 byte9;
 -	u8 byte10;
 -	u8 byte11;
 -	u8 byte12;
 -	u8 byte13;
 -	u8 byte14;
 -	u8 byte15;
 -	u8 e5_reserved;
 -	__le16 word11;
 -	__le32 reg10;
 -	__le32 reg11;
 -	__le32 reg12;
 -	__le32 reg13;
 -	__le32 reg14;
 -	__le32 reg15;
 -	__le32 reg16;
 -	__le32 reg17;
 -	__le32 reg18;
 -	__le32 reg19;
 -	__le16 word12;
 -	__le16 word13;
 -	__le16 word14;
 -	__le16 word15;
 -};
 -
 -/* The eth storm context for the Ystorm */
 -struct ystorm_eth_conn_st_ctx {
 -	__le32 reserved[8];
 -};
 -
 -struct ystorm_eth_conn_ag_ctx {
 -	u8 byte0;
 -	u8 state;
 -	u8 flags0;
 -#define YSTORM_ETH_CONN_AG_CTX_BIT0_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_BIT0_SHIFT			0
 -#define YSTORM_ETH_CONN_AG_CTX_BIT1_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_BIT1_SHIFT			1
 -#define YSTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_MASK	0x3
 -#define YSTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_SHIFT	2
 -#define YSTORM_ETH_CONN_AG_CTX_PMD_TERMINATE_CF_MASK		0x3
 -#define YSTORM_ETH_CONN_AG_CTX_PMD_TERMINATE_CF_SHIFT	4
 -#define YSTORM_ETH_CONN_AG_CTX_CF2_MASK			0x3
 -#define YSTORM_ETH_CONN_AG_CTX_CF2_SHIFT			6
 -	u8 flags1;
 -#define YSTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_EN_MASK	0x1
 -#define YSTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_EN_SHIFT	0
 -#define YSTORM_ETH_CONN_AG_CTX_PMD_TERMINATE_CF_EN_MASK	0x1
 -#define YSTORM_ETH_CONN_AG_CTX_PMD_TERMINATE_CF_EN_SHIFT	1
 -#define YSTORM_ETH_CONN_AG_CTX_CF2EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_CF2EN_SHIFT			2
 -#define YSTORM_ETH_CONN_AG_CTX_RULE0EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_RULE0EN_SHIFT			3
 -#define YSTORM_ETH_CONN_AG_CTX_RULE1EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_RULE1EN_SHIFT			4
 -#define YSTORM_ETH_CONN_AG_CTX_RULE2EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_RULE2EN_SHIFT			5
 -#define YSTORM_ETH_CONN_AG_CTX_RULE3EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_RULE3EN_SHIFT			6
 -#define YSTORM_ETH_CONN_AG_CTX_RULE4EN_MASK			0x1
 -#define YSTORM_ETH_CONN_AG_CTX_RULE4EN_SHIFT			7
 -	u8 tx_q0_int_coallecing_timeset;
 -	u8 byte3;
 -	__le16 word0;
 -	__le32 terminate_spqe;
 -	__le32 reg1;
 -	__le16 tx_bd_cons_upd;
 -	__le16 word2;
 -	__le16 word3;
 -	__le16 word4;
 -	__le32 reg2;
 -	__le32 reg3;
 -};
 -
 -struct tstorm_eth_conn_ag_ctx {
 -	u8 byte0;
 -	u8 byte1;
 -	u8 flags0;
 -#define TSTORM_ETH_CONN_AG_CTX_BIT0_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT0_SHIFT	0
 -#define TSTORM_ETH_CONN_AG_CTX_BIT1_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT1_SHIFT	1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT2_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT2_SHIFT	2
 -#define TSTORM_ETH_CONN_AG_CTX_BIT3_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT3_SHIFT	3
 -#define TSTORM_ETH_CONN_AG_CTX_BIT4_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT4_SHIFT	4
 -#define TSTORM_ETH_CONN_AG_CTX_BIT5_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_BIT5_SHIFT	5
 -#define TSTORM_ETH_CONN_AG_CTX_CF0_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF0_SHIFT	6
 -	u8 flags1;
 -#define TSTORM_ETH_CONN_AG_CTX_CF1_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF1_SHIFT	0
 -#define TSTORM_ETH_CONN_AG_CTX_CF2_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF2_SHIFT	2
 -#define TSTORM_ETH_CONN_AG_CTX_CF3_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF3_SHIFT	4
 -#define TSTORM_ETH_CONN_AG_CTX_CF4_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF4_SHIFT	6
 -	u8 flags2;
 -#define TSTORM_ETH_CONN_AG_CTX_CF5_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF5_SHIFT	0
 -#define TSTORM_ETH_CONN_AG_CTX_CF6_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF6_SHIFT	2
 -#define TSTORM_ETH_CONN_AG_CTX_CF7_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF7_SHIFT	4
 -#define TSTORM_ETH_CONN_AG_CTX_CF8_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF8_SHIFT	6
 -	u8 flags3;
 -#define TSTORM_ETH_CONN_AG_CTX_CF9_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF9_SHIFT	0
 -#define TSTORM_ETH_CONN_AG_CTX_CF10_MASK	0x3
 -#define TSTORM_ETH_CONN_AG_CTX_CF10_SHIFT	2
 -#define TSTORM_ETH_CONN_AG_CTX_CF0EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF0EN_SHIFT	4
 -#define TSTORM_ETH_CONN_AG_CTX_CF1EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF1EN_SHIFT	5
 -#define TSTORM_ETH_CONN_AG_CTX_CF2EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF2EN_SHIFT	6
 -#define TSTORM_ETH_CONN_AG_CTX_CF3EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF3EN_SHIFT	7
 -	u8 flags4;
 -#define TSTORM_ETH_CONN_AG_CTX_CF4EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF4EN_SHIFT	0
 -#define TSTORM_ETH_CONN_AG_CTX_CF5EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF5EN_SHIFT	1
 -#define TSTORM_ETH_CONN_AG_CTX_CF6EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF6EN_SHIFT	2
 -#define TSTORM_ETH_CONN_AG_CTX_CF7EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF7EN_SHIFT	3
 -#define TSTORM_ETH_CONN_AG_CTX_CF8EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF8EN_SHIFT	4
 -#define TSTORM_ETH_CONN_AG_CTX_CF9EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF9EN_SHIFT	5
 -#define TSTORM_ETH_CONN_AG_CTX_CF10EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_CF10EN_SHIFT	6
 -#define TSTORM_ETH_CONN_AG_CTX_RULE0EN_MASK	0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE0EN_SHIFT	7
 -	u8 flags5;
 -#define TSTORM_ETH_CONN_AG_CTX_RULE1EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE1EN_SHIFT		0
 -#define TSTORM_ETH_CONN_AG_CTX_RULE2EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE2EN_SHIFT		1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE3EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE3EN_SHIFT		2
 -#define TSTORM_ETH_CONN_AG_CTX_RULE4EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE4EN_SHIFT		3
 -#define TSTORM_ETH_CONN_AG_CTX_RULE5EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE5EN_SHIFT		4
 -#define TSTORM_ETH_CONN_AG_CTX_RX_BD_EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RX_BD_EN_SHIFT	5
 -#define TSTORM_ETH_CONN_AG_CTX_RULE7EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE7EN_SHIFT		6
 -#define TSTORM_ETH_CONN_AG_CTX_RULE8EN_MASK		0x1
 -#define TSTORM_ETH_CONN_AG_CTX_RULE8EN_SHIFT		7
 -	__le32 reg0;
 -	__le32 reg1;
 -	__le32 reg2;
 -	__le32 reg3;
 -	__le32 reg4;
 -	__le32 reg5;
 -	__le32 reg6;
 -	__le32 reg7;
 -	__le32 reg8;
 -	u8 byte2;
 -	u8 byte3;
 -	__le16 rx_bd_cons;
 -	u8 byte4;
 -	u8 byte5;
 -	__le16 rx_bd_prod;
 -	__le16 word2;
 -	__le16 word3;
 -	__le32 reg9;
 -	__le32 reg10;
 -};
 -
 -struct ustorm_eth_conn_ag_ctx {
 -	u8 byte0;
 -	u8 byte1;
 -	u8 flags0;
 -#define USTORM_ETH_CONN_AG_CTX_BIT0_MASK			0x1
 -#define USTORM_ETH_CONN_AG_CTX_BIT0_SHIFT			0
 -#define USTORM_ETH_CONN_AG_CTX_BIT1_MASK			0x1
 -#define USTORM_ETH_CONN_AG_CTX_BIT1_SHIFT			1
 -#define USTORM_ETH_CONN_AG_CTX_TX_PMD_TERMINATE_CF_MASK	0x3
 -#define USTORM_ETH_CONN_AG_CTX_TX_PMD_TERMINATE_CF_SHIFT	2
 -#define USTORM_ETH_CONN_AG_CTX_RX_PMD_TERMINATE_CF_MASK	0x3
 -#define USTORM_ETH_CONN_AG_CTX_RX_PMD_TERMINATE_CF_SHIFT	4
 -#define USTORM_ETH_CONN_AG_CTX_CF2_MASK			0x3
 -#define USTORM_ETH_CONN_AG_CTX_CF2_SHIFT			6
 -	u8 flags1;
 -#define USTORM_ETH_CONN_AG_CTX_CF3_MASK			0x3
 -#define USTORM_ETH_CONN_AG_CTX_CF3_SHIFT			0
 -#define USTORM_ETH_CONN_AG_CTX_TX_ARM_CF_MASK		0x3
 -#define USTORM_ETH_CONN_AG_CTX_TX_ARM_CF_SHIFT		2
 -#define USTORM_ETH_CONN_AG_CTX_RX_ARM_CF_MASK		0x3
 -#define USTORM_ETH_CONN_AG_CTX_RX_ARM_CF_SHIFT		4
 -#define USTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_MASK	0x3
 -#define USTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_SHIFT	6
 -	u8 flags2;
 -#define USTORM_ETH_CONN_AG_CTX_TX_PMD_TERMINATE_CF_EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_TX_PMD_TERMINATE_CF_EN_SHIFT	0
 -#define USTORM_ETH_CONN_AG_CTX_RX_PMD_TERMINATE_CF_EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RX_PMD_TERMINATE_CF_EN_SHIFT	1
 -#define USTORM_ETH_CONN_AG_CTX_CF2EN_MASK			0x1
 -#define USTORM_ETH_CONN_AG_CTX_CF2EN_SHIFT			2
 -#define USTORM_ETH_CONN_AG_CTX_CF3EN_MASK			0x1
 -#define USTORM_ETH_CONN_AG_CTX_CF3EN_SHIFT			3
 -#define USTORM_ETH_CONN_AG_CTX_TX_ARM_CF_EN_MASK		0x1
 -#define USTORM_ETH_CONN_AG_CTX_TX_ARM_CF_EN_SHIFT		4
 -#define USTORM_ETH_CONN_AG_CTX_RX_ARM_CF_EN_MASK		0x1
 -#define USTORM_ETH_CONN_AG_CTX_RX_ARM_CF_EN_SHIFT		5
 -#define USTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_TX_BD_CONS_UPD_CF_EN_SHIFT	6
 -#define USTORM_ETH_CONN_AG_CTX_RULE0EN_MASK			0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE0EN_SHIFT			7
 -	u8 flags3;
 -#define USTORM_ETH_CONN_AG_CTX_RULE1EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE1EN_SHIFT	0
 -#define USTORM_ETH_CONN_AG_CTX_RULE2EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE2EN_SHIFT	1
 -#define USTORM_ETH_CONN_AG_CTX_RULE3EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE3EN_SHIFT	2
 -#define USTORM_ETH_CONN_AG_CTX_RULE4EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE4EN_SHIFT	3
 -#define USTORM_ETH_CONN_AG_CTX_RULE5EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE5EN_SHIFT	4
 -#define USTORM_ETH_CONN_AG_CTX_RULE6EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE6EN_SHIFT	5
 -#define USTORM_ETH_CONN_AG_CTX_RULE7EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE7EN_SHIFT	6
 -#define USTORM_ETH_CONN_AG_CTX_RULE8EN_MASK	0x1
 -#define USTORM_ETH_CONN_AG_CTX_RULE8EN_SHIFT	7
 -	u8 byte2;
 -	u8 byte3;
 -	__le16 word0;
 -	__le16 tx_bd_cons;
 -	__le32 reg0;
 -	__le32 reg1;
 -	__le32 reg2;
 -	__le32 tx_int_coallecing_timeset;
 -	__le16 tx_drv_bd_cons;
 -	__le16 rx_drv_cqe_cons;
 -};
 -
 -/* The eth storm context for the Ustorm */
 -struct ustorm_eth_conn_st_ctx {
 -	__le32 reserved[40];
 -};
 -
 -/* The eth storm context for the Mstorm */
 -struct mstorm_eth_conn_st_ctx {
 -	__le32 reserved[8];
 -};
 -
 -/* eth connection context */
 -struct eth_conn_context {
 -	struct tstorm_eth_conn_st_ctx tstorm_st_context;
 -	struct regpair tstorm_st_padding[2];
 -	struct pstorm_eth_conn_st_ctx pstorm_st_context;
 -	struct xstorm_eth_conn_st_ctx xstorm_st_context;
 -	struct xstorm_eth_conn_ag_ctx xstorm_ag_context;
 -	struct tstorm_eth_conn_ag_ctx tstorm_ag_context;
 -	struct ystorm_eth_conn_st_ctx ystorm_st_context;
 -	struct ystorm_eth_conn_ag_ctx ystorm_ag_context;
 -	struct ustorm_eth_conn_ag_ctx ustorm_ag_context;
 -	struct ustorm_eth_conn_st_ctx ustorm_st_context;
 -	struct mstorm_eth_conn_st_ctx mstorm_st_context;
 -};
 -
 -/* Ethernet filter types: mac/vlan/pair */
 -enum eth_error_code {
 -	ETH_OK = 0x00,
 -	ETH_FILTERS_MAC_ADD_FAIL_FULL,
 -	ETH_FILTERS_MAC_ADD_FAIL_FULL_MTT2,
 -	ETH_FILTERS_MAC_ADD_FAIL_DUP_MTT2,
 -	ETH_FILTERS_MAC_ADD_FAIL_DUP_STT2,
 -	ETH_FILTERS_MAC_DEL_FAIL_NOF,
 -	ETH_FILTERS_MAC_DEL_FAIL_NOF_MTT2,
 -	ETH_FILTERS_MAC_DEL_FAIL_NOF_STT2,
 -	ETH_FILTERS_MAC_ADD_FAIL_ZERO_MAC,
 -	ETH_FILTERS_VLAN_ADD_FAIL_FULL,
 -	ETH_FILTERS_VLAN_ADD_FAIL_DUP,
 -	ETH_FILTERS_VLAN_DEL_FAIL_NOF,
 -	ETH_FILTERS_VLAN_DEL_FAIL_NOF_TT1,
 -	ETH_FILTERS_PAIR_ADD_FAIL_DUP,
 -	ETH_FILTERS_PAIR_ADD_FAIL_FULL,
 -	ETH_FILTERS_PAIR_ADD_FAIL_FULL_MAC,
 -	ETH_FILTERS_PAIR_DEL_FAIL_NOF,
 -	ETH_FILTERS_PAIR_DEL_FAIL_NOF_TT1,
 -	ETH_FILTERS_PAIR_ADD_FAIL_ZERO_MAC,
 -	ETH_FILTERS_VNI_ADD_FAIL_FULL,
 -	ETH_FILTERS_VNI_ADD_FAIL_DUP,
 -	ETH_FILTERS_GFT_UPDATE_FAIL,
 -	ETH_RX_QUEUE_FAIL_LOAD_VF_DATA,
 -	ETH_FILTERS_GFS_ADD_FILTER_FAIL_MAX_HOPS,
 -	ETH_FILTERS_GFS_ADD_FILTER_FAIL_NO_FREE_ENRTY,
 -	ETH_FILTERS_GFS_ADD_FILTER_FAIL_ALREADY_EXISTS,
 -	ETH_FILTERS_GFS_ADD_FILTER_FAIL_PCI_ERROR,
 -	ETH_FILTERS_GFS_ADD_FINLER_FAIL_MAGIC_NUM_ERROR,
 -	ETH_FILTERS_GFS_DEL_FILTER_FAIL_MAX_HOPS,
 -	ETH_FILTERS_GFS_DEL_FILTER_FAIL_NO_MATCH_ENRTY,
 -	ETH_FILTERS_GFS_DEL_FILTER_FAIL_PCI_ERROR,
 -	ETH_FILTERS_GFS_DEL_FILTER_FAIL_MAGIC_NUM_ERROR,
 -	MAX_ETH_ERROR_CODE
 -};
 -
 -/* Opcodes for the event ring */
 -enum eth_event_opcode {
 -	ETH_EVENT_UNUSED,
 -	ETH_EVENT_VPORT_START,
 -	ETH_EVENT_VPORT_UPDATE,
 -	ETH_EVENT_VPORT_STOP,
 -	ETH_EVENT_TX_QUEUE_START,
 -	ETH_EVENT_TX_QUEUE_STOP,
 -	ETH_EVENT_RX_QUEUE_START,
 -	ETH_EVENT_RX_QUEUE_UPDATE,
 -	ETH_EVENT_RX_QUEUE_STOP,
 -	ETH_EVENT_FILTERS_UPDATE,
 -	ETH_EVENT_RX_ADD_OPENFLOW_FILTER,
 -	ETH_EVENT_RX_DELETE_OPENFLOW_FILTER,
 -	ETH_EVENT_RX_CREATE_OPENFLOW_ACTION,
 -	ETH_EVENT_RX_ADD_UDP_FILTER,
 -	ETH_EVENT_RX_DELETE_UDP_FILTER,
 -	ETH_EVENT_RX_CREATE_GFT_ACTION,
 -	ETH_EVENT_RX_GFT_UPDATE_FILTER,
 -	ETH_EVENT_TX_QUEUE_UPDATE,
 -	ETH_EVENT_RGFS_ADD_FILTER,
 -	ETH_EVENT_RGFS_DEL_FILTER,
 -	ETH_EVENT_TGFS_ADD_FILTER,
 -	ETH_EVENT_TGFS_DEL_FILTER,
 -	ETH_EVENT_GFS_COUNTERS_REPORT_REQUEST,
 -	MAX_ETH_EVENT_OPCODE
 -};
 -
 -/* Classify rule types in E2/E3 */
 -enum eth_filter_action {
 -	ETH_FILTER_ACTION_UNUSED,
 -	ETH_FILTER_ACTION_REMOVE,
 -	ETH_FILTER_ACTION_ADD,
 -	ETH_FILTER_ACTION_REMOVE_ALL,
 -	MAX_ETH_FILTER_ACTION
 -};
 -
 -/* Command for adding/removing a classification rule $$KEEP_ENDIANNESS$$ */
 -struct eth_filter_cmd {
 -	u8 type;
 -	u8 vport_id;
 -	u8 action;
 -	u8 reserved0;
 -	__le32 vni;
 -	__le16 mac_lsb;
 -	__le16 mac_mid;
 -	__le16 mac_msb;
 -	__le16 vlan_id;
 -};
 -
 -/*	$$KEEP_ENDIANNESS$$ */
 -struct eth_filter_cmd_header {
 -	u8 rx;
 -	u8 tx;
 -	u8 cmd_cnt;
 -	u8 assert_on_error;
 -	u8 reserved1[4];
 -};
 -
 -/* Ethernet filter types: mac/vlan/pair */
 -enum eth_filter_type {
 -	ETH_FILTER_TYPE_UNUSED,
 -	ETH_FILTER_TYPE_MAC,
 -	ETH_FILTER_TYPE_VLAN,
 -	ETH_FILTER_TYPE_PAIR,
 -	ETH_FILTER_TYPE_INNER_MAC,
 -	ETH_FILTER_TYPE_INNER_VLAN,
 -	ETH_FILTER_TYPE_INNER_PAIR,
 -	ETH_FILTER_TYPE_INNER_MAC_VNI_PAIR,
 -	ETH_FILTER_TYPE_MAC_VNI_PAIR,
 -	ETH_FILTER_TYPE_VNI,
 -	MAX_ETH_FILTER_TYPE
 -};
 -
 -/* inner to inner vlan priority translation configurations */
 -struct eth_in_to_in_pri_map_cfg {
 -	u8 inner_vlan_pri_remap_en;
 -	u8 reserved[7];
 -	u8 non_rdma_in_to_in_pri_map[8];
 -	u8 rdma_in_to_in_pri_map[8];
 -};
 -
 -/* Eth IPv4 Fragment Type */
 -enum eth_ipv4_frag_type {
 -	ETH_IPV4_NOT_FRAG,
 -	ETH_IPV4_FIRST_FRAG,
 -	ETH_IPV4_NON_FIRST_FRAG,
 -	MAX_ETH_IPV4_FRAG_TYPE
 -};
 -
 -/* eth IPv4 Fragment Type */
 -enum eth_ip_type {
 -	ETH_IPV4,
 -	ETH_IPV6,
 -	MAX_ETH_IP_TYPE
 -};
 -
 -/* Ethernet Ramrod Command IDs */
 -enum eth_ramrod_cmd_id {
 -	ETH_RAMROD_UNUSED,
 -	ETH_RAMROD_VPORT_START,
 -	ETH_RAMROD_VPORT_UPDATE,
 -	ETH_RAMROD_VPORT_STOP,
 -	ETH_RAMROD_RX_QUEUE_START,
 -	ETH_RAMROD_RX_QUEUE_STOP,
 -	ETH_RAMROD_TX_QUEUE_START,
 -	ETH_RAMROD_TX_QUEUE_STOP,
 -	ETH_RAMROD_FILTERS_UPDATE,
 -	ETH_RAMROD_RX_QUEUE_UPDATE,
 -	ETH_RAMROD_RX_CREATE_OPENFLOW_ACTION,
 -	ETH_RAMROD_RX_ADD_OPENFLOW_FILTER,
 -	ETH_RAMROD_RX_DELETE_OPENFLOW_FILTER,
 -	ETH_RAMROD_RX_ADD_UDP_FILTER,
 -	ETH_RAMROD_RX_DELETE_UDP_FILTER,
 -	ETH_RAMROD_RX_CREATE_GFT_ACTION,
 -	ETH_RAMROD_RX_UPDATE_GFT_FILTER,
 -	ETH_RAMROD_TX_QUEUE_UPDATE,
 -	ETH_RAMROD_RGFS_FILTER_ADD,
 -	ETH_RAMROD_RGFS_FILTER_DEL,
 -	ETH_RAMROD_TGFS_FILTER_ADD,
 -	ETH_RAMROD_TGFS_FILTER_DEL,
 -	ETH_RAMROD_GFS_COUNTERS_REPORT_REQUEST,
 -	MAX_ETH_RAMROD_CMD_ID
 -};
 -
 -/* Return code from eth sp ramrods */
 -struct eth_return_code {
 -	u8 value;
 -#define ETH_RETURN_CODE_ERR_CODE_MASK  0x3F
 -#define ETH_RETURN_CODE_ERR_CODE_SHIFT 0
 -#define ETH_RETURN_CODE_RESERVED_MASK  0x1
 -#define ETH_RETURN_CODE_RESERVED_SHIFT 6
 -#define ETH_RETURN_CODE_RX_TX_MASK     0x1
 -#define ETH_RETURN_CODE_RX_TX_SHIFT    7
 -};
 -
 -/* tx destination enum */
 -enum eth_tx_dst_mode_config_enum {
 -	ETH_TX_DST_MODE_CONFIG_DISABLE,
 -	ETH_TX_DST_MODE_CONFIG_FORWARD_DATA_IN_BD,
 -	ETH_TX_DST_MODE_CONFIG_FORWARD_DATA_IN_VPORT,
 -	MAX_ETH_TX_DST_MODE_CONFIG_ENUM
 -};
 -
 -/* What to do in case an error occurs */
 -enum eth_tx_err {
 -	ETH_TX_ERR_DROP,
 -	ETH_TX_ERR_ASSERT_MALICIOUS,
 -	MAX_ETH_TX_ERR
 -};
 -
 -/* Array of the different error type behaviors */
 -struct eth_tx_err_vals {
 -	__le16 values;
 -#define ETH_TX_ERR_VALS_ILLEGAL_VLAN_MODE_MASK			0x1
 -#define ETH_TX_ERR_VALS_ILLEGAL_VLAN_MODE_SHIFT			0
 -#define ETH_TX_ERR_VALS_PACKET_TOO_SMALL_MASK			0x1
 -#define ETH_TX_ERR_VALS_PACKET_TOO_SMALL_SHIFT			1
 -#define ETH_TX_ERR_VALS_ANTI_SPOOFING_ERR_MASK			0x1
 -#define ETH_TX_ERR_VALS_ANTI_SPOOFING_ERR_SHIFT			2
 -#define ETH_TX_ERR_VALS_ILLEGAL_INBAND_TAGS_MASK		0x1
 -#define ETH_TX_ERR_VALS_ILLEGAL_INBAND_TAGS_SHIFT		3
 -#define ETH_TX_ERR_VALS_VLAN_INSERTION_W_INBAND_TAG_MASK	0x1
 -#define ETH_TX_ERR_VALS_VLAN_INSERTION_W_INBAND_TAG_SHIFT	4
 -#define ETH_TX_ERR_VALS_MTU_VIOLATION_MASK			0x1
 -#define ETH_TX_ERR_VALS_MTU_VIOLATION_SHIFT			5
 -#define ETH_TX_ERR_VALS_ILLEGAL_CONTROL_FRAME_MASK		0x1
 -#define ETH_TX_ERR_VALS_ILLEGAL_CONTROL_FRAME_SHIFT		6
 -#define ETH_TX_ERR_VALS_ILLEGAL_BD_FLAGS_MASK			0x1
 -#define ETH_TX_ERR_VALS_ILLEGAL_BD_FLAGS_SHIFT			7
 -#define ETH_TX_ERR_VALS_RESERVED_MASK				0xFF
 -#define ETH_TX_ERR_VALS_RESERVED_SHIFT				8
 -};
 +/* Win 5 */
 +#define GTT_BAR0_MAP_REG_MSDM_RAM_1024	0x012000UL
  
 -/* vport rss configuration data */
 -struct eth_vport_rss_config {
 -	__le16 capabilities;
 -#define ETH_VPORT_RSS_CONFIG_IPV4_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV4_CAPABILITY_SHIFT		0
 -#define ETH_VPORT_RSS_CONFIG_IPV6_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV6_CAPABILITY_SHIFT		1
 -#define ETH_VPORT_RSS_CONFIG_IPV4_TCP_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV4_TCP_CAPABILITY_SHIFT		2
 -#define ETH_VPORT_RSS_CONFIG_IPV6_TCP_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV6_TCP_CAPABILITY_SHIFT		3
 -#define ETH_VPORT_RSS_CONFIG_IPV4_UDP_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV4_UDP_CAPABILITY_SHIFT		4
 -#define ETH_VPORT_RSS_CONFIG_IPV6_UDP_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_IPV6_UDP_CAPABILITY_SHIFT		5
 -#define ETH_VPORT_RSS_CONFIG_EN_5_TUPLE_CAPABILITY_MASK		0x1
 -#define ETH_VPORT_RSS_CONFIG_EN_5_TUPLE_CAPABILITY_SHIFT	6
 -#define ETH_VPORT_RSS_CONFIG_RESERVED0_MASK			0x1FF
 -#define ETH_VPORT_RSS_CONFIG_RESERVED0_SHIFT			7
 -	u8 rss_id;
 -	u8 rss_mode;
 -	u8 update_rss_key;
 -	u8 update_rss_ind_table;
 -	u8 update_rss_capabilities;
 -	u8 tbl_size;
 -	u8 ind_table_mask_valid;
 -	u8 reserved2[3];
 -	__le16 indirection_table[ETH_RSS_IND_TABLE_ENTRIES_NUM];
 -	__le32 ind_table_mask[ETH_RSS_IND_TABLE_MASK_SIZE_REGS];
 -	__le32 rss_key[ETH_RSS_KEY_SIZE_REGS];
 -	__le32 reserved3;
 -};
 +/* Win 6 */
 +#define GTT_BAR0_MAP_REG_MSDM_RAM_2048	0x013000UL
  
 -/* eth vport RSS mode */
 -enum eth_vport_rss_mode {
 -	ETH_VPORT_RSS_MODE_DISABLED,
 -	ETH_VPORT_RSS_MODE_REGULAR,
 -	MAX_ETH_VPORT_RSS_MODE
 -};
 +/* Win 7 */
 +#define GTT_BAR0_MAP_REG_USDM_RAM	0x014000UL
  
 -/* Command for setting classification flags for a vport $$KEEP_ENDIANNESS$$ */
 -struct eth_vport_rx_mode {
 -	__le16 state;
 -#define ETH_VPORT_RX_MODE_UCAST_DROP_ALL_MASK		0x1
 -#define ETH_VPORT_RX_MODE_UCAST_DROP_ALL_SHIFT		0
 -#define ETH_VPORT_RX_MODE_UCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_RX_MODE_UCAST_ACCEPT_ALL_SHIFT	1
 -#define ETH_VPORT_RX_MODE_UCAST_ACCEPT_UNMATCHED_MASK	0x1
 -#define ETH_VPORT_RX_MODE_UCAST_ACCEPT_UNMATCHED_SHIFT	2
 -#define ETH_VPORT_RX_MODE_MCAST_DROP_ALL_MASK		0x1
 -#define ETH_VPORT_RX_MODE_MCAST_DROP_ALL_SHIFT		3
 -#define ETH_VPORT_RX_MODE_MCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_RX_MODE_MCAST_ACCEPT_ALL_SHIFT	4
 -#define ETH_VPORT_RX_MODE_BCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_RX_MODE_BCAST_ACCEPT_ALL_SHIFT	5
 -#define ETH_VPORT_RX_MODE_ACCEPT_ANY_VNI_MASK		0x1
 -#define ETH_VPORT_RX_MODE_ACCEPT_ANY_VNI_SHIFT		6
 -#define ETH_VPORT_RX_MODE_RESERVED1_MASK		0x1FF
 -#define ETH_VPORT_RX_MODE_RESERVED1_SHIFT		7
 -};
 +/* Win 8 */
 +#define GTT_BAR0_MAP_REG_USDM_RAM_1024	0x015000UL
  
 -/* Command for setting tpa parameters */
 -struct eth_vport_tpa_param {
 -	u8 tpa_ipv4_en_flg;
 -	u8 tpa_ipv6_en_flg;
 -	u8 tpa_ipv4_tunn_en_flg;
 -	u8 tpa_ipv6_tunn_en_flg;
 -	u8 tpa_pkt_split_flg;
 -	u8 tpa_hdr_data_split_flg;
 -	u8 tpa_gro_consistent_flg;
 +/* Win 9 */
 +#define GTT_BAR0_MAP_REG_USDM_RAM_2048	0x016000UL
  
 -	u8 tpa_max_aggs_num;
 +/* Win 10 */
 +#define GTT_BAR0_MAP_REG_XSDM_RAM	0x017000UL
  
 -	__le16 tpa_max_size;
 -	__le16 tpa_min_size_to_start;
 +/* Win 11 */
 +#define GTT_BAR0_MAP_REG_XSDM_RAM_1024	0x018000UL
  
 -	__le16 tpa_min_size_to_cont;
 -	u8 max_buff_num;
 -	u8 reserved;
 -};
 +/* Win 12 */
 +#define GTT_BAR0_MAP_REG_YSDM_RAM	0x019000UL
  
 -/* Command for setting classification flags for a vport $$KEEP_ENDIANNESS$$ */
 -struct eth_vport_tx_mode {
 -	__le16 state;
 -#define ETH_VPORT_TX_MODE_UCAST_DROP_ALL_MASK		0x1
 -#define ETH_VPORT_TX_MODE_UCAST_DROP_ALL_SHIFT		0
 -#define ETH_VPORT_TX_MODE_UCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_TX_MODE_UCAST_ACCEPT_ALL_SHIFT	1
 -#define ETH_VPORT_TX_MODE_MCAST_DROP_ALL_MASK		0x1
 -#define ETH_VPORT_TX_MODE_MCAST_DROP_ALL_SHIFT		2
 -#define ETH_VPORT_TX_MODE_MCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_TX_MODE_MCAST_ACCEPT_ALL_SHIFT	3
 -#define ETH_VPORT_TX_MODE_BCAST_ACCEPT_ALL_MASK		0x1
 -#define ETH_VPORT_TX_MODE_BCAST_ACCEPT_ALL_SHIFT	4
 -#define ETH_VPORT_TX_MODE_RESERVED1_MASK		0x7FF
 -#define ETH_VPORT_TX_MODE_RESERVED1_SHIFT		5
 -};
 +/* Win 13 */
 +#define GTT_BAR0_MAP_REG_PSDM_RAM	0x01a000UL
  
 -/* GFT filter update action type */
 -enum gft_filter_update_action {
 -	GFT_ADD_FILTER,
 -	GFT_DELETE_FILTER,
 -	MAX_GFT_FILTER_UPDATE_ACTION
 -};
 +/**
 + * @brief qed_qm_pf_mem_size - prepare QM ILT sizes
 + *
 + * Returns the required host memory size in 4KB units.
 + * Must be called before all QM init HSI functions.
 + *
 + * @param num_pf_cids - number of connections used by this PF
 + * @param num_vf_cids - number of connections used by VFs of this PF
 + * @param num_tids - number of tasks used by this PF
 + * @param num_pf_pqs - number of PQs used by this PF
 + * @param num_vf_pqs - number of PQs used by VFs of this PF
 + *
 + * @return The required host memory size in 4KB units.
 + */
 +u32 qed_qm_pf_mem_size(u32 num_pf_cids,
 +		       u32 num_vf_cids,
 +		       u32 num_tids, u16 num_pf_pqs, u16 num_vf_pqs);
  
 -/* Ramrod data for rx create gft action */
 -struct rx_create_gft_action_ramrod_data {
 -	u8 vport_id;
 -	u8 reserved[7];
 +struct qed_qm_common_rt_init_params {
 +	u8 max_ports_per_engine;
 +	u8 max_phys_tcs_per_port;
 +	bool pf_rl_en;
 +	bool pf_wfq_en;
 +	bool global_rl_en;
 +	bool vport_wfq_en;
 +	struct init_qm_port_params *port_params;
  };
  
 -/* Ramrod data for rx create openflow action */
 -struct rx_create_openflow_action_ramrod_data {
 -	u8 vport_id;
 -	u8 reserved[7];
 -};
 +int qed_qm_common_rt_init(struct qed_hwfn *p_hwfn,
 +			  struct qed_qm_common_rt_init_params *p_params);
  
 -/* Ramrod data for rx add openflow filter */
 -struct rx_openflow_filter_ramrod_data {
 -	__le16 action_icid;
 -	u8 priority;
 -	u8 reserved0;
 -	__le32 tenant_id;
 -	__le16 dst_mac_hi;
 -	__le16 dst_mac_mid;
 -	__le16 dst_mac_lo;
 -	__le16 src_mac_hi;
 -	__le16 src_mac_mid;
 -	__le16 src_mac_lo;
 -	__le16 vlan_id;
 -	__le16 l2_eth_type;
 -	u8 ipv4_dscp;
 -	u8 ipv4_frag_type;
 -	u8 ipv4_over_ip;
 -	u8 tenant_id_exists;
 -	__le32 ipv4_dst_addr;
 -	__le32 ipv4_src_addr;
 -	__le16 l4_dst_port;
 -	__le16 l4_src_port;
 +struct qed_qm_pf_rt_init_params {
 +	u8 port_id;
 +	u8 pf_id;
 +	u8 max_phys_tcs_per_port;
 +	bool is_pf_loading;
 +	u32 num_pf_cids;
 +	u32 num_vf_cids;
 +	u32 num_tids;
 +	u16 start_pq;
 +	u16 num_pf_pqs;
 +	u16 num_vf_pqs;
 +	u16 start_vport;
 +	u16 num_vports;
 +	u16 pf_wfq;
 +	u32 pf_rl;
 +	struct init_qm_pq_params *pq_params;
 +	struct init_qm_vport_params *vport_params;
  };
  
 -/* Ramrod data for rx queue start ramrod */
 -struct rx_queue_start_ramrod_data {
 -	__le16 rx_queue_id;
 -	__le16 num_of_pbl_pages;
 -	__le16 bd_max_bytes;
 -	__le16 sb_id;
 -	u8 sb_index;
 -	u8 vport_id;
 -	u8 default_rss_queue_flg;
 -	u8 complete_cqe_flg;
 -	u8 complete_event_flg;
 -	u8 stats_counter_id;
 -	u8 pin_context;
 -	u8 pxp_tph_valid_bd;
 -	u8 pxp_tph_valid_pkt;
 -	u8 pxp_st_hint;
 +int qed_qm_pf_rt_init(struct qed_hwfn *p_hwfn,
 +	struct qed_ptt *p_ptt,
 +	struct qed_qm_pf_rt_init_params *p_params);
  
 -	__le16 pxp_st_index;
 -	u8 pmd_mode;
 +/**
 + * @brief qed_init_pf_wfq - Initializes the WFQ weight of the specified PF
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers
 + * @param pf_id - PF ID
 + * @param pf_wfq - WFQ weight. Must be non-zero.
 + *
 + * @return 0 on success, -1 on error.
 + */
 +int qed_init_pf_wfq(struct qed_hwfn *p_hwfn,
 +		    struct qed_ptt *p_ptt, u8 pf_id, u16 pf_wfq);
  
 -	u8 notify_en;
 -	u8 toggle_val;
 +/**
 + * @brief qed_init_pf_rl - Initializes the rate limit of the specified PF
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers
 + * @param pf_id - PF ID
 + * @param pf_rl - rate limit in Mb/sec units
 + *
 + * @return 0 on success, -1 on error.
 + */
 +int qed_init_pf_rl(struct qed_hwfn *p_hwfn,
 +		   struct qed_ptt *p_ptt, u8 pf_id, u32 pf_rl);
  
 -	u8 vf_rx_prod_index;
 -	u8 vf_rx_prod_use_zone_a;
 -	u8 reserved[5];
 -	__le16 reserved1;
 -	struct regpair cqe_pbl_addr;
 -	struct regpair bd_base;
 -	struct regpair reserved2;
 -};
 +/**
 + * @brief qed_init_vport_wfq Initializes the WFQ weight of the specified VPORT
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers
 + * @param first_tx_pq_id- An array containing the first Tx PQ ID associated
 + *	  with the VPORT for each TC. This array is filled by
 + *	  qed_qm_pf_rt_init
 + * @param vport_wfq - WFQ weight. Must be non-zero.
 + *
 + * @return 0 on success, -1 on error.
 + */
 +int qed_init_vport_wfq(struct qed_hwfn *p_hwfn,
 +		       struct qed_ptt *p_ptt,
 +		       u16 first_tx_pq_id[NUM_OF_TCS], u16 wfq);
  
 -/* Ramrod data for rx queue stop ramrod */
 -struct rx_queue_stop_ramrod_data {
 -	__le16 rx_queue_id;
 -	u8 complete_cqe_flg;
 -	u8 complete_event_flg;
 -	u8 vport_id;
 -	u8 reserved[3];
 -};
 +/**
 + * @brief qed_init_global_rl - Initializes the rate limit of the specified
 + * rate limiter
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers
 + * @param rl_id - RL ID
 + * @param rate_limit - rate limit in Mb/sec units
 + *
 + * @return 0 on success, -1 on error.
 + */
 +int qed_init_global_rl(struct qed_hwfn *p_hwfn,
 +		       struct qed_ptt *p_ptt,
 +		       u16 rl_id, u32 rate_limit);
  
 -/* Ramrod data for rx queue update ramrod */
 -struct rx_queue_update_ramrod_data {
 -	__le16 rx_queue_id;
 -	u8 complete_cqe_flg;
 -	u8 complete_event_flg;
 -	u8 vport_id;
 -	u8 set_default_rss_queue;
 -	u8 reserved[3];
 -	u8 reserved1;
 -	u8 reserved2;
 -	u8 reserved3;
 -	__le16 reserved4;
 -	__le16 reserved5;
 -	struct regpair reserved6;
 -};
 +/**
 + * @brief qed_send_qm_stop_cmd  Sends a stop command to the QM
 + *
 + * @param p_hwfn
 + * @param p_ptt
 + * @param is_release_cmd - true for release, false for stop.
 + * @param is_tx_pq - true for Tx PQs, false for Other PQs.
 + * @param start_pq - first PQ ID to stop
 + * @param num_pqs - Number of PQs to stop, starting from start_pq.
 + *
 + * @return bool, true if successful, false if timeout occurred while waiting for
 + *	QM command done.
 + */
 +bool qed_send_qm_stop_cmd(struct qed_hwfn *p_hwfn,
 +			  struct qed_ptt *p_ptt,
 +			  bool is_release_cmd,
 +			  bool is_tx_pq, u16 start_pq, u16 num_pqs);
  
 -/* Ramrod data for rx Add UDP Filter */
 -struct rx_udp_filter_ramrod_data {
 -	__le16 action_icid;
 -	__le16 vlan_id;
 -	u8 ip_type;
 -	u8 tenant_id_exists;
 -	__le16 reserved1;
 -	__le32 ip_dst_addr[4];
 -	__le32 ip_src_addr[4];
 -	__le16 udp_dst_port;
 -	__le16 udp_src_port;
 -	__le32 tenant_id;
 -};
 +/**
 + * @brief qed_set_vxlan_dest_port - initializes vxlan tunnel destination udp port
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param dest_port - vxlan destination udp port.
 + */
 +void qed_set_vxlan_dest_port(struct qed_hwfn *p_hwfn,
 +			     struct qed_ptt *p_ptt, u16 dest_port);
  
 -/* Add or delete GFT filter - filter is packet header of type of packet wished
 - * to pass certain FW flow.
 +/**
 + * @brief qed_set_vxlan_enable - enable or disable VXLAN tunnel in HW
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param vxlan_enable - vxlan enable flag.
   */
 -struct rx_update_gft_filter_ramrod_data {
 -	struct regpair pkt_hdr_addr;
 -	__le16 pkt_hdr_length;
 -	__le16 action_icid;
 -	__le16 rx_qid;
 -	__le16 flow_id;
 -	__le16 vport_id;
 -	u8 action_icid_valid;
 -	u8 rx_qid_valid;
 -	u8 flow_id_valid;
 -	u8 filter_action;
 -	u8 assert_on_error;
 -	u8 inner_vlan_removal_en;
 -};
 +void qed_set_vxlan_enable(struct qed_hwfn *p_hwfn,
 +			  struct qed_ptt *p_ptt, bool vxlan_enable);
  
 -/* Ramrod data for tx queue start ramrod */
 -struct tx_queue_start_ramrod_data {
 -	__le16 sb_id;
 -	u8 sb_index;
 -	u8 vport_id;
 -	u8 reserved0;
 -	u8 stats_counter_id;
 -	__le16 qm_pq_id;
 -	u8 flags;
 -#define TX_QUEUE_START_RAMROD_DATA_DISABLE_OPPORTUNISTIC_MASK	0x1
 -#define TX_QUEUE_START_RAMROD_DATA_DISABLE_OPPORTUNISTIC_SHIFT	0
 -#define TX_QUEUE_START_RAMROD_DATA_TEST_MODE_PKT_DUP_MASK	0x1
 -#define TX_QUEUE_START_RAMROD_DATA_TEST_MODE_PKT_DUP_SHIFT	1
 -#define TX_QUEUE_START_RAMROD_DATA_PMD_MODE_MASK		0x1
 -#define TX_QUEUE_START_RAMROD_DATA_PMD_MODE_SHIFT		2
 -#define TX_QUEUE_START_RAMROD_DATA_NOTIFY_EN_MASK		0x1
 -#define TX_QUEUE_START_RAMROD_DATA_NOTIFY_EN_SHIFT		3
 -#define TX_QUEUE_START_RAMROD_DATA_PIN_CONTEXT_MASK		0x1
 -#define TX_QUEUE_START_RAMROD_DATA_PIN_CONTEXT_SHIFT		4
 -#define TX_QUEUE_START_RAMROD_DATA_RESERVED1_MASK		0x7
 -#define TX_QUEUE_START_RAMROD_DATA_RESERVED1_SHIFT		5
 -	u8 pxp_st_hint;
 -	u8 pxp_tph_valid_bd;
 -	u8 pxp_tph_valid_pkt;
 -	__le16 pxp_st_index;
 -	u8 comp_agg_size;
 -	u8 reserved3;
 -	__le16 queue_zone_id;
 -	__le16 reserved2;
 -	__le16 pbl_size;
 -	__le16 tx_queue_id;
 -	__le16 same_as_last_id;
 -	__le16 reserved[3];
 -	struct regpair pbl_base_addr;
 -	struct regpair bd_cons_address;
 -};
 +/**
 + * @brief qed_set_gre_enable - enable or disable GRE tunnel in HW
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param eth_gre_enable - eth GRE enable enable flag.
 + * @param ip_gre_enable - IP GRE enable enable flag.
 + */
 +void qed_set_gre_enable(struct qed_hwfn *p_hwfn,
 +			struct qed_ptt *p_ptt,
 +			bool eth_gre_enable, bool ip_gre_enable);
  
 -/* Ramrod data for tx queue stop ramrod */
 -struct tx_queue_stop_ramrod_data {
 -	__le16 reserved[4];
 -};
 +/**
 + * @brief qed_set_geneve_dest_port - initializes geneve tunnel destination udp port
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param dest_port - geneve destination udp port.
 + */
 +void qed_set_geneve_dest_port(struct qed_hwfn *p_hwfn,
 +			      struct qed_ptt *p_ptt, u16 dest_port);
  
 -/* Ramrod data for tx queue update ramrod */
 -struct tx_queue_update_ramrod_data {
 -	__le16 update_qm_pq_id_flg;
 -	__le16 qm_pq_id;
 -	__le32 reserved0;
 -	struct regpair reserved1[5];
 -};
 +/**
 + * @brief qed_set_gre_enable - enable or disable GRE tunnel in HW
 + *
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param eth_geneve_enable - eth GENEVE enable enable flag.
 + * @param ip_geneve_enable - IP GENEVE enable enable flag.
 + */
 +void qed_set_geneve_enable(struct qed_hwfn *p_hwfn,
 +			   struct qed_ptt *p_ptt,
 +			   bool eth_geneve_enable, bool ip_geneve_enable);
  
 -/* Inner to Inner VLAN priority map update mode */
 -enum update_in_to_in_pri_map_mode_enum {
 -	ETH_IN_TO_IN_PRI_MAP_UPDATE_DISABLED,
 -	ETH_IN_TO_IN_PRI_MAP_UPDATE_NON_RDMA_TBL,
 -	ETH_IN_TO_IN_PRI_MAP_UPDATE_RDMA_TBL,
 -	MAX_UPDATE_IN_TO_IN_PRI_MAP_MODE_ENUM
 -};
 +void qed_set_vxlan_no_l2_enable(struct qed_hwfn *p_hwfn,
 +				struct qed_ptt *p_ptt, bool enable);
  
 -/* Ramrod data for vport update ramrod */
 -struct vport_filter_update_ramrod_data {
 -	struct eth_filter_cmd_header filter_cmd_hdr;
 -	struct eth_filter_cmd filter_cmds[ETH_FILTER_RULES_COUNT];
 -};
 +/**
 + * @brief qed_gft_disable - Disable GFT
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param pf_id - pf on which to disable GFT.
 + */
 +void qed_gft_disable(struct qed_hwfn *p_hwfn, struct qed_ptt *p_ptt, u16 pf_id);
  
 -/* Ramrod data for vport start ramrod */
 -struct vport_start_ramrod_data {
 -	u8 vport_id;
 -	u8 sw_fid;
 -	__le16 mtu;
 -	u8 drop_ttl0_en;
 -	u8 inner_vlan_removal_en;
 -	struct eth_vport_rx_mode rx_mode;
 -	struct eth_vport_tx_mode tx_mode;
 -	struct eth_vport_tpa_param tpa_param;
 -	__le16 default_vlan;
 -	u8 tx_switching_en;
 -	u8 anti_spoofing_en;
 -	u8 default_vlan_en;
 -	u8 handle_ptp_pkts;
 -	u8 silent_vlan_removal_en;
 -	u8 untagged;
 -	struct eth_tx_err_vals tx_err_behav;
 -	u8 zero_placement_offset;
 -	u8 ctl_frame_mac_check_en;
 -	u8 ctl_frame_ethtype_check_en;
 -	u8 reserved0;
 -	u8 reserved1;
 -	u8 tx_dst_port_mode_config;
 -	u8 dst_vport_id;
 -	u8 tx_dst_port_mode;
 -	u8 dst_vport_id_valid;
 -	u8 wipe_inner_vlan_pri_en;
 -	u8 reserved2[2];
 -	struct eth_in_to_in_pri_map_cfg in_to_in_vlan_pri_map_cfg;
 -};
 +/**
 + * @brief qed_gft_config - Enable and configure HW for GFT
 + *
 + * @param p_hwfn - HW device data
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param pf_id - pf on which to enable GFT.
 + * @param tcp - set profile tcp packets.
 + * @param udp - set profile udp  packet.
 + * @param ipv4 - set profile ipv4 packet.
 + * @param ipv6 - set profile ipv6 packet.
 + * @param profile_type - define packet same fields. Use enum gft_profile_type.
 + */
 +void qed_gft_config(struct qed_hwfn *p_hwfn,
 +		    struct qed_ptt *p_ptt,
 +		    u16 pf_id,
 +		    bool tcp,
 +		    bool udp,
 +		    bool ipv4, bool ipv6, enum gft_profile_type profile_type);
 +
 +/**
 + * @brief qed_enable_context_validation - Enable and configure context
 + *	validation.
 + *
 + * @param p_hwfn
 + * @param p_ptt - ptt window used for writing the registers.
 + */
 +void qed_enable_context_validation(struct qed_hwfn *p_hwfn,
 +				   struct qed_ptt *p_ptt);
 +
 +/**
 + * @brief qed_calc_session_ctx_validation - Calcualte validation byte for
 + *	session context.
 + *
 + * @param p_ctx_mem - pointer to context memory.
 + * @param ctx_size - context size.
 + * @param ctx_type - context type.
 + * @param cid - context cid.
 + */
 +void qed_calc_session_ctx_validation(void *p_ctx_mem,
 +				     u16 ctx_size, u8 ctx_type, u32 cid);
  
 -/* Ramrod data for vport stop ramrod */
 -struct vport_stop_ramrod_data {
 -	u8 vport_id;
 -	u8 reserved[7];
 -};
 +/**
 + * @brief qed_calc_task_ctx_validation - Calcualte validation byte for task
 + *	context.
 + *
 + * @param p_ctx_mem - pointer to context memory.
 + * @param ctx_size - context size.
 + * @param ctx_type - context type.
 + * @param tid - context tid.
 + */
 +void qed_calc_task_ctx_validation(void *p_ctx_mem,
 +				  u16 ctx_size, u8 ctx_type, u32 tid);
  
 -/* Ramrod data for vport update ramrod */
 -struct vport_update_ramrod_data_cmn {
 -	u8 vport_id;
 -	u8 update_rx_active_flg;
 -	u8 rx_active_flg;
 -	u8 update_tx_active_flg;
 -	u8 tx_active_flg;
 -	u8 update_rx_mode_flg;
 -	u8 update_tx_mode_flg;
 -	u8 update_approx_mcast_flg;
 +/**
 + * @brief qed_memset_session_ctx - Memset session context to 0 while
 + *	preserving validation bytes.
 + *
 + * @param p_hwfn -
 + * @param p_ctx_mem - pointer to context memory.
 + * @param ctx_size - size to initialzie.
 + * @param ctx_type - context type.
 + */
 +void qed_memset_session_ctx(void *p_ctx_mem, u32 ctx_size, u8 ctx_type);
  
 -	u8 update_rss_flg;
 -	u8 update_inner_vlan_removal_en_flg;
 +/**
 + * @brief qed_memset_task_ctx - Memset task context to 0 while preserving
 + *	validation bytes.
 + *
 + * @param p_ctx_mem - pointer to context memory.
 + * @param ctx_size - size to initialzie.
 + * @param ctx_type - context type.
 + */
 +void qed_memset_task_ctx(void *p_ctx_mem, u32 ctx_size, u8 ctx_type);
  
 -	u8 inner_vlan_removal_en;
 -	u8 update_tpa_param_flg;
 -	u8 update_tpa_en_flg;
 -	u8 update_tx_switching_en_flg;
 +#define NUM_STORMS 6
  
 -	u8 tx_switching_en;
 -	u8 update_anti_spoofing_en_flg;
 +/**
++<<<<<<< HEAD
 + * @brief qed_set_rdma_error_level - Sets the RDMA assert level.
 + *                                   If the severity of the error will be
 + *                                   above the level, the FW will assert.
 + * @param p_hwfn - HW device data
 + * @param p_ptt - ptt window used for writing the registers
 + * @param assert_level - An array of assert levels for each storm.
++=======
++ * qed_get_protocol_type_str(): Get a string for Protocol type.
++ *
++ * @protocol_type: Protocol type (using enum protocol_type).
++ *
++ * Return: String.
++ */
++const char *qed_get_protocol_type_str(u32 protocol_type);
+ 
 -	u8 anti_spoofing_en;
 -	u8 update_handle_ptp_pkts;
++/**
++ * qed_get_ramrod_cmd_id_str(): Get a string for Ramrod command ID.
++ *
++ * @protocol_type: Protocol type (using enum protocol_type).
++ * @ramrod_cmd_id: Ramrod command ID (using per-protocol enum <protocol>_ramrod_cmd_id).
++ *
++ * Return: String.
++ */
++const char *qed_get_ramrod_cmd_id_str(u32 protocol_type, u32 ramrod_cmd_id);
+ 
 -	u8 handle_ptp_pkts;
 -	u8 update_default_vlan_en_flg;
++/**
++ * qed_set_rdma_error_level(): Sets the RDMA assert level.
++ *                             If the severity of the error will be
++ *                             above the level, the FW will assert.
++ * @p_hwfn: HW device data.
++ * @p_ptt: Ptt window used for writing the registers.
++ * @assert_level: An array of assert levels for each storm.
++>>>>>>> 7e9979e36007 (qed: Enhance rammod debug prints to provide pretty details)
 + *
 + */
 +void qed_set_rdma_error_level(struct qed_hwfn *p_hwfn,
 +			      struct qed_ptt *p_ptt,
 +			      u8 assert_level[NUM_STORMS]);
 +/**
 + * @brief qed_fw_overlay_mem_alloc - Allocates and fills the FW overlay memory.
 + *
 + * @param p_hwfn - HW device data
 + * @param fw_overlay_in_buf - the input FW overlay buffer.
 + * @param buf_size - the size of the input FW overlay buffer in bytes.
 + *		     must be aligned to dwords.
 + * @param fw_overlay_out_mem - OUT: a pointer to the allocated overlays memory.
 + *
 + * @return a pointer to the allocated overlays memory,
 + * or NULL in case of failures.
 + */
 +struct phys_mem_desc *
 +qed_fw_overlay_mem_alloc(struct qed_hwfn *p_hwfn,
 +			 const u32 * const fw_overlay_in_buf,
 +			 u32 buf_size_in_bytes);
  
 -	u8 default_vlan_en;
 +/**
 + * @brief qed_fw_overlay_init_ram - Initializes the FW overlay RAM.
 + *
 + * @param p_hwfn - HW device data.
 + * @param p_ptt - ptt window used for writing the registers.
 + * @param fw_overlay_mem - the allocated FW overlay memory.
 + */
 +void qed_fw_overlay_init_ram(struct qed_hwfn *p_hwfn,
 +			     struct qed_ptt *p_ptt,
 +			     struct phys_mem_desc *fw_overlay_mem);
  
 -	u8 update_default_vlan_flg;
 +/**
 + * @brief qed_fw_overlay_mem_free - Frees the FW overlay memory.
 + *
 + * @param p_hwfn - HW device data.
 + * @param fw_overlay_mem - the allocated FW overlay memory to free.
 + */
 +void qed_fw_overlay_mem_free(struct qed_hwfn *p_hwfn,
 +			     struct phys_mem_desc *fw_overlay_mem);
  
 -	__le16 default_vlan;
 -	u8 update_accept_any_vlan_flg;
 +/* Ystorm flow control mode. Use enum fw_flow_ctrl_mode */
 +#define YSTORM_FLOW_CONTROL_MODE_OFFSET			(IRO[0].base)
 +#define YSTORM_FLOW_CONTROL_MODE_SIZE			(IRO[0].size)
 +
 +/* Tstorm port statistics */
 +#define TSTORM_PORT_STAT_OFFSET(port_id) \
 +	(IRO[1].base + ((port_id) * IRO[1].m1))
 +#define TSTORM_PORT_STAT_SIZE				(IRO[1].size)
 +
 +/* Tstorm ll2 port statistics */
 +#define TSTORM_LL2_PORT_STAT_OFFSET(port_id) \
 +	(IRO[2].base + ((port_id) * IRO[2].m1))
 +#define TSTORM_LL2_PORT_STAT_SIZE			(IRO[2].size)
 +
 +/* Ustorm VF-PF Channel ready flag */
 +#define USTORM_VF_PF_CHANNEL_READY_OFFSET(vf_id) \
 +	(IRO[3].base + ((vf_id) * IRO[3].m1))
 +#define USTORM_VF_PF_CHANNEL_READY_SIZE			(IRO[3].size)
 +
 +/* Ustorm Final flr cleanup ack */
 +#define USTORM_FLR_FINAL_ACK_OFFSET(pf_id) \
 +	(IRO[4].base + ((pf_id) * IRO[4].m1))
 +#define USTORM_FLR_FINAL_ACK_SIZE			(IRO[4].size)
 +
 +/* Ustorm Event ring consumer */
 +#define USTORM_EQE_CONS_OFFSET(pf_id) \
 +	(IRO[5].base + ((pf_id) * IRO[5].m1))
 +#define USTORM_EQE_CONS_SIZE				(IRO[5].size)
 +
 +/* Ustorm eth queue zone */
 +#define USTORM_ETH_QUEUE_ZONE_OFFSET(queue_zone_id) \
 +	(IRO[6].base + ((queue_zone_id) * IRO[6].m1))
 +#define USTORM_ETH_QUEUE_ZONE_SIZE			(IRO[6].size)
 +
 +/* Ustorm Common Queue ring consumer */
 +#define USTORM_COMMON_QUEUE_CONS_OFFSET(queue_zone_id) \
 +	(IRO[7].base + ((queue_zone_id) * IRO[7].m1))
 +#define USTORM_COMMON_QUEUE_CONS_SIZE			(IRO[7].size)
 +
 +/* Xstorm common PQ info */
 +#define XSTORM_PQ_INFO_OFFSET(pq_id) \
 +	(IRO[8].base + ((pq_id) * IRO[8].m1))
 +#define XSTORM_PQ_INFO_SIZE				(IRO[8].size)
 +
 +/* Xstorm Integration Test Data */
 +#define XSTORM_INTEG_TEST_DATA_OFFSET			(IRO[9].base)
 +#define XSTORM_INTEG_TEST_DATA_SIZE			(IRO[9].size)
 +
 +/* Ystorm Integration Test Data */
 +#define YSTORM_INTEG_TEST_DATA_OFFSET			(IRO[10].base)
 +#define YSTORM_INTEG_TEST_DATA_SIZE			(IRO[10].size)
 +
 +/* Pstorm Integration Test Data */
 +#define PSTORM_INTEG_TEST_DATA_OFFSET			(IRO[11].base)
 +#define PSTORM_INTEG_TEST_DATA_SIZE			(IRO[11].size)
 +
 +/* Tstorm Integration Test Data */
 +#define TSTORM_INTEG_TEST_DATA_OFFSET			(IRO[12].base)
 +#define TSTORM_INTEG_TEST_DATA_SIZE			(IRO[12].size)
 +
 +/* Mstorm Integration Test Data */
 +#define MSTORM_INTEG_TEST_DATA_OFFSET			(IRO[13].base)
 +#define MSTORM_INTEG_TEST_DATA_SIZE			(IRO[13].size)
 +
 +/* Ustorm Integration Test Data */
 +#define USTORM_INTEG_TEST_DATA_OFFSET			(IRO[14].base)
 +#define USTORM_INTEG_TEST_DATA_SIZE			(IRO[14].size)
 +
 +/* Xstorm overlay buffer host address */
 +#define XSTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[15].base)
 +#define XSTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[15].size)
 +
 +/* Ystorm overlay buffer host address */
 +#define YSTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[16].base)
 +#define YSTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[16].size)
 +
 +/* Pstorm overlay buffer host address */
 +#define PSTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[17].base)
 +#define PSTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[17].size)
 +
 +/* Tstorm overlay buffer host address */
 +#define TSTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[18].base)
 +#define TSTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[18].size)
 +
 +/* Mstorm overlay buffer host address */
 +#define MSTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[19].base)
 +#define MSTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[19].size)
 +
 +/* Ustorm overlay buffer host address */
 +#define USTORM_OVERLAY_BUF_ADDR_OFFSET			(IRO[20].base)
 +#define USTORM_OVERLAY_BUF_ADDR_SIZE			(IRO[20].size)
 +
 +/* Tstorm producers */
 +#define TSTORM_LL2_RX_PRODS_OFFSET(core_rx_queue_id) \
 +	(IRO[21].base + ((core_rx_queue_id) * IRO[21].m1))
 +#define TSTORM_LL2_RX_PRODS_SIZE			(IRO[21].size)
 +
 +/* Tstorm LightL2 queue statistics */
 +#define CORE_LL2_TSTORM_PER_QUEUE_STAT_OFFSET(core_rx_queue_id) \
 +	(IRO[22].base + ((core_rx_queue_id) * IRO[22].m1))
 +#define CORE_LL2_TSTORM_PER_QUEUE_STAT_SIZE		(IRO[22].size)
 +
 +/* Ustorm LiteL2 queue statistics */
 +#define CORE_LL2_USTORM_PER_QUEUE_STAT_OFFSET(core_rx_queue_id) \
 +	(IRO[23].base + ((core_rx_queue_id) * IRO[23].m1))
 +#define CORE_LL2_USTORM_PER_QUEUE_STAT_SIZE		(IRO[23].size)
 +
 +/* Pstorm LiteL2 queue statistics */
 +#define CORE_LL2_PSTORM_PER_QUEUE_STAT_OFFSET(core_tx_stats_id) \
 +	(IRO[24].base + ((core_tx_stats_id) * IRO[24].m1))
 +#define CORE_LL2_PSTORM_PER_QUEUE_STAT_SIZE		(IRO[24].size)
 +
 +/* Mstorm queue statistics */
 +#define MSTORM_QUEUE_STAT_OFFSET(stat_counter_id) \
 +	(IRO[25].base + ((stat_counter_id) * IRO[25].m1))
 +#define MSTORM_QUEUE_STAT_SIZE				(IRO[25].size)
 +
 +/* TPA agregation timeout in us resolution (on ASIC) */
 +#define MSTORM_TPA_TIMEOUT_US_OFFSET			(IRO[26].base)
 +#define MSTORM_TPA_TIMEOUT_US_SIZE			(IRO[26].size)
 +
 +/* Mstorm ETH VF queues producers offset in RAM. Used in default VF zone size
 + * mode
 + */
 +#define MSTORM_ETH_VF_PRODS_OFFSET(vf_id, vf_queue_id) \
 +	(IRO[27].base + ((vf_id) * IRO[27].m1) + ((vf_queue_id) * IRO[27].m2))
 +#define MSTORM_ETH_VF_PRODS_SIZE			(IRO[27].size)
 +
 +/* Mstorm ETH PF queues producers */
 +#define MSTORM_ETH_PF_PRODS_OFFSET(queue_id) \
 +	(IRO[28].base + ((queue_id) * IRO[28].m1))
 +#define MSTORM_ETH_PF_PRODS_SIZE			(IRO[28].size)
 +
 +/* Mstorm pf statistics */
 +#define MSTORM_ETH_PF_STAT_OFFSET(pf_id) \
 +	(IRO[29].base + ((pf_id) * IRO[29].m1))
 +#define MSTORM_ETH_PF_STAT_SIZE				(IRO[29].size)
 +
 +/* Ustorm queue statistics */
 +#define USTORM_QUEUE_STAT_OFFSET(stat_counter_id) \
 +	(IRO[30].base + ((stat_counter_id) * IRO[30].m1))
 +#define USTORM_QUEUE_STAT_SIZE				(IRO[30].size)
 +
 +/* Ustorm pf statistics */
 +#define USTORM_ETH_PF_STAT_OFFSET(pf_id) \
 +	(IRO[31].base + ((pf_id) * IRO[31].m1))
 +#define USTORM_ETH_PF_STAT_SIZE				(IRO[31].size)
 +
 +/* Pstorm queue statistics */
 +#define PSTORM_QUEUE_STAT_OFFSET(stat_counter_id)	\
 +	(IRO[32].base + ((stat_counter_id) * IRO[32].m1))
 +#define PSTORM_QUEUE_STAT_SIZE				(IRO[32].size)
 +
 +/* Pstorm pf statistics */
 +#define PSTORM_ETH_PF_STAT_OFFSET(pf_id) \
 +	(IRO[33].base + ((pf_id) * IRO[33].m1))
 +#define PSTORM_ETH_PF_STAT_SIZE				(IRO[33].size)
 +
 +/* Control frame's EthType configuration for TX control frame security */
 +#define PSTORM_CTL_FRAME_ETHTYPE_OFFSET(eth_type_id)	\
 +	(IRO[34].base + ((eth_type_id) * IRO[34].m1))
 +#define PSTORM_CTL_FRAME_ETHTYPE_SIZE			(IRO[34].size)
 +
 +/* Tstorm last parser message */
 +#define TSTORM_ETH_PRS_INPUT_OFFSET			(IRO[35].base)
 +#define TSTORM_ETH_PRS_INPUT_SIZE			(IRO[35].size)
 +
 +/* Tstorm Eth limit Rx rate */
 +#define ETH_RX_RATE_LIMIT_OFFSET(pf_id)	\
 +	(IRO[36].base + ((pf_id) * IRO[36].m1))
 +#define ETH_RX_RATE_LIMIT_SIZE				(IRO[36].size)
 +
 +/* RSS indirection table entry update command per PF offset in TSTORM PF BAR0.
 + * Use eth_tstorm_rss_update_data for update
 + */
 +#define TSTORM_ETH_RSS_UPDATE_OFFSET(pf_id) \
 +	(IRO[37].base + ((pf_id) * IRO[37].m1))
 +#define TSTORM_ETH_RSS_UPDATE_SIZE			(IRO[37].size)
 +
 +/* Xstorm queue zone */
 +#define XSTORM_ETH_QUEUE_ZONE_OFFSET(queue_id) \
 +	(IRO[38].base + ((queue_id) * IRO[38].m1))
 +#define XSTORM_ETH_QUEUE_ZONE_SIZE			(IRO[38].size)
 +
 +/* Ystorm cqe producer */
 +#define YSTORM_TOE_CQ_PROD_OFFSET(rss_id) \
 +	(IRO[39].base + ((rss_id) * IRO[39].m1))
 +#define YSTORM_TOE_CQ_PROD_SIZE				(IRO[39].size)
 +
 +/* Ustorm cqe producer */
 +#define USTORM_TOE_CQ_PROD_OFFSET(rss_id) \
 +	(IRO[40].base + ((rss_id) * IRO[40].m1))
 +#define USTORM_TOE_CQ_PROD_SIZE				(IRO[40].size)
 +
 +/* Ustorm grq producer */
 +#define USTORM_TOE_GRQ_PROD_OFFSET(pf_id) \
 +	(IRO[41].base + ((pf_id) * IRO[41].m1))
 +#define USTORM_TOE_GRQ_PROD_SIZE			(IRO[41].size)
 +
 +/* Tstorm cmdq-cons of given command queue-id */
 +#define TSTORM_SCSI_CMDQ_CONS_OFFSET(cmdq_queue_id) \
 +	(IRO[42].base + ((cmdq_queue_id) * IRO[42].m1))
 +#define TSTORM_SCSI_CMDQ_CONS_SIZE			(IRO[42].size)
 +
 +/* Tstorm (reflects M-Storm) bdq-external-producer of given function ID,
 + * BDqueue-id
 + */
 +#define TSTORM_SCSI_BDQ_EXT_PROD_OFFSET(storage_func_id, bdq_id) \
 +	(IRO[43].base + ((storage_func_id) * IRO[43].m1) + \
 +	 ((bdq_id) * IRO[43].m2))
 +#define TSTORM_SCSI_BDQ_EXT_PROD_SIZE			(IRO[43].size)
 +
 +/* Mstorm bdq-external-producer of given BDQ resource ID, BDqueue-id */
 +#define MSTORM_SCSI_BDQ_EXT_PROD_OFFSET(storage_func_id, bdq_id) \
 +	(IRO[44].base + ((storage_func_id) * IRO[44].m1) + \
 +	 ((bdq_id) * IRO[44].m2))
 +#define MSTORM_SCSI_BDQ_EXT_PROD_SIZE			(IRO[44].size)
 +
 +/* Tstorm iSCSI RX stats */
 +#define TSTORM_ISCSI_RX_STATS_OFFSET(storage_func_id) \
 +	(IRO[45].base + ((storage_func_id) * IRO[45].m1))
 +#define TSTORM_ISCSI_RX_STATS_SIZE			(IRO[45].size)
 +
 +/* Mstorm iSCSI RX stats */
 +#define MSTORM_ISCSI_RX_STATS_OFFSET(storage_func_id) \
 +	(IRO[46].base + ((storage_func_id) * IRO[46].m1))
 +#define MSTORM_ISCSI_RX_STATS_SIZE			(IRO[46].size)
 +
 +/* Ustorm iSCSI RX stats */
 +#define USTORM_ISCSI_RX_STATS_OFFSET(storage_func_id) \
 +	(IRO[47].base + ((storage_func_id) * IRO[47].m1))
 +#define USTORM_ISCSI_RX_STATS_SIZE			(IRO[47].size)
 +
 +/* Xstorm iSCSI TX stats */
 +#define XSTORM_ISCSI_TX_STATS_OFFSET(storage_func_id) \
 +	(IRO[48].base + ((storage_func_id) * IRO[48].m1))
 +#define XSTORM_ISCSI_TX_STATS_SIZE			(IRO[48].size)
 +
 +/* Ystorm iSCSI TX stats */
 +#define YSTORM_ISCSI_TX_STATS_OFFSET(storage_func_id) \
 +	(IRO[49].base + ((storage_func_id) * IRO[49].m1))
 +#define YSTORM_ISCSI_TX_STATS_SIZE			(IRO[49].size)
 +
 +/* Pstorm iSCSI TX stats */
 +#define PSTORM_ISCSI_TX_STATS_OFFSET(storage_func_id) \
 +	(IRO[50].base + ((storage_func_id) * IRO[50].m1))
 +#define PSTORM_ISCSI_TX_STATS_SIZE			(IRO[50].size)
 +
 +/* Tstorm FCoE RX stats */
 +#define TSTORM_FCOE_RX_STATS_OFFSET(pf_id) \
 +	(IRO[51].base + ((pf_id) * IRO[51].m1))
 +#define TSTORM_FCOE_RX_STATS_SIZE			(IRO[51].size)
 +
 +/* Pstorm FCoE TX stats */
 +#define PSTORM_FCOE_TX_STATS_OFFSET(pf_id) \
 +	(IRO[52].base + ((pf_id) * IRO[52].m1))
 +#define PSTORM_FCOE_TX_STATS_SIZE			(IRO[52].size)
 +
 +/* Pstorm RDMA queue statistics */
 +#define PSTORM_RDMA_QUEUE_STAT_OFFSET(rdma_stat_counter_id) \
 +	(IRO[53].base + ((rdma_stat_counter_id) * IRO[53].m1))
 +#define PSTORM_RDMA_QUEUE_STAT_SIZE			(IRO[53].size)
 +
 +/* Tstorm RDMA queue statistics */
 +#define TSTORM_RDMA_QUEUE_STAT_OFFSET(rdma_stat_counter_id) \
 +	(IRO[54].base + ((rdma_stat_counter_id) * IRO[54].m1))
 +#define TSTORM_RDMA_QUEUE_STAT_SIZE			(IRO[54].size)
 +
 +/* Xstorm error level for assert */
 +#define XSTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[55].base + ((pf_id) * IRO[55].m1))
 +#define XSTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[55].size)
 +
 +/* Ystorm error level for assert */
 +#define YSTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[56].base + ((pf_id) * IRO[56].m1))
 +#define YSTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[56].size)
 +
 +/* Pstorm error level for assert */
 +#define PSTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[57].base + ((pf_id) * IRO[57].m1))
 +#define PSTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[57].size)
 +
 +/* Tstorm error level for assert */
 +#define TSTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[58].base + ((pf_id) * IRO[58].m1))
 +#define TSTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[58].size)
 +
 +/* Mstorm error level for assert */
 +#define MSTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[59].base + ((pf_id) * IRO[59].m1))
 +#define MSTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[59].size)
 +
 +/* Ustorm error level for assert */
 +#define USTORM_RDMA_ASSERT_LEVEL_OFFSET(pf_id) \
 +	(IRO[60].base + ((pf_id) * IRO[60].m1))
 +#define USTORM_RDMA_ASSERT_LEVEL_SIZE			(IRO[60].size)
 +
 +/* Xstorm iWARP rxmit stats */
 +#define XSTORM_IWARP_RXMIT_STATS_OFFSET(pf_id) \
 +	(IRO[61].base + ((pf_id) * IRO[61].m1))
 +#define XSTORM_IWARP_RXMIT_STATS_SIZE			(IRO[61].size)
 +
 +/* Tstorm RoCE Event Statistics */
 +#define TSTORM_ROCE_EVENTS_STAT_OFFSET(roce_pf_id)	\
 +	(IRO[62].base + ((roce_pf_id) * IRO[62].m1))
 +#define TSTORM_ROCE_EVENTS_STAT_SIZE			(IRO[62].size)
 +
 +/* DCQCN Received Statistics */
 +#define YSTORM_ROCE_DCQCN_RECEIVED_STATS_OFFSET(roce_pf_id)\
 +	(IRO[63].base + ((roce_pf_id) * IRO[63].m1))
 +#define YSTORM_ROCE_DCQCN_RECEIVED_STATS_SIZE		(IRO[63].size)
 +
 +/* RoCE Error Statistics */
 +#define YSTORM_ROCE_ERROR_STATS_OFFSET(roce_pf_id)	\
 +	(IRO[64].base + ((roce_pf_id) * IRO[64].m1))
 +#define YSTORM_ROCE_ERROR_STATS_SIZE			(IRO[64].size)
 +
 +/* DCQCN Sent Statistics */
 +#define PSTORM_ROCE_DCQCN_SENT_STATS_OFFSET(roce_pf_id)	\
 +	(IRO[65].base + ((roce_pf_id) * IRO[65].m1))
 +#define PSTORM_ROCE_DCQCN_SENT_STATS_SIZE		(IRO[65].size)
 +
 +/* RoCE CQEs Statistics */
 +#define USTORM_ROCE_CQE_STATS_OFFSET(roce_pf_id)	\
 +	(IRO[66].base + ((roce_pf_id) * IRO[66].m1))
 +#define USTORM_ROCE_CQE_STATS_SIZE			(IRO[66].size)
  
 -	u8 accept_any_vlan;
 -	u8 silent_vlan_removal_en;
 -	u8 update_mtu_flg;
 +/* Runtime array offsets */
 +#define DORQ_REG_PF_MAX_ICID_0_RT_OFFSET				0
 +#define DORQ_REG_PF_MAX_ICID_1_RT_OFFSET				1
 +#define DORQ_REG_PF_MAX_ICID_2_RT_OFFSET				2
 +#define DORQ_REG_PF_MAX_ICID_3_RT_OFFSET				3
 +#define DORQ_REG_PF_MAX_ICID_4_RT_OFFSET				4
 +#define DORQ_REG_PF_MAX_ICID_5_RT_OFFSET				5
 +#define DORQ_REG_PF_MAX_ICID_6_RT_OFFSET				6
 +#define DORQ_REG_PF_MAX_ICID_7_RT_OFFSET				7
 +#define DORQ_REG_VF_MAX_ICID_0_RT_OFFSET				8
 +#define DORQ_REG_VF_MAX_ICID_1_RT_OFFSET				9
 +#define DORQ_REG_VF_MAX_ICID_2_RT_OFFSET				10
 +#define DORQ_REG_VF_MAX_ICID_3_RT_OFFSET				11
 +#define DORQ_REG_VF_MAX_ICID_4_RT_OFFSET				12
 +#define DORQ_REG_VF_MAX_ICID_5_RT_OFFSET				13
 +#define DORQ_REG_VF_MAX_ICID_6_RT_OFFSET				14
 +#define DORQ_REG_VF_MAX_ICID_7_RT_OFFSET				15
 +#define DORQ_REG_VF_ICID_BIT_SHIFT_NORM_RT_OFFSET			16
 +#define DORQ_REG_PF_WAKE_ALL_RT_OFFSET					17
 +#define DORQ_REG_TAG1_ETHERTYPE_RT_OFFSET				18
 +#define IGU_REG_PF_CONFIGURATION_RT_OFFSET				19
 +#define IGU_REG_VF_CONFIGURATION_RT_OFFSET				20
 +#define IGU_REG_ATTN_MSG_ADDR_L_RT_OFFSET				21
 +#define IGU_REG_ATTN_MSG_ADDR_H_RT_OFFSET				22
 +#define IGU_REG_LEADING_EDGE_LATCH_RT_OFFSET				23
 +#define IGU_REG_TRAILING_EDGE_LATCH_RT_OFFSET				24
 +#define CAU_REG_CQE_AGG_UNIT_SIZE_RT_OFFSET				25
 +#define CAU_REG_SB_VAR_MEMORY_RT_OFFSET					26
 +#define CAU_REG_SB_VAR_MEMORY_RT_SIZE					736
 +#define CAU_REG_SB_ADDR_MEMORY_RT_OFFSET				762
 +#define CAU_REG_SB_ADDR_MEMORY_RT_SIZE					736
 +#define CAU_REG_PI_MEMORY_RT_OFFSET					1498
 +#define CAU_REG_PI_MEMORY_RT_SIZE					4416
 +#define PRS_REG_SEARCH_RESP_INITIATOR_TYPE_RT_OFFSET			5914
 +#define PRS_REG_TASK_ID_MAX_INITIATOR_PF_RT_OFFSET			5915
 +#define PRS_REG_TASK_ID_MAX_INITIATOR_VF_RT_OFFSET			5916
 +#define PRS_REG_TASK_ID_MAX_TARGET_PF_RT_OFFSET				5917
 +#define PRS_REG_TASK_ID_MAX_TARGET_VF_RT_OFFSET				5918
 +#define PRS_REG_SEARCH_TCP_RT_OFFSET					5919
 +#define PRS_REG_SEARCH_FCOE_RT_OFFSET					5920
 +#define PRS_REG_SEARCH_ROCE_RT_OFFSET					5921
 +#define PRS_REG_ROCE_DEST_QP_MAX_VF_RT_OFFSET				5922
 +#define PRS_REG_ROCE_DEST_QP_MAX_PF_RT_OFFSET				5923
 +#define PRS_REG_SEARCH_OPENFLOW_RT_OFFSET				5924
 +#define PRS_REG_SEARCH_NON_IP_AS_OPENFLOW_RT_OFFSET			5925
 +#define PRS_REG_OPENFLOW_SUPPORT_ONLY_KNOWN_OVER_IP_RT_OFFSET		5926
 +#define PRS_REG_OPENFLOW_SEARCH_KEY_MASK_RT_OFFSET			5927
 +#define PRS_REG_TAG_ETHERTYPE_0_RT_OFFSET				5928
 +#define PRS_REG_LIGHT_L2_ETHERTYPE_EN_RT_OFFSET				5929
 +#define SRC_REG_FIRSTFREE_RT_OFFSET					5930
 +#define SRC_REG_FIRSTFREE_RT_SIZE					2
 +#define SRC_REG_LASTFREE_RT_OFFSET					5932
 +#define SRC_REG_LASTFREE_RT_SIZE					2
 +#define SRC_REG_COUNTFREE_RT_OFFSET					5934
 +#define SRC_REG_NUMBER_HASH_BITS_RT_OFFSET				5935
 +#define PSWRQ2_REG_CDUT_P_SIZE_RT_OFFSET				5936
 +#define PSWRQ2_REG_CDUC_P_SIZE_RT_OFFSET				5937
 +#define PSWRQ2_REG_TM_P_SIZE_RT_OFFSET					5938
 +#define PSWRQ2_REG_QM_P_SIZE_RT_OFFSET					5939
 +#define PSWRQ2_REG_SRC_P_SIZE_RT_OFFSET					5940
 +#define PSWRQ2_REG_TSDM_P_SIZE_RT_OFFSET				5941
 +#define PSWRQ2_REG_TM_FIRST_ILT_RT_OFFSET				5942
 +#define PSWRQ2_REG_TM_LAST_ILT_RT_OFFSET				5943
 +#define PSWRQ2_REG_QM_FIRST_ILT_RT_OFFSET				5944
 +#define PSWRQ2_REG_QM_LAST_ILT_RT_OFFSET				5945
 +#define PSWRQ2_REG_SRC_FIRST_ILT_RT_OFFSET				5946
 +#define PSWRQ2_REG_SRC_LAST_ILT_RT_OFFSET				5947
 +#define PSWRQ2_REG_CDUC_FIRST_ILT_RT_OFFSET				5948
 +#define PSWRQ2_REG_CDUC_LAST_ILT_RT_OFFSET				5949
 +#define PSWRQ2_REG_CDUT_FIRST_ILT_RT_OFFSET				5950
 +#define PSWRQ2_REG_CDUT_LAST_ILT_RT_OFFSET				5951
 +#define PSWRQ2_REG_TSDM_FIRST_ILT_RT_OFFSET				5952
 +#define PSWRQ2_REG_TSDM_LAST_ILT_RT_OFFSET				5953
 +#define PSWRQ2_REG_TM_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5954
 +#define PSWRQ2_REG_CDUT_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5955
 +#define PSWRQ2_REG_CDUC_NUMBER_OF_PF_BLOCKS_RT_OFFSET			5956
 +#define PSWRQ2_REG_TM_VF_BLOCKS_RT_OFFSET				5957
 +#define PSWRQ2_REG_CDUT_VF_BLOCKS_RT_OFFSET				5958
 +#define PSWRQ2_REG_CDUC_VF_BLOCKS_RT_OFFSET				5959
 +#define PSWRQ2_REG_TM_BLOCKS_FACTOR_RT_OFFSET				5960
 +#define PSWRQ2_REG_CDUT_BLOCKS_FACTOR_RT_OFFSET				5961
 +#define PSWRQ2_REG_CDUC_BLOCKS_FACTOR_RT_OFFSET				5962
 +#define PSWRQ2_REG_VF_BASE_RT_OFFSET					5963
 +#define PSWRQ2_REG_VF_LAST_ILT_RT_OFFSET				5964
 +#define PSWRQ2_REG_DRAM_ALIGN_WR_RT_OFFSET				5965
 +#define PSWRQ2_REG_DRAM_ALIGN_RD_RT_OFFSET				5966
 +#define PSWRQ2_REG_ILT_MEMORY_RT_OFFSET					5967
 +#define PSWRQ2_REG_ILT_MEMORY_RT_SIZE					22000
 +#define PGLUE_REG_B_VF_BASE_RT_OFFSET					27967
 +#define PGLUE_REG_B_MSDM_OFFSET_MASK_B_RT_OFFSET			27968
 +#define PGLUE_REG_B_MSDM_VF_SHIFT_B_RT_OFFSET				27969
 +#define PGLUE_REG_B_CACHE_LINE_SIZE_RT_OFFSET				27970
 +#define PGLUE_REG_B_PF_BAR0_SIZE_RT_OFFSET				27971
 +#define PGLUE_REG_B_PF_BAR1_SIZE_RT_OFFSET				27972
 +#define PGLUE_REG_B_VF_BAR1_SIZE_RT_OFFSET				27973
 +#define TM_REG_VF_ENABLE_CONN_RT_OFFSET					27974
 +#define TM_REG_PF_ENABLE_CONN_RT_OFFSET					27975
 +#define TM_REG_PF_ENABLE_TASK_RT_OFFSET					27976
 +#define TM_REG_GROUP_SIZE_RESOLUTION_CONN_RT_OFFSET			27977
 +#define TM_REG_GROUP_SIZE_RESOLUTION_TASK_RT_OFFSET			27978
 +#define TM_REG_CONFIG_CONN_MEM_RT_OFFSET				27979
 +#define TM_REG_CONFIG_CONN_MEM_RT_SIZE					416
 +#define TM_REG_CONFIG_TASK_MEM_RT_OFFSET				28395
 +#define TM_REG_CONFIG_TASK_MEM_RT_SIZE					512
 +#define QM_REG_MAXPQSIZE_0_RT_OFFSET					28907
 +#define QM_REG_MAXPQSIZE_1_RT_OFFSET					28908
 +#define QM_REG_MAXPQSIZE_2_RT_OFFSET					28909
 +#define QM_REG_MAXPQSIZETXSEL_0_RT_OFFSET				28910
 +#define QM_REG_MAXPQSIZETXSEL_1_RT_OFFSET				28911
 +#define QM_REG_MAXPQSIZETXSEL_2_RT_OFFSET				28912
 +#define QM_REG_MAXPQSIZETXSEL_3_RT_OFFSET				28913
 +#define QM_REG_MAXPQSIZETXSEL_4_RT_OFFSET				28914
 +#define QM_REG_MAXPQSIZETXSEL_5_RT_OFFSET				28915
 +#define QM_REG_MAXPQSIZETXSEL_6_RT_OFFSET				28916
 +#define QM_REG_MAXPQSIZETXSEL_7_RT_OFFSET				28917
 +#define QM_REG_MAXPQSIZETXSEL_8_RT_OFFSET				28918
 +#define QM_REG_MAXPQSIZETXSEL_9_RT_OFFSET				28919
 +#define QM_REG_MAXPQSIZETXSEL_10_RT_OFFSET				28920
 +#define QM_REG_MAXPQSIZETXSEL_11_RT_OFFSET				28921
 +#define QM_REG_MAXPQSIZETXSEL_12_RT_OFFSET				28922
 +#define QM_REG_MAXPQSIZETXSEL_13_RT_OFFSET				28923
 +#define QM_REG_MAXPQSIZETXSEL_14_RT_OFFSET				28924
 +#define QM_REG_MAXPQSIZETXSEL_15_RT_OFFSET				28925
 +#define QM_REG_MAXPQSIZETXSEL_16_RT_OFFSET				28926
 +#define QM_REG_MAXPQSIZETXSEL_17_RT_OFFSET				28927
 +#define QM_REG_MAXPQSIZETXSEL_18_RT_OFFSET				28928
 +#define QM_REG_MAXPQSIZETXSEL_19_RT_OFFSET				28929
 +#define QM_REG_MAXPQSIZETXSEL_20_RT_OFFSET				28930
 +#define QM_REG_MAXPQSIZETXSEL_21_RT_OFFSET				28931
 +#define QM_REG_MAXPQSIZETXSEL_22_RT_OFFSET				28932
 +#define QM_REG_MAXPQSIZETXSEL_23_RT_OFFSET				28933
 +#define QM_REG_MAXPQSIZETXSEL_24_RT_OFFSET				28934
 +#define QM_REG_MAXPQSIZETXSEL_25_RT_OFFSET				28935
 +#define QM_REG_MAXPQSIZETXSEL_26_RT_OFFSET				28936
 +#define QM_REG_MAXPQSIZETXSEL_27_RT_OFFSET				28937
 +#define QM_REG_MAXPQSIZETXSEL_28_RT_OFFSET				28938
 +#define QM_REG_MAXPQSIZETXSEL_29_RT_OFFSET				28939
 +#define QM_REG_MAXPQSIZETXSEL_30_RT_OFFSET				28940
 +#define QM_REG_MAXPQSIZETXSEL_31_RT_OFFSET				28941
 +#define QM_REG_MAXPQSIZETXSEL_32_RT_OFFSET				28942
 +#define QM_REG_MAXPQSIZETXSEL_33_RT_OFFSET				28943
 +#define QM_REG_MAXPQSIZETXSEL_34_RT_OFFSET				28944
 +#define QM_REG_MAXPQSIZETXSEL_35_RT_OFFSET				28945
 +#define QM_REG_MAXPQSIZETXSEL_36_RT_OFFSET				28946
 +#define QM_REG_MAXPQSIZETXSEL_37_RT_OFFSET				28947
 +#define QM_REG_MAXPQSIZETXSEL_38_RT_OFFSET				28948
 +#define QM_REG_MAXPQSIZETXSEL_39_RT_OFFSET				28949
 +#define QM_REG_MAXPQSIZETXSEL_40_RT_OFFSET				28950
 +#define QM_REG_MAXPQSIZETXSEL_41_RT_OFFSET				28951
 +#define QM_REG_MAXPQSIZETXSEL_42_RT_OFFSET				28952
 +#define QM_REG_MAXPQSIZETXSEL_43_RT_OFFSET				28953
 +#define QM_REG_MAXPQSIZETXSEL_44_RT_OFFSET				28954
 +#define QM_REG_MAXPQSIZETXSEL_45_RT_OFFSET				28955
 +#define QM_REG_MAXPQSIZETXSEL_46_RT_OFFSET				28956
 +#define QM_REG_MAXPQSIZETXSEL_47_RT_OFFSET				28957
 +#define QM_REG_MAXPQSIZETXSEL_48_RT_OFFSET				28958
 +#define QM_REG_MAXPQSIZETXSEL_49_RT_OFFSET				28959
 +#define QM_REG_MAXPQSIZETXSEL_50_RT_OFFSET				28960
 +#define QM_REG_MAXPQSIZETXSEL_51_RT_OFFSET				28961
 +#define QM_REG_MAXPQSIZETXSEL_52_RT_OFFSET				28962
 +#define QM_REG_MAXPQSIZETXSEL_53_RT_OFFSET				28963
 +#define QM_REG_MAXPQSIZETXSEL_54_RT_OFFSET				28964
 +#define QM_REG_MAXPQSIZETXSEL_55_RT_OFFSET				28965
 +#define QM_REG_MAXPQSIZETXSEL_56_RT_OFFSET				28966
 +#define QM_REG_MAXPQSIZETXSEL_57_RT_OFFSET				28967
 +#define QM_REG_MAXPQSIZETXSEL_58_RT_OFFSET				28968
 +#define QM_REG_MAXPQSIZETXSEL_59_RT_OFFSET				28969
 +#define QM_REG_MAXPQSIZETXSEL_60_RT_OFFSET				28970
 +#define QM_REG_MAXPQSIZETXSEL_61_RT_OFFSET				28971
 +#define QM_REG_MAXPQSIZETXSEL_62_RT_OFFSET				28972
 +#define QM_REG_MAXPQSIZETXSEL_63_RT_OFFSET				28973
 +#define QM_REG_BASEADDROTHERPQ_RT_OFFSET				28974
 +#define QM_REG_BASEADDROTHERPQ_RT_SIZE					128
 +#define QM_REG_PTRTBLOTHER_RT_OFFSET					29102
 +#define QM_REG_PTRTBLOTHER_RT_SIZE					256
 +#define QM_REG_VOQCRDLINE_RT_OFFSET					29358
 +#define QM_REG_VOQCRDLINE_RT_SIZE					20
 +#define QM_REG_VOQINITCRDLINE_RT_OFFSET					29378
 +#define QM_REG_VOQINITCRDLINE_RT_SIZE					20
 +#define QM_REG_AFULLQMBYPTHRPFWFQ_RT_OFFSET				29398
 +#define QM_REG_AFULLQMBYPTHRVPWFQ_RT_OFFSET				29399
 +#define QM_REG_AFULLQMBYPTHRPFRL_RT_OFFSET				29400
 +#define QM_REG_AFULLQMBYPTHRGLBLRL_RT_OFFSET				29401
 +#define QM_REG_AFULLOPRTNSTCCRDMASK_RT_OFFSET				29402
 +#define QM_REG_WRROTHERPQGRP_0_RT_OFFSET				29403
 +#define QM_REG_WRROTHERPQGRP_1_RT_OFFSET				29404
 +#define QM_REG_WRROTHERPQGRP_2_RT_OFFSET				29405
 +#define QM_REG_WRROTHERPQGRP_3_RT_OFFSET				29406
 +#define QM_REG_WRROTHERPQGRP_4_RT_OFFSET				29407
 +#define QM_REG_WRROTHERPQGRP_5_RT_OFFSET				29408
 +#define QM_REG_WRROTHERPQGRP_6_RT_OFFSET				29409
 +#define QM_REG_WRROTHERPQGRP_7_RT_OFFSET				29410
 +#define QM_REG_WRROTHERPQGRP_8_RT_OFFSET				29411
 +#define QM_REG_WRROTHERPQGRP_9_RT_OFFSET				29412
 +#define QM_REG_WRROTHERPQGRP_10_RT_OFFSET				29413
 +#define QM_REG_WRROTHERPQGRP_11_RT_OFFSET				29414
 +#define QM_REG_WRROTHERPQGRP_12_RT_OFFSET				29415
 +#define QM_REG_WRROTHERPQGRP_13_RT_OFFSET				29416
 +#define QM_REG_WRROTHERPQGRP_14_RT_OFFSET				29417
 +#define QM_REG_WRROTHERPQGRP_15_RT_OFFSET				29418
 +#define QM_REG_WRROTHERGRPWEIGHT_0_RT_OFFSET				29419
 +#define QM_REG_WRROTHERGRPWEIGHT_1_RT_OFFSET				29420
 +#define QM_REG_WRROTHERGRPWEIGHT_2_RT_OFFSET				29421
 +#define QM_REG_WRROTHERGRPWEIGHT_3_RT_OFFSET				29422
 +#define QM_REG_WRRTXGRPWEIGHT_0_RT_OFFSET				29423
 +#define QM_REG_WRRTXGRPWEIGHT_1_RT_OFFSET				29424
 +#define QM_REG_PQTX2PF_0_RT_OFFSET					29425
 +#define QM_REG_PQTX2PF_1_RT_OFFSET					29426
 +#define QM_REG_PQTX2PF_2_RT_OFFSET					29427
 +#define QM_REG_PQTX2PF_3_RT_OFFSET					29428
 +#define QM_REG_PQTX2PF_4_RT_OFFSET					29429
 +#define QM_REG_PQTX2PF_5_RT_OFFSET					29430
 +#define QM_REG_PQTX2PF_6_RT_OFFSET					29431
 +#define QM_REG_PQTX2PF_7_RT_OFFSET					29432
 +#define QM_REG_PQTX2PF_8_RT_OFFSET					29433
 +#define QM_REG_PQTX2PF_9_RT_OFFSET					29434
 +#define QM_REG_PQTX2PF_10_RT_OFFSET					29435
 +#define QM_REG_PQTX2PF_11_RT_OFFSET					29436
 +#define QM_REG_PQTX2PF_12_RT_OFFSET					29437
 +#define QM_REG_PQTX2PF_13_RT_OFFSET					29438
 +#define QM_REG_PQTX2PF_14_RT_OFFSET					29439
 +#define QM_REG_PQTX2PF_15_RT_OFFSET					29440
 +#define QM_REG_PQTX2PF_16_RT_OFFSET					29441
 +#define QM_REG_PQTX2PF_17_RT_OFFSET					29442
 +#define QM_REG_PQTX2PF_18_RT_OFFSET					29443
 +#define QM_REG_PQTX2PF_19_RT_OFFSET					29444
 +#define QM_REG_PQTX2PF_20_RT_OFFSET					29445
 +#define QM_REG_PQTX2PF_21_RT_OFFSET					29446
 +#define QM_REG_PQTX2PF_22_RT_OFFSET					29447
 +#define QM_REG_PQTX2PF_23_RT_OFFSET					29448
 +#define QM_REG_PQTX2PF_24_RT_OFFSET					29449
 +#define QM_REG_PQTX2PF_25_RT_OFFSET					29450
 +#define QM_REG_PQTX2PF_26_RT_OFFSET					29451
 +#define QM_REG_PQTX2PF_27_RT_OFFSET					29452
 +#define QM_REG_PQTX2PF_28_RT_OFFSET					29453
 +#define QM_REG_PQTX2PF_29_RT_OFFSET					29454
 +#define QM_REG_PQTX2PF_30_RT_OFFSET					29455
 +#define QM_REG_PQTX2PF_31_RT_OFFSET					29456
 +#define QM_REG_PQTX2PF_32_RT_OFFSET					29457
 +#define QM_REG_PQTX2PF_33_RT_OFFSET					29458
 +#define QM_REG_PQTX2PF_34_RT_OFFSET					29459
 +#define QM_REG_PQTX2PF_35_RT_OFFSET					29460
 +#define QM_REG_PQTX2PF_36_RT_OFFSET					29461
 +#define QM_REG_PQTX2PF_37_RT_OFFSET					29462
 +#define QM_REG_PQTX2PF_38_RT_OFFSET					29463
 +#define QM_REG_PQTX2PF_39_RT_OFFSET					29464
 +#define QM_REG_PQTX2PF_40_RT_OFFSET					29465
 +#define QM_REG_PQTX2PF_41_RT_OFFSET					29466
 +#define QM_REG_PQTX2PF_42_RT_OFFSET					29467
 +#define QM_REG_PQTX2PF_43_RT_OFFSET					29468
 +#define QM_REG_PQTX2PF_44_RT_OFFSET					29469
 +#define QM_REG_PQTX2PF_45_RT_OFFSET					29470
 +#define QM_REG_PQTX2PF_46_RT_OFFSET					29471
 +#define QM_REG_PQTX2PF_47_RT_OFFSET					29472
 +#define QM_REG_PQTX2PF_48_RT_OFFSET					29473
 +#define QM_REG_PQTX2PF_49_RT_OFFSET					29474
 +#define QM_REG_PQTX2PF_50_RT_OFFSET					29475
 +#define QM_REG_PQTX2PF_51_RT_OFFSET					29476
 +#define QM_REG_PQTX2PF_52_RT_OFFSET					29477
 +#define QM_REG_PQTX2PF_53_RT_OFFSET					29478
 +#define QM_REG_PQTX2PF_54_RT_OFFSET					29479
 +#define QM_REG_PQTX2PF_55_RT_OFFSET					29480
 +#define QM_REG_PQTX2PF_56_RT_OFFSET					29481
 +#define QM_REG_PQTX2PF_57_RT_OFFSET					29482
 +#define QM_REG_PQTX2PF_58_RT_OFFSET					29483
 +#define QM_REG_PQTX2PF_59_RT_OFFSET					29484
 +#define QM_REG_PQTX2PF_60_RT_OFFSET					29485
 +#define QM_REG_PQTX2PF_61_RT_OFFSET					29486
 +#define QM_REG_PQTX2PF_62_RT_OFFSET					29487
 +#define QM_REG_PQTX2PF_63_RT_OFFSET					29488
 +#define QM_REG_PQOTHER2PF_0_RT_OFFSET					29489
 +#define QM_REG_PQOTHER2PF_1_RT_OFFSET					29490
 +#define QM_REG_PQOTHER2PF_2_RT_OFFSET					29491
 +#define QM_REG_PQOTHER2PF_3_RT_OFFSET					29492
 +#define QM_REG_PQOTHER2PF_4_RT_OFFSET					29493
 +#define QM_REG_PQOTHER2PF_5_RT_OFFSET					29494
 +#define QM_REG_PQOTHER2PF_6_RT_OFFSET					29495
 +#define QM_REG_PQOTHER2PF_7_RT_OFFSET					29496
 +#define QM_REG_PQOTHER2PF_8_RT_OFFSET					29497
 +#define QM_REG_PQOTHER2PF_9_RT_OFFSET					29498
 +#define QM_REG_PQOTHER2PF_10_RT_OFFSET					29499
 +#define QM_REG_PQOTHER2PF_11_RT_OFFSET					29500
 +#define QM_REG_PQOTHER2PF_12_RT_OFFSET					29501
 +#define QM_REG_PQOTHER2PF_13_RT_OFFSET					29502
 +#define QM_REG_PQOTHER2PF_14_RT_OFFSET					29503
 +#define QM_REG_PQOTHER2PF_15_RT_OFFSET					29504
 +#define QM_REG_RLGLBLPERIOD_0_RT_OFFSET					29505
 +#define QM_REG_RLGLBLPERIOD_1_RT_OFFSET					29506
 +#define QM_REG_RLGLBLPERIODTIMER_0_RT_OFFSET				29507
 +#define QM_REG_RLGLBLPERIODTIMER_1_RT_OFFSET				29508
 +#define QM_REG_RLGLBLPERIODSEL_0_RT_OFFSET				29509
 +#define QM_REG_RLGLBLPERIODSEL_1_RT_OFFSET				29510
 +#define QM_REG_RLGLBLPERIODSEL_2_RT_OFFSET				29511
 +#define QM_REG_RLGLBLPERIODSEL_3_RT_OFFSET				29512
 +#define QM_REG_RLGLBLPERIODSEL_4_RT_OFFSET				29513
 +#define QM_REG_RLGLBLPERIODSEL_5_RT_OFFSET				29514
 +#define QM_REG_RLGLBLPERIODSEL_6_RT_OFFSET				29515
 +#define QM_REG_RLGLBLPERIODSEL_7_RT_OFFSET				29516
 +#define QM_REG_RLGLBLINCVAL_RT_OFFSET					29517
 +#define QM_REG_RLGLBLINCVAL_RT_SIZE					256
 +#define QM_REG_RLGLBLUPPERBOUND_RT_OFFSET				29773
 +#define QM_REG_RLGLBLUPPERBOUND_RT_SIZE					256
 +#define QM_REG_RLGLBLCRD_RT_OFFSET					30029
 +#define QM_REG_RLGLBLCRD_RT_SIZE					256
 +#define QM_REG_RLGLBLENABLE_RT_OFFSET					30285
 +#define QM_REG_RLPFPERIOD_RT_OFFSET					30286
 +#define QM_REG_RLPFPERIODTIMER_RT_OFFSET				30287
 +#define QM_REG_RLPFINCVAL_RT_OFFSET					30288
 +#define QM_REG_RLPFINCVAL_RT_SIZE					16
 +#define QM_REG_RLPFUPPERBOUND_RT_OFFSET					30304
 +#define QM_REG_RLPFUPPERBOUND_RT_SIZE					16
 +#define QM_REG_RLPFCRD_RT_OFFSET					30320
 +#define QM_REG_RLPFCRD_RT_SIZE						16
 +#define QM_REG_RLPFENABLE_RT_OFFSET					30336
 +#define QM_REG_RLPFVOQENABLE_RT_OFFSET					30337
 +#define QM_REG_WFQPFWEIGHT_RT_OFFSET					30338
 +#define QM_REG_WFQPFWEIGHT_RT_SIZE					16
 +#define QM_REG_WFQPFUPPERBOUND_RT_OFFSET				30354
 +#define QM_REG_WFQPFUPPERBOUND_RT_SIZE					16
 +#define QM_REG_WFQPFCRD_RT_OFFSET					30370
 +#define QM_REG_WFQPFCRD_RT_SIZE						160
 +#define QM_REG_WFQPFENABLE_RT_OFFSET					30530
 +#define QM_REG_WFQVPENABLE_RT_OFFSET					30531
 +#define QM_REG_BASEADDRTXPQ_RT_OFFSET					30532
 +#define QM_REG_BASEADDRTXPQ_RT_SIZE					512
 +#define QM_REG_TXPQMAP_RT_OFFSET					31044
 +#define QM_REG_TXPQMAP_RT_SIZE						512
 +#define QM_REG_WFQVPWEIGHT_RT_OFFSET					31556
 +#define QM_REG_WFQVPWEIGHT_RT_SIZE					512
 +#define QM_REG_WFQVPCRD_RT_OFFSET					32068
 +#define QM_REG_WFQVPCRD_RT_SIZE						512
 +#define QM_REG_WFQVPMAP_RT_OFFSET					32580
 +#define QM_REG_WFQVPMAP_RT_SIZE						512
 +#define QM_REG_PTRTBLTX_RT_OFFSET					33092
 +#define QM_REG_PTRTBLTX_RT_SIZE						1024
 +#define QM_REG_WFQPFCRD_MSB_RT_OFFSET					34116
 +#define QM_REG_WFQPFCRD_MSB_RT_SIZE					160
 +#define NIG_REG_TAG_ETHERTYPE_0_RT_OFFSET				34276
 +#define NIG_REG_BRB_GATE_DNTFWD_PORT_RT_OFFSET				34277
 +#define NIG_REG_OUTER_TAG_VALUE_LIST0_RT_OFFSET				34278
 +#define NIG_REG_OUTER_TAG_VALUE_LIST1_RT_OFFSET				34279
 +#define NIG_REG_OUTER_TAG_VALUE_LIST2_RT_OFFSET				34280
 +#define NIG_REG_OUTER_TAG_VALUE_LIST3_RT_OFFSET				34281
 +#define NIG_REG_LLH_FUNC_TAGMAC_CLS_TYPE_RT_OFFSET			34282
 +#define NIG_REG_LLH_FUNC_TAG_EN_RT_OFFSET				34283
 +#define NIG_REG_LLH_FUNC_TAG_EN_RT_SIZE					4
 +#define NIG_REG_LLH_FUNC_TAG_VALUE_RT_OFFSET				34287
 +#define NIG_REG_LLH_FUNC_TAG_VALUE_RT_SIZE				4
 +#define NIG_REG_LLH_FUNC_FILTER_VALUE_RT_OFFSET				34291
 +#define NIG_REG_LLH_FUNC_FILTER_VALUE_RT_SIZE				32
 +#define NIG_REG_LLH_FUNC_FILTER_EN_RT_OFFSET				34323
 +#define NIG_REG_LLH_FUNC_FILTER_EN_RT_SIZE				16
 +#define NIG_REG_LLH_FUNC_FILTER_MODE_RT_OFFSET				34339
 +#define NIG_REG_LLH_FUNC_FILTER_MODE_RT_SIZE				16
 +#define NIG_REG_LLH_FUNC_FILTER_PROTOCOL_TYPE_RT_OFFSET			34355
 +#define NIG_REG_LLH_FUNC_FILTER_PROTOCOL_TYPE_RT_SIZE			16
 +#define NIG_REG_LLH_FUNC_FILTER_HDR_SEL_RT_OFFSET			34371
 +#define NIG_REG_LLH_FUNC_FILTER_HDR_SEL_RT_SIZE				16
 +#define NIG_REG_TX_EDPM_CTRL_RT_OFFSET					34387
 +#define NIG_REG_PPF_TO_ENGINE_SEL_RT_OFFSET				34388
 +#define NIG_REG_PPF_TO_ENGINE_SEL_RT_SIZE				8
 +#define CDU_REG_CID_ADDR_PARAMS_RT_OFFSET				34396
 +#define CDU_REG_SEGMENT0_PARAMS_RT_OFFSET				34397
 +#define CDU_REG_SEGMENT1_PARAMS_RT_OFFSET				34398
 +#define CDU_REG_PF_SEG0_TYPE_OFFSET_RT_OFFSET				34399
 +#define CDU_REG_PF_SEG1_TYPE_OFFSET_RT_OFFSET				34400
 +#define CDU_REG_PF_SEG2_TYPE_OFFSET_RT_OFFSET				34401
 +#define CDU_REG_PF_SEG3_TYPE_OFFSET_RT_OFFSET				34402
 +#define CDU_REG_PF_FL_SEG0_TYPE_OFFSET_RT_OFFSET			34403
 +#define CDU_REG_PF_FL_SEG1_TYPE_OFFSET_RT_OFFSET			34404
 +#define CDU_REG_PF_FL_SEG2_TYPE_OFFSET_RT_OFFSET			34405
 +#define CDU_REG_PF_FL_SEG3_TYPE_OFFSET_RT_OFFSET			34406
 +#define CDU_REG_VF_SEG_TYPE_OFFSET_RT_OFFSET				34407
 +#define CDU_REG_VF_FL_SEG_TYPE_OFFSET_RT_OFFSET				34408
 +#define PBF_REG_TAG_ETHERTYPE_0_RT_OFFSET				34409
 +#define PBF_REG_BTB_SHARED_AREA_SIZE_RT_OFFSET				34410
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ0_RT_OFFSET			34411
 +#define PBF_REG_BTB_GUARANTEED_VOQ0_RT_OFFSET				34412
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ0_RT_OFFSET			34413
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ1_RT_OFFSET			34414
 +#define PBF_REG_BTB_GUARANTEED_VOQ1_RT_OFFSET				34415
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ1_RT_OFFSET			34416
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ2_RT_OFFSET			34417
 +#define PBF_REG_BTB_GUARANTEED_VOQ2_RT_OFFSET				34418
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ2_RT_OFFSET			34419
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ3_RT_OFFSET			34420
 +#define PBF_REG_BTB_GUARANTEED_VOQ3_RT_OFFSET				34421
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ3_RT_OFFSET			34422
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ4_RT_OFFSET			34423
 +#define PBF_REG_BTB_GUARANTEED_VOQ4_RT_OFFSET				34424
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ4_RT_OFFSET			34425
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ5_RT_OFFSET			34426
 +#define PBF_REG_BTB_GUARANTEED_VOQ5_RT_OFFSET				34427
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ5_RT_OFFSET			34428
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ6_RT_OFFSET			34429
 +#define PBF_REG_BTB_GUARANTEED_VOQ6_RT_OFFSET				34430
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ6_RT_OFFSET			34431
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ7_RT_OFFSET			34432
 +#define PBF_REG_BTB_GUARANTEED_VOQ7_RT_OFFSET				34433
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ7_RT_OFFSET			34434
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ8_RT_OFFSET			34435
 +#define PBF_REG_BTB_GUARANTEED_VOQ8_RT_OFFSET				34436
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ8_RT_OFFSET			34437
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ9_RT_OFFSET			34438
 +#define PBF_REG_BTB_GUARANTEED_VOQ9_RT_OFFSET				34439
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ9_RT_OFFSET			34440
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ10_RT_OFFSET			34441
 +#define PBF_REG_BTB_GUARANTEED_VOQ10_RT_OFFSET				34442
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ10_RT_OFFSET			34443
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ11_RT_OFFSET			34444
 +#define PBF_REG_BTB_GUARANTEED_VOQ11_RT_OFFSET				34445
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ11_RT_OFFSET			34446
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ12_RT_OFFSET			34447
 +#define PBF_REG_BTB_GUARANTEED_VOQ12_RT_OFFSET				34448
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ12_RT_OFFSET			34449
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ13_RT_OFFSET			34450
 +#define PBF_REG_BTB_GUARANTEED_VOQ13_RT_OFFSET				34451
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ13_RT_OFFSET			34452
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ14_RT_OFFSET			34453
 +#define PBF_REG_BTB_GUARANTEED_VOQ14_RT_OFFSET				34454
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ14_RT_OFFSET			34455
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ15_RT_OFFSET			34456
 +#define PBF_REG_BTB_GUARANTEED_VOQ15_RT_OFFSET				34457
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ15_RT_OFFSET			34458
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ16_RT_OFFSET			34459
 +#define PBF_REG_BTB_GUARANTEED_VOQ16_RT_OFFSET				34460
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ16_RT_OFFSET			34461
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ17_RT_OFFSET			34462
 +#define PBF_REG_BTB_GUARANTEED_VOQ17_RT_OFFSET				34463
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ17_RT_OFFSET			34464
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ18_RT_OFFSET			34465
 +#define PBF_REG_BTB_GUARANTEED_VOQ18_RT_OFFSET				34466
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ18_RT_OFFSET			34467
 +#define PBF_REG_YCMD_QS_NUM_LINES_VOQ19_RT_OFFSET			34468
 +#define PBF_REG_BTB_GUARANTEED_VOQ19_RT_OFFSET				34469
 +#define PBF_REG_BTB_SHARED_AREA_SETUP_VOQ19_RT_OFFSET			34470
 +#define XCM_REG_CON_PHY_Q3_RT_OFFSET					34471
 +
 +#define RUNTIME_ARRAY_SIZE 34472
  
 -	__le16 mtu;
 -	u8 update_ctl_frame_checks_en_flg;
 -	u8 ctl_frame_mac_check_en;
 -	u8 ctl_frame_ethtype_check_en;
 -	u8 update_in_to_in_pri_map_mode;
 -	u8 in_to_in_pri_map[8];
 -	u8 update_tx_dst_port_mode_flg;
 -	u8 tx_dst_port_mode_config;
 -	u8 dst_vport_id;
 -	u8 tx_dst_port_mode;
 -	u8 dst_vport_id_valid;
 -	u8 reserved[1];
 -};
 +/* Init Callbacks */
 +#define DMAE_READY_CB	0
  
 -struct vport_update_ramrod_mcast {
 -	__le32 bins[ETH_MULTICAST_MAC_BINS_IN_REGS];
 +/* The eth storm context for the Tstorm */
 +struct tstorm_eth_conn_st_ctx {
 +	__le32 reserved[4];
  };
  
 -/* Ramrod data for vport update ramrod */
 -struct vport_update_ramrod_data {
 -	struct vport_update_ramrod_data_cmn common;
 -
 -	struct eth_vport_rx_mode rx_mode;
 -	struct eth_vport_tx_mode tx_mode;
 -	__le32 reserved[3];
 -	struct eth_vport_tpa_param tpa_param;
 -	struct vport_update_ramrod_mcast approx_mcast;
 -	struct eth_vport_rss_config rss_config;
 +/* The eth storm context for the Pstorm */
 +struct pstorm_eth_conn_st_ctx {
 +	__le32 reserved[8];
  };
  
 -struct xstorm_eth_conn_ag_ctx_dq_ext_ldpart {
 -	u8 reserved0;
 -	u8 state;
 -	u8 flags0;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EXIST_IN_QM0_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EXIST_IN_QM0_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED1_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED1_SHIFT		1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED2_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED2_SHIFT		2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EXIST_IN_QM3_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EXIST_IN_QM3_SHIFT	3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED3_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED3_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED4_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED4_SHIFT		5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED5_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED5_SHIFT		6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED6_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED6_SHIFT		7
 -	u8 flags1;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED7_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED7_SHIFT		0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED8_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED8_SHIFT		1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED9_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED9_SHIFT		2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_BIT11_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_BIT11_SHIFT		3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_E5_RESERVED2_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_E5_RESERVED2_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_E5_RESERVED3_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_E5_RESERVED3_SHIFT	5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TX_RULE_ACTIVE_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TX_RULE_ACTIVE_SHIFT	6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_ACTIVE_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_ACTIVE_SHIFT	7
 +/* The eth storm context for the Xstorm */
 +struct xstorm_eth_conn_st_ctx {
 +	__le32 reserved[60];
 +};
 +
 +struct xstorm_eth_conn_ag_ctx {
 +	u8 reserved0;
 +	u8 state;
 +	u8 flags0;
 +#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM0_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM0_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED1_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED1_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED2_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED2_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM3_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EXIST_IN_QM3_SHIFT	3
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED3_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED3_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED4_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED4_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED5_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED5_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED6_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED6_SHIFT	7
 +		u8 flags1;
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED7_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED7_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED8_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED8_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED9_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED9_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_BIT11_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_BIT11_SHIFT		3
 +#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED2_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED2_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED3_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_E5_RESERVED3_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_TX_RULE_ACTIVE_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_TX_RULE_ACTIVE_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_ACTIVE_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_ACTIVE_SHIFT	7
  	u8 flags2;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF0_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF0_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF1_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF1_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF2_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF2_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF3_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF3_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_CF0_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF0_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_CF1_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF1_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_CF2_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF2_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF3_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF3_SHIFT	6
  	u8 flags3;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF4_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF4_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF5_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF5_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF6_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF6_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF7_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF7_SHIFT	6
 -	u8 flags4;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF8_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF8_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF9_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF9_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF10_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF10_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF11_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF11_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_CF4_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF4_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_CF5_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF5_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_CF6_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF6_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF7_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF7_SHIFT	6
 +		u8 flags4;
 +#define XSTORM_ETH_CONN_AG_CTX_CF8_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF8_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_CF9_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF9_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_CF10_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF10_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF11_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF11_SHIFT	6
  	u8 flags5;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF12_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF12_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF13_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF13_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF14_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF14_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF15_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF15_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_CF12_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF12_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_CF13_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF13_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_CF14_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF14_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF15_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_CF15_SHIFT	6
  	u8 flags6;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_GO_TO_BD_CONS_CF_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_GO_TO_BD_CONS_CF_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_MULTI_UNICAST_CF_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_MULTI_UNICAST_CF_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_MASK		0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TERMINATE_CF_MASK	0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TERMINATE_CF_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_MASK		0x3
 +#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_MASK		0x3
 +#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_MASK			0x3
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_SHIFT			4
 +#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_MASK		0x3
 +#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_SHIFT		6
  	u8 flags7;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_FLUSH_Q0_MASK		0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_FLUSH_Q0_SHIFT		0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED10_MASK		0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED10_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_SLOW_PATH_MASK		0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_SLOW_PATH_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF0EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF0EN_SHIFT		6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF1EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF1EN_SHIFT		7
 +#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_MASK		0x3
 +#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED10_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED10_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_MASK	0x3
 +#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF0EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF0EN_SHIFT		6
 +#define XSTORM_ETH_CONN_AG_CTX_CF1EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF1EN_SHIFT		7
  	u8 flags8;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF2EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF2EN_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF3EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF3EN_SHIFT	1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF4EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF4EN_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF5EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF5EN_SHIFT	3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF6EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF6EN_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF7EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF7EN_SHIFT	5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF8EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF8EN_SHIFT	6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF9EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF9EN_SHIFT	7
 +#define XSTORM_ETH_CONN_AG_CTX_CF2EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF2EN_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_CF3EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF3EN_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_CF4EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF4EN_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_CF5EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF5EN_SHIFT	3
 +#define XSTORM_ETH_CONN_AG_CTX_CF6EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF6EN_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_CF7EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF7EN_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_CF8EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF8EN_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_CF9EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF9EN_SHIFT	7
  	u8 flags9;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF10EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF10EN_SHIFT			0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF11EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF11EN_SHIFT			1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF12EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF12EN_SHIFT			2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF13EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF13EN_SHIFT			3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF14EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF14EN_SHIFT			4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF15EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_CF15EN_SHIFT			5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_GO_TO_BD_CONS_CF_EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_GO_TO_BD_CONS_CF_EN_SHIFT	6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_MULTI_UNICAST_CF_EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_MULTI_UNICAST_CF_EN_SHIFT	7
 +#define XSTORM_ETH_CONN_AG_CTX_CF10EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF10EN_SHIFT			0
 +#define XSTORM_ETH_CONN_AG_CTX_CF11EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF11EN_SHIFT			1
 +#define XSTORM_ETH_CONN_AG_CTX_CF12EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF12EN_SHIFT			2
 +#define XSTORM_ETH_CONN_AG_CTX_CF13EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF13EN_SHIFT			3
 +#define XSTORM_ETH_CONN_AG_CTX_CF14EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF14EN_SHIFT			4
 +#define XSTORM_ETH_CONN_AG_CTX_CF15EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_CF15EN_SHIFT			5
 +#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_GO_TO_BD_CONS_CF_EN_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_MULTI_UNICAST_CF_EN_SHIFT	7
  	u8 flags10;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_EN_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_DQ_CF_EN_SHIFT			0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TERMINATE_CF_EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TERMINATE_CF_EN_SHIFT		1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_FLUSH_Q0_EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_FLUSH_Q0_EN_SHIFT		2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED11_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED11_SHIFT		3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_SLOW_PATH_EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_SLOW_PATH_EN_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TPH_ENABLE_EN_RESERVED_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TPH_ENABLE_EN_RESERVED_SHIFT	5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED12_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED12_SHIFT		6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED13_MASK			0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED13_SHIFT		7
 -	u8 flags11;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED14_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED14_SHIFT	0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED15_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RESERVED15_SHIFT	1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TX_DEC_RULE_EN_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TX_DEC_RULE_EN_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE5EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE5EN_SHIFT		3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE6EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE6EN_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE7EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE7EN_SHIFT		5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED1_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED1_SHIFT	6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE9EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE9EN_SHIFT		7
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_EN_MASK			0x1
 +#define XSTORM_ETH_CONN_AG_CTX_DQ_CF_EN_SHIFT		0
 +#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_TERMINATE_CF_EN_SHIFT		1
 +#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_FLUSH_Q0_EN_SHIFT		2
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED11_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED11_SHIFT		3
 +#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_SLOW_PATH_EN_SHIFT		4
 +#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_EN_RESERVED_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_EN_RESERVED_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED12_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED12_SHIFT		6
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED13_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED13_SHIFT		7
 +	u8 flags11;
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED14_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED14_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED15_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RESERVED15_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_TX_DEC_RULE_EN_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_TX_DEC_RULE_EN_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_RULE5EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE5EN_SHIFT		3
 +#define XSTORM_ETH_CONN_AG_CTX_RULE6EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE6EN_SHIFT		4
 +#define XSTORM_ETH_CONN_AG_CTX_RULE7EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE7EN_SHIFT		5
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED1_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED1_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_RULE9EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE9EN_SHIFT		7
  	u8 flags12;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE10EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE10EN_SHIFT		0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE11EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE11EN_SHIFT		1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED2_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED2_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED3_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED3_SHIFT	3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE14EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE14EN_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE15EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE15EN_SHIFT		5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE16EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE16EN_SHIFT		6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE17EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE17EN_SHIFT		7
 +#define XSTORM_ETH_CONN_AG_CTX_RULE10EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE10EN_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RULE11EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE11EN_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED2_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED2_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED3_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED3_SHIFT	3
 +#define XSTORM_ETH_CONN_AG_CTX_RULE14EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE14EN_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_RULE15EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE15EN_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_RULE16EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE16EN_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_RULE17EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE17EN_SHIFT	7
  	u8 flags13;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE18EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE18EN_SHIFT		0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE19EN_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_RULE19EN_SHIFT		1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED4_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED4_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED5_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED5_SHIFT	3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED6_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED6_SHIFT	4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED7_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED7_SHIFT	5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED8_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED8_SHIFT	6
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED9_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_A0_RESERVED9_SHIFT	7
 +#define XSTORM_ETH_CONN_AG_CTX_RULE18EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE18EN_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_RULE19EN_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_RULE19EN_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED4_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED4_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED5_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED5_SHIFT	3
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED6_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED6_SHIFT	4
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED7_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED7_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED8_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED8_SHIFT	6
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED9_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_A0_RESERVED9_SHIFT	7
  	u8 flags14;
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_USE_EXT_HDR_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_USE_EXT_HDR_SHIFT		0
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_SEND_RAW_L3L4_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_SEND_RAW_L3L4_SHIFT	1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_INBAND_PROP_HDR_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_INBAND_PROP_HDR_SHIFT	2
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_SEND_EXT_TUNNEL_MASK	0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_EDPM_SEND_EXT_TUNNEL_SHIFT	3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_L2_EDPM_ENABLE_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_L2_EDPM_ENABLE_SHIFT		4
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_ROCE_EDPM_ENABLE_MASK		0x1
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_ROCE_EDPM_ENABLE_SHIFT		5
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TPH_ENABLE_MASK			0x3
 -#define E4XSTORMETHCONNAGCTXDQEXTLDPART_TPH_ENABLE_SHIFT		6
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_USE_EXT_HDR_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_USE_EXT_HDR_SHIFT	0
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_RAW_L3L4_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_RAW_L3L4_SHIFT	1
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_INBAND_PROP_HDR_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_INBAND_PROP_HDR_SHIFT	2
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_EXT_TUNNEL_MASK	0x1
 +#define XSTORM_ETH_CONN_AG_CTX_EDPM_SEND_EXT_TUNNEL_SHIFT	3
 +#define XSTORM_ETH_CONN_AG_CTX_L2_EDPM_ENABLE_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_L2_EDPM_ENABLE_SHIFT		4
 +#define XSTORM_ETH_CONN_AG_CTX_ROCE_EDPM_ENABLE_MASK		0x1
 +#define XSTORM_ETH_CONN_AG_CTX_ROCE_EDPM_ENABLE_SHIFT	5
 +#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_MASK		0x3
 +#define XSTORM_ETH_CONN_AG_CTX_TPH_ENABLE_SHIFT		6
  	u8 edpm_event_id;
  	__le16 physical_q0;
  	__le16 e5_reserved1;
* Unmerged path drivers/net/ethernet/qlogic/qed/qed_hsi.h
diff --git a/drivers/net/ethernet/qlogic/qed/qed_init_fw_funcs.c b/drivers/net/ethernet/qlogic/qed/qed_init_fw_funcs.c
index 4f31e69c62a8..7570c38487f5 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_init_fw_funcs.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_init_fw_funcs.c
@@ -209,6 +209,82 @@ static u16 task_region_offsets[1][NUM_OF_CONNECTION_TYPES] = {
 	(XSEM_REG_FAST_MEMORY + SEM_FAST_REG_INT_RAM + \
 	XSTORM_PQ_INFO_OFFSET(pq_id))
 
+static const char * const s_protocol_types[] = {
+	"PROTOCOLID_ISCSI", "PROTOCOLID_FCOE", "PROTOCOLID_ROCE",
+	"PROTOCOLID_CORE", "PROTOCOLID_ETH", "PROTOCOLID_IWARP",
+	"PROTOCOLID_TOE", "PROTOCOLID_PREROCE", "PROTOCOLID_COMMON",
+	"PROTOCOLID_TCP", "PROTOCOLID_RDMA", "PROTOCOLID_SCSI",
+};
+
+static const char *s_ramrod_cmd_ids[][28] = {
+	{
+	"ISCSI_RAMROD_CMD_ID_UNUSED", "ISCSI_RAMROD_CMD_ID_INIT_FUNC",
+	 "ISCSI_RAMROD_CMD_ID_DESTROY_FUNC",
+	 "ISCSI_RAMROD_CMD_ID_OFFLOAD_CONN",
+	 "ISCSI_RAMROD_CMD_ID_UPDATE_CONN",
+	 "ISCSI_RAMROD_CMD_ID_TERMINATION_CONN",
+	 "ISCSI_RAMROD_CMD_ID_CLEAR_SQ", "ISCSI_RAMROD_CMD_ID_MAC_UPDATE",
+	 "ISCSI_RAMROD_CMD_ID_CONN_STATS", },
+	{ "FCOE_RAMROD_CMD_ID_INIT_FUNC", "FCOE_RAMROD_CMD_ID_DESTROY_FUNC",
+	 "FCOE_RAMROD_CMD_ID_STAT_FUNC",
+	 "FCOE_RAMROD_CMD_ID_OFFLOAD_CONN",
+	 "FCOE_RAMROD_CMD_ID_TERMINATE_CONN", },
+	{ "RDMA_RAMROD_UNUSED", "RDMA_RAMROD_FUNC_INIT",
+	 "RDMA_RAMROD_FUNC_CLOSE", "RDMA_RAMROD_REGISTER_MR",
+	 "RDMA_RAMROD_DEREGISTER_MR", "RDMA_RAMROD_CREATE_CQ",
+	 "RDMA_RAMROD_RESIZE_CQ", "RDMA_RAMROD_DESTROY_CQ",
+	 "RDMA_RAMROD_CREATE_SRQ", "RDMA_RAMROD_MODIFY_SRQ",
+	 "RDMA_RAMROD_DESTROY_SRQ", "RDMA_RAMROD_START_NS_TRACKING",
+	 "RDMA_RAMROD_STOP_NS_TRACKING", "ROCE_RAMROD_CREATE_QP",
+	 "ROCE_RAMROD_MODIFY_QP", "ROCE_RAMROD_QUERY_QP",
+	 "ROCE_RAMROD_DESTROY_QP", "ROCE_RAMROD_CREATE_UD_QP",
+	 "ROCE_RAMROD_DESTROY_UD_QP", "ROCE_RAMROD_FUNC_UPDATE",
+	 "ROCE_RAMROD_SUSPEND_QP", "ROCE_RAMROD_QUERY_SUSPENDED_QP",
+	 "ROCE_RAMROD_CREATE_SUSPENDED_QP", "ROCE_RAMROD_RESUME_QP",
+	 "ROCE_RAMROD_SUSPEND_UD_QP", "ROCE_RAMROD_RESUME_UD_QP",
+	 "ROCE_RAMROD_CREATE_SUSPENDED_UD_QP", "ROCE_RAMROD_FLUSH_DPT_QP", },
+	{ "CORE_RAMROD_UNUSED", "CORE_RAMROD_RX_QUEUE_START",
+	 "CORE_RAMROD_TX_QUEUE_START", "CORE_RAMROD_RX_QUEUE_STOP",
+	 "CORE_RAMROD_TX_QUEUE_STOP",
+	 "CORE_RAMROD_RX_QUEUE_FLUSH",
+	 "CORE_RAMROD_TX_QUEUE_UPDATE", "CORE_RAMROD_QUEUE_STATS_QUERY", },
+	{ "ETH_RAMROD_UNUSED", "ETH_RAMROD_VPORT_START",
+	 "ETH_RAMROD_VPORT_UPDATE", "ETH_RAMROD_VPORT_STOP",
+	 "ETH_RAMROD_RX_QUEUE_START", "ETH_RAMROD_RX_QUEUE_STOP",
+	 "ETH_RAMROD_TX_QUEUE_START", "ETH_RAMROD_TX_QUEUE_STOP",
+	 "ETH_RAMROD_FILTERS_UPDATE", "ETH_RAMROD_RX_QUEUE_UPDATE",
+	 "ETH_RAMROD_RX_CREATE_OPENFLOW_ACTION",
+	 "ETH_RAMROD_RX_ADD_OPENFLOW_FILTER",
+	 "ETH_RAMROD_RX_DELETE_OPENFLOW_FILTER",
+	 "ETH_RAMROD_RX_ADD_UDP_FILTER",
+	 "ETH_RAMROD_RX_DELETE_UDP_FILTER",
+	 "ETH_RAMROD_RX_CREATE_GFT_ACTION",
+	 "ETH_RAMROD_RX_UPDATE_GFT_FILTER", "ETH_RAMROD_TX_QUEUE_UPDATE",
+	 "ETH_RAMROD_RGFS_FILTER_ADD", "ETH_RAMROD_RGFS_FILTER_DEL",
+	 "ETH_RAMROD_TGFS_FILTER_ADD", "ETH_RAMROD_TGFS_FILTER_DEL",
+	 "ETH_RAMROD_GFS_COUNTERS_REPORT_REQUEST", },
+	{ "RDMA_RAMROD_UNUSED", "RDMA_RAMROD_FUNC_INIT",
+	 "RDMA_RAMROD_FUNC_CLOSE", "RDMA_RAMROD_REGISTER_MR",
+	 "RDMA_RAMROD_DEREGISTER_MR", "RDMA_RAMROD_CREATE_CQ",
+	 "RDMA_RAMROD_RESIZE_CQ", "RDMA_RAMROD_DESTROY_CQ",
+	 "RDMA_RAMROD_CREATE_SRQ", "RDMA_RAMROD_MODIFY_SRQ",
+	 "RDMA_RAMROD_DESTROY_SRQ", "RDMA_RAMROD_START_NS_TRACKING",
+	 "RDMA_RAMROD_STOP_NS_TRACKING",
+	 "IWARP_RAMROD_CMD_ID_TCP_OFFLOAD",
+	 "IWARP_RAMROD_CMD_ID_MPA_OFFLOAD",
+	 "IWARP_RAMROD_CMD_ID_MPA_OFFLOAD_SEND_RTR",
+	 "IWARP_RAMROD_CMD_ID_CREATE_QP", "IWARP_RAMROD_CMD_ID_QUERY_QP",
+	 "IWARP_RAMROD_CMD_ID_MODIFY_QP",
+	 "IWARP_RAMROD_CMD_ID_DESTROY_QP",
+	 "IWARP_RAMROD_CMD_ID_ABORT_TCP_OFFLOAD", },
+	{ NULL }, /*TOE*/
+	{ NULL }, /*PREROCE*/
+	{ "COMMON_RAMROD_UNUSED", "COMMON_RAMROD_PF_START",
+	     "COMMON_RAMROD_PF_STOP", "COMMON_RAMROD_VF_START",
+	     "COMMON_RAMROD_VF_STOP", "COMMON_RAMROD_PF_UPDATE",
+	     "COMMON_RAMROD_RL_UPDATE", "COMMON_RAMROD_EMPTY", }
+};
+
 /******************** INTERNAL IMPLEMENTATION *********************/
 
 /* Returns the external VOQ number */
@@ -1645,6 +1721,32 @@ void qed_enable_context_validation(struct qed_hwfn *p_hwfn,
 	qed_wr(p_hwfn, p_ptt, CDU_REG_TCFC_CTX_VALID0, ctx_validation);
 }
 
+const char *qed_get_protocol_type_str(u32 protocol_type)
+{
+	if (protocol_type >= ARRAY_SIZE(s_protocol_types))
+		return "Invalid protocol type";
+
+	return s_protocol_types[protocol_type];
+}
+
+const char *qed_get_ramrod_cmd_id_str(u32 protocol_type, u32 ramrod_cmd_id)
+{
+	const char *ramrod_cmd_id_str;
+
+	if (protocol_type >= ARRAY_SIZE(s_ramrod_cmd_ids))
+		return "Invalid protocol type";
+
+	if (ramrod_cmd_id >= ARRAY_SIZE(s_ramrod_cmd_ids[0]))
+		return "Invalid Ramrod command ID";
+
+	ramrod_cmd_id_str = s_ramrod_cmd_ids[protocol_type][ramrod_cmd_id];
+
+	if (!ramrod_cmd_id_str)
+		return "Invalid Ramrod command ID";
+
+	return ramrod_cmd_id_str;
+}
+
 static u32 qed_get_rdma_assert_ram_addr(struct qed_hwfn *p_hwfn, u8 storm_id)
 {
 	switch (storm_id) {
diff --git a/drivers/net/ethernet/qlogic/qed/qed_sp_commands.c b/drivers/net/ethernet/qlogic/qed/qed_sp_commands.c
index b4ed54ffef9b..9d55e247b7d4 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_sp_commands.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_sp_commands.c
@@ -85,10 +85,12 @@ int qed_sp_init_request(struct qed_hwfn *p_hwfn,
 		goto err;
 	}
 
-	DP_VERBOSE(p_hwfn, QED_MSG_SPQ,
-		   "Initialized: CID %08x cmd %02x protocol %02x data_addr %lu comp_mode [%s]\n",
-		   opaque_cid, cmd, protocol,
-		   (unsigned long)&p_ent->ramrod,
+	DP_VERBOSE(p_hwfn,
+		   QED_MSG_SPQ,
+		   "Initialized: CID %08x %s:[%02x] %s:%02x data_addr %llx comp_mode [%s]\n",
+		   opaque_cid, qed_get_ramrod_cmd_id_str(protocol, cmd),
+		   cmd, qed_get_protocol_type_str(protocol), protocol,
+		   (unsigned long long)(uintptr_t)&p_ent->ramrod,
 		   D_TRINE(p_ent->comp_mode, QED_SPQ_MODE_EBLOCK,
 			   QED_SPQ_MODE_BLOCK, "MODE_EBLOCK", "MODE_BLOCK",
 			   "MODE_CB"));
diff --git a/drivers/net/ethernet/qlogic/qed/qed_spq.c b/drivers/net/ethernet/qlogic/qed/qed_spq.c
index fa8385178538..5235c27de9f1 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_spq.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_spq.c
@@ -138,10 +138,13 @@ static int qed_spq_block(struct qed_hwfn *p_hwfn,
 	if (!p_ptt)
 		return -EBUSY;
 	qed_hw_err_notify(p_hwfn, p_ptt, QED_HW_ERR_RAMROD_FAIL,
-			  "Ramrod is stuck [CID %08x cmd %02x protocol %02x echo %04x]\n",
+			  "Ramrod is stuck [CID %08x %s:%02x %s:%02x echo %04x]\n",
 			  le32_to_cpu(p_ent->elem.hdr.cid),
+			  qed_get_ramrod_cmd_id_str(p_ent->elem.hdr.protocol_id,
+						    p_ent->elem.hdr.cmd_id),
 			  p_ent->elem.hdr.cmd_id,
-			  p_ent->elem.hdr.protocol_id,
+			  qed_get_protocol_type_str(p_ent->elem.hdr.protocol_id),
+						    p_ent->elem.hdr.protocol_id,
 			  le16_to_cpu(p_ent->elem.hdr.echo));
 	qed_ptt_release(p_hwfn, p_ptt);
 
@@ -169,13 +172,16 @@ static int qed_spq_fill_entry(struct qed_hwfn *p_hwfn,
 		return -EINVAL;
 	}
 
-	DP_VERBOSE(p_hwfn, QED_MSG_SPQ,
-		   "Ramrod header: [CID 0x%08x CMD 0x%02x protocol 0x%02x] Data pointer: [%08x:%08x] Completion Mode: %s\n",
+	DP_VERBOSE(p_hwfn,
+		   QED_MSG_SPQ,
+		   "Ramrod hdr: [CID 0x%08x %s:0x%02x %s:0x%02x] Data ptr: [%08x:%08x] Cmpltion Mode: %s\n",
 		   p_ent->elem.hdr.cid,
+		   qed_get_ramrod_cmd_id_str(p_ent->elem.hdr.protocol_id,
+					     p_ent->elem.hdr.cmd_id),
 		   p_ent->elem.hdr.cmd_id,
-		   p_ent->elem.hdr.protocol_id,
-		   p_ent->elem.data_ptr.hi,
-		   p_ent->elem.data_ptr.lo,
+		   qed_get_protocol_type_str(p_ent->elem.hdr.protocol_id),
+					     p_ent->elem.hdr.protocol_id,
+		   p_ent->elem.data_ptr.hi, p_ent->elem.data_ptr.lo,
 		   D_TRINE(p_ent->comp_mode, QED_SPQ_MODE_EBLOCK,
 			   QED_SPQ_MODE_BLOCK, "MODE_EBLOCK", "MODE_BLOCK",
 			   "MODE_CB"));
@@ -273,17 +279,27 @@ qed_async_event_completion(struct qed_hwfn *p_hwfn,
 {
 	qed_spq_async_comp_cb cb;
 
-	if (!p_hwfn->p_spq || (p_eqe->protocol_id >= MAX_PROTOCOL_TYPE))
+	if (!p_hwfn->p_spq)
 		return -EINVAL;
 
+	if (p_eqe->protocol_id >= MAX_PROTOCOL_TYPE) {
+		DP_ERR(p_hwfn, "Wrong protocol: %s:%d\n",
+		       qed_get_protocol_type_str(p_eqe->protocol_id),
+		       p_eqe->protocol_id);
+
+		return -EINVAL;
+	}
+
 	cb = p_hwfn->p_spq->async_comp_cb[p_eqe->protocol_id];
 	if (cb) {
 		return cb(p_hwfn, p_eqe->opcode, p_eqe->echo,
 			  &p_eqe->data, p_eqe->fw_return_code);
 	} else {
 		DP_NOTICE(p_hwfn,
-			  "Unknown Async completion for protocol: %d\n",
+			  "Unknown Async completion for %s:%d\n",
+			  qed_get_protocol_type_str(p_eqe->protocol_id),
 			  p_eqe->protocol_id);
+
 		return -EINVAL;
 	}
 }
@@ -833,8 +849,12 @@ int qed_spq_post(struct qed_hwfn *p_hwfn,
 	if (p_hwfn->cdev->recov_in_prog) {
 		DP_VERBOSE(p_hwfn,
 			   QED_MSG_SPQ,
-			   "Recovery is in progress. Skip spq post [cmd %02x protocol %02x]\n",
-			   p_ent->elem.hdr.cmd_id, p_ent->elem.hdr.protocol_id);
+			   "Recovery is in progress. Skip spq post [%s:%02x %s:%02x]\n",
+			   qed_get_ramrod_cmd_id_str(p_ent->elem.hdr.protocol_id,
+						     p_ent->elem.hdr.cmd_id),
+			   p_ent->elem.hdr.cmd_id,
+			   qed_get_protocol_type_str(p_ent->elem.hdr.protocol_id),
+			   p_ent->elem.hdr.protocol_id);
 
 		/* Let the flow complete w/o any error handling */
 		qed_spq_recov_set_ret_code(p_ent, fw_return_code);
