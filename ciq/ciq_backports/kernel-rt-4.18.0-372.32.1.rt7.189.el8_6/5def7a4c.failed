x86/paravirt: Remove unused paravirt bits

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Juergen Gross <jgross@suse.com>
commit 5def7a4cd5bef80f7c997cf37c09022fa8c9cd76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/5def7a4c.failed

The macros ENABLE_INTERRUPTS_SYSEXIT, GET_CR0_INTO_EAX and
PARAVIRT_ADJUST_EXCEPTION_FRAME are used nowhere.

Remove their definitions.

	Signed-off-by: Juergen Gross <jgross@suse.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Cc: xen-devel@lists.xenproject.org
	Cc: virtualization@lists.linux-foundation.org
	Cc: akataria@vmware.com
	Cc: rusty@rustcorp.com.au
	Cc: boris.ostrovsky@oracle.com
	Cc: hpa@zytor.com
Link: https://lkml.kernel.org/r/20180828074026.820-10-jgross@suse.com

(cherry picked from commit 5def7a4cd5bef80f7c997cf37c09022fa8c9cd76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/include/asm/paravirt.h
#	arch/x86/kernel/asm-offsets.c
diff --cc arch/x86/include/asm/paravirt.h
index e9f118dae8cc,2ba23e98c5cd..000000000000
--- a/arch/x86/include/asm/paravirt.h
+++ b/arch/x86/include/asm/paravirt.h
@@@ -907,20 -881,13 +907,24 @@@ extern void default_banner(void)
  		  PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE);)
  
  #define ENABLE_INTERRUPTS(clobbers)					\
 -	PARA_SITE(PARA_PATCH(PV_IRQ_irq_enable),			\
 +	PARA_SITE(PARA_PATCH(pv_irq_ops, PV_IRQ_irq_enable), clobbers,	\
  		  PV_SAVE_REGS(clobbers | CLBR_CALLEE_SAVE);		\
 -		  ANNOTATE_RETPOLINE_SAFE;				\
 -		  call PARA_INDIRECT(pv_ops+PV_IRQ_irq_enable);		\
 +		  ANNOTATE_RETPOLINE_SAFE;					\
 +		  call PARA_INDIRECT(pv_irq_ops+PV_IRQ_irq_enable);	\
  		  PV_RESTORE_REGS(clobbers | CLBR_CALLEE_SAVE);)
  
++<<<<<<< HEAD
 +#ifdef CONFIG_X86_32
 +#define GET_CR0_INTO_EAX				\
 +	push %ecx; push %edx;				\
 +	ANNOTATE_RETPOLINE_SAFE;				\
 +	call PARA_INDIRECT(pv_cpu_ops+PV_CPU_read_cr0);	\
 +	pop %edx; pop %ecx
 +#else	/* !CONFIG_X86_32 */
 +
++=======
+ #ifdef CONFIG_X86_64
++>>>>>>> 5def7a4cd5be (x86/paravirt: Remove unused paravirt bits)
  /*
   * If swapgs is used while the userspace stack is still current,
   * there's no way to call a pvop.  The PV replacement *must* be
diff --cc arch/x86/kernel/asm-offsets.c
index c53c402040c8,37e323f3d8c9..000000000000
--- a/arch/x86/kernel/asm-offsets.c
+++ b/arch/x86/kernel/asm-offsets.c
@@@ -70,13 -66,10 +70,20 @@@ void common(void) 
  
  #ifdef CONFIG_PARAVIRT
  	BLANK();
++<<<<<<< HEAD
 +	OFFSET(PARAVIRT_PATCH_pv_cpu_ops, paravirt_patch_template, pv_cpu_ops);
 +	OFFSET(PARAVIRT_PATCH_pv_irq_ops, paravirt_patch_template, pv_irq_ops);
 +	OFFSET(PV_IRQ_irq_disable, pv_irq_ops, irq_disable);
 +	OFFSET(PV_IRQ_irq_enable, pv_irq_ops, irq_enable);
 +	OFFSET(PV_CPU_iret, pv_cpu_ops, iret);
 +	OFFSET(PV_CPU_read_cr0, pv_cpu_ops, read_cr0);
 +	OFFSET(PV_MMU_read_cr2, pv_mmu_ops, read_cr2);
++=======
+ 	OFFSET(PV_IRQ_irq_disable, paravirt_patch_template, irq.irq_disable);
+ 	OFFSET(PV_IRQ_irq_enable, paravirt_patch_template, irq.irq_enable);
+ 	OFFSET(PV_CPU_iret, paravirt_patch_template, cpu.iret);
+ 	OFFSET(PV_MMU_read_cr2, paravirt_patch_template, mmu.read_cr2);
++>>>>>>> 5def7a4cd5be (x86/paravirt: Remove unused paravirt bits)
  #endif
  
  #ifdef CONFIG_XEN
diff --git a/arch/x86/include/asm/irqflags.h b/arch/x86/include/asm/irqflags.h
index 13410b1e8349..dd76dd3e0c85 100644
--- a/arch/x86/include/asm/irqflags.h
+++ b/arch/x86/include/asm/irqflags.h
@@ -136,8 +136,6 @@ static inline notrace unsigned long arch_local_irq_save(void)
  */
 #define SWAPGS_UNSAFE_STACK	swapgs
 
-#define PARAVIRT_ADJUST_EXCEPTION_FRAME	/*  */
-
 #define INTERRUPT_RETURN	jmp native_iret
 #define USERGS_SYSRET64				\
 	swapgs;					\
@@ -151,8 +149,6 @@ static inline notrace unsigned long arch_local_irq_save(void)
 #endif
 #else
 #define INTERRUPT_RETURN		iret
-#define ENABLE_INTERRUPTS_SYSEXIT	sti; sysexit
-#define GET_CR0_INTO_EAX		movl %cr0, %eax
 #endif
 
 
* Unmerged path arch/x86/include/asm/paravirt.h
* Unmerged path arch/x86/kernel/asm-offsets.c
