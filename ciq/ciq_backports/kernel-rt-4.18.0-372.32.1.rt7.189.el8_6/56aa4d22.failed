x86/speculation: Fix SPEC_CTRL write on SMT state change

jira LE-1907
cve CVE-2022-23825
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-rt-4.18.0-372.32.1.rt7.189.el8_6
commit-author Josh Poimboeuf <jpoimboe@kernel.org>
commit 56aa4d221f1ee2c3a49b45b800778ec6e0ab73c5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-372.32.1.rt7.189.el8_6/56aa4d22.failed

If the SMT state changes, SSBD might get accidentally disabled.  Fix
that.

	Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 56aa4d221f1ee2c3a49b45b800778ec6e0ab73c5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index ff842ff87312,9b80059c4e02..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -1239,7 -1458,8 +1239,12 @@@ static void __init spectre_v2_select_mi
  
  static void update_stibp_msr(void * __unused)
  {
++<<<<<<< HEAD
 +	wrmsrl(MSR_IA32_SPEC_CTRL, x86_spec_ctrl_base);
++=======
+ 	u64 val = spec_ctrl_current() | (x86_spec_ctrl_base & SPEC_CTRL_STIBP);
+ 	write_spec_ctrl_current(val, true);
++>>>>>>> 56aa4d221f1e (x86/speculation: Fix SPEC_CTRL write on SMT state change)
  }
  
  /* Update x86_spec_ctrl_base in case SMT state changed. */
* Unmerged path arch/x86/kernel/cpu/bugs.c
