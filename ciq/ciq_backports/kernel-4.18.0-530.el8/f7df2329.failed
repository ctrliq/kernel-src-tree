crypto: qat - use masks for AE groups

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-530.el8
commit-author Giovanni Cabiddu <giovanni.cabiddu@intel.com>
commit f7df2329eec1729a606bba8ed1566a1b3c248bad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-530.el8/f7df2329.failed

The adf_fw_config structures hardcode a bit mask that represents the
acceleration engines (AEs) where a certain firmware image will have to
be loaded to. Remove the hardcoded masks and replace them with defines.

This does not introduce any functional change.

	Signed-off-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
	Reviewed-by: Damian Muszynski <damian.muszynski@intel.com>
	Reviewed-by: Tero Kristo <tero.kristo@linux.intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit f7df2329eec1729a606bba8ed1566a1b3c248bad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
diff --cc drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
index 3eda91aa7c11,1f1e318eeabe..000000000000
--- a/drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
+++ b/drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
@@@ -8,9 -9,16 +8,13 @@@
  #include <adf_gen4_hw_data.h>
  #include <adf_gen4_pfvf.h>
  #include <adf_gen4_pm.h>
 -#include "adf_gen4_ras.h"
 -#include <adf_gen4_timer.h>
  #include "adf_4xxx_hw_data.h"
 -#include "adf_cfg_services.h"
  #include "icp_qat_hw.h"
  
+ #define ADF_AE_GROUP_0		GENMASK(3, 0)
+ #define ADF_AE_GROUP_1		GENMASK(7, 4)
+ #define ADF_AE_GROUP_2		BIT(8)
+ 
  enum adf_fw_objs {
  	ADF_FW_SYM_OBJ,
  	ADF_FW_ASYM_OBJ,
@@@ -68,11 -76,17 +72,20 @@@ static const struct adf_fw_config adf_f
  };
  
  static const struct adf_fw_config adf_fw_sym_dc_config[] = {
- 	{0xF0, ADF_FW_SYM_OBJ},
- 	{0xF, ADF_FW_DC_OBJ},
- 	{0x100, ADF_FW_ADMIN_OBJ},
+ 	{ADF_AE_GROUP_1, ADF_FW_SYM_OBJ},
+ 	{ADF_AE_GROUP_0, ADF_FW_DC_OBJ},
+ 	{ADF_AE_GROUP_2, ADF_FW_ADMIN_OBJ},
+ };
+ 
++<<<<<<< HEAD:drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
++=======
+ static const struct adf_fw_config adf_fw_dcc_config[] = {
+ 	{ADF_AE_GROUP_1, ADF_FW_DC_OBJ},
+ 	{ADF_AE_GROUP_0, ADF_FW_SYM_OBJ},
+ 	{ADF_AE_GROUP_2, ADF_FW_ADMIN_OBJ},
  };
  
++>>>>>>> f7df2329eec1 (crypto: qat - use masks for AE groups):drivers/crypto/intel/qat/qat_4xxx/adf_4xxx_hw_data.c
  static_assert(ARRAY_SIZE(adf_fw_cy_config) == ARRAY_SIZE(adf_fw_dc_config));
  static_assert(ARRAY_SIZE(adf_fw_cy_config) == ARRAY_SIZE(adf_fw_sym_config));
  static_assert(ARRAY_SIZE(adf_fw_cy_config) == ARRAY_SIZE(adf_fw_asym_config));
* Unmerged path drivers/crypto/qat/qat_4xxx/adf_4xxx_hw_data.c
