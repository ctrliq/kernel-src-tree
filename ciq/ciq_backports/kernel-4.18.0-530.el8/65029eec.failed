crypto: qat - Use list_for_each_entry() helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-530.el8
commit-author Jinjie Ruan <ruanjinjie@huawei.com>
commit 65029eec5ceba7d847f27171cdddb046bdc3a069
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-530.el8/65029eec.failed

Convert list_for_each() to list_for_each_entry() so that the list_itr
list_head pointer and list_entry() call are no longer needed, which
can reduce a few lines of code. No functional changed.

	Signed-off-by: Jinjie Ruan <ruanjinjie@huawei.com>
	Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
	Acked-by: Giovanni Cabiddu <giovanni.cabiddu@intel.com>
	Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit 65029eec5ceba7d847f27171cdddb046bdc3a069)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/crypto/qat/qat_common/adf_init.c
diff --cc drivers/crypto/qat/qat_common/adf_init.c
index 0985f64ab11a,79a81e25de97..000000000000
--- a/drivers/crypto/qat/qat_common/adf_init.c
+++ b/drivers/crypto/qat/qat_common/adf_init.c
@@@ -161,7 -163,7 +159,11 @@@ static int adf_dev_start(struct adf_acc
  {
  	struct adf_hw_device_data *hw_data = accel_dev->hw_device;
  	struct service_hndl *service;
++<<<<<<< HEAD:drivers/crypto/qat/qat_common/adf_init.c
 +	struct list_head *list_itr;
++=======
+ 	int ret;
++>>>>>>> 65029eec5ceb (crypto: qat - Use list_for_each_entry() helper):drivers/crypto/intel/qat/qat_common/adf_init.c
  
  	set_bit(ADF_STATUS_STARTING, &accel_dev->status);
  
@@@ -186,8 -196,17 +188,22 @@@
  		return -EFAULT;
  	}
  
++<<<<<<< HEAD:drivers/crypto/qat/qat_common/adf_init.c
 +	list_for_each(list_itr, &service_table) {
 +		service = list_entry(list_itr, struct service_hndl, list);
++=======
+ 	if (hw_data->start_timer) {
+ 		ret = hw_data->start_timer(accel_dev);
+ 		if (ret) {
+ 			dev_err(&GET_DEV(accel_dev), "Failed to start internal sync timer\n");
+ 			return ret;
+ 		}
+ 	}
+ 
+ 	adf_heartbeat_start(accel_dev);
+ 
+ 	list_for_each_entry(service, &service_table, list) {
++>>>>>>> 65029eec5ceb (crypto: qat - Use list_for_each_entry() helper):drivers/crypto/intel/qat/qat_common/adf_init.c
  		if (service->event_hld(accel_dev, ADF_EVENT_START)) {
  			dev_err(&GET_DEV(accel_dev),
  				"Failed to start service %s\n",
@@@ -231,8 -253,8 +247,7 @@@
   */
  static void adf_dev_stop(struct adf_accel_dev *accel_dev)
  {
 -	struct adf_hw_device_data *hw_data = accel_dev->hw_device;
  	struct service_hndl *service;
- 	struct list_head *list_itr;
  	bool wait = false;
  	int ret;
  
* Unmerged path drivers/crypto/qat/qat_common/adf_init.c
