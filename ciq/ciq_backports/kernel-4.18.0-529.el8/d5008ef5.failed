ACPI: PM: Fix NULL argument handling in acpi_device_get/set_power()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-529.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit d5008ef5b5a21177d3042816542f1afd5ae36152
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-529.el8/d5008ef5.failed

In principle, it should be valid to pass NULL as the ACPI device
pointer to acpi_device_get_power() and acpi_device_set_power() and they
both are expected to return -EINVAL in that case, but that has been
broken recently by commit 62fcb99bdf10 ("ACPI: Drop parent field from
struct acpi_device") which has caused the ACPI device pointer to be
dereferenced in these functions before the NULL check.

Fix that and while at it make acpi_device_set_power() only use the
parent field if the target ACPI device object's ignore_parent flag
in not set.

Fixes: 62fcb99bdf10 ("ACPI: Drop parent field from struct acpi_device")
	Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit d5008ef5b5a21177d3042816542f1afd5ae36152)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/device_pm.c
diff --cc drivers/acpi/device_pm.c
index 71f17f5d6ab5,3aca67cf9ce5..000000000000
--- a/drivers/acpi/device_pm.c
+++ b/drivers/acpi/device_pm.c
@@@ -89,10 -81,11 +90,12 @@@ int acpi_device_get_power(struct acpi_d
  	if (!device || !state)
  		return -EINVAL;
  
+ 	parent = acpi_dev_parent(device);
+ 
  	if (!device->flags.power_manageable) {
  		/* TBD: Non-recursive algorithm for walking up hierarchy. */
 -		*state = parent ? parent->power.state : ACPI_STATE_D0;
 +		*state = device->parent ?
 +			device->parent->power.state : ACPI_STATE_D0;
  		goto out;
  	}
  
@@@ -200,13 -193,17 +203,27 @@@ int acpi_device_set_power(struct acpi_d
  		return -ENODEV;
  	}
  
++<<<<<<< HEAD
 +	if (!device->power.flags.ignore_parent && device->parent &&
 +	    state < device->parent->power.state) {
 +		acpi_handle_debug(device->handle,
 +				  "Cannot transition to %s for parent in %s\n",
 +				  acpi_power_state_string(state),
 +				  acpi_power_state_string(device->parent->power.state));
 +		return -ENODEV;
++=======
+ 	if (!device->power.flags.ignore_parent) {
+ 		struct acpi_device *parent;
+ 
+ 		parent = acpi_dev_parent(device);
+ 		if (parent && state < parent->power.state) {
+ 			acpi_handle_debug(device->handle,
+ 					  "Cannot transition to %s for parent in %s\n",
+ 					  acpi_power_state_string(state),
+ 					  acpi_power_state_string(parent->power.state));
+ 			return -ENODEV;
+ 		}
++>>>>>>> d5008ef5b5a2 (ACPI: PM: Fix NULL argument handling in acpi_device_get/set_power())
  	}
  
  	/*
* Unmerged path drivers/acpi/device_pm.c
