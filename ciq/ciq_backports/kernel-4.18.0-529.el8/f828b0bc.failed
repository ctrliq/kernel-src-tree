clk: fix leak on devm_clk_bulk_get_all() unwind

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-529.el8
commit-author Brian Norris <briannorris@chromium.org>
commit f828b0bcacef189edbd247e9f48864fc36bfbe33
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-529.el8/f828b0bc.failed

clk_bulk_get_all() allocates an array of struct clk_bulk data for us
(unlike clk_bulk_get()), so we need to free it. Let's use the
clk_bulk_put_all() helper.

kmemleak complains, on an RK3399 Gru/Kevin system:

unreferenced object 0xffffff80045def00 (size 128):
  comm "swapper/0", pid 1, jiffies 4294667682 (age 86.394s)
  hex dump (first 32 bytes):
    44 32 60 fe fe ff ff ff 00 00 00 00 00 00 00 00  D2`.............
    48 32 60 fe fe ff ff ff 00 00 00 00 00 00 00 00  H2`.............
  backtrace:
    [<00000000742860d6>] __kmalloc+0x22c/0x39c
    [<00000000b0493f2c>] clk_bulk_get_all+0x64/0x188
    [<00000000325f5900>] devm_clk_bulk_get_all+0x58/0xa8
    [<00000000175b9bc5>] dwc3_probe+0x8ac/0xb5c
    [<000000009169e2f9>] platform_drv_probe+0x9c/0xbc
    [<000000005c51e2ee>] really_probe+0x13c/0x378
    [<00000000c47b1f24>] driver_probe_device+0x84/0xc0
    [<00000000f870fcfb>] __device_attach_driver+0x94/0xb0
    [<000000004d1b92ae>] bus_for_each_drv+0x8c/0xd8
    [<00000000481d60c3>] __device_attach+0xc4/0x150
    [<00000000a163bd36>] device_initial_probe+0x1c/0x28
    [<00000000accb6bad>] bus_probe_device+0x3c/0x9c
    [<000000001a199f89>] device_add+0x218/0x3cc
    [<000000001bd84952>] of_device_add+0x40/0x50
    [<000000009c658c29>] of_platform_device_create_pdata+0xac/0x100
    [<0000000021c69ba4>] of_platform_bus_create+0x190/0x224

Fixes: f08c2e2865f6 ("clk: add managed version of clk_bulk_get_all")
	Cc: Dong Aisheng <aisheng.dong@nxp.com>
	Cc: stable@vger.kernel.org
	Signed-off-by: Brian Norris <briannorris@chromium.org>
Link: https://lore.kernel.org/r/20210731025950.2238582-1-briannorris@chromium.org
	Signed-off-by: Stephen Boyd <sboyd@kernel.org>
(cherry picked from commit f828b0bcacef189edbd247e9f48864fc36bfbe33)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/clk/clk-devres.c
diff --cc drivers/clk/clk-devres.c
index 8e8893168676,f9d5b7334341..000000000000
--- a/drivers/clk/clk-devres.c
+++ b/drivers/clk/clk-devres.c
@@@ -79,8 -77,28 +79,25 @@@ int __must_check devm_clk_bulk_get(stru
  
  	return ret;
  }
 -
 -int __must_check devm_clk_bulk_get(struct device *dev, int num_clks,
 -		      struct clk_bulk_data *clks)
 -{
 -	return __devm_clk_bulk_get(dev, num_clks, clks, false);
 -}
  EXPORT_SYMBOL_GPL(devm_clk_bulk_get);
  
++<<<<<<< HEAD
++=======
+ int __must_check devm_clk_bulk_get_optional(struct device *dev, int num_clks,
+ 		      struct clk_bulk_data *clks)
+ {
+ 	return __devm_clk_bulk_get(dev, num_clks, clks, true);
+ }
+ EXPORT_SYMBOL_GPL(devm_clk_bulk_get_optional);
+ 
+ static void devm_clk_bulk_release_all(struct device *dev, void *res)
+ {
+ 	struct clk_bulk_devres *devres = res;
+ 
+ 	clk_bulk_put_all(devres->num_clks, devres->clks);
+ }
+ 
++>>>>>>> f828b0bcacef (clk: fix leak on devm_clk_bulk_get_all() unwind)
  int __must_check devm_clk_bulk_get_all(struct device *dev,
  				       struct clk_bulk_data **clks)
  {
* Unmerged path drivers/clk/clk-devres.c
