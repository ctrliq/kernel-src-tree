platform/x86: asus-wmi: Move acpi_backlight=vendor quirks to ACPI video_detect.c

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-529.el8
commit-author Hans de Goede <hdegoede@redhat.com>
commit 52796b304a517b002300bbb67074b38a6003fd7a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-529.el8/52796b30.failed

Remove the asus-wmi quirk_entry.wmi_backlight_power quirk-flag, which
called acpi_video_set_dmi_backlight_type(acpi_backlight_vendor) and replace
it with acpi/video_detect.c video_detect_dmi_table[] entries using the
video_detect_force_vendor callback.

acpi_video_set_dmi_backlight_type() is troublesome because it may end up
getting called after other backlight drivers have already called
acpi_video_get_backlight_type() resulting in the other drivers
already being registered even though they should not.

Note no entries are dropped from the dmi_system_id table in asus-nb-wmi.c.
This is because the entries using the removed wmi_backlight_power flag
also use other model specific quirks from the asus-wmi quirk_entry struct.
So the quirk_asus_x55u struct and the entries pointing to it cannot be
dropped.

	Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
	Signed-off-by: Hans de Goede <hdegoede@redhat.com>
(cherry picked from commit 52796b304a517b002300bbb67074b38a6003fd7a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/x86/asus-nb-wmi.c
#	drivers/platform/x86/asus-wmi.c
diff --cc drivers/platform/x86/asus-nb-wmi.c
index 136ff2b4cce5,810a94557a85..000000000000
--- a/drivers/platform/x86/asus-nb-wmi.c
+++ b/drivers/platform/x86/asus-nb-wmi.c
@@@ -91,7 -83,7 +90,11 @@@ static struct quirk_entry quirk_asus_q5
   */
  static struct quirk_entry quirk_asus_x55u = {
  	.wapf = 4,
++<<<<<<< HEAD
 +	.wmi_backlight_power = true,
++=======
+ 	.wmi_backlight_set_devstate = true,
++>>>>>>> 52796b304a51 (platform/x86: asus-wmi: Move acpi_backlight=vendor quirks to ACPI video_detect.c)
  	.no_display_toggle = true,
  };
  
diff --cc drivers/platform/x86/asus-wmi.c
index 5dac33474aea,5cf9d9aff164..000000000000
--- a/drivers/platform/x86/asus-wmi.c
+++ b/drivers/platform/x86/asus-wmi.c
@@@ -2167,15 -3634,6 +2167,18 @@@ static int asus_wmi_add(struct platform
  	if (asus->driver->quirks->wmi_force_als_set)
  		asus_wmi_set_als();
  
++<<<<<<< HEAD
 +	/* Some Asus desktop boards export an acpi-video backlight interface,
 +	   stop this from showing up */
 +	chassis_type = dmi_get_system_info(DMI_CHASSIS_TYPE);
 +	if (chassis_type && !strcmp(chassis_type, "3"))
 +		acpi_video_set_dmi_backlight_type(acpi_backlight_vendor);
 +
 +	if (asus->driver->quirks->wmi_backlight_power)
 +		acpi_video_set_dmi_backlight_type(acpi_backlight_vendor);
 +
++=======
++>>>>>>> 52796b304a51 (platform/x86: asus-wmi: Move acpi_backlight=vendor quirks to ACPI video_detect.c)
  	if (asus->driver->quirks->wmi_backlight_native)
  		acpi_video_set_dmi_backlight_type(acpi_backlight_native);
  
diff --git a/drivers/acpi/video_detect.c b/drivers/acpi/video_detect.c
index 80ecaaa158cf..80ce2403d8f1 100644
--- a/drivers/acpi/video_detect.c
+++ b/drivers/acpi/video_detect.c
@@ -133,6 +133,46 @@ static const struct dmi_system_id video_detect_dmi_table[] = {
 		DMI_MATCH(DMI_PRODUCT_NAME, "UL30A"),
 		},
 	},
+	{
+	 .callback = video_detect_force_vendor,
+	 /* Asus X55U */
+	 .matches = {
+		DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+		DMI_MATCH(DMI_PRODUCT_NAME, "X55U"),
+		},
+	},
+	{
+	 .callback = video_detect_force_vendor,
+	 /* Asus X101CH */
+	 .matches = {
+		DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+		DMI_MATCH(DMI_PRODUCT_NAME, "X101CH"),
+		},
+	},
+	{
+	 .callback = video_detect_force_vendor,
+	 /* Asus X401U */
+	 .matches = {
+		DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+		DMI_MATCH(DMI_PRODUCT_NAME, "X401U"),
+		},
+	},
+	{
+	 .callback = video_detect_force_vendor,
+	 /* Asus X501U */
+	 .matches = {
+		DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+		DMI_MATCH(DMI_PRODUCT_NAME, "X501U"),
+		},
+	},
+	{
+	 .callback = video_detect_force_vendor,
+	 /* Asus 1015CX */
+	 .matches = {
+		DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+		DMI_MATCH(DMI_PRODUCT_NAME, "1015CX"),
+		},
+	},
 	{
 	.callback = video_detect_force_vendor,
 	/* Sony VPCEH3U1E */
* Unmerged path drivers/platform/x86/asus-nb-wmi.c
* Unmerged path drivers/platform/x86/asus-wmi.c
diff --git a/drivers/platform/x86/asus-wmi.h b/drivers/platform/x86/asus-wmi.h
index 6c1311f4b04d..7cdcbe1e2a2f 100644
--- a/drivers/platform/x86/asus-wmi.h
+++ b/drivers/platform/x86/asus-wmi.h
@@ -42,7 +42,6 @@ struct quirk_entry {
 	bool hotplug_wireless;
 	bool scalar_panel_brightness;
 	bool store_backlight_power;
-	bool wmi_backlight_power;
 	bool wmi_backlight_native;
 	bool wmi_force_als_set;
 	int wapf;
diff --git a/drivers/platform/x86/eeepc-wmi.c b/drivers/platform/x86/eeepc-wmi.c
index 17b365f26f9d..5bf5bf883c6b 100644
--- a/drivers/platform/x86/eeepc-wmi.c
+++ b/drivers/platform/x86/eeepc-wmi.c
@@ -109,11 +109,6 @@ static struct quirk_entry quirk_asus_et2012_type3 = {
 	.store_backlight_power = true,
 };
 
-static struct quirk_entry quirk_asus_x101ch = {
-	/* We need this when ACPI function doesn't do this well */
-	.wmi_backlight_power = true,
-};
-
 static struct quirk_entry *quirks;
 
 static void et2012_quirks(void)
@@ -164,25 +159,7 @@ static const struct dmi_system_id asus_quirks[] = {
 		},
 		.driver_data = &quirk_asus_unknown,
 	},
-	{
-		.callback = dmi_matched,
-		.ident = "ASUSTeK Computer INC. X101CH",
-		.matches = {
-			DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
-			DMI_MATCH(DMI_PRODUCT_NAME, "X101CH"),
-		},
-		.driver_data = &quirk_asus_x101ch,
-	},
-	{
-		.callback = dmi_matched,
-		.ident = "ASUSTeK Computer INC. 1015CX",
-		.matches = {
-			DMI_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
-			DMI_MATCH(DMI_PRODUCT_NAME, "1015CX"),
-		},
-		.driver_data = &quirk_asus_x101ch,
-	},
-	{},
+	{}
 };
 
 static void eeepc_wmi_key_filter(struct asus_wmi_driver *asus_wmi, int *code,
