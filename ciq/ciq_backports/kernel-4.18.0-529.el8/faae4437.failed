ACPI: bus: Ensure that notify handlers are not running after removal

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-529.el8
commit-author Rafael J. Wysocki <rafael.j.wysocki@intel.com>
commit faae443738c6f0dac9b0d3d11d108f6911a989a9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-529.el8/faae4437.failed

Currently, acpi_device_remove_notify_handler() may return while the
notify handler being removed is still running which may allow the
module holding that handler to be torn down prematurely.

Address this issue by making acpi_device_remove_notify_handler() wait
for the handling of all the ACPI events in progress to complete before
returning.

Fixes: 5894b0c46e49 ("ACPI / scan: Move bus operations and notification routines to bus.c")
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit faae443738c6f0dac9b0d3d11d108f6911a989a9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/acpi/bus.c
diff --cc drivers/acpi/bus.c
index 4761f631263c,c32a06bcac0c..000000000000
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@@ -599,17 -573,23 +599,22 @@@ static int acpi_device_install_notify_h
  	return 0;
  }
  
 -static void acpi_device_remove_notify_handler(struct acpi_device *device,
 -					      struct acpi_driver *acpi_drv)
 +static void acpi_device_remove_notify_handler(struct acpi_device *device)
  {
 -	if (device->device_type == ACPI_BUS_TYPE_POWER_BUTTON) {
 +	if (device->device_type == ACPI_BUS_TYPE_POWER_BUTTON)
  		acpi_remove_fixed_event_handler(ACPI_EVENT_POWER_BUTTON,
  						acpi_device_fixed_event);
 -	} else if (device->device_type == ACPI_BUS_TYPE_SLEEP_BUTTON) {
 +	else if (device->device_type == ACPI_BUS_TYPE_SLEEP_BUTTON)
  		acpi_remove_fixed_event_handler(ACPI_EVENT_SLEEP_BUTTON,
  						acpi_device_fixed_event);
 -	} else {
 -		u32 type = acpi_drv->flags & ACPI_DRIVER_ALL_NOTIFY_EVENTS ?
 -				ACPI_ALL_NOTIFY : ACPI_DEVICE_NOTIFY;
 -
 -		acpi_remove_notify_handler(device->handle, type,
 +	else
 +		acpi_remove_notify_handler(device->handle, ACPI_DEVICE_NOTIFY,
  					   acpi_notify_device);
++<<<<<<< HEAD
++=======
+ 	}
+ 	acpi_os_wait_events_complete();
++>>>>>>> faae443738c6 (ACPI: bus: Ensure that notify handlers are not running after removal)
  }
  
  /* Handle events targeting \_SB device (at present only graceful shutdown) */
* Unmerged path drivers/acpi/bus.c
