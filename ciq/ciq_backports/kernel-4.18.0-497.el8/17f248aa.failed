perf script: Support Retire Latency

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Kan Liang <kan.liang@linux.intel.com>
commit 17f248aa8664ff5b3643491136283e73b5c18166
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/17f248aa.failed

The Retire Latency field is added in the var3_w of the
PERF_SAMPLE_WEIGHT_STRUCT. The Retire Latency reports the number of
elapsed core clocks between the retirement of the instruction indicated
by the Instruction Pointer field of the PEBS record and the retirement
of the prior instruction. That's quite useful to display the information
with perf script.

Add a new field retire_lat for the Retire Latency information.

	Reviewed-by: Andi Kleen <ak@linux.intel.com>
	Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
	Cc: Ian Rogers <irogers@google.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lore.kernel.org/lkml/20230104201349.1451191-9-kan.liang@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit 17f248aa8664ff5b3643491136283e73b5c18166)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/builtin-script.c
diff --cc tools/perf/builtin-script.c
index 52ff827ca799,a792214d1af8..000000000000
--- a/tools/perf/builtin-script.c
+++ b/tools/perf/builtin-script.c
@@@ -122,6 -127,12 +122,15 @@@ enum perf_output_field 
  	PERF_OUTPUT_TOD             = 1ULL << 32,
  	PERF_OUTPUT_DATA_PAGE_SIZE  = 1ULL << 33,
  	PERF_OUTPUT_CODE_PAGE_SIZE  = 1ULL << 34,
++<<<<<<< HEAD
++=======
+ 	PERF_OUTPUT_INS_LAT         = 1ULL << 35,
+ 	PERF_OUTPUT_BRSTACKINSNLEN  = 1ULL << 36,
+ 	PERF_OUTPUT_MACHINE_PID     = 1ULL << 37,
+ 	PERF_OUTPUT_VCPU            = 1ULL << 38,
+ 	PERF_OUTPUT_CGROUP          = 1ULL << 39,
+ 	PERF_OUTPUT_RETIRE_LAT      = 1ULL << 40,
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  };
  
  struct perf_script {
@@@ -188,6 -199,12 +197,15 @@@ struct output_option 
  	{.str = "tod", .field = PERF_OUTPUT_TOD},
  	{.str = "data_page_size", .field = PERF_OUTPUT_DATA_PAGE_SIZE},
  	{.str = "code_page_size", .field = PERF_OUTPUT_CODE_PAGE_SIZE},
++<<<<<<< HEAD
++=======
+ 	{.str = "ins_lat", .field = PERF_OUTPUT_INS_LAT},
+ 	{.str = "brstackinsnlen", .field = PERF_OUTPUT_BRSTACKINSNLEN},
+ 	{.str = "machine_pid", .field = PERF_OUTPUT_MACHINE_PID},
+ 	{.str = "vcpu", .field = PERF_OUTPUT_VCPU},
+ 	{.str = "cgroup", .field = PERF_OUTPUT_CGROUP},
+ 	{.str = "retire_lat", .field = PERF_OUTPUT_RETIRE_LAT},
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  };
  
  enum {
@@@ -262,7 -279,8 +280,12 @@@ static struct 
  			      PERF_OUTPUT_DSO | PERF_OUTPUT_PERIOD |
  			      PERF_OUTPUT_ADDR | PERF_OUTPUT_DATA_SRC |
  			      PERF_OUTPUT_WEIGHT | PERF_OUTPUT_PHYS_ADDR |
++<<<<<<< HEAD
 +			      PERF_OUTPUT_DATA_PAGE_SIZE | PERF_OUTPUT_CODE_PAGE_SIZE,
++=======
+ 			      PERF_OUTPUT_DATA_PAGE_SIZE | PERF_OUTPUT_CODE_PAGE_SIZE |
+ 			      PERF_OUTPUT_INS_LAT | PERF_OUTPUT_RETIRE_LAT,
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  
  		.invalid_fields = PERF_OUTPUT_TRACE | PERF_OUTPUT_BPF_OUTPUT,
  	},
@@@ -532,6 -543,20 +555,23 @@@ static int evsel__check_attr(struct evs
  	    evsel__check_stype(evsel, PERF_SAMPLE_CODE_PAGE_SIZE, "CODE_PAGE_SIZE", PERF_OUTPUT_CODE_PAGE_SIZE))
  		return -EINVAL;
  
++<<<<<<< HEAD
++=======
+ 	if (PRINT_FIELD(INS_LAT) &&
+ 	    evsel__check_stype(evsel, PERF_SAMPLE_WEIGHT_STRUCT, "WEIGHT_STRUCT", PERF_OUTPUT_INS_LAT))
+ 		return -EINVAL;
+ 
+ 	if (PRINT_FIELD(CGROUP) &&
+ 	    evsel__check_stype(evsel, PERF_SAMPLE_CGROUP, "CGROUP", PERF_OUTPUT_CGROUP)) {
+ 		pr_err("Hint: run 'perf record --all-cgroups ...'\n");
+ 		return -EINVAL;
+ 	}
+ 
+ 	if (PRINT_FIELD(RETIRE_LAT) &&
+ 	    evsel__check_stype(evsel, PERF_SAMPLE_WEIGHT_STRUCT, "WEIGHT_STRUCT", PERF_OUTPUT_RETIRE_LAT))
+ 		return -EINVAL;
+ 
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  	return 0;
  }
  
@@@ -2037,6 -2191,12 +2077,15 @@@ static void process_event(struct perf_s
  	if (PRINT_FIELD(WEIGHT))
  		fprintf(fp, "%16" PRIu64, sample->weight);
  
++<<<<<<< HEAD
++=======
+ 	if (PRINT_FIELD(INS_LAT))
+ 		fprintf(fp, "%16" PRIu16, sample->ins_lat);
+ 
+ 	if (PRINT_FIELD(RETIRE_LAT))
+ 		fprintf(fp, "%16" PRIu16, sample->retire_lat);
+ 
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  	if (PRINT_FIELD(IP)) {
  		struct callchain_cursor *cursor = NULL;
  
@@@ -3698,9 -3883,10 +3747,16 @@@ int cmd_script(int argc, const char **a
  		     "Valid types: hw,sw,trace,raw,synth. "
  		     "Fields: comm,tid,pid,time,cpu,event,trace,ip,sym,dso,"
  		     "addr,symoff,srcline,period,iregs,uregs,brstack,"
++<<<<<<< HEAD
 +		     "brstacksym,flags,bpf-output,brstackinsn,brstackoff,"
 +		     "callindent,insn,insnlen,synth,phys_addr,metric,misc,ipc,tod,"
 +		     "data_page_size,code_page_size",
++=======
+ 		     "brstacksym,flags,data_src,weight,bpf-output,brstackinsn,"
+ 		     "brstackinsnlen,brstackoff,callindent,insn,insnlen,synth,"
+ 		     "phys_addr,metric,misc,srccode,ipc,tod,data_page_size,"
+ 		     "code_page_size,ins_lat,machine_pid,vcpu,cgroup,retire_lat",
++>>>>>>> 17f248aa8664 (perf script: Support Retire Latency)
  		     parse_output_fields),
  	OPT_BOOLEAN('a', "all-cpus", &system_wide,
  		    "system-wide collection from all CPUs"),
* Unmerged path tools/perf/builtin-script.c
