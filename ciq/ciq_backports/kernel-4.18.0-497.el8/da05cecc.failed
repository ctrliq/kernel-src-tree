sctp: sysctl: make extra pointers netns aware

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Firo Yang <firo.yang@suse.com>
commit da05cecc4939c0410d56c29e252998b192756318
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/da05cecc.failed

Recently, a customer reported that from their container whose
net namespace is different to the host's init_net, they can't set
the container's net.sctp.rto_max to any value smaller than
init_net.sctp.rto_min.

For instance,
Host:
sudo sysctl net.sctp.rto_min
net.sctp.rto_min = 1000

Container:
echo 100 > /mnt/proc-net/sctp/rto_min
echo 400 > /mnt/proc-net/sctp/rto_max
echo: write error: Invalid argument

This is caused by the check made from this'commit 4f3fdf3bc59c
("sctp: add check rto_min and rto_max in sysctl")'
When validating the input value, it's always referring the boundary
value set for the init_net namespace.

Having container's rto_max smaller than host's init_net.sctp.rto_min
does make sense. Consider that the rto between two containers on the
same host is very likely smaller than it for two hosts.

So to fix this problem, as suggested by Marcelo, this patch makes the
extra pointers of rto_min, rto_max, pf_retrans, and ps_retrans point
to the corresponding variables from the newly created net namespace while
the new net namespace is being registered in sctp_sysctl_net_register.

Fixes: 4f3fdf3bc59c ("sctp: add check rto_min and rto_max in sysctl")
	Reviewed-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Reviewed-by: Jakub Kicinski <kuba@kernel.org>
	Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
	Signed-off-by: Firo Yang <firo.yang@suse.com>
Link: https://lore.kernel.org/r/20221209054854.23889-1-firo.yang@suse.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit da05cecc4939c0410d56c29e252998b192756318)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sctp/sysctl.c
diff --cc net/sctp/sysctl.c
index c7291487b34f,a7a9136198fd..000000000000
--- a/net/sctp/sysctl.c
+++ b/net/sctp/sysctl.c
@@@ -229,24 -236,6 +257,27 @@@ static struct ctl_table sctp_net_table[
  		.extra2		= SYSCTL_INT_MAX,
  	},
  	{
++<<<<<<< HEAD
 +		.procname	= "pf_retrans",
 +		.data		= &init_net.sctp.pf_retrans,
 +		.maxlen		= sizeof(int),
 +		.mode		= 0644,
 +		.proc_handler	= proc_dointvec_minmax,
 +		.extra1		= SYSCTL_ZERO,
 +		.extra2		= &init_net.sctp_ps_retrans,
 +	},
 +	{
 +		.procname	= "ps_retrans",
 +		.data		= &init_net.sctp_ps_retrans,
 +		.maxlen		= sizeof(int),
 +		.mode		= 0644,
 +		.proc_handler	= proc_dointvec_minmax,
 +		.extra1		= &init_net.sctp.pf_retrans,
 +		.extra2		= &ps_retrans_max,
 +	},
 +	{
++=======
++>>>>>>> da05cecc4939 (sctp: sysctl: make extra pointers netns aware)
  		.procname	= "sndbuf_policy",
  		.data		= &init_net.sctp.sndbuf_policy,
  		.maxlen		= sizeof(int),
* Unmerged path net/sctp/sysctl.c
