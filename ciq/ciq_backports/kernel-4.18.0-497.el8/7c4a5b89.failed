sched/rt: pick_next_rt_entity(): check list_entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Pietro Borrello <borrello@diag.uniroma1.it>
commit 7c4a5b89a0b5a57a64b601775b296abf77a9fe97
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/7c4a5b89.failed

Commit 326587b84078 ("sched: fix goto retry in pick_next_task_rt()")
removed any path which could make pick_next_rt_entity() return NULL.
However, BUG_ON(!rt_se) in _pick_next_task_rt() (the only caller of
pick_next_rt_entity()) still checks the error condition, which can
never happen, since list_entry() never returns NULL.
Remove the BUG_ON check, and instead emit a warning in the only
possible error condition here: the queue being empty which should
never happen.

Fixes: 326587b84078 ("sched: fix goto retry in pick_next_task_rt()")
	Signed-off-by: Pietro Borrello <borrello@diag.uniroma1.it>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Phil Auld <pauld@redhat.com>
	Reviewed-by: Steven Rostedt (Google) <rostedt@goodmis.org>
Link: https://lore.kernel.org/r/20230128-list-entry-null-check-sched-v3-1-b1a71bd1ac6b@diag.uniroma1.it
(cherry picked from commit 7c4a5b89a0b5a57a64b601775b296abf77a9fe97)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/rt.c
diff --cc kernel/sched/rt.c
index 234cbb61d892,0a11f44adee5..000000000000
--- a/kernel/sched/rt.c
+++ b/kernel/sched/rt.c
@@@ -1579,8 -1790,9 +1581,14 @@@ static struct task_struct *_pick_next_t
  	struct rt_rq *rt_rq  = &rq->rt;
  
  	do {
++<<<<<<< HEAD
 +		rt_se = pick_next_rt_entity(rq, rt_rq);
 +		BUG_ON(!rt_se);
++=======
+ 		rt_se = pick_next_rt_entity(rt_rq);
+ 		if (unlikely(!rt_se))
+ 			return NULL;
++>>>>>>> 7c4a5b89a0b5 (sched/rt: pick_next_rt_entity(): check list_entry)
  		rt_rq = group_rt_rq(rt_se);
  	} while (rt_rq);
  
* Unmerged path kernel/sched/rt.c
