sched/fair: Remove useless check in select_idle_core()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Abel Wu <wuyun.abel@bytedance.com>
commit 8eeeed9c4a791f0d1f2ea830eb75a4246c117ae2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/8eeeed9c.failed

The function select_idle_core() only gets called when has_idle_cores
is true which can be possible only when sched_smt_present is enabled.

This change also aligns select_idle_core() with select_idle_smt() in
the way that the caller do the check if necessary.

	Signed-off-by: Abel Wu <wuyun.abel@bytedance.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Mel Gorman <mgorman@techsingularity.net>
Link: https://lore.kernel.org/r/20220907112000.1854-4-wuyun.abel@bytedance.com
(cherry picked from commit 8eeeed9c4a791f0d1f2ea830eb75a4246c117ae2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/fair.c
diff --cc kernel/sched/fair.c
index e124d08fbb7e,03ce65068333..000000000000
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@@ -6184,9 -6321,6 +6184,12 @@@ static int select_idle_core(struct task
  	bool idle = true;
  	int cpu;
  
++<<<<<<< HEAD
 +	if (!static_branch_likely(&sched_smt_present))
 +		return __select_idle_cpu(core);
 +
++=======
++>>>>>>> 8eeeed9c4a79 (sched/fair: Remove useless check in select_idle_core())
  	for_each_cpu(cpu, cpu_smt_mask(core)) {
  		if (!available_idle_cpu(cpu)) {
  			idle = false;
* Unmerged path kernel/sched/fair.c
