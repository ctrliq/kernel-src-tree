perf report: Support Retire Latency

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Kan Liang <kan.liang@linux.intel.com>
commit d7d213e04cf83318681f24870f1144e50d5c91bb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/d7d213e0.failed

The Retire Latency field is added in the var3_w of the
PERF_SAMPLE_WEIGHT_STRUCT. The Retire Latency reports pipeline stall of
this instruction compared to the previous instruction in cycles.  That's
quite useful to display the information with perf mem report.

The p_stage_cyc for Power is also from the var3_w. Union the p_stage_cyc
and retire_lat to share the code.

Implement X86 specific codes to display the X86 specific header.

Add a new sort key retire_lat for the Retire Latency.

	Reviewed-by: Andi Kleen <ak@linux.intel.com>
	Signed-off-by: Kan Liang <kan.liang@linux.intel.com>
	Cc: Ian Rogers <irogers@google.com>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Stephane Eranian <eranian@google.com>
Link: http://lore.kernel.org/lkml/20230104201349.1451191-8-kan.liang@linux.intel.com
	Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
(cherry picked from commit d7d213e04cf83318681f24870f1144e50d5c91bb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/perf/Documentation/perf-report.txt
#	tools/perf/util/sample.h
#	tools/perf/util/sort.c
#	tools/perf/util/sort.h
diff --cc tools/perf/Documentation/perf-report.txt
index 24efc0583c93,c242e8da6b1a..000000000000
--- a/tools/perf/Documentation/perf-report.txt
+++ b/tools/perf/Documentation/perf-report.txt
@@@ -114,6 -114,9 +114,12 @@@ OPTION
  	- local_ins_lat: Local instruction latency version
  	- p_stage_cyc: On powerpc, this presents the number of cycles spent in a
  	  pipeline stage. And currently supported only on powerpc.
++<<<<<<< HEAD
++=======
+ 	- addr: (Full) virtual address of the sampled instruction
+ 	- retire_lat: On X86, this reports pipeline stall of this instruction compared
+ 	  to the previous instruction in cycles. And currently supported only on X86
++>>>>>>> d7d213e04cf8 (perf report: Support Retire Latency)
  
  	By default, comm, dso and symbol keys are used.
  	(i.e. --sort comm,dso,symbol)
diff --cc tools/perf/util/sort.c
index b6aca4fc301d,4a648231fe72..000000000000
--- a/tools/perf/util/sort.c
+++ b/tools/perf/util/sort.c
@@@ -1882,6 -2132,9 +1882,12 @@@ static struct sort_dimension common_sor
  	DIM(SORT_GLOBAL_INS_LAT, "ins_lat", sort_global_ins_lat),
  	DIM(SORT_LOCAL_PIPELINE_STAGE_CYC, "local_p_stage_cyc", sort_local_p_stage_cyc),
  	DIM(SORT_GLOBAL_PIPELINE_STAGE_CYC, "p_stage_cyc", sort_global_p_stage_cyc),
++<<<<<<< HEAD
++=======
+ 	DIM(SORT_ADDR, "addr", sort_addr),
+ 	DIM(SORT_LOCAL_RETIRE_LAT, "local_retire_lat", sort_local_p_stage_cyc),
+ 	DIM(SORT_GLOBAL_RETIRE_LAT, "retire_lat", sort_global_p_stage_cyc),
++>>>>>>> d7d213e04cf8 (perf report: Support Retire Latency)
  };
  
  #undef DIM
diff --cc tools/perf/util/sort.h
index 7c351c3911d8,9a91d0df2833..000000000000
--- a/tools/perf/util/sort.h
+++ b/tools/perf/util/sort.h
@@@ -238,6 -236,9 +238,12 @@@ enum sort_type 
  	SORT_GLOBAL_INS_LAT,
  	SORT_LOCAL_PIPELINE_STAGE_CYC,
  	SORT_GLOBAL_PIPELINE_STAGE_CYC,
++<<<<<<< HEAD
++=======
+ 	SORT_ADDR,
+ 	SORT_LOCAL_RETIRE_LAT,
+ 	SORT_GLOBAL_RETIRE_LAT,
++>>>>>>> d7d213e04cf8 (perf report: Support Retire Latency)
  
  	/* branch stack specific sort keys */
  	__SORT_BRANCH_STACK,
* Unmerged path tools/perf/util/sample.h
* Unmerged path tools/perf/Documentation/perf-report.txt
diff --git a/tools/perf/arch/x86/util/event.c b/tools/perf/arch/x86/util/event.c
index 9b31734ee968..0e813fef279d 100644
--- a/tools/perf/arch/x86/util/event.c
+++ b/tools/perf/arch/x86/util/event.c
@@ -87,6 +87,7 @@ void arch_perf_parse_sample_weight(struct perf_sample *data,
 	else {
 		data->weight = weight.var1_dw;
 		data->ins_lat = weight.var2_w;
+		data->retire_lat = weight.var3_w;
 	}
 }
 
@@ -100,3 +101,22 @@ void arch_perf_synthesize_sample_weight(const struct perf_sample *data,
 		*array |= ((u64)data->ins_lat << 32);
 	}
 }
+
+const char *arch_perf_header_entry(const char *se_header)
+{
+	if (!strcmp(se_header, "Local Pipeline Stage Cycle"))
+		return "Local Retire Latency";
+	else if (!strcmp(se_header, "Pipeline Stage Cycle"))
+		return "Retire Latency";
+
+	return se_header;
+}
+
+int arch_support_sort_key(const char *sort_key)
+{
+	if (!strcmp(sort_key, "p_stage_cyc"))
+		return 1;
+	if (!strcmp(sort_key, "local_p_stage_cyc"))
+		return 1;
+	return 0;
+}
* Unmerged path tools/perf/util/sample.h
* Unmerged path tools/perf/util/sort.c
* Unmerged path tools/perf/util/sort.h
