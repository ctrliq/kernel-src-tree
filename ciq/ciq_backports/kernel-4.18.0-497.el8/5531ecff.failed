sched: Add update_current_exec_runtime helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-497.el8
commit-author Shang XiaoJing <shangxiaojing@huawei.com>
commit 5531ecffa4b923bc7739e9ea73c552d80af602dc
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-497.el8/5531ecff.failed

Wrap repeated code in helper function update_current_exec_runtime for
update the exec time of the current.

	Signed-off-by: Shang XiaoJing <shangxiaojing@huawei.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20220824082856.15674-1-shangxiaojing@huawei.com
(cherry picked from commit 5531ecffa4b923bc7739e9ea73c552d80af602dc)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/sched.h
diff --cc kernel/sched/sched.h
index 73b3a9a64bda,da17be6f27fd..000000000000
--- a/kernel/sched/sched.h
+++ b/kernel/sched/sched.h
@@@ -2664,5 -3149,23 +2664,28 @@@ static inline bool is_per_cpu_kthread(s
  }
  #endif
  
++<<<<<<< HEAD
 +void swake_up_all_locked(struct swait_queue_head *q);
 +void __prepare_to_swait(struct swait_queue_head *q, struct swait_queue *wait);
++=======
+ extern void swake_up_all_locked(struct swait_queue_head *q);
+ extern void __prepare_to_swait(struct swait_queue_head *q, struct swait_queue *wait);
+ 
+ #ifdef CONFIG_PREEMPT_DYNAMIC
+ extern int preempt_dynamic_mode;
+ extern int sched_dynamic_mode(const char *str);
+ extern void sched_dynamic_update(int mode);
+ #endif
+ 
+ static inline void update_current_exec_runtime(struct task_struct *curr,
+ 						u64 now, u64 delta_exec)
+ {
+ 	curr->se.sum_exec_runtime += delta_exec;
+ 	account_group_exec_runtime(curr, delta_exec);
+ 
+ 	curr->se.exec_start = now;
+ 	cgroup_account_cputime(curr, delta_exec);
+ }
+ 
+ #endif /* _KERNEL_SCHED_SCHED_H */
++>>>>>>> 5531ecffa4b9 (sched: Add update_current_exec_runtime helper)
diff --git a/kernel/sched/deadline.c b/kernel/sched/deadline.c
index bfeffe5c46f0..2ff8f44fc9d6 100644
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@ -1268,11 +1268,7 @@ static void update_curr_dl(struct rq *rq)
 	schedstat_set(curr->se.statistics.exec_max,
 		      max(curr->se.statistics.exec_max, delta_exec));
 
-	curr->se.sum_exec_runtime += delta_exec;
-	account_group_exec_runtime(curr, delta_exec);
-
-	curr->se.exec_start = now;
-	cgroup_account_cputime(curr, delta_exec);
+	update_current_exec_runtime(curr, now, delta_exec);
 
 	if (dl_entity_is_special(dl_se))
 		return;
diff --git a/kernel/sched/rt.c b/kernel/sched/rt.c
index 234cbb61d892..7dcfb92ec4df 100644
--- a/kernel/sched/rt.c
+++ b/kernel/sched/rt.c
@@ -983,11 +983,7 @@ static void update_curr_rt(struct rq *rq)
 	schedstat_set(curr->se.statistics.exec_max,
 		      max(curr->se.statistics.exec_max, delta_exec));
 
-	curr->se.sum_exec_runtime += delta_exec;
-	account_group_exec_runtime(curr, delta_exec);
-
-	curr->se.exec_start = now;
-	cgroup_account_cputime(curr, delta_exec);
+	update_current_exec_runtime(curr, now, delta_exec);
 
 	if (!rt_bandwidth_enabled())
 		return;
* Unmerged path kernel/sched/sched.h
diff --git a/kernel/sched/stop_task.c b/kernel/sched/stop_task.c
index bd8a76679d21..46eb895c76ba 100644
--- a/kernel/sched/stop_task.c
+++ b/kernel/sched/stop_task.c
@@ -63,20 +63,17 @@ static void yield_task_stop(struct rq *rq)
 static void put_prev_task_stop(struct rq *rq, struct task_struct *prev)
 {
 	struct task_struct *curr = rq->curr;
-	u64 delta_exec;
+	u64 now, delta_exec;
 
-	delta_exec = rq_clock_task(rq) - curr->se.exec_start;
+	now = rq_clock_task(rq);
+	delta_exec = now - curr->se.exec_start;
 	if (unlikely((s64)delta_exec < 0))
 		delta_exec = 0;
 
 	schedstat_set(curr->se.statistics.exec_max,
 			max(curr->se.statistics.exec_max, delta_exec));
 
-	curr->se.sum_exec_runtime += delta_exec;
-	account_group_exec_runtime(curr, delta_exec);
-
-	curr->se.exec_start = rq_clock_task(rq);
-	cgroup_account_cputime(curr, delta_exec);
+	update_current_exec_runtime(curr, now, delta_exec);
 }
 
 /*
