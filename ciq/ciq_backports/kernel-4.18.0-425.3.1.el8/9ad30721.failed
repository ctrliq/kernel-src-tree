driver core: Refactor multiple copies of device cleanup

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Rob Herring <robh@kernel.org>
commit 9ad307213fa4081f4bc2f2daa31d4f2d35d7a213
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/9ad30721.failed

There are 3 copies of the same device cleanup code used for probe failure,
testing re-probing, and device unbinding. Changes to this code often miss
at least one of the copies of the code. See commits d0243bbd5dd3 ("drivers
core: Free dma_range_map when driver probe failed") and d8f7a5484f21
("driver core: Free DMA range map when device is released") for example.

Let's refactor the code to its own function.

	Signed-off-by: Rob Herring <robh@kernel.org>
Link: https://lore.kernel.org/r/20220223225257.1681968-2-robh@kernel.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9ad307213fa4081f4bc2f2daa31d4f2d35d7a213)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/dd.c
diff --cc drivers/base/dd.c
index f665c7e7c258,86e230973010..000000000000
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@@ -706,17 -672,7 +711,21 @@@ probe_failed
  					     BUS_NOTIFY_DRIVER_NOT_BOUND, dev);
  pinctrl_bind_failed:
  	device_links_no_driver(dev);
++<<<<<<< HEAD
 +	devres_release_all(dev);
 +	arch_teardown_dma_ops(dev);
 +	kfree(dev->dma_range_map);
 +	dev->dma_range_map = NULL;
 +	driver_sysfs_remove(dev);
 +	dev->driver = NULL;
 +	dev_set_drvdata(dev, NULL);
 +	if (dev->pm_domain && dev->pm_domain->dismiss)
 +		dev->pm_domain->dismiss(dev);
 +	pm_runtime_reinit(dev);
 +	dev_pm_set_driver_flags(dev, 0);
++=======
+ 	device_unbind_cleanup(dev);
++>>>>>>> 9ad307213fa4 (driver core: Refactor multiple copies of device cleanup)
  done:
  	return ret;
  }
* Unmerged path drivers/base/dd.c
