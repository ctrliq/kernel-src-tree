PM: runtime: add devm_pm_runtime_enable helper

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
commit b3636a3a2c51715736d3ec45f635ed03191962ce
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/b3636a3a.failed

A typical code pattern for pm_runtime_enable() call is to call it in the
_probe function and to call pm_runtime_disable() both from _probe error
path and from _remove function. For some drivers the whole remove
function would consist of the call to pm_remove_disable().

Add helper function to replace this bolierplate piece of code. Calling
devm_pm_runtime_enable() removes the need for calling
pm_runtime_disable() both in the probe()'s error path and in the
remove() function.

	Signed-off-by: Dmitry Baryshkov <dmitry.baryshkov@linaro.org>
Link: https://lore.kernel.org/r/20210731195034.979084-2-dmitry.baryshkov@linaro.org
	Acked-by: Rafael J. Wysocki <rafael@kernel.org>
	Signed-off-by: Stephen Boyd <sboyd@kernel.org>
(cherry picked from commit b3636a3a2c51715736d3ec45f635ed03191962ce)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pm_runtime.h
diff --cc include/linux/pm_runtime.h
index 04c3a1086685,222da43b7096..000000000000
--- a/include/linux/pm_runtime.h
+++ b/include/linux/pm_runtime.h
@@@ -61,6 -59,15 +61,18 @@@ extern void pm_runtime_put_suppliers(st
  extern void pm_runtime_new_link(struct device *dev);
  extern void pm_runtime_drop_link(struct device_link *link);
  
++<<<<<<< HEAD
++=======
+ extern int devm_pm_runtime_enable(struct device *dev);
+ 
+ /**
+  * pm_runtime_get_if_in_use - Conditionally bump up runtime PM usage counter.
+  * @dev: Target device.
+  *
+  * Increment the runtime PM usage counter of @dev if its runtime PM status is
+  * %RPM_ACTIVE and its runtime PM usage counter is greater than 0.
+  */
++>>>>>>> b3636a3a2c51 (PM: runtime: add devm_pm_runtime_enable helper)
  static inline int pm_runtime_get_if_in_use(struct device *dev)
  {
  	return pm_runtime_get_if_active(dev, false);
diff --git a/drivers/base/power/runtime.c b/drivers/base/power/runtime.c
index 3dff9a4e04b8..0fae875fa6e0 100644
--- a/drivers/base/power/runtime.c
+++ b/drivers/base/power/runtime.c
@@ -1428,6 +1428,23 @@ void pm_runtime_enable(struct device *dev)
 }
 EXPORT_SYMBOL_GPL(pm_runtime_enable);
 
+static void pm_runtime_disable_action(void *data)
+{
+	pm_runtime_disable(data);
+}
+
+/**
+ * devm_pm_runtime_enable - devres-enabled version of pm_runtime_enable.
+ * @dev: Device to handle.
+ */
+int devm_pm_runtime_enable(struct device *dev)
+{
+	pm_runtime_enable(dev);
+
+	return devm_add_action_or_reset(dev, pm_runtime_disable_action, dev);
+}
+EXPORT_SYMBOL_GPL(devm_pm_runtime_enable);
+
 /**
  * pm_runtime_forbid - Block runtime PM of a device.
  * @dev: Device to handle.
* Unmerged path include/linux/pm_runtime.h
