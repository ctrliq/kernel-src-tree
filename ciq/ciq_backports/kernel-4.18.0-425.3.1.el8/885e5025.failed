driver core: Move driver_sysfs_remove() after driver_sysfs_add()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 885e50253bfd6750327a265405461496d6af1639
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/885e5025.failed

The driver_sysfs_remove() should be called after driver_sysfs_add() in
really_probe(). The out-of-order driver_sysfs_remove() tries to remove
some nonexistent nodes under the device and driver sysfs nodes. This is
allowed, hence this change doesn't fix any problem, just a cleanup.

	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
Link: https://lore.kernel.org/r/20211231033901.2168664-2-baolu.lu@linux.intel.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 885e50253bfd6750327a265405461496d6af1639)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/dd.c
diff --cc drivers/base/dd.c
index 56535798518a,f6fac016b811..000000000000
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@@ -622,13 -577,14 +622,21 @@@ re_probe
  	if (dev->bus->dma_configure) {
  		ret = dev->bus->dma_configure(dev);
  		if (ret)
- 			goto probe_failed;
+ 			goto sysfs_failed;
  	}
  
++<<<<<<< HEAD
 +	if (driver_sysfs_add(dev)) {
 +		printk(KERN_ERR "%s: driver_sysfs_add(%s) failed\n",
 +			__func__, dev_name(dev));
 +		goto probe_failed;
++=======
+ 	ret = driver_sysfs_add(dev);
+ 	if (ret) {
+ 		pr_err("%s: driver_sysfs_add(%s) failed\n",
+ 		       __func__, dev_name(dev));
+ 		goto sysfs_failed;
++>>>>>>> 885e50253bfd (driver core: Move driver_sysfs_remove() after driver_sysfs_add())
  	}
  
  	if (dev->pm_domain && dev->pm_domain->activate) {
* Unmerged path drivers/base/dd.c
