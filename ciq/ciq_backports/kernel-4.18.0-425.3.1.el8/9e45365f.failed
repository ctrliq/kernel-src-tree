arm64: add ID_AA64ISAR2_EL1 sys register

jira LE-1907
cve CVE-2022-23960
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Joey Gouly <joey.gouly@arm.com>
commit 9e45365f1469ef2b934f9d035975dbc9ad352116
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/9e45365f.failed

This is a new ID register, introduced in 8.7.

	Signed-off-by: Joey Gouly <joey.gouly@arm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Marc Zyngier <maz@kernel.org>
	Cc: James Morse <james.morse@arm.com>
	Cc: Alexandru Elisei <alexandru.elisei@arm.com>
	Cc: Suzuki K Poulose <suzuki.poulose@arm.com>
	Cc: Reiji Watanabe <reijiw@google.com>
	Acked-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20211210165432.8106-3-joey.gouly@arm.com
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 9e45365f1469ef2b934f9d035975dbc9ad352116)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/cpu.h
#	arch/arm64/kernel/cpufeature.c
diff --cc arch/arm64/include/asm/cpu.h
index dccf6c91a348,a58e366f0b07..000000000000
--- a/arch/arm64/include/asm/cpu.h
+++ b/arch/arm64/include/asm/cpu.h
@@@ -65,6 -35,31 +65,34 @@@ struct cpuinfo_arm64 
  	u32		reg_mvfr0;
  	u32		reg_mvfr1;
  	u32		reg_mvfr2;
++<<<<<<< HEAD
++=======
+ };
+ 
+ struct cpuinfo_arm64 {
+ 	struct cpu	cpu;
+ 	struct kobject	kobj;
+ 	u64		reg_ctr;
+ 	u64		reg_cntfrq;
+ 	u64		reg_dczid;
+ 	u64		reg_midr;
+ 	u64		reg_revidr;
+ 	u64		reg_gmid;
+ 
+ 	u64		reg_id_aa64dfr0;
+ 	u64		reg_id_aa64dfr1;
+ 	u64		reg_id_aa64isar0;
+ 	u64		reg_id_aa64isar1;
+ 	u64		reg_id_aa64isar2;
+ 	u64		reg_id_aa64mmfr0;
+ 	u64		reg_id_aa64mmfr1;
+ 	u64		reg_id_aa64mmfr2;
+ 	u64		reg_id_aa64pfr0;
+ 	u64		reg_id_aa64pfr1;
+ 	u64		reg_id_aa64zfr0;
+ 
+ 	struct cpuinfo_32bit	aarch32;
++>>>>>>> 9e45365f1469 (arm64: add ID_AA64ISAR2_EL1 sys register)
  
  	/* pseudo-ZCR for recording maximum ZCR_EL1 LEN value: */
  	u64		reg_zcr;
diff --cc arch/arm64/kernel/cpufeature.c
index 0854c01dc6ba,c36018310da5..000000000000
--- a/arch/arm64/kernel/cpufeature.c
+++ b/arch/arm64/kernel/cpufeature.c
@@@ -618,7 -640,9 +622,13 @@@ static const struct __ftr_reg_entry 
  
  	/* Op1 = 0, CRn = 0, CRm = 6 */
  	ARM64_FTR_REG(SYS_ID_AA64ISAR0_EL1, ftr_id_aa64isar0),
++<<<<<<< HEAD
 +	ARM64_FTR_REG(SYS_ID_AA64ISAR1_EL1, ftr_id_aa64isar1),
++=======
+ 	ARM64_FTR_REG_OVERRIDE(SYS_ID_AA64ISAR1_EL1, ftr_id_aa64isar1,
+ 			       &id_aa64isar1_override),
+ 	ARM64_FTR_REG(SYS_ID_AA64ISAR2_EL1, ftr_id_aa64isar2),
++>>>>>>> 9e45365f1469 (arm64: add ID_AA64ISAR2_EL1 sys register)
  
  	/* Op1 = 0, CRn = 0, CRm = 7 */
  	ARM64_FTR_REG(SYS_ID_AA64MMFR0_EL1, ftr_id_aa64mmfr0),
* Unmerged path arch/arm64/include/asm/cpu.h
diff --git a/arch/arm64/include/asm/sysreg.h b/arch/arm64/include/asm/sysreg.h
index b1809fe256e9..9739b8ae3694 100644
--- a/arch/arm64/include/asm/sysreg.h
+++ b/arch/arm64/include/asm/sysreg.h
@@ -194,6 +194,7 @@
 
 #define SYS_ID_AA64ISAR0_EL1		sys_reg(3, 0, 0, 6, 0)
 #define SYS_ID_AA64ISAR1_EL1		sys_reg(3, 0, 0, 6, 1)
+#define SYS_ID_AA64ISAR2_EL1		sys_reg(3, 0, 0, 6, 2)
 
 #define SYS_ID_AA64MMFR0_EL1		sys_reg(3, 0, 0, 7, 0)
 #define SYS_ID_AA64MMFR1_EL1		sys_reg(3, 0, 0, 7, 1)
@@ -711,6 +712,20 @@
 #define ID_AA64ISAR1_GPI_NI			0x0
 #define ID_AA64ISAR1_GPI_IMP_DEF		0x1
 
+/* id_aa64isar2 */
+#define ID_AA64ISAR2_RPRES_SHIFT	4
+#define ID_AA64ISAR2_WFXT_SHIFT		0
+
+#define ID_AA64ISAR2_RPRES_8BIT		0x0
+#define ID_AA64ISAR2_RPRES_12BIT	0x1
+/*
+ * Value 0x1 has been removed from the architecture, and is
+ * reserved, but has not yet been removed from the ARM ARM
+ * as of ARM DDI 0487G.b.
+ */
+#define ID_AA64ISAR2_WFXT_NI		0x0
+#define ID_AA64ISAR2_WFXT_SUPPORTED	0x2
+
 /* id_aa64pfr0 */
 #define ID_AA64PFR0_CSV3_SHIFT		60
 #define ID_AA64PFR0_CSV2_SHIFT		56
* Unmerged path arch/arm64/kernel/cpufeature.c
diff --git a/arch/arm64/kernel/cpuinfo.c b/arch/arm64/kernel/cpuinfo.c
index b1e6f6529409..527bc136f5f7 100644
--- a/arch/arm64/kernel/cpuinfo.c
+++ b/arch/arm64/kernel/cpuinfo.c
@@ -374,6 +374,7 @@ static void __cpuinfo_store_cpu(struct cpuinfo_arm64 *info)
 	info->reg_id_aa64dfr1 = read_cpuid(ID_AA64DFR1_EL1);
 	info->reg_id_aa64isar0 = read_cpuid(ID_AA64ISAR0_EL1);
 	info->reg_id_aa64isar1 = read_cpuid(ID_AA64ISAR1_EL1);
+	info->reg_id_aa64isar2 = read_cpuid(ID_AA64ISAR2_EL1);
 	info->reg_id_aa64mmfr0 = read_cpuid(ID_AA64MMFR0_EL1);
 	info->reg_id_aa64mmfr1 = read_cpuid(ID_AA64MMFR1_EL1);
 	info->reg_id_aa64mmfr2 = read_cpuid(ID_AA64MMFR2_EL1);
diff --git a/arch/arm64/kvm/sys_regs.c b/arch/arm64/kvm/sys_regs.c
index 5de2df33fc42..d8ed60fe2687 100644
--- a/arch/arm64/kvm/sys_regs.c
+++ b/arch/arm64/kvm/sys_regs.c
@@ -1552,7 +1552,7 @@ static const struct sys_reg_desc sys_reg_descs[] = {
 	/* CRm=6 */
 	ID_SANITISED(ID_AA64ISAR0_EL1),
 	ID_SANITISED(ID_AA64ISAR1_EL1),
-	ID_UNALLOCATED(6,2),
+	ID_SANITISED(ID_AA64ISAR2_EL1),
 	ID_UNALLOCATED(6,3),
 	ID_UNALLOCATED(6,4),
 	ID_UNALLOCATED(6,5),
