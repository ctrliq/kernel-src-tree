drm/amd/display: Fix typo in override_lane_settings

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author George Shen <george.shen@amd.com>
commit a3e731260b9325e2e87baf54f07619c6cb83931b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/a3e73126.failed

[Why]
The function currently skips overriding the drive
settings of the first lane.

[How]
Change for loop to start at 0 instead of 1.

	Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
	Reviewed-by: Wenjing Liu <Wenjing.Liu@amd.com>
	Acked-by: Alan Liu <HaoPing.Liu@amd.com>
	Signed-off-by: George Shen <george.shen@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit a3e731260b9325e2e87baf54f07619c6cb83931b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
diff --cc drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
index c2e6a9b8442f,972dbbcc36da..000000000000
--- a/drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
+++ b/drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
@@@ -576,44 -925,43 +576,72 @@@ static void find_max_drive_settings
  		get_max_pre_emphasis_for_voltage_swing(
  			max_requested.VOLTAGE_SWING);
  
 -	for (lane = 0; lane < LANE_COUNT_DP_MAX; lane++) {
 -		lane_settings[lane].VOLTAGE_SWING = max_requested.VOLTAGE_SWING;
 -		lane_settings[lane].PRE_EMPHASIS = max_requested.PRE_EMPHASIS;
 -		lane_settings[lane].FFE_PRESET = max_requested.FFE_PRESET;
 +	/*
 +	 * Post Cursor2 levels are completely independent from
 +	 * pre-emphasis (Post Cursor1) levels. But Post Cursor2 levels
 +	 * can only be applied to each allowable combination of voltage
 +	 * swing and pre-emphasis levels */
 +	 /* if ( max_requested.postCursor2 >
 +	  *  getMaxPostCursor2ForVoltageSwing(max_requested.voltageSwing))
 +	  *  max_requested.postCursor2 =
 +	  *  getMaxPostCursor2ForVoltageSwing(max_requested.voltageSwing);
 +	  */
 +
 +	max_lt_setting->link_settings.link_rate =
 +		link_training_setting->link_settings.link_rate;
 +	max_lt_setting->link_settings.lane_count =
 +	link_training_setting->link_settings.lane_count;
 +	max_lt_setting->link_settings.link_spread =
 +		link_training_setting->link_settings.link_spread;
 +
 +	for (lane = 0; lane <
 +		link_training_setting->link_settings.lane_count;
 +		lane++) {
 +		max_lt_setting->lane_settings[lane].VOLTAGE_SWING =
 +			max_requested.VOLTAGE_SWING;
 +		max_lt_setting->lane_settings[lane].PRE_EMPHASIS =
 +			max_requested.PRE_EMPHASIS;
 +		/*max_lt_setting->laneSettings[lane].postCursor2 =
 +		 * max_requested.postCursor2;
 +		 */
  	}
 +
  }
  
++<<<<<<< HEAD
 +enum dc_status dp_get_lane_status_and_drive_settings(
++=======
+ static void override_lane_settings(const struct link_training_settings *lt_settings,
+ 		struct dc_lane_settings lane_settings[LANE_COUNT_DP_MAX])
+ {
+ 	uint32_t lane;
+ 
+ 	if (lt_settings->voltage_swing == NULL &&
+ 	    lt_settings->pre_emphasis == NULL &&
+ 	    lt_settings->ffe_preset == NULL &&
+ 	    lt_settings->post_cursor2 == NULL)
+ 
+ 		return;
+ 
+ 	for (lane = 0; lane < LANE_COUNT_DP_MAX; lane++) {
+ 		if (lt_settings->voltage_swing)
+ 			lane_settings[lane].VOLTAGE_SWING = *lt_settings->voltage_swing;
+ 		if (lt_settings->pre_emphasis)
+ 			lane_settings[lane].PRE_EMPHASIS = *lt_settings->pre_emphasis;
+ 		if (lt_settings->post_cursor2)
+ 			lane_settings[lane].POST_CURSOR2 = *lt_settings->post_cursor2;
+ 		if (lt_settings->ffe_preset)
+ 			lane_settings[lane].FFE_PRESET = *lt_settings->ffe_preset;
+ 	}
+ }
+ 
+ enum dc_status dp_get_lane_status_and_lane_adjust(
++>>>>>>> a3e731260b93 (drm/amd/display: Fix typo in override_lane_settings)
  	struct dc_link *link,
  	const struct link_training_settings *link_training_setting,
 -	union lane_status ln_status[LANE_COUNT_DP_MAX],
 -	union lane_align_status_updated *ln_align,
 -	union lane_adjust ln_adjust[LANE_COUNT_DP_MAX],
 +	union lane_status *ln_status,
 +	union lane_align_status_updated *ln_status_updated,
 +	struct link_training_settings *req_settings,
  	uint32_t offset)
  {
  	unsigned int lane01_status_address = DP_LANE0_1_STATUS;
* Unmerged path drivers/gpu/drm/amd/display/dc/core/dc_link_dp.c
