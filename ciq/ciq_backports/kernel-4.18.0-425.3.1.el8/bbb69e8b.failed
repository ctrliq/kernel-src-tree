x86/speculation: Use cached host SPEC_CTRL value for guest entry/exit

jira LE-1907
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23825
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Josh Poimboeuf <jpoimboe@kernel.org>
commit bbb69e8bee1bd882784947095ffb2bfe0f7c9470
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/bbb69e8b.failed

There's no need to recalculate the host value for every entry/exit.
Just use the cached value in spec_ctrl_current().

	Signed-off-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit bbb69e8bee1bd882784947095ffb2bfe0f7c9470)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index 951579a17911,f884f9497666..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -1062,10 -1387,9 +1053,14 @@@ static void __init spectre_v2_select_mi
  	if (mode == SPECTRE_V2_EIBRS && unprivileged_ebpf_enabled())
  		pr_err(SPECTRE_V2_EIBRS_EBPF_MSG);
  
++<<<<<<< HEAD
 +	if (spectre_v2_in_eibrs_mode(mode)) {
 +		/* Force it so VMEXIT will restore correctly */
++=======
+ 	if (spectre_v2_in_ibrs_mode(mode)) {
++>>>>>>> bbb69e8bee1b (x86/speculation: Use cached host SPEC_CTRL value for guest entry/exit)
  		x86_spec_ctrl_base |= SPEC_CTRL_IBRS;
 -		write_spec_ctrl_current(x86_spec_ctrl_base, true);
 +		wrmsrl(MSR_IA32_SPEC_CTRL, x86_spec_ctrl_base);
  	}
  
  	switch (mode) {
* Unmerged path arch/x86/kernel/cpu/bugs.c
