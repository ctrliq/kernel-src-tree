intel_idle: Fix the 'preferred_cstates' module parameter

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
commit 39c184a6a9a7a99950b321d55fe713175cf1d404
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/39c184a6.failed

Problem description.

When user boots kernel up with the 'intel_idle.preferred_cstates=4' option,
we enable C1E and disable C1 states on Sapphire Rapids Xeon (SPR). In order
for C1E to work on SPR, we have to enable the C1E promotion bit on all
CPUs.  However, we enable it only on one CPU.

Fix description.

The 'intel_idle' driver already has the infrastructure for disabling C1E
promotion on every CPU. This patch uses the same infrastructure for
enabling C1E promotion on every CPU. It changes the boolean
'disable_promotion_to_c1e' variable to a tri-state 'c1e_promotion'
variable.

Tested on a 2-socket SPR system. I verified the following combinations:

 * C1E promotion enabled and disabled in BIOS.
 * Booted with and without the 'intel_idle.preferred_cstates=4' kernel
   argument.

In all 4 cases C1E promotion was correctly set on all CPUs.

Also tested on an old Broadwell system, just to make sure it does not cause
a regression. C1E promotion was correctly disabled on that system, both C1
and C1E were exposed (as expected).

Fixes: da0e58c038e6 ("intel_idle: add 'preferred_cstates' module argument")
	Reported-by: Jan Beulich <jbeulich@suse.com>
	Signed-off-by: Artem Bityutskiy <artem.bityutskiy@linux.intel.com>
[ rjw: Minor changelog edits ]
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 39c184a6a9a7a99950b321d55fe713175cf1d404)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/idle/intel_idle.c
diff --cc drivers/idle/intel_idle.c
index 242ca989b87c,cf5ed4c1d02c..000000000000
--- a/drivers/idle/intel_idle.c
+++ b/drivers/idle/intel_idle.c
@@@ -1857,8 -1837,9 +1861,14 @@@ static int __init intel_idle_init(void
  	if (icpu) {
  		cpuidle_state_table = icpu->state_table;
  		auto_demotion_disable_flags = icpu->auto_demotion_disable_flags;
++<<<<<<< HEAD
 +		disable_promotion_to_c1e = icpu->disable_promotion_to_c1e;
 +		if (icpu->use_acpi && force_use_acpi)
++=======
+ 		if (icpu->disable_promotion_to_c1e)
+ 			c1e_promotion = C1E_PROMOTION_DISABLE;
+ 		if (icpu->use_acpi || force_use_acpi)
++>>>>>>> 39c184a6a9a7 (intel_idle: Fix the 'preferred_cstates' module parameter)
  			intel_idle_acpi_cst_extract();
  	} else if (!intel_idle_acpi_cst_extract()) {
  		return -ENODEV;
* Unmerged path drivers/idle/intel_idle.c
