ASoC: cs35l41: Correct handling of some registers in the cache

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Charles Keepax <ckeepax@opensource.cirrus.com>
commit 5f2f539901b0d9bda722637521a11b7f7cf753f1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/5f2f5399.failed

It makes no sense to cache the test/user key registers, since they
require values written at specific times, mark them volatile. It is
probably best if they can't be accessed from user-space either, so
mark them precious as well.

The interrupt force, edge, polarity and debounce are all settings
applied to the IRQ rather than status bits and as such should not be
volatile.

The OTP trim values will require re-application in the event of a
cache sync and as such should not be volatile. The OTPID however
should be volatile.

The DSP scratch registers are used to read back an error/debug code
from the DSP on shutdown, as such these should be marked volatile.

Finally, add some missing defaults, add TST_FS_MON0, and allow the
DSP core control register to be cached.

	Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
Link: https://lore.kernel.org/r/20220105113026.18955-5-ckeepax@opensource.cirrus.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 5f2f539901b0d9bda722637521a11b7f7cf753f1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/cs35l41-tables.c
diff --cc sound/soc/codecs/cs35l41-tables.c
index d1a4946ef8e0,639dcd25b17e..000000000000
--- a/sound/soc/codecs/cs35l41-tables.c
+++ b/sound/soc/codecs/cs35l41-tables.c
@@@ -251,7 -353,13 +262,16 @@@ static bool cs35l41_readable_reg(struc
  static bool cs35l41_precious_reg(struct device *dev, unsigned int reg)
  {
  	switch (reg) {
+ 	case CS35L41_TEST_KEY_CTL:
+ 	case CS35L41_USER_KEY_CTL:
  	case CS35L41_OTP_MEM0 ... CS35L41_OTP_MEM31:
++<<<<<<< HEAD:sound/soc/codecs/cs35l41-tables.c
++=======
+ 	case CS35L41_TST_FS_MON0:
+ 	case CS35L41_DSP1_XMEM_PACK_0 ... CS35L41_DSP1_XMEM_PACK_3068:
+ 	case CS35L41_DSP1_YMEM_PACK_0 ... CS35L41_DSP1_YMEM_PACK_1532:
+ 	case CS35L41_DSP1_PMEM_0 ... CS35L41_DSP1_PMEM_5114:
++>>>>>>> 5f2f539901b0 (ASoC: cs35l41: Correct handling of some registers in the cache):sound/soc/codecs/cs35l41-lib.c
  		return true;
  	default:
  		return false;
@@@ -295,54 -395,20 +307,59 @@@ static bool cs35l41_volatile_reg(struc
  	case CS35L41_IRQ2_RAW_STATUS2:
  	case CS35L41_IRQ2_RAW_STATUS3:
  	case CS35L41_IRQ2_RAW_STATUS4:
- 	case CS35L41_IRQ2_FRC1:
- 	case CS35L41_IRQ2_FRC2:
- 	case CS35L41_IRQ2_FRC3:
- 	case CS35L41_IRQ2_FRC4:
- 	case CS35L41_IRQ2_EDGE1:
- 	case CS35L41_IRQ2_EDGE4:
- 	case CS35L41_IRQ2_POL1:
- 	case CS35L41_IRQ2_POL2:
- 	case CS35L41_IRQ2_POL3:
- 	case CS35L41_IRQ2_POL4:
- 	case CS35L41_IRQ2_DB3:
  	case CS35L41_GPIO_STATUS1:
++<<<<<<< HEAD:sound/soc/codecs/cs35l41-tables.c
 +	case CS35L41_OTP_TRIM_1:
 +	case CS35L41_OTP_TRIM_2:
 +	case CS35L41_OTP_TRIM_3:
 +	case CS35L41_OTP_TRIM_4:
 +	case CS35L41_OTP_TRIM_5:
 +	case CS35L41_OTP_TRIM_6:
 +	case CS35L41_OTP_TRIM_7:
 +	case CS35L41_OTP_TRIM_8:
 +	case CS35L41_OTP_TRIM_9:
 +	case CS35L41_OTP_TRIM_10:
 +	case CS35L41_OTP_TRIM_11:
 +	case CS35L41_OTP_TRIM_12:
 +	case CS35L41_OTP_TRIM_13:
 +	case CS35L41_OTP_TRIM_14:
 +	case CS35L41_OTP_TRIM_15:
 +	case CS35L41_OTP_TRIM_16:
 +	case CS35L41_OTP_TRIM_17:
 +	case CS35L41_OTP_TRIM_18:
 +	case CS35L41_OTP_TRIM_19:
 +	case CS35L41_OTP_TRIM_20:
 +	case CS35L41_OTP_TRIM_21:
 +	case CS35L41_OTP_TRIM_22:
 +	case CS35L41_OTP_TRIM_23:
 +	case CS35L41_OTP_TRIM_24:
 +	case CS35L41_OTP_TRIM_25:
 +	case CS35L41_OTP_TRIM_26:
 +	case CS35L41_OTP_TRIM_27:
 +	case CS35L41_OTP_TRIM_28:
 +	case CS35L41_OTP_TRIM_29:
 +	case CS35L41_OTP_TRIM_30:
 +	case CS35L41_OTP_TRIM_31:
 +	case CS35L41_OTP_TRIM_32:
 +	case CS35L41_OTP_TRIM_33:
 +	case CS35L41_OTP_TRIM_34:
 +	case CS35L41_OTP_TRIM_35:
 +	case CS35L41_OTP_TRIM_36:
++=======
+ 	case CS35L41_DSP_MBOX_1 ... CS35L41_DSP_VIRT2_MBOX_8:
+ 	case CS35L41_DSP1_XMEM_PACK_0 ... CS35L41_DSP1_XMEM_PACK_3068:
+ 	case CS35L41_DSP1_XMEM_UNPACK32_0 ... CS35L41_DSP1_XMEM_UNPACK32_2046:
+ 	case CS35L41_DSP1_XMEM_UNPACK24_0 ... CS35L41_DSP1_XMEM_UNPACK24_4093:
+ 	case CS35L41_DSP1_YMEM_PACK_0 ... CS35L41_DSP1_YMEM_PACK_1532:
+ 	case CS35L41_DSP1_YMEM_UNPACK32_0 ... CS35L41_DSP1_YMEM_UNPACK32_1022:
+ 	case CS35L41_DSP1_YMEM_UNPACK24_0 ... CS35L41_DSP1_YMEM_UNPACK24_2045:
+ 	case CS35L41_DSP1_PMEM_0 ... CS35L41_DSP1_PMEM_5114:
+ 	case CS35L41_DSP1_SCRATCH1:
+ 	case CS35L41_DSP1_SCRATCH2:
+ 	case CS35L41_DSP1_SCRATCH3:
+ 	case CS35L41_DSP1_SCRATCH4:
+ 	case CS35L41_DSP1_CCM_CLK_OVERRIDE ... CS35L41_DSP1_WDT_STATUS:
++>>>>>>> 5f2f539901b0 (ASoC: cs35l41: Correct handling of some registers in the cache):sound/soc/codecs/cs35l41-lib.c
  	case CS35L41_OTP_MEM0 ... CS35L41_OTP_MEM31:
  		return true;
  	default:
* Unmerged path sound/soc/codecs/cs35l41-tables.c
