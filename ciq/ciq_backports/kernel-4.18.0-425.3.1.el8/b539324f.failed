Netvsc: Call hv_unmap_memory() in the netvsc_device_remove()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Tianyu Lan <Tianyu.Lan@microsoft.com>
commit b539324f6fe798bdb186e4e91eafb37dd851db2a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/b539324f.failed

netvsc_device_remove() calls vunmap() inside which should not be
called in the interrupt context. Current code calls hv_unmap_memory()
in the free_netvsc_device() which is rcu callback and maybe called
in the interrupt context. This will trigger BUG_ON(in_interrupt())
in the vunmap(). Fix it via moving hv_unmap_memory() to netvsc_device_
remove().

Fixes: 846da38de0e8 ("net: netvsc: Add Isolation VM support for netvsc driver")
	Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit b539324f6fe798bdb186e4e91eafb37dd851db2a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/hyperv/netvsc.c
diff --cc drivers/net/hyperv/netvsc.c
index b56822c1dc0b,e675d1016c3c..000000000000
--- a/drivers/net/hyperv/netvsc.c
+++ b/drivers/net/hyperv/netvsc.c
@@@ -164,9 -153,18 +164,24 @@@ static void free_netvsc_device(struct r
  	int i;
  
  	kfree(nvdev->extension);
++<<<<<<< HEAD
 +	vfree(nvdev->recv_buf);
 +	vfree(nvdev->send_buf);
 +	kfree(nvdev->send_section_map);
++=======
+ 
+ 	if (nvdev->recv_original_buf)
+ 		vfree(nvdev->recv_original_buf);
+ 	else
+ 		vfree(nvdev->recv_buf);
+ 
+ 	if (nvdev->send_original_buf)
+ 		vfree(nvdev->send_original_buf);
+ 	else
+ 		vfree(nvdev->send_buf);
+ 
+ 	bitmap_free(nvdev->send_section_map);
++>>>>>>> b539324f6fe7 (Netvsc: Call hv_unmap_memory() in the netvsc_device_remove())
  
  	for (i = 0; i < VRSS_CHANNEL_MAX; i++) {
  		xdp_rxq_info_unreg(&nvdev->chan_table[i].xdp_rxq);
* Unmerged path drivers/net/hyperv/netvsc.c
