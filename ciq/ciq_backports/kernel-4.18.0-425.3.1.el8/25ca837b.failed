ASoC: wm_adsp: Separate some ASoC and generic functions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Simon Trimmer <simont@opensource.cirrus.com>
commit 25ca837ba6f4dd8f969b41aa202a62facdd2370c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/25ca837b.failed

Split some functions into ASoC and generic portions so that existing
interfaces can be retained whilst allowing the implementation to be
moved out of ASoC.

	Signed-off-by: Simon Trimmer <simont@opensource.cirrus.com>
	Signed-off-by: Charles Keepax <ckeepax@opensource.cirrus.com>
Link: https://lore.kernel.org/r/20210913160057.103842-8-simont@opensource.cirrus.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 25ca837ba6f4dd8f969b41aa202a62facdd2370c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/codecs/wm_adsp.c
diff --cc sound/soc/codecs/wm_adsp.c
index c1b5ea3b5718,c0ca46e04418..000000000000
--- a/sound/soc/codecs/wm_adsp.c
+++ b/sound/soc/codecs/wm_adsp.c
@@@ -2780,11 -2787,24 +2778,24 @@@ static int cs_dsp_common_init(struct wm
  	return 0;
  }
  
- int wm_adsp1_init(struct wm_adsp *dsp)
+ static void wm_adsp_common_init(struct wm_adsp *dsp)
+ {
+ 	INIT_LIST_HEAD(&dsp->compr_list);
+ 	INIT_LIST_HEAD(&dsp->buffer_list);
+ }
+ 
+ static int cs_dsp_adsp1_init(struct wm_adsp *dsp)
  {
 -	dsp->ops = &cs_dsp_adsp1_ops;
 +	dsp->ops = &wm_adsp1_ops;
  
- 	return wm_adsp_common_init(dsp);
+ 	return cs_dsp_common_init(dsp);
+ }
+ 
+ int wm_adsp1_init(struct wm_adsp *dsp)
+ {
+ 	wm_adsp_common_init(dsp);
+ 
+ 	return cs_dsp_adsp1_init(dsp);
  }
  EXPORT_SYMBOL_GPL(wm_adsp1_init);
  
@@@ -3396,19 -3422,20 +3416,30 @@@ int wm_adsp2_init(struct wm_adsp *dsp
  }
  EXPORT_SYMBOL_GPL(wm_adsp2_init);
  
- int wm_halo_init(struct wm_adsp *dsp)
+ static int cs_dsp_halo_init(struct wm_adsp *dsp)
  {
++<<<<<<< HEAD
 +	int ret;
 +
 +	ret = wm_adsp_common_init(dsp);
 +	if (ret)
 +		return ret;
 +
 +	dsp->ops = &wm_halo_ops;
++=======
+ 	dsp->ops = &cs_dsp_halo_ops;
++>>>>>>> 25ca837ba6f4 (ASoC: wm_adsp: Separate some ASoC and generic functions)
  
+ 	return cs_dsp_common_init(dsp);
+ }
+ 
+ int wm_halo_init(struct wm_adsp *dsp)
+ {
  	INIT_WORK(&dsp->boot_work, wm_adsp_boot_work);
  
- 	return 0;
+ 	wm_adsp_common_init(dsp);
+ 
+ 	return cs_dsp_halo_init(dsp);
  }
  EXPORT_SYMBOL_GPL(wm_halo_init);
  
@@@ -3420,9 -3447,14 +3451,14 @@@ static void cs_dsp_remove(struct wm_ads
  		ctl = list_first_entry(&dsp->ctl_list, struct wm_coeff_ctl,
  					list);
  		list_del(&ctl->list);
 -		cs_dsp_free_ctl_blk(ctl);
 +		wm_adsp_free_ctl_blk(ctl);
  	}
  }
+ 
+ void wm_adsp2_remove(struct wm_adsp *dsp)
+ {
+ 	cs_dsp_remove(dsp);
+ }
  EXPORT_SYMBOL_GPL(wm_adsp2_remove);
  
  static inline int wm_adsp_compr_attached(struct wm_adsp_compr *compr)
@@@ -4463,13 -4507,12 +4511,11 @@@ irqreturn_t wm_halo_bus_error(int irq, 
  }
  EXPORT_SYMBOL_GPL(wm_halo_bus_error);
  
- irqreturn_t wm_halo_wdt_expire(int irq, void *data)
+ static void cs_dsp_halo_wdt_expire(struct wm_adsp *dsp)
  {
- 	struct wm_adsp *dsp = data;
- 
  	mutex_lock(&dsp->pwr_lock);
  
 -	cs_dsp_warn(dsp, "WDT Expiry Fault\n");
 -
 +	adsp_warn(dsp, "WDT Expiry Fault\n");
  	dsp->ops->stop_watchdog(dsp);
  	wm_adsp_fatal_error(dsp);
  
* Unmerged path sound/soc/codecs/wm_adsp.c
