net/sched: act_vlan: Add extack message for offload failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit f8fab3169464623b88d0f423f8de2b28809c2fcf
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/f8fab316.failed

For better error reporting to user space, add an extack message when
vlan action offload fails.

Currently, the failure cannot be triggered, but add a message in case
the action is extended in the future to support more than the current
set of modes.

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Reviewed-by: Petr Machata <petrm@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit f8fab3169464623b88d0f423f8de2b28809c2fcf)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_vlan.c
diff --cc net/sched/act_vlan.c
index b9dcb2d5e0cb,68b5e772386a..000000000000
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@@ -375,6 -368,68 +375,71 @@@ static size_t tcf_vlan_get_fill_size(co
  		+ nla_total_size(sizeof(u8)); /* TCA_VLAN_PUSH_VLAN_PRIORITY */
  }
  
++<<<<<<< HEAD
++=======
+ static int tcf_vlan_offload_act_setup(struct tc_action *act, void *entry_data,
+ 				      u32 *index_inc, bool bind,
+ 				      struct netlink_ext_ack *extack)
+ {
+ 	if (bind) {
+ 		struct flow_action_entry *entry = entry_data;
+ 
+ 		switch (tcf_vlan_action(act)) {
+ 		case TCA_VLAN_ACT_PUSH:
+ 			entry->id = FLOW_ACTION_VLAN_PUSH;
+ 			entry->vlan.vid = tcf_vlan_push_vid(act);
+ 			entry->vlan.proto = tcf_vlan_push_proto(act);
+ 			entry->vlan.prio = tcf_vlan_push_prio(act);
+ 			break;
+ 		case TCA_VLAN_ACT_POP:
+ 			entry->id = FLOW_ACTION_VLAN_POP;
+ 			break;
+ 		case TCA_VLAN_ACT_MODIFY:
+ 			entry->id = FLOW_ACTION_VLAN_MANGLE;
+ 			entry->vlan.vid = tcf_vlan_push_vid(act);
+ 			entry->vlan.proto = tcf_vlan_push_proto(act);
+ 			entry->vlan.prio = tcf_vlan_push_prio(act);
+ 			break;
+ 		case TCA_VLAN_ACT_POP_ETH:
+ 			entry->id = FLOW_ACTION_VLAN_POP_ETH;
+ 			break;
+ 		case TCA_VLAN_ACT_PUSH_ETH:
+ 			entry->id = FLOW_ACTION_VLAN_PUSH_ETH;
+ 			tcf_vlan_push_eth(entry->vlan_push_eth.src, entry->vlan_push_eth.dst, act);
+ 			break;
+ 		default:
+ 			NL_SET_ERR_MSG_MOD(extack, "Unsupported vlan action mode offload");
+ 			return -EOPNOTSUPP;
+ 		}
+ 		*index_inc = 1;
+ 	} else {
+ 		struct flow_offload_action *fl_action = entry_data;
+ 
+ 		switch (tcf_vlan_action(act)) {
+ 		case TCA_VLAN_ACT_PUSH:
+ 			fl_action->id = FLOW_ACTION_VLAN_PUSH;
+ 			break;
+ 		case TCA_VLAN_ACT_POP:
+ 			fl_action->id = FLOW_ACTION_VLAN_POP;
+ 			break;
+ 		case TCA_VLAN_ACT_MODIFY:
+ 			fl_action->id = FLOW_ACTION_VLAN_MANGLE;
+ 			break;
+ 		case TCA_VLAN_ACT_POP_ETH:
+ 			fl_action->id = FLOW_ACTION_VLAN_POP_ETH;
+ 			break;
+ 		case TCA_VLAN_ACT_PUSH_ETH:
+ 			fl_action->id = FLOW_ACTION_VLAN_PUSH_ETH;
+ 			break;
+ 		default:
+ 			return -EOPNOTSUPP;
+ 		}
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> f8fab3169464 (net/sched: act_vlan: Add extack message for offload failure)
  static struct tc_action_ops act_vlan_ops = {
  	.kind		=	"vlan",
  	.id		=	TCA_ID_VLAN,
* Unmerged path net/sched/act_vlan.c
