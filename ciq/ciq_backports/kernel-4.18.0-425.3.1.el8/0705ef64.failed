tools/insn: Restore the relative include paths for cross building

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Borislav Petkov <bp@suse.de>
commit 0705ef64d1ff52b817e278ca6e28095585ff31e1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/0705ef64.failed

Building perf on ppc causes:

  In file included from util/intel-pt-decoder/intel-pt-insn-decoder.c:15:
  util/intel-pt-decoder/../../../arch/x86/lib/insn.c:14:10: fatal error: asm/inat.h: No such file or directory
     14 | #include <asm/inat.h> /*__ignore_sync_check__ */
        |          ^~~~~~~~~~~~

Restore the relative include paths so that the compiler can find the
headers.

Fixes: 93281c4a9657 ("x86/insn: Add an insn_decode() API")
	Reported-by: Ian Rogers <irogers@google.com>
	Reported-by: Stephen Rothwell <sfr@canb.auug.org.au>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Tested-by: Ian Rogers <irogers@google.com>
	Tested-by: Stephen Rothwell <sfr@canb.auug.org.au>
Link: https://lkml.kernel.org/r/20210317150858.02b1bbc8@canb.auug.org.au
(cherry picked from commit 0705ef64d1ff52b817e278ca6e28095585ff31e1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/arch/x86/lib/insn.c
diff --cc tools/arch/x86/lib/insn.c
index 0f1ec7f4681e,c41f95815480..000000000000
--- a/tools/arch/x86/lib/insn.c
+++ b/tools/arch/x86/lib/insn.c
@@@ -23,10 -11,26 +23,33 @@@
  #else
  #include <string.h>
  #endif
++<<<<<<< HEAD
 +#include "../include/asm/inat.h"
 +#include "../include/asm/insn.h"
 +
 +#include "../include/asm/emulate_prefix.h"
++=======
+ #include "../include/asm/inat.h" /* __ignore_sync_check__ */
+ #include "../include/asm/insn.h" /* __ignore_sync_check__ */
+ 
+ #include <linux/errno.h>
+ #include <linux/kconfig.h>
+ 
+ #include "../include/asm/emulate_prefix.h" /* __ignore_sync_check__ */
+ 
+ #define leXX_to_cpu(t, r)						\
+ ({									\
+ 	__typeof__(t) v;						\
+ 	switch (sizeof(t)) {						\
+ 	case 4: v = le32_to_cpu(r); break;				\
+ 	case 2: v = le16_to_cpu(r); break;				\
+ 	case 1:	v = r; break;						\
+ 	default:							\
+ 		BUILD_BUG(); break;					\
+ 	}								\
+ 	v;								\
+ })
++>>>>>>> 0705ef64d1ff (tools/insn: Restore the relative include paths for cross building)
  
  /* Verify next sizeof(t) bytes can be on the same instruction */
  #define validate_next(t, insn, n)	\
* Unmerged path tools/arch/x86/lib/insn.c
