x86/bugs: Split spectre_v2_select_mitigation() and spectre_v2_user_select_mitigation()

jira LE-1907
cve CVE-2022-29901
cve CVE-2022-29900
cve CVE-2022-23825
cve CVE-2022-23816
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 166115c08a9b0b846b783088808a27d739be6e8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/166115c0.failed

retbleed will depend on spectre_v2, while spectre_v2_user depends on
retbleed. Break this cycle.

	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
	Reviewed-by: Josh Poimboeuf <jpoimboe@kernel.org>
	Signed-off-by: Borislav Petkov <bp@suse.de>
(cherry picked from commit 166115c08a9b0b846b783088808a27d739be6e8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/cpu/bugs.c
diff --cc arch/x86/kernel/cpu/bugs.c
index 951579a17911,c546a9e4ed17..000000000000
--- a/arch/x86/kernel/cpu/bugs.c
+++ b/arch/x86/kernel/cpu/bugs.c
@@@ -111,18 -147,23 +113,33 @@@ void __init check_bugs(void
  	/* Select the proper CPU mitigations before patching alternatives: */
  	spectre_v1_select_mitigation();
  	spectre_v2_select_mitigation();
++<<<<<<< HEAD
 +	spec_ctrl_cpu_init();
++=======
+ 	/*
+ 	 * retbleed_select_mitigation() relies on the state set by
+ 	 * spectre_v2_select_mitigation(); specifically it wants to know about
+ 	 * spectre_v2=ibrs.
+ 	 */
+ 	retbleed_select_mitigation();
+ 	/*
+ 	 * spectre_v2_user_select_mitigation() relies on the state set by
+ 	 * retbleed_select_mitigation(); specifically the STIBP selection is
+ 	 * forced for UNRET.
+ 	 */
+ 	spectre_v2_user_select_mitigation();
++>>>>>>> 166115c08a9b (x86/bugs: Split spectre_v2_select_mitigation() and spectre_v2_user_select_mitigation())
  	ssb_select_mitigation();
  	l1tf_select_mitigation();
 -	md_clear_select_mitigation();
 +	mds_select_mitigation();
 +	taa_select_mitigation();
  	srbds_select_mitigation();
 -	l1d_flush_select_mitigation();
 +
 +	/*
 +	 * As MDS and TAA mitigations are inter-related, update and print their
 +	 * mitigation after TAA mitigation selection is done.
 +	 */
 +	md_clear_update_mitigation();
  
  	arch_smt_update();
  
* Unmerged path arch/x86/kernel/cpu/bugs.c
