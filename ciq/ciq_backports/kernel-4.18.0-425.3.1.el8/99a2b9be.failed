net/mlx5e: SHAMPO, reduce TIR indication

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Ben Ben-Ishay <benishay@nvidia.com>
commit 99a2b9be077ae3a5d97fbf5f7782e0f2e9812978
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/99a2b9be.failed

SHAMPO is an RQ / WQ feature, an indication was added to the TIR in the
first place to enforce suitability between connected TIR and RQ, this
enforcement does not exist in current the Firmware implementation and was
redundant in the first place.

Fixes: 83439f3c37aa ("net/mlx5e: Add HW-GRO offload")
	Signed-off-by: Ben Ben-Ishay <benishay@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 99a2b9be077ae3a5d97fbf5f7782e0f2e9812978)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en/tir.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en/tir.c
index 857ea0979159,d4239e3b3c88..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en/tir.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/tir.c
@@@ -77,17 -77,20 +77,32 @@@ void mlx5e_tir_builder_build_lro(struc
  	const unsigned int rough_max_l2_l3_hdr_sz = 256;
  
  	if (builder->modify)
 -		MLX5_SET(modify_tir_in, builder->in, bitmask.packet_merge, 1);
 -
 +		MLX5_SET(modify_tir_in, builder->in, bitmask.lro, 1);
 +
++<<<<<<< HEAD
 +	if (!lro_param->enabled)
 +		return;
 +
 +	MLX5_SET(tirc, tirc, packet_merge_mask,
 +		 MLX5_TIRC_PACKET_MERGE_MASK_IPV4_LRO |
 +		 MLX5_TIRC_PACKET_MERGE_MASK_IPV6_LRO);
 +	MLX5_SET(tirc, tirc, lro_max_ip_payload_size,
 +		 (MLX5E_PARAMS_DEFAULT_LRO_WQE_SZ - rough_max_l2_l3_hdr_sz) >> 8);
 +	MLX5_SET(tirc, tirc, lro_timeout_period_usecs, lro_param->timeout);
++=======
+ 	switch (pkt_merge_param->type) {
+ 	case MLX5E_PACKET_MERGE_LRO:
+ 		MLX5_SET(tirc, tirc, packet_merge_mask,
+ 			 MLX5_TIRC_PACKET_MERGE_MASK_IPV4_LRO |
+ 			 MLX5_TIRC_PACKET_MERGE_MASK_IPV6_LRO);
+ 		MLX5_SET(tirc, tirc, lro_max_ip_payload_size,
+ 			 (MLX5E_PARAMS_DEFAULT_LRO_WQE_SZ - rough_max_l2_l3_hdr_sz) >> 8);
+ 		MLX5_SET(tirc, tirc, lro_timeout_period_usecs, pkt_merge_param->timeout);
+ 		break;
+ 	default:
+ 		break;
+ 	}
++>>>>>>> 99a2b9be077a (net/mlx5e: SHAMPO, reduce TIR indication)
  }
  
  static int mlx5e_hfunc_to_hw(u8 hfunc)
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en/tir.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
index 27a59c485fcb..e4175de8f984 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_main.c
@@ -3435,8 +3435,7 @@ static int set_feature_hw_gro(struct net_device *netdev, bool enable)
 		goto out;
 	}
 
-	err = mlx5e_safe_switch_params(priv, &new_params,
-				       mlx5e_modify_tirs_packet_merge_ctx, NULL, reset);
+	err = mlx5e_safe_switch_params(priv, &new_params, NULL, NULL, reset);
 out:
 	mutex_unlock(&priv->state_lock);
 	return err;
