tty: drop put_tty_driver

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Jiri Slaby <jslaby@suse.cz>
commit 9f90a4ddef4e4d3aa4229f6b117d4e57231457b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/9f90a4dd.failed

put_tty_driver() is an alias for tty_driver_kref_put(). There is no need
for two exported identical functions, therefore switch all users of
old put_tty_driver() to new tty_driver_kref_put() and remove the former
for good.

	Cc: Richard Henderson <rth@twiddle.net>
	Cc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>
	Cc: Matt Turner <mattst88@gmail.com>
	Cc: Geert Uytterhoeven <geert@linux-m68k.org>
	Cc: Jeff Dike <jdike@addtoit.com>
	Cc: Richard Weinberger <richard@nod.at>
	Cc: Anton Ivanov <anton.ivanov@cambridgegreys.com>
	Cc: Chris Zankel <chris@zankel.net>
	Cc: Max Filippov <jcmvbkbc@gmail.com>
	Cc: Arnd Bergmann <arnd@arndb.de>
	Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Cc: Samuel Iglesias Gonsalvez <siglesias@igalia.com>
	Cc: Jens Taprogge <jens.taprogge@taprogge.org>
	Cc: Karsten Keil <isdn@linux-pingi.de>
	Cc: Scott Branden <scott.branden@broadcom.com>
	Cc: Ulf Hansson <ulf.hansson@linaro.org>
	Cc: "David S. Miller" <davem@davemloft.net>
	Cc: Jakub Kicinski <kuba@kernel.org>
	Cc: Heiko Carstens <hca@linux.ibm.com>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Christian Borntraeger <borntraeger@de.ibm.com>
	Cc: David Lin <dtwlin@gmail.com>
	Cc: Johan Hovold <johan@kernel.org>
	Cc: Alex Elder <elder@kernel.org>
	Cc: Jiri Slaby <jirislaby@kernel.org>
	Cc: Laurentiu Tudor <laurentiu.tudor@nxp.com>
	Cc: Jiri Kosina <jikos@kernel.org>
	Cc: David Sterba <dsterba@suse.com>
	Cc: Shawn Guo <shawnguo@kernel.org>
	Cc: Sascha Hauer <s.hauer@pengutronix.de>
	Cc: Pengutronix Kernel Team <kernel@pengutronix.de>
	Cc: Fabio Estevam <festevam@gmail.com>
	Cc: NXP Linux Team <linux-imx@nxp.com>
	Cc: Oliver Neukum <oneukum@suse.com>
	Cc: Felipe Balbi <balbi@kernel.org>
	Cc: Mathias Nyman <mathias.nyman@intel.com>
	Cc: Marcel Holtmann <marcel@holtmann.org>
	Cc: Johan Hedberg <johan.hedberg@gmail.com>
	Cc: Luiz Augusto von Dentz <luiz.dentz@gmail.com>
	Acked-by: Alex Elder <elder@linaro.org>
	Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>
	Acked-by: Max Filippov <jcmvbkbc@gmail.com>
	Acked-by: David Sterba <dsterba@suse.com>
	Acked-by: Samuel Iglesias Gons√°lvez <siglesias@igalia.com>
	Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Link: https://lore.kernel.org/r/20210723074317.32690-8-jslaby@suse.cz
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 9f90a4ddef4e4d3aa4229f6b117d4e57231457b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/m68k/emu/nfcon.c
#	arch/xtensa/platforms/iss/console.c
#	drivers/misc/bcm-vk/bcm_vk_tty.c
#	drivers/tty/amiserial.c
#	drivers/tty/ehv_bytechan.c
#	drivers/tty/goldfish.c
#	drivers/tty/ipwireless/tty.c
#	drivers/tty/moxa.c
#	drivers/tty/mxser.c
#	drivers/tty/n_gsm.c
#	drivers/tty/serial/kgdb_nmi.c
#	drivers/tty/synclink_gt.c
#	drivers/tty/tty_io.c
#	drivers/usb/gadget/function/u_serial.c
#	include/linux/tty_driver.h
diff --cc arch/m68k/emu/nfcon.c
index 57e8c8fb5eba,557d60867f98..000000000000
--- a/arch/m68k/emu/nfcon.c
+++ b/arch/m68k/emu/nfcon.c
@@@ -132,19 -133,18 +132,23 @@@ static int __init nfcon_init(void
  
  	tty_port_init(&nfcon_tty_port);
  
 -	driver->driver_name = "nfcon";
 -	driver->name = "nfcon";
 -	driver->type = TTY_DRIVER_TYPE_SYSTEM;
 -	driver->subtype = SYSTEM_TYPE_TTY;
 -	driver->init_termios = tty_std_termios;
 +	nfcon_tty_driver->driver_name = "nfcon";
 +	nfcon_tty_driver->name = "nfcon";
 +	nfcon_tty_driver->type = TTY_DRIVER_TYPE_SYSTEM;
 +	nfcon_tty_driver->subtype = SYSTEM_TYPE_TTY;
 +	nfcon_tty_driver->init_termios = tty_std_termios;
 +	nfcon_tty_driver->flags = TTY_DRIVER_REAL_RAW;
  
 -	tty_set_operations(driver, &nfcon_tty_ops);
 -	tty_port_link_device(&nfcon_tty_port, driver, 0);
 -	res = tty_register_driver(driver);
 +	tty_set_operations(nfcon_tty_driver, &nfcon_tty_ops);
 +	tty_port_link_device(&nfcon_tty_port, nfcon_tty_driver, 0);
 +	res = tty_register_driver(nfcon_tty_driver);
  	if (res) {
  		pr_err("failed to register nfcon tty driver\n");
++<<<<<<< HEAD
 +		put_tty_driver(nfcon_tty_driver);
++=======
+ 		tty_driver_kref_put(driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  		tty_port_destroy(&nfcon_tty_port);
  		return res;
  	}
diff --cc arch/xtensa/platforms/iss/console.c
index af81a62faba6,81f988914d9a..000000000000
--- a/arch/xtensa/platforms/iss/console.c
+++ b/arch/xtensa/platforms/iss/console.c
@@@ -198,12 -177,8 +198,17 @@@ int __init rs_init(void
  
  static __exit void rs_exit(void)
  {
++<<<<<<< HEAD
 +	int error;
 +
 +	if ((error = tty_unregister_driver(serial_driver)))
 +		pr_err("ISS_SERIAL: failed to unregister serial driver (%d)\n",
 +		       error);
 +	put_tty_driver(serial_driver);
++=======
+ 	tty_unregister_driver(serial_driver);
+ 	tty_driver_kref_put(serial_driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	tty_port_destroy(&serial_port);
  }
  
diff --cc drivers/tty/amiserial.c
index 34dead614149,1e60dbef676c..000000000000
--- a/drivers/tty/amiserial.c
+++ b/drivers/tty/amiserial.c
@@@ -1653,33 -1500,26 +1653,33 @@@ static int __init amiga_serial_probe(st
  
  	/* Initialize the tty_driver structure */
  
 -	driver->driver_name = "amiserial";
 -	driver->name = "ttyS";
 -	driver->major = TTY_MAJOR;
 -	driver->minor_start = 64;
 -	driver->type = TTY_DRIVER_TYPE_SERIAL;
 -	driver->subtype = SERIAL_TYPE_NORMAL;
 -	driver->init_termios = tty_std_termios;
 -	driver->init_termios.c_cflag =
 +	serial_driver->driver_name = "amiserial";
 +	serial_driver->name = "ttyS";
 +	serial_driver->major = TTY_MAJOR;
 +	serial_driver->minor_start = 64;
 +	serial_driver->type = TTY_DRIVER_TYPE_SERIAL;
 +	serial_driver->subtype = SERIAL_TYPE_NORMAL;
 +	serial_driver->init_termios = tty_std_termios;
 +	serial_driver->init_termios.c_cflag =
  		B9600 | CS8 | CREAD | HUPCL | CLOCAL;
 -	tty_set_operations(driver, &serial_ops);
 -
 -	memset(state, 0, sizeof(*state));
 -	state->port = (int)&amiga_custom.serdatr; /* Just to give it a value */
 +	serial_driver->flags = TTY_DRIVER_REAL_RAW;
 +	tty_set_operations(serial_driver, &serial_ops);
 +
 +	state = rs_table;
 +	state->port = (int)&custom.serdatr; /* Just to give it a value */
 +	state->custom_divisor = 0;
 +	state->icount.cts = state->icount.dsr = 
 +	  state->icount.rng = state->icount.dcd = 0;
 +	state->icount.rx = state->icount.tx = 0;
 +	state->icount.frame = state->icount.parity = 0;
 +	state->icount.overrun = state->icount.brk = 0;
  	tty_port_init(&state->tport);
  	state->tport.ops = &amiga_port_ops;
 -	tty_port_link_device(&state->tport, driver, 0);
 +	tty_port_link_device(&state->tport, serial_driver, 0);
  
 -	error = tty_register_driver(driver);
 +	error = tty_register_driver(serial_driver);
  	if (error)
- 		goto fail_put_tty_driver;
+ 		goto fail_tty_driver_kref_put;
  
  	printk(KERN_INFO "ttyS0 is the amiga builtin serial port\n");
  
@@@ -1724,24 -1565,19 +1724,36 @@@
  fail_free_irq:
  	free_irq(IRQ_AMIGA_TBE, state);
  fail_unregister:
++<<<<<<< HEAD
 +	tty_unregister_driver(serial_driver);
 +fail_put_tty_driver:
 +	tty_port_destroy(&state->tport);
 +	put_tty_driver(serial_driver);
++=======
+ 	tty_unregister_driver(driver);
+ fail_tty_driver_kref_put:
+ 	tty_port_destroy(&state->tport);
+ 	tty_driver_kref_put(driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	return error;
  }
  
  static int __exit amiga_serial_remove(struct platform_device *pdev)
  {
 +	int error;
  	struct serial_state *state = platform_get_drvdata(pdev);
  
++<<<<<<< HEAD
 +	/* printk("Unloading %s: version %s\n", serial_name, serial_version); */
 +	error = tty_unregister_driver(serial_driver);
 +	if (error)
 +		printk("SERIAL: failed to unregister serial driver (%d)\n",
 +		       error);
 +	put_tty_driver(serial_driver);
++=======
+ 	tty_unregister_driver(serial_driver);
+ 	tty_driver_kref_put(serial_driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	tty_port_destroy(&state->tport);
  
  	free_irq(IRQ_AMIGA_TBE, state);
diff --cc drivers/tty/ehv_bytechan.c
index eea4049b5dcc,19d32cb6af84..000000000000
--- a/drivers/tty/ehv_bytechan.c
+++ b/drivers/tty/ehv_bytechan.c
@@@ -764,20 -781,21 +764,20 @@@ static int __init ehv_bc_init(void
  		goto err_free_bcs;
  	}
  
 -	driver->driver_name = "ehv-bc";
 -	driver->name = ehv_bc_console.name;
 -	driver->type = TTY_DRIVER_TYPE_CONSOLE;
 -	driver->subtype = SYSTEM_TYPE_CONSOLE;
 -	driver->init_termios = tty_std_termios;
 -	tty_set_operations(driver, &ehv_bc_ops);
 +	ehv_bc_driver->driver_name = "ehv-bc";
 +	ehv_bc_driver->name = ehv_bc_console.name;
 +	ehv_bc_driver->type = TTY_DRIVER_TYPE_CONSOLE;
 +	ehv_bc_driver->subtype = SYSTEM_TYPE_CONSOLE;
 +	ehv_bc_driver->init_termios = tty_std_termios;
 +	ehv_bc_driver->flags = TTY_DRIVER_REAL_RAW | TTY_DRIVER_DYNAMIC_DEV;
 +	tty_set_operations(ehv_bc_driver, &ehv_bc_ops);
  
 -	ret = tty_register_driver(driver);
 +	ret = tty_register_driver(ehv_bc_driver);
  	if (ret) {
  		pr_err("ehv-bc: could not register tty driver (ret=%i)\n", ret);
- 		goto err_put_tty_driver;
+ 		goto err_tty_driver_kref_put;
  	}
  
 -	ehv_bc_driver = driver;
 -
  	ret = platform_driver_register(&ehv_bc_tty_driver);
  	if (ret) {
  		pr_err("ehv-bc: could not register platform driver (ret=%i)\n",
@@@ -788,9 -806,10 +788,16 @@@
  	return 0;
  
  err_deregister_tty_driver:
++<<<<<<< HEAD
 +	tty_unregister_driver(ehv_bc_driver);
 +err_put_tty_driver:
 +	put_tty_driver(ehv_bc_driver);
++=======
+ 	ehv_bc_driver = NULL;
+ 	tty_unregister_driver(driver);
+ err_tty_driver_kref_put:
+ 	tty_driver_kref_put(driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  err_free_bcs:
  	kfree(bcs);
  
diff --cc drivers/tty/goldfish.c
index 37caba7c3aff,d24af649a8bb..000000000000
--- a/drivers/tty/goldfish.c
+++ b/drivers/tty/goldfish.c
@@@ -273,8 -274,8 +273,13 @@@ static int goldfish_tty_create_driver(v
  	return 0;
  
  err_tty_register_driver_failed:
++<<<<<<< HEAD
 +	put_tty_driver(tty);
 +err_alloc_tty_driver_failed:
++=======
+ 	tty_driver_kref_put(tty);
+ err_tty_alloc_driver_failed:
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	kfree(goldfish_ttys);
  	goldfish_ttys = NULL;
  err_alloc_goldfish_ttys_failed:
diff --cc drivers/tty/ipwireless/tty.c
index 0e9922379b57,9edd5ae17580..000000000000
--- a/drivers/tty/ipwireless/tty.c
+++ b/drivers/tty/ipwireless/tty.c
@@@ -597,13 -594,8 +597,18 @@@ int ipwireless_tty_init(void
  
  void ipwireless_tty_release(void)
  {
++<<<<<<< HEAD
 +	int ret;
 +
 +	ret = tty_unregister_driver(ipw_tty_driver);
 +	put_tty_driver(ipw_tty_driver);
 +	if (ret != 0)
 +		printk(KERN_ERR IPWIRELESS_PCCARD_NAME
 +			": tty_unregister_driver failed with code %d\n", ret);
++=======
+ 	tty_unregister_driver(ipw_tty_driver);
+ 	tty_driver_kref_put(ipw_tty_driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  }
  
  int ipwireless_tty_is_modem(struct ipw_tty *tty)
diff --cc drivers/tty/moxa.c
index 250a19f042d7,776f78de0f82..000000000000
--- a/drivers/tty/moxa.c
+++ b/drivers/tty/moxa.c
@@@ -1126,10 -1118,8 +1126,15 @@@ static void __exit moxa_exit(void
  
  	del_timer_sync(&moxaTimer);
  
++<<<<<<< HEAD
 +	if (tty_unregister_driver(moxaDriver))
 +		printk(KERN_ERR "Couldn't unregister MOXA Intellio family "
 +				"serial driver\n");
 +	put_tty_driver(moxaDriver);
++=======
+ 	tty_unregister_driver(moxaDriver);
+ 	tty_driver_kref_put(moxaDriver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  }
  
  module_init(moxa_init);
diff --cc drivers/tty/mxser.c
index 8bc15cb67a58,335e4e50d679..000000000000
--- a/drivers/tty/mxser.c
+++ b/drivers/tty/mxser.c
@@@ -2787,19 -2014,9 +2787,23 @@@ err_put
  
  static void __exit mxser_module_exit(void)
  {
 +	unsigned int i;
 +
  	pci_unregister_driver(&mxser_driver);
 +
 +	for (i = 0; i < MXSER_BOARDS; i++) /* ISA remains */
 +		if (mxser_boards[i].info != NULL)
 +			mxser_board_remove(&mxser_boards[i]);
  	tty_unregister_driver(mxvar_sdriver);
++<<<<<<< HEAD
 +	put_tty_driver(mxvar_sdriver);
 +
 +	for (i = 0; i < MXSER_BOARDS; i++)
 +		if (mxser_boards[i].info != NULL)
 +			mxser_release_ISA_res(&mxser_boards[i]);
++=======
+ 	tty_driver_kref_put(mxvar_sdriver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  }
  
  module_init(mxser_module_init);
diff --cc drivers/tty/n_gsm.c
index a3a47969dec0,1d92d2a84889..000000000000
--- a/drivers/tty/n_gsm.c
+++ b/drivers/tty/n_gsm.c
@@@ -3252,16 -3278,18 +3252,24 @@@ static int __init gsm_init(void
  	pr_debug("gsm_init: loaded as %d,%d.\n",
  			gsm_tty_driver->major, gsm_tty_driver->minor_start);
  	return 0;
++<<<<<<< HEAD
++=======
+ err_put_driver:
+ 	tty_driver_kref_put(gsm_tty_driver);
+ err_unreg_ldisc:
+ 	tty_unregister_ldisc(&tty_ldisc_packet);
+ 	return status;
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  }
  
  static void __exit gsm_exit(void)
  {
 -	tty_unregister_ldisc(&tty_ldisc_packet);
 +	int status = tty_unregister_ldisc(N_GSM0710);
 +	if (status != 0)
 +		pr_err("n_gsm: can't unregister line discipline (err = %d)\n",
 +								status);
  	tty_unregister_driver(gsm_tty_driver);
- 	put_tty_driver(gsm_tty_driver);
+ 	tty_driver_kref_put(gsm_tty_driver);
  }
  
  module_init(gsm_init);
diff --cc drivers/tty/serial/kgdb_nmi.c
index 4029272891f9,55c3c9db7462..000000000000
--- a/drivers/tty/serial/kgdb_nmi.c
+++ b/drivers/tty/serial/kgdb_nmi.c
@@@ -373,10 -372,8 +373,15 @@@ int kgdb_unregister_nmi_console(void
  	if (ret)
  		return ret;
  
++<<<<<<< HEAD
 +	ret = tty_unregister_driver(kgdb_nmi_tty_driver);
 +	if (ret)
 +		return ret;
 +	put_tty_driver(kgdb_nmi_tty_driver);
++=======
+ 	tty_unregister_driver(kgdb_nmi_tty_driver);
+ 	tty_driver_kref_put(kgdb_nmi_tty_driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  
  	return 0;
  }
diff --cc drivers/tty/synclink_gt.c
index e2ecc0d40fcc,c89f7de38d12..000000000000
--- a/drivers/tty/synclink_gt.c
+++ b/drivers/tty/synclink_gt.c
@@@ -3722,10 -3649,8 +3722,15 @@@ static void slgt_cleanup(void
  	if (serial_driver) {
  		for (info=slgt_device_list ; info != NULL ; info=info->next_device)
  			tty_unregister_device(serial_driver, info->line);
++<<<<<<< HEAD
 +		rc = tty_unregister_driver(serial_driver);
 +		if (rc)
 +			DBGERR(("tty_unregister_driver error=%d\n", rc));
 +		put_tty_driver(serial_driver);
++=======
+ 		tty_unregister_driver(serial_driver);
+ 		tty_driver_kref_put(serial_driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	}
  
  	/* reset devices */
diff --cc drivers/tty/tty_io.c
index 9e2243b3d19c,e8532006e960..000000000000
--- a/drivers/tty/tty_io.c
+++ b/drivers/tty/tty_io.c
@@@ -3178,19 -3438,6 +3178,22 @@@ void tty_driver_kref_put(struct tty_dri
  }
  EXPORT_SYMBOL(tty_driver_kref_put);
  
++<<<<<<< HEAD
 +void tty_set_operations(struct tty_driver *driver,
 +			const struct tty_operations *op)
 +{
 +	driver->ops = op;
 +};
 +EXPORT_SYMBOL(tty_set_operations);
 +
 +void put_tty_driver(struct tty_driver *d)
 +{
 +	tty_driver_kref_put(d);
 +}
 +EXPORT_SYMBOL(put_tty_driver);
 +
++=======
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  /*
   * Called by a tty driver to register itself.
   */
diff --cc drivers/usb/gadget/function/u_serial.c
index 65f634ec7fc2,72961c1beeef..000000000000
--- a/drivers/usb/gadget/function/u_serial.c
+++ b/drivers/usb/gadget/function/u_serial.c
@@@ -1436,8 -1491,7 +1436,12 @@@ static int userial_init(void
  
  	return status;
  fail:
++<<<<<<< HEAD
 +	put_tty_driver(gs_tty_driver);
 +	gs_tty_driver = NULL;
++=======
+ 	tty_driver_kref_put(driver);
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  	return status;
  }
  module_init(userial_init);
diff --cc include/linux/tty_driver.h
index 76e431f80367,c20431d8def8..000000000000
--- a/include/linux/tty_driver.h
+++ b/include/linux/tty_driver.h
@@@ -337,9 -329,6 +337,12 @@@ extern struct list_head tty_drivers
  
  extern struct tty_driver *__tty_alloc_driver(unsigned int lines,
  		struct module *owner, unsigned long flags);
++<<<<<<< HEAD
 +extern void put_tty_driver(struct tty_driver *driver);
 +extern void tty_set_operations(struct tty_driver *driver,
 +			const struct tty_operations *op);
++=======
++>>>>>>> 9f90a4ddef4e (tty: drop put_tty_driver)
  extern struct tty_driver *tty_find_polling_driver(char *name, int *line);
  
  extern void tty_driver_kref_put(struct tty_driver *driver);
* Unmerged path drivers/misc/bcm-vk/bcm_vk_tty.c
diff --git a/arch/alpha/kernel/srmcons.c b/arch/alpha/kernel/srmcons.c
index 438b10c44d73..ad2ea58e0ae3 100644
--- a/arch/alpha/kernel/srmcons.c
+++ b/arch/alpha/kernel/srmcons.c
@@ -228,7 +228,7 @@ srmcons_init(void)
 		tty_port_link_device(&srmcons_singleton.port, driver, 0);
 		err = tty_register_driver(driver);
 		if (err) {
-			put_tty_driver(driver);
+			tty_driver_kref_put(driver);
 			tty_port_destroy(&srmcons_singleton.port);
 			return err;
 		}
* Unmerged path arch/m68k/emu/nfcon.c
diff --git a/arch/um/drivers/line.c b/arch/um/drivers/line.c
index 8d80b27502e6..6d5c65d7c0b2 100644
--- a/arch/um/drivers/line.c
+++ b/arch/um/drivers/line.c
@@ -579,7 +579,7 @@ int register_lines(struct line_driver *line_driver,
 	if (err) {
 		printk(KERN_ERR "register_lines : can't register %s driver\n",
 		       line_driver->name);
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		for (i = 0; i < nlines; i++)
 			tty_port_destroy(&lines[i].port);
 		return err;
* Unmerged path arch/xtensa/platforms/iss/console.c
diff --git a/drivers/char/pcmcia/synclink_cs.c b/drivers/char/pcmcia/synclink_cs.c
index 138cccd9ab36..045b063e1a50 100644
--- a/drivers/char/pcmcia/synclink_cs.c
+++ b/drivers/char/pcmcia/synclink_cs.c
@@ -2852,7 +2852,7 @@ static int __init synclink_cs_init(void)
 err_unreg_tty:
 	tty_unregister_driver(serial_driver);
 err_put_tty:
-	put_tty_driver(serial_driver);
+	tty_driver_kref_put(serial_driver);
 err:
 	return rc;
 }
@@ -2861,7 +2861,7 @@ static void __exit synclink_cs_exit(void)
 {
 	pcmcia_unregister_driver(&mgslpc_driver);
 	tty_unregister_driver(serial_driver);
-	put_tty_driver(serial_driver);
+	tty_driver_kref_put(serial_driver);
 }
 
 module_init(synclink_cs_init);
diff --git a/drivers/char/ttyprintk.c b/drivers/char/ttyprintk.c
index 67549ce88cc9..436f7176fb7c 100644
--- a/drivers/char/ttyprintk.c
+++ b/drivers/char/ttyprintk.c
@@ -203,7 +203,7 @@ static int __init ttyprintk_init(void)
 	return 0;
 
 error:
-	put_tty_driver(ttyprintk_driver);
+	tty_driver_kref_put(ttyprintk_driver);
 	tty_port_destroy(&tpk_port.port);
 	return ret;
 }
@@ -211,7 +211,7 @@ static int __init ttyprintk_init(void)
 static void __exit ttyprintk_exit(void)
 {
 	tty_unregister_driver(ttyprintk_driver);
-	put_tty_driver(ttyprintk_driver);
+	tty_driver_kref_put(ttyprintk_driver);
 	tty_port_destroy(&tpk_port.port);
 }
 
diff --git a/drivers/ipack/devices/ipoctal.c b/drivers/ipack/devices/ipoctal.c
index 75dd15d66df6..25a43dd1cc72 100644
--- a/drivers/ipack/devices/ipoctal.c
+++ b/drivers/ipack/devices/ipoctal.c
@@ -377,7 +377,7 @@ static int ipoctal_inst_slot(struct ipoctal *ipoctal, unsigned int bus_nr,
 	res = tty_register_driver(tty);
 	if (res) {
 		dev_err(&ipoctal->dev->dev, "Can't register tty driver.\n");
-		put_tty_driver(tty);
+		tty_driver_kref_put(tty);
 		return res;
 	}
 
@@ -703,7 +703,7 @@ static void __ipoctal_remove(struct ipoctal *ipoctal)
 	}
 
 	tty_unregister_driver(ipoctal->tty_drv);
-	put_tty_driver(ipoctal->tty_drv);
+	tty_driver_kref_put(ipoctal->tty_drv);
 	kfree(ipoctal);
 }
 
diff --git a/drivers/isdn/capi/capi.c b/drivers/isdn/capi/capi.c
index 8dac190a978d..c180ef8443c0 100644
--- a/drivers/isdn/capi/capi.c
+++ b/drivers/isdn/capi/capi.c
@@ -1288,7 +1288,7 @@ static int __init capinc_tty_init(void)
 
 	err = tty_register_driver(drv);
 	if (err) {
-		put_tty_driver(drv);
+		tty_driver_kref_put(drv);
 		kfree(capiminors);
 		printk(KERN_ERR "Couldn't register capi_nc driver\n");
 		return err;
@@ -1300,7 +1300,7 @@ static int __init capinc_tty_init(void)
 static void __exit capinc_tty_exit(void)
 {
 	tty_unregister_driver(capinc_tty_driver);
-	put_tty_driver(capinc_tty_driver);
+	tty_driver_kref_put(capinc_tty_driver);
 	kfree(capiminors);
 }
 
* Unmerged path drivers/misc/bcm-vk/bcm_vk_tty.c
diff --git a/drivers/mmc/core/sdio_uart.c b/drivers/mmc/core/sdio_uart.c
index 25e113001a3c..a50f32cdf513 100644
--- a/drivers/mmc/core/sdio_uart.c
+++ b/drivers/mmc/core/sdio_uart.c
@@ -1169,7 +1169,7 @@ static int __init sdio_uart_init(void)
 err2:
 	tty_unregister_driver(tty_drv);
 err1:
-	put_tty_driver(tty_drv);
+	tty_driver_kref_put(tty_drv);
 	return ret;
 }
 
@@ -1177,7 +1177,7 @@ static void __exit sdio_uart_exit(void)
 {
 	sdio_unregister_driver(&sdio_uart_driver);
 	tty_unregister_driver(sdio_uart_tty_driver);
-	put_tty_driver(sdio_uart_tty_driver);
+	tty_driver_kref_put(sdio_uart_tty_driver);
 }
 
 module_init(sdio_uart_init);
diff --git a/drivers/net/usb/hso.c b/drivers/net/usb/hso.c
index e3a52f7886f3..f649b172c02e 100644
--- a/drivers/net/usb/hso.c
+++ b/drivers/net/usb/hso.c
@@ -3297,7 +3297,7 @@ static int __init hso_init(void)
 err_unreg_tty:
 	tty_unregister_driver(tty_drv);
 err_free_tty:
-	put_tty_driver(tty_drv);
+	tty_driver_kref_put(tty_drv);
 	return result;
 }
 
@@ -3308,7 +3308,7 @@ static void __exit hso_exit(void)
 	tty_unregister_driver(tty_drv);
 	/* deregister the usb driver */
 	usb_deregister(&hso_driver);
-	put_tty_driver(tty_drv);
+	tty_driver_kref_put(tty_drv);
 }
 
 /* Module definitions */
diff --git a/drivers/s390/char/con3215.c b/drivers/s390/char/con3215.c
index 8c9d412b6d33..85c1dafbabbf 100644
--- a/drivers/s390/char/con3215.c
+++ b/drivers/s390/char/con3215.c
@@ -1186,7 +1186,7 @@ static int __init tty3215_init(void)
 
 	ret = ccw_driver_register(&raw3215_ccw_driver);
 	if (ret) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		return ret;
 	}
 	/*
@@ -1209,7 +1209,7 @@ static int __init tty3215_init(void)
 	tty_set_operations(driver, &tty3215_ops);
 	ret = tty_register_driver(driver);
 	if (ret) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		return ret;
 	}
 	tty3215_driver = driver;
diff --git a/drivers/s390/char/sclp_tty.c b/drivers/s390/char/sclp_tty.c
index 5aff8b684eb2..cdba9cf353a9 100644
--- a/drivers/s390/char/sclp_tty.c
+++ b/drivers/s390/char/sclp_tty.c
@@ -513,7 +513,7 @@ sclp_tty_init(void)
 
 	rc = sclp_rw_init();
 	if (rc) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		return rc;
 	}
 	/* Allocate pages for output buffering */
@@ -521,7 +521,7 @@ sclp_tty_init(void)
 	for (i = 0; i < MAX_KMEM_PAGES; i++) {
 		page = (void *) get_zeroed_page(GFP_KERNEL | GFP_DMA);
 		if (page == NULL) {
-			put_tty_driver(driver);
+			tty_driver_kref_put(driver);
 			return -ENOMEM;
 		}
 		list_add_tail((struct list_head *) page, &sclp_tty_pages);
@@ -544,7 +544,7 @@ sclp_tty_init(void)
 
 	rc = sclp_register(&sclp_input_event);
 	if (rc) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		return rc;
 	}
 
@@ -565,7 +565,7 @@ sclp_tty_init(void)
 	tty_port_link_device(&sclp_port, driver, 0);
 	rc = tty_register_driver(driver);
 	if (rc) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		tty_port_destroy(&sclp_port);
 		return rc;
 	}
diff --git a/drivers/s390/char/sclp_vt220.c b/drivers/s390/char/sclp_vt220.c
index 3f9a6ef650fa..ad802e2412e9 100644
--- a/drivers/s390/char/sclp_vt220.c
+++ b/drivers/s390/char/sclp_vt220.c
@@ -774,7 +774,7 @@ static int __init sclp_vt220_tty_init(void)
 out_init:
 	__sclp_vt220_cleanup();
 out_driver:
-	put_tty_driver(driver);
+	tty_driver_kref_put(driver);
 	return rc;
 }
 __initcall(sclp_vt220_tty_init);
diff --git a/drivers/s390/char/tty3270.c b/drivers/s390/char/tty3270.c
index 2b0c36c2c568..ce736a1f8f54 100644
--- a/drivers/s390/char/tty3270.c
+++ b/drivers/s390/char/tty3270.c
@@ -1952,7 +1952,7 @@ static int __init tty3270_init(void)
 	tty_set_operations(driver, &tty3270_ops);
 	ret = tty_register_driver(driver);
 	if (ret) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		return ret;
 	}
 	tty3270_driver = driver;
@@ -1969,7 +1969,7 @@ tty3270_exit(void)
 	driver = tty3270_driver;
 	tty3270_driver = NULL;
 	tty_unregister_driver(driver);
-	put_tty_driver(driver);
+	tty_driver_kref_put(driver);
 	tty3270_del_views();
 }
 
diff --git a/drivers/staging/fwserial/fwserial.c b/drivers/staging/fwserial/fwserial.c
index fa0dd425b454..a5f3bde663b0 100644
--- a/drivers/staging/fwserial/fwserial.c
+++ b/drivers/staging/fwserial/fwserial.c
@@ -2883,11 +2883,11 @@ static int __init fwserial_init(void)
 		tty_unregister_driver(fwloop_driver);
 put_loop:
 	if (create_loop_dev)
-		put_tty_driver(fwloop_driver);
+		tty_driver_kref_put(fwloop_driver);
 unregister_driver:
 	tty_unregister_driver(fwtty_driver);
 put_tty:
-	put_tty_driver(fwtty_driver);
+	tty_driver_kref_put(fwtty_driver);
 remove_debugfs:
 	debugfs_remove_recursive(fwserial_debugfs);
 
@@ -2902,10 +2902,10 @@ static void __exit fwserial_exit(void)
 	kmem_cache_destroy(fwtty_txn_cache);
 	if (create_loop_dev) {
 		tty_unregister_driver(fwloop_driver);
-		put_tty_driver(fwloop_driver);
+		tty_driver_kref_put(fwloop_driver);
 	}
 	tty_unregister_driver(fwtty_driver);
-	put_tty_driver(fwtty_driver);
+	tty_driver_kref_put(fwtty_driver);
 	debugfs_remove_recursive(fwserial_debugfs);
 }
 
diff --git a/drivers/staging/gdm724x/gdm_tty.c b/drivers/staging/gdm724x/gdm_tty.c
index e0450c3e01fa..2598f1adcc3e 100644
--- a/drivers/staging/gdm724x/gdm_tty.c
+++ b/drivers/staging/gdm724x/gdm_tty.c
@@ -308,7 +308,7 @@ int register_lte_tty_driver(void)
 
 		ret = tty_register_driver(tty_driver);
 		if (ret) {
-			put_tty_driver(tty_driver);
+			tty_driver_kref_put(tty_driver);
 			return ret;
 		}
 
@@ -327,7 +327,7 @@ void unregister_lte_tty_driver(void)
 		tty_driver = gdm_driver[i];
 		if (tty_driver) {
 			tty_unregister_driver(tty_driver);
-			put_tty_driver(tty_driver);
+			tty_driver_kref_put(tty_driver);
 		}
 	}
 }
diff --git a/drivers/staging/greybus/uart.c b/drivers/staging/greybus/uart.c
index 8a006323c3c1..116a7d930b5e 100644
--- a/drivers/staging/greybus/uart.c
+++ b/drivers/staging/greybus/uart.c
@@ -1011,7 +1011,7 @@ static int gb_tty_init(void)
 	return 0;
 
 fail_put_gb_tty:
-	put_tty_driver(gb_tty_driver);
+	tty_driver_kref_put(gb_tty_driver);
 fail_unregister_dev:
 	return retval;
 }
@@ -1019,7 +1019,7 @@ static int gb_tty_init(void)
 static void gb_tty_exit(void)
 {
 	tty_unregister_driver(gb_tty_driver);
-	put_tty_driver(gb_tty_driver);
+	tty_driver_kref_put(gb_tty_driver);
 	idr_destroy(&tty_minors);
 }
 
* Unmerged path drivers/tty/amiserial.c
* Unmerged path drivers/tty/ehv_bytechan.c
* Unmerged path drivers/tty/goldfish.c
diff --git a/drivers/tty/hvc/hvc_console.c b/drivers/tty/hvc/hvc_console.c
index 7709fcc707f4..d85cde7d5df5 100644
--- a/drivers/tty/hvc/hvc_console.c
+++ b/drivers/tty/hvc/hvc_console.c
@@ -987,7 +987,7 @@ static int hvc_init(void)
 	kthread_stop(hvc_task);
 	hvc_task = NULL;
 put_tty:
-	put_tty_driver(drv);
+	tty_driver_kref_put(drv);
 out:
 	return err;
 }
diff --git a/drivers/tty/hvc/hvcs.c b/drivers/tty/hvc/hvcs.c
index 2c9948dbe52b..ab6ab5c202ac 100644
--- a/drivers/tty/hvc/hvcs.c
+++ b/drivers/tty/hvc/hvcs.c
@@ -1535,7 +1535,7 @@ static int hvcs_initialize(void)
 register_fail:
 	hvcs_free_index_list();
 index_fail:
-	put_tty_driver(hvcs_tty_driver);
+	tty_driver_kref_put(hvcs_tty_driver);
 	hvcs_tty_driver = NULL;
 	mutex_unlock(&hvcs_init_mutex);
 	return rc;
@@ -1588,7 +1588,7 @@ static void __exit hvcs_module_exit(void)
 
 	hvcs_free_index_list();
 
-	put_tty_driver(hvcs_tty_driver);
+	tty_driver_kref_put(hvcs_tty_driver);
 
 	printk(KERN_INFO "HVCS: driver module removed.\n");
 }
* Unmerged path drivers/tty/ipwireless/tty.c
diff --git a/drivers/tty/mips_ejtag_fdc.c b/drivers/tty/mips_ejtag_fdc.c
index 4c1cd49ae95b..4846780a4e74 100644
--- a/drivers/tty/mips_ejtag_fdc.c
+++ b/drivers/tty/mips_ejtag_fdc.c
@@ -1041,7 +1041,7 @@ static int mips_ejtag_fdc_tty_probe(struct mips_cdmm_device *dev)
 		dport = &priv->ports[nport];
 		tty_port_destroy(&dport->port);
 	}
-	put_tty_driver(priv->driver);
+	tty_driver_kref_put(priv->driver);
 	return ret;
 }
 
* Unmerged path drivers/tty/moxa.c
* Unmerged path drivers/tty/mxser.c
* Unmerged path drivers/tty/n_gsm.c
diff --git a/drivers/tty/nozomi.c b/drivers/tty/nozomi.c
index fed820e9ab9d..a688809fd189 100644
--- a/drivers/tty/nozomi.c
+++ b/drivers/tty/nozomi.c
@@ -1894,7 +1894,7 @@ static __init int nozomi_init(void)
 unr_tty:
 	tty_unregister_driver(ntty_driver);
 free_tty:
-	put_tty_driver(ntty_driver);
+	tty_driver_kref_put(ntty_driver);
 	return ret;
 }
 
@@ -1903,7 +1903,7 @@ static __exit void nozomi_exit(void)
 	printk(KERN_INFO "Unloading %s\n", DRIVER_DESC);
 	pci_unregister_driver(&nozomi_driver);
 	tty_unregister_driver(ntty_driver);
-	put_tty_driver(ntty_driver);
+	tty_driver_kref_put(ntty_driver);
 }
 
 module_init(nozomi_init);
* Unmerged path drivers/tty/serial/kgdb_nmi.c
diff --git a/drivers/tty/serial/serial_core.c b/drivers/tty/serial/serial_core.c
index f13bfe21004f..c51d50269541 100644
--- a/drivers/tty/serial/serial_core.c
+++ b/drivers/tty/serial/serial_core.c
@@ -2482,7 +2482,7 @@ int uart_register_driver(struct uart_driver *drv)
 
 	for (i = 0; i < drv->nr; i++)
 		tty_port_destroy(&drv->state[i].port);
-	put_tty_driver(normal);
+	tty_driver_kref_put(normal);
 out_kfree:
 	kfree(drv->state);
 out:
@@ -2504,7 +2504,7 @@ void uart_unregister_driver(struct uart_driver *drv)
 	unsigned int i;
 
 	tty_unregister_driver(p);
-	put_tty_driver(p);
+	tty_driver_kref_put(p);
 	for (i = 0; i < drv->nr; i++)
 		tty_port_destroy(&drv->state[i].port);
 	kfree(drv->state);
* Unmerged path drivers/tty/synclink_gt.c
* Unmerged path drivers/tty/tty_io.c
diff --git a/drivers/tty/ttynull.c b/drivers/tty/ttynull.c
index 17f05b7eb6d3..2bda5c1299d6 100644
--- a/drivers/tty/ttynull.c
+++ b/drivers/tty/ttynull.c
@@ -84,7 +84,7 @@ static int __init ttynull_init(void)
 
 	ret = tty_register_driver(driver);
 	if (ret < 0) {
-		put_tty_driver(driver);
+		tty_driver_kref_put(driver);
 		tty_port_destroy(&ttynull_port);
 		return ret;
 	}
@@ -99,7 +99,7 @@ static void __exit ttynull_exit(void)
 {
 	unregister_console(&ttynull_console);
 	tty_unregister_driver(ttynull_driver);
-	put_tty_driver(ttynull_driver);
+	tty_driver_kref_put(ttynull_driver);
 	tty_port_destroy(&ttynull_port);
 }
 
diff --git a/drivers/tty/vcc.c b/drivers/tty/vcc.c
index 030066b3727e..22dce2f1ac61 100644
--- a/drivers/tty/vcc.c
+++ b/drivers/tty/vcc.c
@@ -1090,7 +1090,7 @@ static int vcc_tty_init(void)
 	rv = tty_register_driver(vcc_tty_driver);
 	if (rv) {
 		pr_err("VCC: TTY driver registration failed\n");
-		put_tty_driver(vcc_tty_driver);
+		tty_driver_kref_put(vcc_tty_driver);
 		vcc_tty_driver = NULL;
 		return rv;
 	}
@@ -1103,7 +1103,7 @@ static int vcc_tty_init(void)
 static void vcc_tty_exit(void)
 {
 	tty_unregister_driver(vcc_tty_driver);
-	put_tty_driver(vcc_tty_driver);
+	tty_driver_kref_put(vcc_tty_driver);
 	vccdbg("VCC: TTY driver unregistered\n");
 
 	vcc_tty_driver = NULL;
diff --git a/drivers/usb/class/cdc-acm.c b/drivers/usb/class/cdc-acm.c
index d50b606d09aa..eb439669fda8 100644
--- a/drivers/usb/class/cdc-acm.c
+++ b/drivers/usb/class/cdc-acm.c
@@ -2057,14 +2057,14 @@ static int __init acm_init(void)
 
 	retval = tty_register_driver(acm_tty_driver);
 	if (retval) {
-		put_tty_driver(acm_tty_driver);
+		tty_driver_kref_put(acm_tty_driver);
 		return retval;
 	}
 
 	retval = usb_register(&acm_driver);
 	if (retval) {
 		tty_unregister_driver(acm_tty_driver);
-		put_tty_driver(acm_tty_driver);
+		tty_driver_kref_put(acm_tty_driver);
 		return retval;
 	}
 
@@ -2077,7 +2077,7 @@ static void __exit acm_exit(void)
 {
 	usb_deregister(&acm_driver);
 	tty_unregister_driver(acm_tty_driver);
-	put_tty_driver(acm_tty_driver);
+	tty_driver_kref_put(acm_tty_driver);
 	idr_destroy(&acm_minors);
 }
 
* Unmerged path drivers/usb/gadget/function/u_serial.c
diff --git a/drivers/usb/host/xhci-dbgtty.c b/drivers/usb/host/xhci-dbgtty.c
index b8918f73a432..3a123376d82e 100644
--- a/drivers/usb/host/xhci-dbgtty.c
+++ b/drivers/usb/host/xhci-dbgtty.c
@@ -541,7 +541,7 @@ static int dbc_tty_init(void)
 	ret = tty_register_driver(dbc_tty_driver);
 	if (ret) {
 		pr_err("Can't register dbc tty driver\n");
-		put_tty_driver(dbc_tty_driver);
+		tty_driver_kref_put(dbc_tty_driver);
 	}
 	return ret;
 }
@@ -550,7 +550,7 @@ static void dbc_tty_exit(void)
 {
 	if (dbc_tty_driver) {
 		tty_unregister_driver(dbc_tty_driver);
-		put_tty_driver(dbc_tty_driver);
+		tty_driver_kref_put(dbc_tty_driver);
 		dbc_tty_driver = NULL;
 	}
 }
diff --git a/drivers/usb/serial/usb-serial.c b/drivers/usb/serial/usb-serial.c
index 212b9f2c14c2..b1e7c5097259 100644
--- a/drivers/usb/serial/usb-serial.c
+++ b/drivers/usb/serial/usb-serial.c
@@ -1367,7 +1367,7 @@ static int __init usb_serial_init(void)
 
 exit_bus:
 	pr_err("%s - returning with error %d\n", __func__, result);
-	put_tty_driver(usb_serial_tty_driver);
+	tty_driver_kref_put(usb_serial_tty_driver);
 	return result;
 }
 
@@ -1379,7 +1379,7 @@ static void __exit usb_serial_exit(void)
 	usb_serial_generic_deregister();
 
 	tty_unregister_driver(usb_serial_tty_driver);
-	put_tty_driver(usb_serial_tty_driver);
+	tty_driver_kref_put(usb_serial_tty_driver);
 	bus_unregister(&usb_serial_bus_type);
 	idr_destroy(&serial_minors);
 }
* Unmerged path include/linux/tty_driver.h
diff --git a/net/bluetooth/rfcomm/tty.c b/net/bluetooth/rfcomm/tty.c
index 1d59f3ce0f4b..cd57d28236f0 100644
--- a/net/bluetooth/rfcomm/tty.c
+++ b/net/bluetooth/rfcomm/tty.c
@@ -1150,7 +1150,7 @@ int __init rfcomm_init_ttys(void)
 	error = tty_register_driver(rfcomm_tty_driver);
 	if (error) {
 		BT_ERR("Can't register RFCOMM TTY driver");
-		put_tty_driver(rfcomm_tty_driver);
+		tty_driver_kref_put(rfcomm_tty_driver);
 		return error;
 	}
 
@@ -1162,5 +1162,5 @@ int __init rfcomm_init_ttys(void)
 void rfcomm_cleanup_ttys(void)
 {
 	tty_unregister_driver(rfcomm_tty_driver);
-	put_tty_driver(rfcomm_tty_driver);
+	tty_driver_kref_put(rfcomm_tty_driver);
 }
