ASoC: SOF: Add switch get/put IPC3 ops

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit a6668746436824c46b54b3f7fd72523f05f089eb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/a6668746.failed

Add the switch_get/put control IPC ops for IPC3.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20220317175044.1752400-8-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit a6668746436824c46b54b3f7fd72523f05f089eb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/control.c
#	sound/soc/sof/ipc3-control.c
diff --cc sound/soc/sof/control.c
index ef61936dad59,f9f8bd37b480..000000000000
--- a/sound/soc/sof/control.c
+++ b/sound/soc/sof/control.c
@@@ -163,17 -127,14 +163,19 @@@ int snd_sof_volume_info(struct snd_kcon
  int snd_sof_switch_get(struct snd_kcontrol *kcontrol,
  		       struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_mixer_control *sm =
- 		(struct soc_mixer_control *)kcontrol->private_value;
+ 	struct soc_mixer_control *sm = (struct soc_mixer_control *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = sm->dobj.private;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	unsigned int i, channels = scontrol->num_channels;
++=======
+ 	struct snd_soc_component *scomp = scontrol->scomp;
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> a66687464368 (ASoC: SOF: Add switch get/put IPC3 ops)
  
- 	snd_sof_refresh_control(scontrol);
- 
- 	/* read back each channel */
- 	for (i = 0; i < channels; i++)
- 		ucontrol->value.integer.value[i] = cdata->chanv[i].value;
+ 	if (tplg_ops->control->switch_get)
+ 		return tplg_ops->control->switch_get(scontrol, ucontrol);
  
  	return 0;
  }
@@@ -181,22 -142,11 +183,26 @@@
  int snd_sof_switch_put(struct snd_kcontrol *kcontrol,
  		       struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_mixer_control *sm =
- 		(struct soc_mixer_control *)kcontrol->private_value;
+ 	struct soc_mixer_control *sm = (struct soc_mixer_control *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = sm->dobj.private;
  	struct snd_soc_component *scomp = scontrol->scomp;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	unsigned int i, channels = scontrol->num_channels;
 +	bool change = false;
 +	u32 value;
 +
 +	/* update each channel */
 +	for (i = 0; i < channels; i++) {
 +		value = ucontrol->value.integer.value[i];
 +		change = change || (value != cdata->chanv[i].value);
 +		cdata->chanv[i].channel = i;
 +		cdata->chanv[i].value = value;
 +	}
++=======
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> a66687464368 (ASoC: SOF: Add switch get/put IPC3 ops)
  
  	if (scontrol->led_ctl.use_led)
  		update_mute_led(scontrol, kcontrol, ucontrol);
* Unmerged path sound/soc/sof/ipc3-control.c
* Unmerged path sound/soc/sof/control.c
* Unmerged path sound/soc/sof/ipc3-control.c
