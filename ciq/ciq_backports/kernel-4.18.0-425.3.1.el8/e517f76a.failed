RDMA/mlx5: Use memset_after() to zero struct mlx5_ib_mr

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Kees Cook <keescook@chromium.org>
commit e517f76a3cb24b2a4749e0348390aece24cf9925
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/e517f76a.failed

In preparation for FORTIFY_SOURCE performing compile-time and run-time
field bounds checking for memset(), avoid intentionally writing across
neighboring fields.

Use memset_after() to zero the end of struct mlx5_ib_mr that should be
initialized.

Link: https://lore.kernel.org/r/20211213223331.135412-10-keescook@chromium.org
	Acked-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: Kees Cook <keescook@chromium.org>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit e517f76a3cb24b2a4749e0348390aece24cf9925)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/mlx5_ib.h
diff --cc drivers/infiniband/hw/mlx5/mlx5_ib.h
index 519a797077c7,ded10719b643..000000000000
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@@ -650,9 -664,8 +650,12 @@@ struct mlx5_ib_mr 
  
  	/* User MR data */
  	struct mlx5_cache_ent *cache_ent;
++<<<<<<< HEAD
 +	struct ib_umem *umem;
++=======
+ 	/* Everything after cache_ent is zero'd when MR allocated */
++>>>>>>> e517f76a3cb2 (RDMA/mlx5: Use memset_after() to zero struct mlx5_ib_mr)
  
- 	/* This is zero'd when the MR is allocated */
  	union {
  		/* Used only while the MR is in the cache */
  		struct {
* Unmerged path drivers/infiniband/hw/mlx5/mlx5_ib.h
