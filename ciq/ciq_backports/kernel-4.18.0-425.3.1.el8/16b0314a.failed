dma-buf: move dma-buf symbols into the DMA_BUF module namespace

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
Rebuild_CHGLOG: - Revert "dma-buf: move dma-buf symbols into the DMA_BUF module namespace" (Michel Dänzer) [2041811]
Rebuild_FUZZ: 93.33%
commit-author Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 16b0314aa746be6c84c0bc6eca9dde0dce2e99df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/16b0314a.failed

In order to better track where in the kernel the dma-buf code is used,
put the symbols in the namespace DMA_BUF and modify all users of the
symbols to properly import the namespace to not break the build at the
same time.

Now the output of modinfo shows the use of these symbols, making it
easier to watch for users over time:

$ modinfo drivers/misc/fastrpc.ko | grep import
import_ns:      DMA_BUF

	Cc: "Pan, Xinhui" <Xinhui.Pan@amd.com>
	Cc: David Airlie <airlied@linux.ie>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maxime Ripard <mripard@kernel.org>
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Cc: Mauro Carvalho Chehab <mchehab@kernel.org>
	Cc: dri-devel@lists.freedesktop.org
	Acked-by: Daniel Vetter <daniel.vetter@ffwll.ch>
	Acked-by: Christian König <christian.koenig@amd.com>
	Acked-by: Arnd Bergmann <arnd@arndb.de>
	Acked-by: Sumit Semwal <sumit.semwal@linaro.org>
	Acked-by: Alex Deucher <alexander.deucher@amd.com>
Link: https://lore.kernel.org/r/20211010124628.17691-1-gregkh@linuxfoundation.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 16b0314aa746be6c84c0bc6eca9dde0dce2e99df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/drm_gem_framebuffer_helper.c
#	drivers/gpu/drm/etnaviv/etnaviv_gem_prime.c
#	drivers/gpu/drm/exynos/exynos_drm_gem.c
#	drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c
#	drivers/gpu/drm/tegra/gem.c
#	drivers/infiniband/core/umem_dmabuf.c
#	drivers/misc/fastrpc.c
#	drivers/misc/habanalabs/common/memory.c
#	drivers/staging/media/tegra-vde/dmabuf-cache.c
#	drivers/virtio/virtio_dma_buf.c
#	drivers/xen/gntdev-dmabuf.c
diff --cc drivers/gpu/drm/drm_gem_framebuffer_helper.c
index e2c68822e05c,746fd8c73845..000000000000
--- a/drivers/gpu/drm/drm_gem_framebuffer_helper.c
+++ b/drivers/gpu/drm/drm_gem_framebuffer_helper.c
@@@ -15,6 -16,10 +16,13 @@@
  #include <drm/drm_gem_framebuffer_helper.h>
  #include <drm/drm_modeset_helper.h>
  
++<<<<<<< HEAD
++=======
+ #include "drm_internal.h"
+ 
+ MODULE_IMPORT_NS(DMA_BUF);
+ 
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  #define AFBC_HEADER_SIZE		16
  #define AFBC_TH_LAYOUT_ALIGNMENT	8
  #define AFBC_HDR_ALIGN			64
diff --cc drivers/gpu/drm/etnaviv/etnaviv_gem_prime.c
index 57201ee8577f,6788ea8490d1..000000000000
--- a/drivers/gpu/drm/etnaviv/etnaviv_gem_prime.c
+++ b/drivers/gpu/drm/etnaviv/etnaviv_gem_prime.c
@@@ -3,7 -3,10 +3,12 @@@
   * Copyright (C) 2014-2018 Etnaviv Project
   */
  
 -#include <drm/drm_prime.h>
  #include <linux/dma-buf.h>
++<<<<<<< HEAD
++=======
+ #include <linux/module.h>
+ 
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  #include "etnaviv_drv.h"
  #include "etnaviv_gem.h"
  
diff --cc drivers/gpu/drm/exynos/exynos_drm_gem.c
index bdf5a7655228,0a0c042a3155..000000000000
--- a/drivers/gpu/drm/exynos/exynos_drm_gem.c
+++ b/drivers/gpu/drm/exynos/exynos_drm_gem.c
@@@ -2,35 -3,30 +2,49 @@@
   *
   * Copyright (c) 2011 Samsung Electronics Co., Ltd.
   * Author: Inki Dae <inki.dae@samsung.com>
 + *
 + * This program is free software; you can redistribute  it and/or modify it
 + * under  the terms of  the GNU General  Public License as published by the
 + * Free Software Foundation;  either version 2 of the  License, or (at your
 + * option) any later version.
   */
  
 +#include <drm/drmP.h>
 +#include <drm/drm_vma_manager.h>
  
 +#include <linux/shmem_fs.h>
  #include <linux/dma-buf.h>
  #include <linux/pfn_t.h>
++<<<<<<< HEAD
++=======
+ #include <linux/shmem_fs.h>
+ #include <linux/module.h>
+ 
+ #include <drm/drm_prime.h>
+ #include <drm/drm_vma_manager.h>
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  #include <drm/exynos_drm.h>
  
  #include "exynos_drm_drv.h"
  #include "exynos_drm_gem.h"
 +#include "exynos_drm_iommu.h"
  
++<<<<<<< HEAD
 +static int exynos_drm_alloc_buf(struct exynos_drm_gem *exynos_gem)
++=======
+ MODULE_IMPORT_NS(DMA_BUF);
+ 
+ static int exynos_drm_alloc_buf(struct exynos_drm_gem *exynos_gem, bool kvmap)
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  {
  	struct drm_device *dev = exynos_gem->base.dev;
 -	unsigned long attr = 0;
 +	unsigned long attr;
 +	unsigned int nr_pages;
 +	struct sg_table sgt;
 +	int ret = -ENOMEM;
  
  	if (exynos_gem->dma_addr) {
 -		DRM_DEV_DEBUG_KMS(to_dma_dev(dev), "already allocated.\n");
 +		DRM_DEBUG_KMS("already allocated.\n");
  		return 0;
  	}
  
diff --cc drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c
index 616c3a2f1baf,abb854281347..000000000000
--- a/drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c
+++ b/drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c
@@@ -12,6 -13,10 +13,13 @@@
  #include "i915_gem_object.h"
  #include "i915_scatterlist.h"
  
++<<<<<<< HEAD
++=======
+ MODULE_IMPORT_NS(DMA_BUF);
+ 
+ I915_SELFTEST_DECLARE(static bool force_different_devices;)
+ 
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  static struct drm_i915_gem_object *dma_buf_to_obj(struct dma_buf *buf)
  {
  	return to_intel_bo(buf->priv);
diff --cc drivers/gpu/drm/tegra/gem.c
index a37a1cfe120a,d38fd7e12b57..000000000000
--- a/drivers/gpu/drm/tegra/gem.c
+++ b/drivers/gpu/drm/tegra/gem.c
@@@ -15,6 -12,10 +15,13 @@@
  
  #include <linux/dma-buf.h>
  #include <linux/iommu.h>
++<<<<<<< HEAD
++=======
+ #include <linux/module.h>
+ 
+ #include <drm/drm_drv.h>
+ #include <drm/drm_prime.h>
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
  #include <drm/tegra_drm.h>
  
  #include "drm.h"
diff --cc drivers/virtio/virtio_dma_buf.c
index 45d6e8647dcf,2521a75009c3..000000000000
--- a/drivers/virtio/virtio_dma_buf.c
+++ b/drivers/virtio/virtio_dma_buf.c
@@@ -83,3 -84,6 +83,9 @@@ int virtio_dma_buf_get_uuid(struct dma_
  	return ops->get_uuid(dma_buf, uuid);
  }
  EXPORT_SYMBOL(virtio_dma_buf_get_uuid);
++<<<<<<< HEAD
++=======
+ 
+ MODULE_LICENSE("GPL");
+ MODULE_IMPORT_NS(DMA_BUF);
++>>>>>>> 16b0314aa746 (dma-buf: move dma-buf symbols into the DMA_BUF module namespace)
* Unmerged path drivers/infiniband/core/umem_dmabuf.c
* Unmerged path drivers/misc/fastrpc.c
* Unmerged path drivers/misc/habanalabs/common/memory.c
* Unmerged path drivers/staging/media/tegra-vde/dmabuf-cache.c
* Unmerged path drivers/xen/gntdev-dmabuf.c
diff --git a/drivers/dma-buf/dma-buf.c b/drivers/dma-buf/dma-buf.c
index 733c8b1c8467..48ebcb2c47cb 100644
--- a/drivers/dma-buf/dma-buf.c
+++ b/drivers/dma-buf/dma-buf.c
@@ -596,7 +596,7 @@ struct dma_buf *dma_buf_export(const struct dma_buf_export_info *exp_info)
 	module_put(exp_info->owner);
 	return ERR_PTR(ret);
 }
-EXPORT_SYMBOL_GPL(dma_buf_export);
+EXPORT_SYMBOL_NS_GPL(dma_buf_export, DMA_BUF);
 
 /**
  * dma_buf_fd - returns a file descriptor for the given struct dma_buf
@@ -620,7 +620,7 @@ int dma_buf_fd(struct dma_buf *dmabuf, int flags)
 
 	return fd;
 }
-EXPORT_SYMBOL_GPL(dma_buf_fd);
+EXPORT_SYMBOL_NS_GPL(dma_buf_fd, DMA_BUF);
 
 /**
  * dma_buf_get - returns the struct dma_buf related to an fd
@@ -646,7 +646,7 @@ struct dma_buf *dma_buf_get(int fd)
 
 	return file->private_data;
 }
-EXPORT_SYMBOL_GPL(dma_buf_get);
+EXPORT_SYMBOL_NS_GPL(dma_buf_get, DMA_BUF);
 
 /**
  * dma_buf_put - decreases refcount of the buffer
@@ -665,7 +665,7 @@ void dma_buf_put(struct dma_buf *dmabuf)
 
 	fput(dmabuf->file);
 }
-EXPORT_SYMBOL_GPL(dma_buf_put);
+EXPORT_SYMBOL_NS_GPL(dma_buf_put, DMA_BUF);
 
 static void mangle_sg_table(struct sg_table *sg_table)
 {
@@ -796,7 +796,7 @@ dma_buf_dynamic_attach(struct dma_buf *dmabuf, struct device *dev,
 	dma_buf_detach(dmabuf, attach);
 	return ERR_PTR(ret);
 }
-EXPORT_SYMBOL_GPL(dma_buf_dynamic_attach);
+EXPORT_SYMBOL_NS_GPL(dma_buf_dynamic_attach, DMA_BUF);
 
 /**
  * dma_buf_attach - Wrapper for dma_buf_dynamic_attach
@@ -811,7 +811,7 @@ struct dma_buf_attachment *dma_buf_attach(struct dma_buf *dmabuf,
 {
 	return dma_buf_dynamic_attach(dmabuf, dev, NULL, NULL);
 }
-EXPORT_SYMBOL_GPL(dma_buf_attach);
+EXPORT_SYMBOL_NS_GPL(dma_buf_attach, DMA_BUF);
 
 static void __unmap_dma_buf(struct dma_buf_attachment *attach,
 			    struct sg_table *sg_table,
@@ -857,7 +857,7 @@ void dma_buf_detach(struct dma_buf *dmabuf, struct dma_buf_attachment *attach)
 
 	kfree(attach);
 }
-EXPORT_SYMBOL_GPL(dma_buf_detach);
+EXPORT_SYMBOL_NS_GPL(dma_buf_detach, DMA_BUF);
 
 /**
  * dma_buf_pin - Lock down the DMA-buf
@@ -887,7 +887,7 @@ int dma_buf_pin(struct dma_buf_attachment *attach)
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(dma_buf_pin);
+EXPORT_SYMBOL_NS_GPL(dma_buf_pin, DMA_BUF);
 
 /**
  * dma_buf_unpin - Unpin a DMA-buf
@@ -908,7 +908,7 @@ void dma_buf_unpin(struct dma_buf_attachment *attach)
 	if (dmabuf->ops->unpin)
 		dmabuf->ops->unpin(attach);
 }
-EXPORT_SYMBOL_GPL(dma_buf_unpin);
+EXPORT_SYMBOL_NS_GPL(dma_buf_unpin, DMA_BUF);
 
 /**
  * dma_buf_map_attachment - Returns the scatterlist table of the attachment;
@@ -996,7 +996,7 @@ struct sg_table *dma_buf_map_attachment(struct dma_buf_attachment *attach,
 
 	return sg_table;
 }
-EXPORT_SYMBOL_GPL(dma_buf_map_attachment);
+EXPORT_SYMBOL_NS_GPL(dma_buf_map_attachment, DMA_BUF);
 
 /**
  * dma_buf_unmap_attachment - unmaps and decreases usecount of the buffer;might
@@ -1032,7 +1032,7 @@ void dma_buf_unmap_attachment(struct dma_buf_attachment *attach,
 	    !IS_ENABLED(CONFIG_DMABUF_MOVE_NOTIFY))
 		dma_buf_unpin(attach);
 }
-EXPORT_SYMBOL_GPL(dma_buf_unmap_attachment);
+EXPORT_SYMBOL_NS_GPL(dma_buf_unmap_attachment, DMA_BUF);
 
 /**
  * dma_buf_move_notify - notify attachments that DMA-buf is moving
@@ -1052,7 +1052,7 @@ void dma_buf_move_notify(struct dma_buf *dmabuf)
 		if (attach->importer_ops)
 			attach->importer_ops->move_notify(attach);
 }
-EXPORT_SYMBOL_GPL(dma_buf_move_notify);
+EXPORT_SYMBOL_NS_GPL(dma_buf_move_notify, DMA_BUF);
 
 /**
  * DOC: cpu access
@@ -1196,7 +1196,7 @@ int dma_buf_begin_cpu_access(struct dma_buf *dmabuf,
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(dma_buf_begin_cpu_access);
+EXPORT_SYMBOL_NS_GPL(dma_buf_begin_cpu_access, DMA_BUF);
 
 /**
  * dma_buf_end_cpu_access - Must be called after accessing a dma_buf from the
@@ -1224,7 +1224,7 @@ int dma_buf_end_cpu_access(struct dma_buf *dmabuf,
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(dma_buf_end_cpu_access);
+EXPORT_SYMBOL_NS_GPL(dma_buf_end_cpu_access, DMA_BUF);
 
 
 /**
@@ -1266,7 +1266,7 @@ int dma_buf_mmap(struct dma_buf *dmabuf, struct vm_area_struct *vma,
 
 	return dmabuf->ops->mmap(dmabuf, vma);
 }
-EXPORT_SYMBOL_GPL(dma_buf_mmap);
+EXPORT_SYMBOL_NS_GPL(dma_buf_mmap, DMA_BUF);
 
 /**
  * dma_buf_vmap - Create virtual mapping for the buffer object into kernel
@@ -1320,7 +1320,7 @@ int dma_buf_vmap(struct dma_buf *dmabuf, struct dma_buf_map *map)
 	mutex_unlock(&dmabuf->lock);
 	return ret;
 }
-EXPORT_SYMBOL_GPL(dma_buf_vmap);
+EXPORT_SYMBOL_NS_GPL(dma_buf_vmap, DMA_BUF);
 
 /**
  * dma_buf_vunmap - Unmap a vmap obtained by dma_buf_vmap.
@@ -1344,7 +1344,7 @@ void dma_buf_vunmap(struct dma_buf *dmabuf, struct dma_buf_map *map)
 	}
 	mutex_unlock(&dmabuf->lock);
 }
-EXPORT_SYMBOL_GPL(dma_buf_vunmap);
+EXPORT_SYMBOL_NS_GPL(dma_buf_vunmap, DMA_BUF);
 
 #ifdef CONFIG_DEBUG_FS
 static int dma_buf_debug_show(struct seq_file *s, void *unused)
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
index 2335b596d892..af486d68b7d9 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c
@@ -41,6 +41,7 @@
 #include <linux/swiotlb.h>
 #include <linux/dma-buf.h>
 #include <linux/sizes.h>
+#include <linux/module.h>
 
 #include <drm/ttm/ttm_bo_api.h>
 #include <drm/ttm/ttm_bo_driver.h>
@@ -59,6 +60,8 @@
 #include "amdgpu_res_cursor.h"
 #include "bif/bif_4_1_d.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 #define AMDGPU_TTM_VRAM_MAX_DW_READ	(size_t)128
 
 static int amdgpu_ttm_backend_bind(struct ttm_device *bdev,
diff --git a/drivers/gpu/drm/armada/armada_gem.c b/drivers/gpu/drm/armada/armada_gem.c
index 8fbb25913327..147abf1a3968 100644
--- a/drivers/gpu/drm/armada/armada_gem.c
+++ b/drivers/gpu/drm/armada/armada_gem.c
@@ -15,6 +15,8 @@
 #include "armada_gem.h"
 #include "armada_ioctlP.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 static vm_fault_t armada_gem_vm_fault(struct vm_fault *vmf)
 {
 	struct drm_gem_object *gobj = vmf->vma->vm_private_data;
* Unmerged path drivers/gpu/drm/drm_gem_framebuffer_helper.c
diff --git a/drivers/gpu/drm/drm_prime.c b/drivers/gpu/drm/drm_prime.c
index a18ce0c1c6ae..ac7d9e12cc43 100644
--- a/drivers/gpu/drm/drm_prime.c
+++ b/drivers/gpu/drm/drm_prime.c
@@ -29,6 +29,7 @@
 #include <linux/export.h>
 #include <linux/dma-buf.h>
 #include <linux/rbtree.h>
+#include <linux/module.h>
 
 #include <drm/drm.h>
 #include <drm/drm_drv.h>
@@ -39,6 +40,8 @@
 
 #include "drm_internal.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 /**
  * DOC: overview and lifetime rules
  *
* Unmerged path drivers/gpu/drm/etnaviv/etnaviv_gem_prime.c
* Unmerged path drivers/gpu/drm/exynos/exynos_drm_gem.c
* Unmerged path drivers/gpu/drm/i915/gem/i915_gem_dmabuf.c
diff --git a/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c b/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
index 66fdcf05ac04..fb82056b85f2 100644
--- a/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
+++ b/drivers/gpu/drm/omapdrm/omap_gem_dmabuf.c
@@ -19,6 +19,8 @@
 
 #include "omap_drv.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 /* -----------------------------------------------------------------------------
  * DMABUF Export
  */
* Unmerged path drivers/gpu/drm/tegra/gem.c
diff --git a/drivers/gpu/drm/vmwgfx/ttm_object.c b/drivers/gpu/drm/vmwgfx/ttm_object.c
index 04789b2bb2a2..899945f54dc7 100644
--- a/drivers/gpu/drm/vmwgfx/ttm_object.c
+++ b/drivers/gpu/drm/vmwgfx/ttm_object.c
@@ -48,8 +48,11 @@
 #include <linux/spinlock.h>
 #include <linux/slab.h>
 #include <linux/atomic.h>
+#include <linux/module.h>
 #include "ttm_object.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 /**
  * struct ttm_object_file
  *
* Unmerged path drivers/infiniband/core/umem_dmabuf.c
diff --git a/drivers/media/common/videobuf2/videobuf2-core.c b/drivers/media/common/videobuf2/videobuf2-core.c
index f32ec7342ef0..6a10a45c070c 100644
--- a/drivers/media/common/videobuf2/videobuf2-core.c
+++ b/drivers/media/common/videobuf2/videobuf2-core.c
@@ -2630,3 +2630,4 @@ EXPORT_SYMBOL_GPL(vb2_thread_stop);
 MODULE_DESCRIPTION("Media buffer core framework");
 MODULE_AUTHOR("Pawel Osciak <pawel@osciak.com>, Marek Szyprowski");
 MODULE_LICENSE("GPL");
+MODULE_IMPORT_NS(DMA_BUF);
diff --git a/drivers/media/common/videobuf2/videobuf2-dma-contig.c b/drivers/media/common/videobuf2/videobuf2-dma-contig.c
index f430218f86f7..9d7a56862be1 100644
--- a/drivers/media/common/videobuf2/videobuf2-dma-contig.c
+++ b/drivers/media/common/videobuf2/videobuf2-dma-contig.c
@@ -782,3 +782,4 @@ EXPORT_SYMBOL_GPL(vb2_dma_contig_clear_max_seg_size);
 MODULE_DESCRIPTION("DMA-contig memory handling routines for videobuf2");
 MODULE_AUTHOR("Pawel Osciak <pawel@osciak.com>");
 MODULE_LICENSE("GPL");
+MODULE_IMPORT_NS(DMA_BUF);
diff --git a/drivers/media/common/videobuf2/videobuf2-dma-sg.c b/drivers/media/common/videobuf2/videobuf2-dma-sg.c
index 676d4eb8f23e..1234d31f022d 100644
--- a/drivers/media/common/videobuf2/videobuf2-dma-sg.c
+++ b/drivers/media/common/videobuf2/videobuf2-dma-sg.c
@@ -663,3 +663,4 @@ EXPORT_SYMBOL_GPL(vb2_dma_sg_memops);
 MODULE_DESCRIPTION("dma scatter/gather memory handling routines for videobuf2");
 MODULE_AUTHOR("Andrzej Pietrasiewicz");
 MODULE_LICENSE("GPL");
+MODULE_IMPORT_NS(DMA_BUF);
diff --git a/drivers/media/common/videobuf2/videobuf2-vmalloc.c b/drivers/media/common/videobuf2/videobuf2-vmalloc.c
index dd7e9a58b11e..9e044cfe70ed 100644
--- a/drivers/media/common/videobuf2/videobuf2-vmalloc.c
+++ b/drivers/media/common/videobuf2/videobuf2-vmalloc.c
@@ -448,3 +448,4 @@ EXPORT_SYMBOL_GPL(vb2_vmalloc_memops);
 MODULE_DESCRIPTION("vmalloc memory handling routines for videobuf2");
 MODULE_AUTHOR("Pawel Osciak <pawel@osciak.com>");
 MODULE_LICENSE("GPL");
+MODULE_IMPORT_NS(DMA_BUF);
* Unmerged path drivers/misc/fastrpc.c
* Unmerged path drivers/misc/habanalabs/common/memory.c
* Unmerged path drivers/staging/media/tegra-vde/dmabuf-cache.c
diff --git a/drivers/tee/tee_shm.c b/drivers/tee/tee_shm.c
index 499fccba3d74..93d836171628 100644
--- a/drivers/tee/tee_shm.c
+++ b/drivers/tee/tee_shm.c
@@ -10,8 +10,11 @@
 #include <linux/slab.h>
 #include <linux/tee_drv.h>
 #include <linux/uio.h>
+#include <linux/module.h>
 #include "tee_private.h"
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 static void release_registered_pages(struct tee_shm *shm)
 {
 	if (shm->pages) {
* Unmerged path drivers/virtio/virtio_dma_buf.c
* Unmerged path drivers/xen/gntdev-dmabuf.c
diff --git a/samples/vfio-mdev/mbochs.c b/samples/vfio-mdev/mbochs.c
index 6be4f1ce987b..9a2f6d212932 100644
--- a/samples/vfio-mdev/mbochs.c
+++ b/samples/vfio-mdev/mbochs.c
@@ -1385,5 +1385,6 @@ static void __exit mbochs_dev_exit(void)
 	mbochs_class = NULL;
 }
 
+MODULE_IMPORT_NS(DMA_BUF);
 module_init(mbochs_dev_init)
 module_exit(mbochs_dev_exit)
