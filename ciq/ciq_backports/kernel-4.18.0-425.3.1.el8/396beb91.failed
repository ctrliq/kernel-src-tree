drm/amd/pm: correct the metrics version for SMU 11.0.11/12/13

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Evan Quan <evan.quan@amd.com>
commit 396beb91a9eb86cbfa404e4220cca8f3ada70777
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/396beb91.failed

Correct the metrics version used for SMU 11.0.11/12/13.
Fixes misreported GPU metrics (e.g., fan speed, etc.) depending
on which version of SMU firmware is loaded.

Bug: https://gitlab.freedesktop.org/drm/amd/-/issues/1925
	Signed-off-by: Evan Quan <evan.quan@amd.com>
	Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
(cherry picked from commit 396beb91a9eb86cbfa404e4220cca8f3ada70777)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/gpu/drm/amd/pm/swsmu/smu11/sienna_cichlid_ppt.c
diff --cc drivers/gpu/drm/amd/pm/swsmu/smu11/sienna_cichlid_ppt.c
index bf90a6d87411,78f3d9e722bb..000000000000
--- a/drivers/gpu/drm/amd/pm/swsmu/smu11/sienna_cichlid_ppt.c
+++ b/drivers/gpu/drm/amd/pm/swsmu/smu11/sienna_cichlid_ppt.c
@@@ -495,17 -686,45 +495,42 @@@ static int sienna_cichlid_get_smu_metri
  	struct smu_table_context *smu_table= &smu->smu_table;
  	SmuMetrics_t *metrics =
  		&(((SmuMetricsExternal_t *)(smu_table->metrics_table))->SmuMetrics);
 -	SmuMetrics_V2_t *metrics_v2 =
 -		&(((SmuMetricsExternal_t *)(smu_table->metrics_table))->SmuMetrics_V2);
 -	SmuMetrics_V3_t *metrics_v3 =
 -		&(((SmuMetricsExternal_t *)(smu_table->metrics_table))->SmuMetrics_V3);
 -	bool use_metrics_v2 = false;
 -	bool use_metrics_v3 = false;
 -	uint16_t average_gfx_activity;
  	int ret = 0;
 -	uint32_t apu_percent = 0;
 -	uint32_t dgpu_percent = 0;
  
++<<<<<<< HEAD
 +	mutex_lock(&smu->metrics_lock);
++=======
+ 	switch (smu->adev->ip_versions[MP1_HWIP][0]) {
+ 	case IP_VERSION(11, 0, 7):
+ 		if (smu->smc_fw_version >= 0x3A4900)
+ 			use_metrics_v3 = true;
+ 		else if (smu->smc_fw_version >= 0x3A4300)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 11):
+ 		if (smu->smc_fw_version >= 0x412D00)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 12):
+ 		if (smu->smc_fw_version >= 0x3B2300)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 13):
+ 		if (smu->smc_fw_version >= 0x491100)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	default:
+ 		break;
+ 	}
++>>>>>>> 396beb91a9eb (drm/amd/pm: correct the metrics version for SMU 11.0.11/12/13)
  
 -	ret = smu_cmn_get_metrics_table(smu,
 -					NULL,
 -					false);
 -	if (ret)
 +	ret = smu_cmn_get_metrics_table_locked(smu,
 +					       NULL,
 +					       false);
 +	if (ret) {
 +		mutex_unlock(&smu->metrics_lock);
  		return ret;
 +	}
  
  	switch (member) {
  	case METRICS_CURR_GFXCLK:
@@@ -3677,10 -3839,39 +3702,36 @@@ static ssize_t sienna_cichlid_get_gpu_m
  	SmuMetricsExternal_t metrics_external;
  	SmuMetrics_t *metrics =
  		&(metrics_external.SmuMetrics);
 -	SmuMetrics_V2_t *metrics_v2 =
 -		&(metrics_external.SmuMetrics_V2);
 -	SmuMetrics_V3_t *metrics_v3 =
 -		&(metrics_external.SmuMetrics_V3);
  	struct amdgpu_device *adev = smu->adev;
 -	bool use_metrics_v2 = false;
 -	bool use_metrics_v3 = false;
 -	uint16_t average_gfx_activity;
 +	uint32_t smu_version;
  	int ret = 0;
  
++<<<<<<< HEAD
++=======
+ 	switch (smu->adev->ip_versions[MP1_HWIP][0]) {
+ 	case IP_VERSION(11, 0, 7):
+ 		if (smu->smc_fw_version >= 0x3A4900)
+ 			use_metrics_v3 = true;
+ 		else if (smu->smc_fw_version >= 0x3A4300)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 11):
+ 		if (smu->smc_fw_version >= 0x412D00)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 12):
+ 		if (smu->smc_fw_version >= 0x3B2300)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	case IP_VERSION(11, 0, 13):
+ 		if (smu->smc_fw_version >= 0x491100)
+ 			use_metrics_v2 = true;
+ 		break;
+ 	default:
+ 		break;
+ 	}
+ 
++>>>>>>> 396beb91a9eb (drm/amd/pm: correct the metrics version for SMU 11.0.11/12/13)
  	ret = smu_cmn_get_metrics_table(smu,
  					&metrics_external,
  					true);
* Unmerged path drivers/gpu/drm/amd/pm/swsmu/smu11/sienna_cichlid_ppt.c
