PCI: vmd: Use msi_msg shadow structs

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Thomas Gleixner <tglx@linutronix.de>
commit e16c8058a10ba8e38d0d1ad0b64e444b245ffdbd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/e16c8058.failed

Use the x86 shadow structs in msi_msg instead of the macros.

	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Link: https://lore.kernel.org/r/20201024213535.443185-16-dwmw2@infradead.org

(cherry picked from commit e16c8058a10ba8e38d0d1ad0b64e444b245ffdbd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/pci/controller/vmd.c
diff --cc drivers/pci/controller/vmd.c
index b16dbfce2e2e,6f8795454e5a..000000000000
--- a/drivers/pci/controller/vmd.c
+++ b/drivers/pci/controller/vmd.c
@@@ -126,11 -128,12 +125,18 @@@ static void vmd_compose_msi_msg(struct 
  {
  	struct vmd_irq *vmdirq = data->chip_data;
  	struct vmd_irq_list *irq = vmdirq->irq;
 -	struct vmd_dev *vmd = irq_data_get_irq_handler_data(data);
  
++<<<<<<< HEAD
 +	msg->address_hi = MSI_ADDR_BASE_HI;
 +	msg->address_lo = MSI_ADDR_BASE_LO |
 +			  MSI_ADDR_DEST_ID(irq->index);
 +	msg->data = 0;
++=======
+ 	memset(msg, 0, sizeof(*msg));
+ 	msg->address_hi = X86_MSI_BASE_ADDRESS_HIGH;
+ 	msg->arch_addr_lo.base_address = X86_MSI_BASE_ADDRESS_LOW;
+ 	msg->arch_addr_lo.destid_0_7 = index_from_irqs(vmd, irq);
++>>>>>>> e16c8058a10b (PCI: vmd: Use msi_msg shadow structs)
  }
  
  /*
* Unmerged path drivers/pci/controller/vmd.c
