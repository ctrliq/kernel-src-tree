KVM: arm64: Merge kvm_arch_vcpu_run_pid_change() and kvm_vcpu_first_run_init()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Marc Zyngier <maz@kernel.org>
commit b5aa368abfbf4c0e041c792e3340955554eff97e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/b5aa368a.failed

The kvm_arch_vcpu_run_pid_change() helper gets called on each PID
change. The kvm_vcpu_first_run_init() helper gets run on the...
first run(!) of a vcpu.

As it turns out, the first run of a vcpu also triggers a PID change
event (vcpu->pid is initially NULL).

Use this property to merge these two helpers and get rid of another
arm64-specific oddity.

	Reviewed-by: Andrew Jones <drjones@redhat.com>
	Signed-off-by: Marc Zyngier <maz@kernel.org>
(cherry picked from commit b5aa368abfbf4c0e041c792e3340955554eff97e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kvm/arm.c
diff --cc arch/arm64/kvm/arm.c
index 60a64e83f8da,f20a265972c7..000000000000
--- a/arch/arm64/kvm/arm.c
+++ b/arch/arm64/kvm/arm.c
@@@ -527,13 -584,23 +527,27 @@@ static void update_vmid(struct kvm_vmi
  	spin_unlock(&kvm_vmid_lock);
  }
  
++<<<<<<< HEAD
 +static int kvm_vcpu_first_run_init(struct kvm_vcpu *vcpu)
++=======
+ static int kvm_vcpu_initialized(struct kvm_vcpu *vcpu)
+ {
+ 	return vcpu->arch.target >= 0;
+ }
+ 
+ /*
+  * Handle both the initialisation that is being done when the vcpu is
+  * run for the first time, as well as the updates that must be
+  * performed each time we get a new thread dealing with this vcpu.
+  */
+ int kvm_arch_vcpu_run_pid_change(struct kvm_vcpu *vcpu)
++>>>>>>> b5aa368abfbf (KVM: arm64: Merge kvm_arch_vcpu_run_pid_change() and kvm_vcpu_first_run_init())
  {
  	struct kvm *kvm = vcpu->kvm;
- 	int ret = 0;
+ 	int ret;
  
- 	if (likely(vcpu->arch.has_run_once))
- 		return 0;
+ 	if (!kvm_vcpu_initialized(vcpu))
+ 		return -ENOEXEC;
  
  	if (!kvm_arm_vcpu_is_finalized(vcpu))
  		return -EPERM;
* Unmerged path arch/arm64/kvm/arm.c
