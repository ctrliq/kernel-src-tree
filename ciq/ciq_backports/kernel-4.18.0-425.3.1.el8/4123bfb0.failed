RDMA/mlx5: Move struct mlx5_core_mkey to mlx5_ib

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Aharon Landau <aharonl@nvidia.com>
commit 4123bfb0b28b77b944360be8c758b1a0974e96ad
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/4123bfb0.failed

Move mlx5_core_mkey struct to mlx5_ib, as the mlx5_core doesn't use it
at this point.

	Signed-off-by: Aharon Landau <aharonl@nvidia.com>
	Reviewed-by: Shay Drory <shayd@nvidia.com>
	Acked-by: Michael S. Tsirkin <mst@redhat.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
(cherry picked from commit 4123bfb0b28b77b944360be8c758b1a0974e96ad)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/hw/mlx5/odp.c
#	include/linux/mlx5/driver.h
diff --cc drivers/infiniband/hw/mlx5/odp.c
index 677d9275aa78,7ab0a9b752f6..000000000000
--- a/drivers/infiniband/hw/mlx5/odp.c
+++ b/drivers/infiniband/hw/mlx5/odp.c
@@@ -1648,9 -1703,8 +1648,13 @@@ get_prefetchable_mr(struct ib_pd *pd, e
  		    u32 lkey)
  {
  	struct mlx5_ib_dev *dev = to_mdev(pd->device);
++<<<<<<< HEAD
 +	struct mlx5_core_mkey *mmkey;
 +	struct ib_umem_odp *odp;
++=======
++>>>>>>> 4123bfb0b28b (RDMA/mlx5: Move struct mlx5_core_mkey to mlx5_ib)
  	struct mlx5_ib_mr *mr = NULL;
+ 	struct mlx5_ib_mkey *mmkey;
  
  	xa_lock(&dev->odp_mkeys);
  	mmkey = xa_load(&dev->odp_mkeys, mlx5_base_mkey(lkey));
diff --cc include/linux/mlx5/driver.h
index 010ada427bed,70b6aff4940a..000000000000
--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@@ -356,22 -357,6 +356,25 @@@ struct mlx5_core_sig_ctx 
  	u32			sigerr_count;
  };
  
++<<<<<<< HEAD
 +enum {
 +	MLX5_MKEY_MR = 1,
 +	MLX5_MKEY_MW,
 +	MLX5_MKEY_INDIRECT_DEVX,
 +};
 +
 +struct mlx5_core_mkey {
 +	u64			iova;
 +	u64			size;
 +	u32			key;
 +	u32			pd;
 +	u32			type;
 +	struct wait_queue_head wait;
 +	refcount_t usecount;
 +};
 +
++=======
++>>>>>>> 4123bfb0b28b (RDMA/mlx5: Move struct mlx5_core_mkey to mlx5_ib)
  #define MLX5_24BIT_MASK		((1 << 24) - 1)
  
  enum mlx5_res_type {
diff --git a/drivers/infiniband/hw/mlx5/devx.c b/drivers/infiniband/hw/mlx5/devx.c
index abfde896b9aa..19015fb250a5 100644
--- a/drivers/infiniband/hw/mlx5/devx.c
+++ b/drivers/infiniband/hw/mlx5/devx.c
@@ -1293,7 +1293,7 @@ static int devx_handle_mkey_indirect(struct devx_obj *obj,
 				     void *in, void *out)
 {
 	struct mlx5_ib_devx_mr *devx_mr = &obj->devx_mr;
-	struct mlx5_core_mkey *mkey;
+	struct mlx5_ib_mkey *mkey;
 	void *mkc;
 	u8 key;
 
diff --git a/drivers/infiniband/hw/mlx5/mlx5_ib.h b/drivers/infiniband/hw/mlx5/mlx5_ib.h
index 3f728de54a6b..a0ca30c033df 100644
--- a/drivers/infiniband/hw/mlx5/mlx5_ib.h
+++ b/drivers/infiniband/hw/mlx5/mlx5_ib.h
@@ -627,6 +627,19 @@ struct mlx5_user_mmap_entry {
 	u32 page_idx;
 };
 
+enum mlx5_mkey_type {
+	MLX5_MKEY_MR = 1,
+	MLX5_MKEY_MW,
+	MLX5_MKEY_INDIRECT_DEVX,
+};
+
+struct mlx5_ib_mkey {
+	u32 key;
+	enum mlx5_mkey_type type;
+	struct wait_queue_head wait;
+	refcount_t usecount;
+};
+
 #define MLX5_IB_MTT_PRESENT (MLX5_IB_MTT_READ | MLX5_IB_MTT_WRITE)
 
 #define MLX5_IB_DM_MEMIC_ALLOWED_ACCESS (IB_ACCESS_LOCAL_WRITE   |\
@@ -645,7 +658,7 @@ struct mlx5_user_mmap_entry {
 
 struct mlx5_ib_mr {
 	struct ib_mr ibmr;
-	struct mlx5_core_mkey mmkey;
+	struct mlx5_ib_mkey mmkey;
 
 	/* User MR data */
 	struct mlx5_cache_ent *cache_ent;
@@ -715,12 +728,12 @@ static inline bool is_odp_mr(struct mlx5_ib_mr *mr)
 
 struct mlx5_ib_mw {
 	struct ib_mw		ibmw;
-	struct mlx5_core_mkey	mmkey;
+	struct mlx5_ib_mkey	mmkey;
 	int			ndescs;
 };
 
 struct mlx5_ib_devx_mr {
-	struct mlx5_core_mkey	mmkey;
+	struct mlx5_ib_mkey	mmkey;
 	int			ndescs;
 };
 
@@ -1582,7 +1595,7 @@ static inline bool mlx5_ib_can_reconfig_with_umr(struct mlx5_ib_dev *dev,
 }
 
 static inline int mlx5r_store_odp_mkey(struct mlx5_ib_dev *dev,
-				       struct mlx5_core_mkey *mmkey)
+				       struct mlx5_ib_mkey *mmkey)
 {
 	refcount_set(&mmkey->usecount, 1);
 
@@ -1591,14 +1604,14 @@ static inline int mlx5r_store_odp_mkey(struct mlx5_ib_dev *dev,
 }
 
 /* deref an mkey that can participate in ODP flow */
-static inline void mlx5r_deref_odp_mkey(struct mlx5_core_mkey *mmkey)
+static inline void mlx5r_deref_odp_mkey(struct mlx5_ib_mkey *mmkey)
 {
 	if (refcount_dec_and_test(&mmkey->usecount))
 		wake_up(&mmkey->wait);
 }
 
 /* deref an mkey that can participate in ODP flow and wait for relese */
-static inline void mlx5r_deref_wait_odp_mkey(struct mlx5_core_mkey *mmkey)
+static inline void mlx5r_deref_wait_odp_mkey(struct mlx5_ib_mkey *mmkey)
 {
 	mlx5r_deref_odp_mkey(mmkey);
 	wait_event(mmkey->wait, refcount_read(&mmkey->usecount) == 0);
diff --git a/drivers/infiniband/hw/mlx5/mr.c b/drivers/infiniband/hw/mlx5/mr.c
index 4263bf96852f..ee15f07bc02d 100644
--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@ -83,9 +83,8 @@ static void set_mkc_access_pd_addr_fields(void *mkc, int acc, u64 start_addr,
 	MLX5_SET64(mkc, mkc, start_addr, start_addr);
 }
 
-static void
-assign_mkey_variant(struct mlx5_ib_dev *dev, struct mlx5_core_mkey *mkey,
-		    u32 *in)
+static void assign_mkey_variant(struct mlx5_ib_dev *dev,
+				struct mlx5_ib_mkey *mkey, u32 *in)
 {
 	u8 key = atomic_inc_return(&dev->mkey_var);
 	void *mkc;
@@ -95,9 +94,8 @@ assign_mkey_variant(struct mlx5_ib_dev *dev, struct mlx5_core_mkey *mkey,
 	mkey->key = key;
 }
 
-static int
-mlx5_ib_create_mkey(struct mlx5_ib_dev *dev, struct mlx5_core_mkey *mkey,
-		    u32 *in, int inlen)
+static int mlx5_ib_create_mkey(struct mlx5_ib_dev *dev,
+			       struct mlx5_ib_mkey *mkey, u32 *in, int inlen)
 {
 	assign_mkey_variant(dev, mkey, in);
 	return mlx5_core_create_mkey(dev->mdev, mkey, in, inlen);
@@ -105,7 +103,7 @@ mlx5_ib_create_mkey(struct mlx5_ib_dev *dev, struct mlx5_core_mkey *mkey,
 
 static int
 mlx5_ib_create_mkey_cb(struct mlx5_ib_dev *dev,
-		       struct mlx5_core_mkey *mkey,
+		       struct mlx5_ib_mkey *mkey,
 		       struct mlx5_async_ctx *async_ctx,
 		       u32 *in, int inlen, u32 *out, int outlen,
 		       struct mlx5_async_work *context)
* Unmerged path drivers/infiniband/hw/mlx5/odp.c
* Unmerged path include/linux/mlx5/driver.h
