x86/alternatives: Use INT3_INSN_SIZE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 76ffa7204b1ad7d321ac3a0292fdf3975d14866b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/76ffa720.failed

Use INT3_INSN_SIZE instead of sizeof(int3).

	Suggested-by: Ingo Molnar <mingo@kernel.org>
	Tested-by: Alexei Starovoitov <ast@kernel.org>
	Tested-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Alexei Starovoitov <ast@kernel.org>
	Cc: Andy Lutomirski <luto@kernel.org>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Brian Gerst <brgerst@gmail.com>
	Cc: Denys Vlasenko <dvlasenk@redhat.com>
	Cc: H. Peter Anvin <hpa@zytor.com>
	Cc: Linus Torvalds <torvalds@linux-foundation.org>
	Cc: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
Link: https://lkml.kernel.org/r/20191111132458.460144656@infradead.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 76ffa7204b1ad7d321ac3a0292fdf3975d14866b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/alternative.c
diff --cc arch/x86/kernel/alternative.c
index 4fce58044a3f,4552795a8df4..000000000000
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@@ -919,9 -1088,9 +919,13 @@@ static void text_poke_bp_batch(struct t
  	 * First step: add a int3 trap to the address that will be patched.
  	 */
  	for (i = 0; i < nr_entries; i++)
++<<<<<<< HEAD
 +		text_poke(tp[i].addr, &int3, sizeof(int3));
++=======
+ 		text_poke(text_poke_addr(&tp[i]), &int3, INT3_INSN_SIZE);
++>>>>>>> 76ffa7204b1a (x86/alternatives: Use INT3_INSN_SIZE)
  
 -	text_poke_sync();
 +	on_each_cpu(do_sync_core, NULL, 1);
  
  	/*
  	 * Second step: update all but the first byte of the patched range.
@@@ -929,10 -1098,10 +933,17 @@@
  	for (do_sync = 0, i = 0; i < nr_entries; i++) {
  		int len = text_opcode_size(tp[i].opcode);
  
++<<<<<<< HEAD
 +		if (len - sizeof(int3) > 0) {
 +			text_poke((char *)tp[i].addr + sizeof(int3),
 +				  (const char *)tp[i].text + sizeof(int3),
 +				  len - sizeof(int3));
++=======
+ 		if (len - INT3_INSN_SIZE > 0) {
+ 			text_poke(text_poke_addr(&tp[i]) + INT3_INSN_SIZE,
+ 				  (const char *)tp[i].text + INT3_INSN_SIZE,
+ 				  len - INT3_INSN_SIZE);
++>>>>>>> 76ffa7204b1a (x86/alternatives: Use INT3_INSN_SIZE)
  			do_sync++;
  		}
  	}
@@@ -954,7 -1123,7 +965,11 @@@
  		if (tp[i].text[0] == INT3_INSN_OPCODE)
  			continue;
  
++<<<<<<< HEAD
 +		text_poke(tp[i].addr, tp[i].text, sizeof(int3));
++=======
+ 		text_poke(text_poke_addr(&tp[i]), tp[i].text, INT3_INSN_SIZE);
++>>>>>>> 76ffa7204b1a (x86/alternatives: Use INT3_INSN_SIZE)
  		do_sync++;
  	}
  
* Unmerged path arch/x86/kernel/alternative.c
