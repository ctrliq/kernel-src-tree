driver core: Make bus notifiers in right order in really_probe()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Lu Baolu <baolu.lu@linux.intel.com>
commit 00eb74ea2c14418042347eaa34c6b73ac6ec1e76
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/00eb74ea.failed

If a driver cannot be bound to a device, the correct bus notifier order
should be:

 - BUS_NOTIFY_BIND_DRIVER: driver is about to be bound
 - BUS_NOTIFY_DRIVER_NOT_BOUND: driver failed to be bound

or no notifier if the failure happens before the actual binding.

The really_probe() notifies a BUS_NOTIFY_DRIVER_NOT_BOUND event without
a BUS_NOTIFY_BIND_DRIVER if .dma_configure() returns failure. This
change makes the notifiers in order.

	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
Link: https://lore.kernel.org/r/20211231033901.2168664-3-baolu.lu@linux.intel.com
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit 00eb74ea2c14418042347eaa34c6b73ac6ec1e76)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/dd.c
diff --cc drivers/base/dd.c
index 56535798518a,9eaaff2f556c..000000000000
--- a/drivers/base/dd.c
+++ b/drivers/base/dd.c
@@@ -622,13 -577,14 +622,17 @@@ re_probe
  	if (dev->bus->dma_configure) {
  		ret = dev->bus->dma_configure(dev);
  		if (ret)
++<<<<<<< HEAD
 +			goto probe_failed;
++=======
+ 			goto pinctrl_bind_failed;
++>>>>>>> 00eb74ea2c14 (driver core: Make bus notifiers in right order in really_probe())
  	}
  
 -	ret = driver_sysfs_add(dev);
 -	if (ret) {
 -		pr_err("%s: driver_sysfs_add(%s) failed\n",
 -		       __func__, dev_name(dev));
 -		goto sysfs_failed;
 +	if (driver_sysfs_add(dev)) {
 +		printk(KERN_ERR "%s: driver_sysfs_add(%s) failed\n",
 +			__func__, dev_name(dev));
 +		goto probe_failed;
  	}
  
  	if (dev->pm_domain && dev->pm_domain->activate) {
* Unmerged path drivers/base/dd.c
