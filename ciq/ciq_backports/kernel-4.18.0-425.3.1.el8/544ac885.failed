ASoC: SOF: Add bytes_get/put control IPC ops for IPC3

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
commit 544ac8858f249950b4d99c68e538cdc07300528f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/544ac885.failed

Define and set the bytes_get/put IPC control ops for IPC3.

	Signed-off-by: Ranjani Sridharan <ranjani.sridharan@linux.intel.com>
	Reviewed-by: PÃ©ter Ujfalusi <peter.ujfalusi@linux.intel.com>
	Reviewed-by: Pierre-Louis Bossart <pierre-louis.bossart@linux.intel.com>
Link: https://lore.kernel.org/r/20220317175044.1752400-10-ranjani.sridharan@linux.intel.com
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 544ac8858f249950b4d99c68e538cdc07300528f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	sound/soc/sof/control.c
#	sound/soc/sof/ipc3-control.c
diff --cc sound/soc/sof/control.c
index ef61936dad59,2a4997e1cd1e..000000000000
--- a/sound/soc/sof/control.c
+++ b/sound/soc/sof/control.c
@@@ -256,35 -190,14 +256,20 @@@ int snd_sof_enum_put(struct snd_kcontro
  int snd_sof_bytes_get(struct snd_kcontrol *kcontrol,
  		      struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_bytes_ext *be =
- 		(struct soc_bytes_ext *)kcontrol->private_value;
+ 	struct soc_bytes_ext *be = (struct soc_bytes_ext *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = be->dobj.private;
  	struct snd_soc_component *scomp = scontrol->scomp;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	struct sof_abi_hdr *data = cdata->data;
 +	size_t size;
++=======
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> 544ac8858f24 (ASoC: SOF: Add bytes_get/put control IPC ops for IPC3)
  
- 	snd_sof_refresh_control(scontrol);
- 
- 	if (be->max > sizeof(ucontrol->value.bytes.data)) {
- 		dev_err_ratelimited(scomp->dev,
- 				    "error: data max %d exceeds ucontrol data array size\n",
- 				    be->max);
- 		return -EINVAL;
- 	}
- 
- 	/* be->max has been verified to be >= sizeof(struct sof_abi_hdr) */
- 	if (data->size > be->max - sizeof(*data)) {
- 		dev_err_ratelimited(scomp->dev,
- 				    "error: %u bytes of control data is invalid, max is %zu\n",
- 				    data->size, be->max - sizeof(*data));
- 		return -EINVAL;
- 	}
- 
- 	size = data->size + sizeof(*data);
- 
- 	/* copy back to kcontrol */
- 	memcpy(ucontrol->value.bytes.data, data, size);
+ 	if (tplg_ops->control->bytes_get)
+ 		return tplg_ops->control->bytes_get(scontrol, ucontrol);
  
  	return 0;
  }
@@@ -292,37 -205,14 +277,20 @@@
  int snd_sof_bytes_put(struct snd_kcontrol *kcontrol,
  		      struct snd_ctl_elem_value *ucontrol)
  {
- 	struct soc_bytes_ext *be =
- 		(struct soc_bytes_ext *)kcontrol->private_value;
+ 	struct soc_bytes_ext *be = (struct soc_bytes_ext *)kcontrol->private_value;
  	struct snd_sof_control *scontrol = be->dobj.private;
  	struct snd_soc_component *scomp = scontrol->scomp;
++<<<<<<< HEAD
 +	struct sof_ipc_ctrl_data *cdata = scontrol->control_data;
 +	struct sof_abi_hdr *data = cdata->data;
 +	size_t size;
++=======
+ 	struct snd_sof_dev *sdev = snd_soc_component_get_drvdata(scomp);
+ 	const struct sof_ipc_tplg_ops *tplg_ops = sdev->ipc->ops->tplg;
++>>>>>>> 544ac8858f24 (ASoC: SOF: Add bytes_get/put control IPC ops for IPC3)
  
- 	if (be->max > sizeof(ucontrol->value.bytes.data)) {
- 		dev_err_ratelimited(scomp->dev,
- 				    "error: data max %d exceeds ucontrol data array size\n",
- 				    be->max);
- 		return -EINVAL;
- 	}
- 
- 	/* be->max has been verified to be >= sizeof(struct sof_abi_hdr) */
- 	if (data->size > be->max - sizeof(*data)) {
- 		dev_err_ratelimited(scomp->dev,
- 				    "error: data size too big %u bytes max is %zu\n",
- 				    data->size, be->max - sizeof(*data));
- 		return -EINVAL;
- 	}
- 
- 	size = data->size + sizeof(*data);
- 
- 	/* copy from kcontrol */
- 	memcpy(data, ucontrol->value.bytes.data, size);
- 
- 	/* notify DSP of byte control updates */
- 	if (pm_runtime_active(scomp->dev))
- 		snd_sof_ipc_set_get_comp_data(scontrol, true);
+ 	if (tplg_ops->control->bytes_put)
+ 		return tplg_ops->control->bytes_put(scontrol, ucontrol);
  
  	return 0;
  }
* Unmerged path sound/soc/sof/ipc3-control.c
* Unmerged path sound/soc/sof/control.c
* Unmerged path sound/soc/sof/ipc3-control.c
