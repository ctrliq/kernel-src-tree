net/mlx5e: Add recovery flow in case of error CQE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Gal Pressman <gal@nvidia.com>
commit 5dd29f40b25f91f1b65043f2225b843a8d0cb1df
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/5dd29f40.failed

The rep legacy RQ completion handling was missing the appropriate
handling of error CQEs (dump the CQE and queue a recover work), fix it
by calling trigger_report() when needed.

Since all CQE handling flows do the exact same error CQE handling,
extract it to a common helper function.

	Signed-off-by: Gal Pressman <gal@nvidia.com>
	Reviewed-by: Aya Levin <ayal@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit 5dd29f40b25f91f1b65043f2225b843a8d0cb1df)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
index ab92627de4fc,96e260fd7987..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
@@@ -1570,8 -1992,7 +1574,12 @@@ static void mlx5e_handle_rx_cqe_mpwrq_s
  	wi->consumed_strides += cstrides;
  
  	if (unlikely(MLX5E_RX_ERR_CQE(cqe))) {
++<<<<<<< HEAD
 +		trigger_report(rq, cqe);
 +		rq->stats->wqe_err++;
++=======
+ 		mlx5e_handle_rx_err_cqe(rq, cqe);
++>>>>>>> 5dd29f40b25f (net/mlx5e: Add recovery flow in case of error CQE)
  		goto mpwrq_cqe_out;
  	}
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rx.c
