selftests: mptcp: more robust signal race test

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Paolo Abeni <pabeni@redhat.com>
commit 6ef84b1517e08f6c2fc105b798a9d21bf4caa6cb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/6ef84b15.failed

The in kernel MPTCP PM implementation can process a single
incoming add address option at any given time. In the
mentioned test the server can surpass such limit. Let the
setup cope with that allowing a faster add_addr retransmission.

Fixes: a88c9e496937 ("mptcp: do not block subflows creation on errors")
Fixes: f7efc7771eac ("mptcp: drop argument port from mptcp_pm_announce_addr")
Closes: https://github.com/multipath-tcp/mptcp_net-next/issues/254
Reported-and-tested-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Reviewed-by: Matthieu Baerts <matthieu.baerts@tessares.net>
	Signed-off-by: Paolo Abeni <pabeni@redhat.com>
	Signed-off-by: Mat Martineau <mathew.j.martineau@linux.intel.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 6ef84b1517e08f6c2fc105b798a9d21bf4caa6cb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/net/mptcp/mptcp_join.sh
diff --cc tools/testing/selftests/net/mptcp/mptcp_join.sh
index e683ba817a00,0d6a71e7bb59..000000000000
--- a/tools/testing/selftests/net/mptcp/mptcp_join.sh
+++ b/tools/testing/selftests/net/mptcp/mptcp_join.sh
@@@ -941,6 -1151,28 +947,31 @@@ signal_address_tests(
  	run_tests $ns1 $ns2 10.0.1.1
  	chk_join_nr "signal invalid addresses" 1 1 1
  	chk_add_nr 3 3
++<<<<<<< HEAD
++=======
+ 
+ 	# signal addresses race test
+ 	reset
+ 	ip netns exec $ns1 ./pm_nl_ctl limits 4 4
+ 	ip netns exec $ns2 ./pm_nl_ctl limits 4 4
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.1.1 flags signal
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.2.1 flags signal
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.3.1 flags signal
+ 	ip netns exec $ns1 ./pm_nl_ctl add 10.0.4.1 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.1.2 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.2.2 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.3.2 flags signal
+ 	ip netns exec $ns2 ./pm_nl_ctl add 10.0.4.2 flags signal
+ 
+ 	# the peer could possibly miss some addr notification, allow retransmission
+ 	ip netns exec $ns1 sysctl -q net.mptcp.add_addr_timeout=1
+ 	run_tests $ns1 $ns2 10.0.1.1 0 0 0 slow
+ 	chk_join_nr "signal addresses race test" 3 3 3
+ 
+ 	# the server will not signal the address terminating
+ 	# the MPC subflow
+ 	chk_add_nr 3 3
++>>>>>>> 6ef84b1517e0 (selftests: mptcp: more robust signal race test)
  }
  
  link_failure_tests()
* Unmerged path tools/testing/selftests/net/mptcp/mptcp_join.sh
