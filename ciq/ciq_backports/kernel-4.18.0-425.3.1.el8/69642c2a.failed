net/sched: act_gact: Add extack messages for offload failure

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Ido Schimmel <idosch@nvidia.com>
commit 69642c2ab2f553fd8c4c121fcdf3b3054c727e86
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/69642c2a.failed

For better error reporting to user space, add extack messages when gact
action offload fails.

Example:

 # echo 1 > /sys/kernel/tracing/events/netlink/netlink_extack/enable

 # tc filter add dev dummy0 ingress pref 1 proto all matchall skip_sw action continue
 Error: cls_matchall: Failed to setup flow action.
 We have an error talking to the kernel

 # cat /sys/kernel/tracing/trace_pipe
       tc-181     [002] b..1.   105.493450: netlink_extack: msg=act_gact: Offload of "continue" action is not supported
       tc-181     [002] .....   105.493466: netlink_extack: msg=cls_matchall: Failed to setup flow action

 # tc filter add dev dummy0 ingress pref 1 proto all matchall skip_sw action reclassify
 Error: cls_matchall: Failed to setup flow action.
 We have an error talking to the kernel

 # cat /sys/kernel/tracing/trace_pipe
       tc-183     [002] b..1.   124.126477: netlink_extack: msg=act_gact: Offload of "reclassify" action is not supported
       tc-183     [002] .....   124.126489: netlink_extack: msg=cls_matchall: Failed to setup flow action

 # tc filter add dev dummy0 ingress pref 1 proto all matchall skip_sw action pipe action drop
 Error: cls_matchall: Failed to setup flow action.
 We have an error talking to the kernel

 # cat /sys/kernel/tracing/trace_pipe
       tc-185     [002] b..1.   137.097791: netlink_extack: msg=act_gact: Offload of "pipe" action is not supported
       tc-185     [002] .....   137.097804: netlink_extack: msg=cls_matchall: Failed to setup flow action

	Signed-off-by: Ido Schimmel <idosch@nvidia.com>
	Reviewed-by: Petr Machata <petrm@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit 69642c2ab2f553fd8c4c121fcdf3b3054c727e86)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sched/act_gact.c
diff --cc net/sched/act_gact.c
index 540cebb57be7,ac29d1065232..000000000000
--- a/net/sched/act_gact.c
+++ b/net/sched/act_gact.c
@@@ -257,6 -252,54 +257,57 @@@ static size_t tcf_gact_get_fill_size(co
  	return sz;
  }
  
++<<<<<<< HEAD
++=======
+ static int tcf_gact_offload_act_setup(struct tc_action *act, void *entry_data,
+ 				      u32 *index_inc, bool bind,
+ 				      struct netlink_ext_ack *extack)
+ {
+ 	if (bind) {
+ 		struct flow_action_entry *entry = entry_data;
+ 
+ 		if (is_tcf_gact_ok(act)) {
+ 			entry->id = FLOW_ACTION_ACCEPT;
+ 		} else if (is_tcf_gact_shot(act)) {
+ 			entry->id = FLOW_ACTION_DROP;
+ 		} else if (is_tcf_gact_trap(act)) {
+ 			entry->id = FLOW_ACTION_TRAP;
+ 		} else if (is_tcf_gact_goto_chain(act)) {
+ 			entry->id = FLOW_ACTION_GOTO;
+ 			entry->chain_index = tcf_gact_goto_chain_index(act);
+ 		} else if (is_tcf_gact_continue(act)) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Offload of \"continue\" action is not supported");
+ 			return -EOPNOTSUPP;
+ 		} else if (is_tcf_gact_reclassify(act)) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Offload of \"reclassify\" action is not supported");
+ 			return -EOPNOTSUPP;
+ 		} else if (is_tcf_gact_pipe(act)) {
+ 			NL_SET_ERR_MSG_MOD(extack, "Offload of \"pipe\" action is not supported");
+ 			return -EOPNOTSUPP;
+ 		} else {
+ 			NL_SET_ERR_MSG_MOD(extack, "Unsupported generic action offload");
+ 			return -EOPNOTSUPP;
+ 		}
+ 		*index_inc = 1;
+ 	} else {
+ 		struct flow_offload_action *fl_action = entry_data;
+ 
+ 		if (is_tcf_gact_ok(act))
+ 			fl_action->id = FLOW_ACTION_ACCEPT;
+ 		else if (is_tcf_gact_shot(act))
+ 			fl_action->id = FLOW_ACTION_DROP;
+ 		else if (is_tcf_gact_trap(act))
+ 			fl_action->id = FLOW_ACTION_TRAP;
+ 		else if (is_tcf_gact_goto_chain(act))
+ 			fl_action->id = FLOW_ACTION_GOTO;
+ 		else
+ 			return -EOPNOTSUPP;
+ 	}
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 69642c2ab2f5 (net/sched: act_gact: Add extack messages for offload failure)
  static struct tc_action_ops act_gact_ops = {
  	.kind		=	"gact",
  	.id		=	TCA_ID_GACT,
diff --git a/include/net/tc_act/tc_gact.h b/include/net/tc_act/tc_gact.h
index eb8f01c819e6..832efd40e023 100644
--- a/include/net/tc_act/tc_gact.h
+++ b/include/net/tc_act/tc_gact.h
@@ -59,4 +59,19 @@ static inline u32 tcf_gact_goto_chain_index(const struct tc_action *a)
 	return READ_ONCE(a->tcfa_action) & TC_ACT_EXT_VAL_MASK;
 }
 
+static inline bool is_tcf_gact_continue(const struct tc_action *a)
+{
+	return __is_tcf_gact_act(a, TC_ACT_UNSPEC, false);
+}
+
+static inline bool is_tcf_gact_reclassify(const struct tc_action *a)
+{
+	return __is_tcf_gact_act(a, TC_ACT_RECLASSIFY, false);
+}
+
+static inline bool is_tcf_gact_pipe(const struct tc_action *a)
+{
+	return __is_tcf_gact_act(a, TC_ACT_PIPE, false);
+}
+
 #endif /* __NET_TC_GACT_H */
* Unmerged path net/sched/act_gact.c
