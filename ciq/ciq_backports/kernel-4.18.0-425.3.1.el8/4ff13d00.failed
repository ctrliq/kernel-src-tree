spi: Reduce kthread priority

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.3.1.el8
commit-author Peter Zijlstra <peterz@infradead.org>
commit 4ff13d00ebd5533947b083c66d44da3243a2d559
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.3.1.el8/4ff13d00.failed

The SPI thingies request FIFO-99 by default, reduce this to FIFO-50.

FIFO-99 is the very highest priority available to SCHED_FIFO and
it not a suitable default; it would indicate the SPI work is the
most important work on the machine.

	Cc: Benson Leung <bleung@chromium.org>
	Cc: Enric Balletbo i Serra <enric.balletbo@collabora.com>
	Cc: Guenter Roeck <groeck@chromium.org>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: linux-spi@vger.kernel.org
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Reviewed-by: Douglas Anderson <dianders@chromium.org>
Link: https://lore.kernel.org/r/20190801111541.917256884@infradead.org
	Signed-off-by: Mark Brown <broonie@kernel.org>
(cherry picked from commit 4ff13d00ebd5533947b083c66d44da3243a2d559)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/platform/chrome/cros_ec_spi.c
diff --cc drivers/platform/chrome/cros_ec_spi.c
index 2060d1483043,714306bc3f79..000000000000
--- a/drivers/platform/chrome/cros_ec_spi.c
+++ b/drivers/platform/chrome/cros_ec_spi.c
@@@ -636,6 -697,40 +636,43 @@@ static void cros_ec_spi_dt_probe(struc
  		ec_spi->end_of_msg_delay = val;
  }
  
++<<<<<<< HEAD
++=======
+ static void cros_ec_spi_high_pri_release(void *worker)
+ {
+ 	kthread_destroy_worker(worker);
+ }
+ 
+ static int cros_ec_spi_devm_high_pri_alloc(struct device *dev,
+ 					   struct cros_ec_spi *ec_spi)
+ {
+ 	struct sched_param sched_priority = {
+ 		.sched_priority = MAX_RT_PRIO / 2,
+ 	};
+ 	int err;
+ 
+ 	ec_spi->high_pri_worker =
+ 		kthread_create_worker(0, "cros_ec_spi_high_pri");
+ 
+ 	if (IS_ERR(ec_spi->high_pri_worker)) {
+ 		err = PTR_ERR(ec_spi->high_pri_worker);
+ 		dev_err(dev, "Can't create cros_ec high pri worker: %d\n", err);
+ 		return err;
+ 	}
+ 
+ 	err = devm_add_action_or_reset(dev, cros_ec_spi_high_pri_release,
+ 				       ec_spi->high_pri_worker);
+ 	if (err)
+ 		return err;
+ 
+ 	err = sched_setscheduler_nocheck(ec_spi->high_pri_worker->task,
+ 					 SCHED_FIFO, &sched_priority);
+ 	if (err)
+ 		dev_err(dev, "Can't set cros_ec high pri priority: %d\n", err);
+ 	return err;
+ }
+ 
++>>>>>>> 4ff13d00ebd5 (spi: Reduce kthread priority)
  static int cros_ec_spi_probe(struct spi_device *spi)
  {
  	struct device *dev = &spi->dev;
* Unmerged path drivers/platform/chrome/cros_ec_spi.c
diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index 5b56f3ac9d2a..f2eb8c2a3f0e 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -1362,7 +1362,7 @@ static void spi_pump_messages(struct kthread_work *work)
 
 static int spi_init_queue(struct spi_controller *ctlr)
 {
-	struct sched_param param = { .sched_priority = MAX_RT_PRIO - 1 };
+	struct sched_param param = { .sched_priority = MAX_RT_PRIO / 2 };
 
 	ctlr->running = false;
 	ctlr->busy = false;
