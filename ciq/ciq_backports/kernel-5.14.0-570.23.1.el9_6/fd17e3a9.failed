media: i2c: Use accessors for pad config 'try_*' fields

jira LE-3428
Rebuild_History Non-Buildable kernel-5.14.0-570.23.1.el9_6
commit-author Laurent Pinchart <laurent.pinchart@ideasonboard.com>
commit fd17e3a9a7886ec949ce269a396b67875b51ff45
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-570.23.1.el9_6/fd17e3a9.failed

The 'try_*' fields of the v4l2_subdev_pad_config structure are meant to
be accessed through helper functions. Replace direct access with usage
of the v4l2_subdev_get_pad_format(), v4l2_subdev_get_pad_crop() and
v4l2_subdev_get_pad_compose() helpers.

	Signed-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
	Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
	Signed-off-by: Mauro Carvalho Chehab <mchehab@kernel.org>
(cherry picked from commit fd17e3a9a7886ec949ce269a396b67875b51ff45)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/media/i2c/ov2680.c
#	drivers/media/i2c/ov6650.c
diff --cc drivers/media/i2c/ov2680.c
index dc9ac628612f,f58fa2eb86ee..000000000000
--- a/drivers/media/i2c/ov2680.c
+++ b/drivers/media/i2c/ov2680.c
@@@ -746,16 -758,13 +746,24 @@@ unlock
  static int ov2680_init_cfg(struct v4l2_subdev *sd,
  			   struct v4l2_subdev_state *sd_state)
  {
 -	struct ov2680_dev *sensor = to_ov2680_dev(sd);
 +	struct v4l2_subdev_format fmt = {
 +		.which = sd_state ? V4L2_SUBDEV_FORMAT_TRY
 +		: V4L2_SUBDEV_FORMAT_ACTIVE,
 +		.format = {
 +			.width = 800,
 +			.height = 600,
 +		}
 +	};
  
++<<<<<<< HEAD
 +	return ov2680_set_fmt(sd, sd_state, &fmt);
++=======
+ 	*v4l2_subdev_get_pad_crop(sd, sd_state, 0) = ov2680_default_crop;
+ 
+ 	ov2680_fill_format(sensor, v4l2_subdev_get_pad_format(sd, sd_state, 0),
+ 			   OV2680_DEFAULT_WIDTH, OV2680_DEFAULT_HEIGHT);
+ 	return 0;
++>>>>>>> fd17e3a9a788 (media: i2c: Use accessors for pad config 'try_*' fields)
  }
  
  static int ov2680_enum_frame_size(struct v4l2_subdev *sd,
diff --cc drivers/media/i2c/ov6650.c
index b224b033cea1,38d21b40f5d8..000000000000
--- a/drivers/media/i2c/ov6650.c
+++ b/drivers/media/i2c/ov6650.c
@@@ -472,9 -472,16 +472,20 @@@ static int ov6650_get_selection(struct 
  {
  	struct i2c_client *client = v4l2_get_subdevdata(sd);
  	struct ov6650 *priv = to_ov6650(client);
 -	struct v4l2_rect *rect;
  
++<<<<<<< HEAD
 +	if (sel->which != V4L2_SUBDEV_FORMAT_ACTIVE)
 +		return -EINVAL;
++=======
+ 	if (sel->which == V4L2_SUBDEV_FORMAT_TRY) {
+ 		/* pre-select try crop rectangle */
+ 		rect = v4l2_subdev_get_pad_crop(sd, sd_state, 0);
+ 
+ 	} else {
+ 		/* pre-select active crop rectangle */
+ 		rect = &priv->rect;
+ 	}
++>>>>>>> fd17e3a9a788 (media: i2c: Use accessors for pad config 'try_*' fields)
  
  	switch (sel->target) {
  	case V4L2_SEL_TGT_CROP_BOUNDS:
@@@ -499,18 -525,32 +510,42 @@@ static int ov6650_set_selection(struct 
  	struct ov6650 *priv = to_ov6650(client);
  	int ret;
  
 -	if (sel->target != V4L2_SEL_TGT_CROP)
 +	if (sel->which != V4L2_SUBDEV_FORMAT_ACTIVE ||
 +	    sel->target != V4L2_SEL_TGT_CROP)
  		return -EINVAL;
  
 -	ov6650_bind_align_crop_rectangle(&sel->r);
 +	v4l_bound_align_image(&sel->r.width, 2, W_CIF, 1,
 +			      &sel->r.height, 2, H_CIF, 1, 0);
 +	v4l_bound_align_image(&sel->r.left, DEF_HSTRT << 1,
 +			      (DEF_HSTRT << 1) + W_CIF - (__s32)sel->r.width, 1,
 +			      &sel->r.top, DEF_VSTRT << 1,
 +			      (DEF_VSTRT << 1) + H_CIF - (__s32)sel->r.height,
 +			      1, 0);
  
++<<<<<<< HEAD
++=======
+ 	if (sel->which == V4L2_SUBDEV_FORMAT_TRY) {
+ 		struct v4l2_rect *crop =
+ 			v4l2_subdev_get_pad_crop(sd, sd_state, 0);
+ 		struct v4l2_mbus_framefmt *mf =
+ 			v4l2_subdev_get_pad_format(sd, sd_state, 0);
+ 		/* detect current pad config scaling factor */
+ 		bool half_scale = !is_unscaled_ok(mf->width, mf->height, crop);
+ 
+ 		/* store new crop rectangle */
+ 		*crop = sel->r;
+ 
+ 		/* adjust frame size */
+ 		mf->width = crop->width >> half_scale;
+ 		mf->height = crop->height >> half_scale;
+ 
+ 		return 0;
+ 	}
+ 
+ 	/* V4L2_SUBDEV_FORMAT_ACTIVE */
+ 
+ 	/* apply new crop rectangle */
++>>>>>>> fd17e3a9a788 (media: i2c: Use accessors for pad config 'try_*' fields)
  	ret = ov6650_reg_write(client, REG_HSTRT, sel->r.left >> 1);
  	if (!ret) {
  		priv->rect.width += priv->rect.left - sel->r.left;
@@@ -699,22 -721,34 +737,40 @@@ static int ov6650_set_fmt(struct v4l2_s
  		break;
  	}
  
++<<<<<<< HEAD
 +	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
 +		/* store media bus format code and frame size in pad config */
 +		sd_state->pads->try_fmt.width = mf->width;
 +		sd_state->pads->try_fmt.height = mf->height;
 +		sd_state->pads->try_fmt.code = mf->code;
++=======
+ 	if (format->which == V4L2_SUBDEV_FORMAT_TRY)
+ 		crop = v4l2_subdev_get_pad_crop(sd, sd_state, 0);
+ 	else
+ 		crop = &priv->rect;
+ 
+ 	half_scale = !is_unscaled_ok(mf->width, mf->height, crop);
+ 
+ 	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
+ 		struct v4l2_mbus_framefmt *try_fmt =
+ 			v4l2_subdev_get_pad_format(sd, sd_state, 0);
+ 
+ 		/* store new mbus frame format code and size in pad config */
+ 		try_fmt->width = crop->width >> half_scale;
+ 		try_fmt->height = crop->height >> half_scale;
+ 		try_fmt->code = mf->code;
++>>>>>>> fd17e3a9a788 (media: i2c: Use accessors for pad config 'try_*' fields)
  
  		/* return default mbus frame format updated with pad config */
  		*mf = ov6650_def_fmt;
- 		mf->width = sd_state->pads->try_fmt.width;
- 		mf->height = sd_state->pads->try_fmt.height;
- 		mf->code = sd_state->pads->try_fmt.code;
+ 		mf->width = try_fmt->width;
+ 		mf->height = try_fmt->height;
+ 		mf->code = try_fmt->code;
  
  	} else {
 -		int ret = 0;
 +		/* apply new media bus format code and frame size */
 +		int ret = ov6650_s_fmt(sd, mf);
  
 -		/* apply new media bus frame format and scaling if changed */
 -		if (mf->code != priv->code || half_scale != priv->half_scale)
 -			ret = ov6650_s_fmt(sd, mf->code, half_scale);
  		if (ret)
  			return ret;
  
diff --git a/drivers/media/i2c/adv7183.c b/drivers/media/i2c/adv7183.c
index 92cafdea3f1f..3587a992907e 100644
--- a/drivers/media/i2c/adv7183.c
+++ b/drivers/media/i2c/adv7183.c
@@ -443,7 +443,7 @@ static int adv7183_set_fmt(struct v4l2_subdev *sd,
 	if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
 		decoder->fmt = *fmt;
 	else
-		sd_state->pads->try_fmt = *fmt;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *fmt;
 	return 0;
 }
 
diff --git a/drivers/media/i2c/imx274.c b/drivers/media/i2c/imx274.c
index 0dce92872176..3738cfc7de1e 100644
--- a/drivers/media/i2c/imx274.c
+++ b/drivers/media/i2c/imx274.c
@@ -1019,8 +1019,8 @@ static int __imx274_change_compose(struct stimx274 *imx274,
 	int best_goodness = INT_MIN;
 
 	if (which == V4L2_SUBDEV_FORMAT_TRY) {
-		cur_crop = &sd_state->pads->try_crop;
-		tgt_fmt = &sd_state->pads->try_fmt;
+		cur_crop = v4l2_subdev_get_pad_crop(&imx274->sd, sd_state, 0);
+		tgt_fmt = v4l2_subdev_get_pad_format(&imx274->sd, sd_state, 0);
 	} else {
 		cur_crop = &imx274->crop;
 		tgt_fmt = &imx274->format;
@@ -1113,7 +1113,7 @@ static int imx274_set_fmt(struct v4l2_subdev *sd,
 	 */
 	fmt->field = V4L2_FIELD_NONE;
 	if (format->which == V4L2_SUBDEV_FORMAT_TRY)
-		sd_state->pads->try_fmt = *fmt;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *fmt;
 	else
 		imx274->format = *fmt;
 
@@ -1144,8 +1144,8 @@ static int imx274_get_selection(struct v4l2_subdev *sd,
 	}
 
 	if (sel->which == V4L2_SUBDEV_FORMAT_TRY) {
-		src_crop = &sd_state->pads->try_crop;
-		src_fmt = &sd_state->pads->try_fmt;
+		src_crop = v4l2_subdev_get_pad_crop(sd, sd_state, 0);
+		src_fmt = v4l2_subdev_get_pad_format(sd, sd_state, 0);
 	} else {
 		src_crop = &imx274->crop;
 		src_fmt = &imx274->format;
@@ -1216,7 +1216,7 @@ static int imx274_set_selection_crop(struct stimx274 *imx274,
 	sel->r = new_crop;
 
 	if (sel->which == V4L2_SUBDEV_FORMAT_TRY)
-		tgt_crop = &sd_state->pads->try_crop;
+		tgt_crop = v4l2_subdev_get_pad_crop(&imx274->sd, sd_state, 0);
 	else
 		tgt_crop = &imx274->crop;
 
diff --git a/drivers/media/i2c/mt9m001.c b/drivers/media/i2c/mt9m001.c
index 9dc87e42a6e6..170e00f90bdf 100644
--- a/drivers/media/i2c/mt9m001.c
+++ b/drivers/media/i2c/mt9m001.c
@@ -411,7 +411,7 @@ static int mt9m001_set_fmt(struct v4l2_subdev *sd,
 
 	if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
 		return mt9m001_s_fmt(sd, fmt, mf);
-	sd_state->pads->try_fmt = *mf;
+	*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 	return 0;
 }
 
diff --git a/drivers/media/i2c/mt9m111.c b/drivers/media/i2c/mt9m111.c
index 9df005746bc4..b0f9891c36f1 100644
--- a/drivers/media/i2c/mt9m111.c
+++ b/drivers/media/i2c/mt9m111.c
@@ -678,7 +678,7 @@ static int mt9m111_set_fmt(struct v4l2_subdev *sd,
 	mf->xfer_func	= V4L2_XFER_FUNC_DEFAULT;
 
 	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
-		sd_state->pads->try_fmt = *mf;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 		return 0;
 	}
 
diff --git a/drivers/media/i2c/mt9t112.c b/drivers/media/i2c/mt9t112.c
index 8d2e3caa9b28..9eac716d3571 100644
--- a/drivers/media/i2c/mt9t112.c
+++ b/drivers/media/i2c/mt9t112.c
@@ -982,7 +982,7 @@ static int mt9t112_set_fmt(struct v4l2_subdev *sd,
 
 	if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
 		return mt9t112_s_fmt(sd, mf);
-	sd_state->pads->try_fmt = *mf;
+	*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 
 	return 0;
 }
diff --git a/drivers/media/i2c/mt9v011.c b/drivers/media/i2c/mt9v011.c
index 7699e64e1127..4a0b0e610206 100644
--- a/drivers/media/i2c/mt9v011.c
+++ b/drivers/media/i2c/mt9v011.c
@@ -358,7 +358,7 @@ static int mt9v011_set_fmt(struct v4l2_subdev *sd,
 
 		set_res(sd);
 	} else {
-		sd_state->pads->try_fmt = *fmt;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *fmt;
 	}
 
 	return 0;
diff --git a/drivers/media/i2c/mt9v111.c b/drivers/media/i2c/mt9v111.c
index 44fb567f95a0..2e8dbb0e016d 100644
--- a/drivers/media/i2c/mt9v111.c
+++ b/drivers/media/i2c/mt9v111.c
@@ -957,7 +957,7 @@ static int mt9v111_set_format(struct v4l2_subdev *subdev,
 static int mt9v111_init_state(struct v4l2_subdev *subdev,
 			      struct v4l2_subdev_state *sd_state)
 {
-	sd_state->pads->try_fmt = mt9v111_def_fmt;
+	*v4l2_subdev_get_pad_format(subdev, sd_state, 0) = mt9v111_def_fmt;
 
 	return 0;
 }
diff --git a/drivers/media/i2c/ov2640.c b/drivers/media/i2c/ov2640.c
index 44ab63348c22..8b45db8e799b 100644
--- a/drivers/media/i2c/ov2640.c
+++ b/drivers/media/i2c/ov2640.c
@@ -996,7 +996,7 @@ static int ov2640_set_fmt(struct v4l2_subdev *sd,
 		/* select format */
 		priv->cfmt_code = mf->code;
 	} else {
-		sd_state->pads->try_fmt = *mf;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 	}
 out:
 	mutex_unlock(&priv->lock);
* Unmerged path drivers/media/i2c/ov2680.c
* Unmerged path drivers/media/i2c/ov6650.c
diff --git a/drivers/media/i2c/ov772x.c b/drivers/media/i2c/ov772x.c
index 78602a2f70b0..3035e9ac0adc 100644
--- a/drivers/media/i2c/ov772x.c
+++ b/drivers/media/i2c/ov772x.c
@@ -1222,7 +1222,7 @@ static int ov772x_set_fmt(struct v4l2_subdev *sd,
 	mf->xfer_func = V4L2_XFER_FUNC_DEFAULT;
 
 	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
-		sd_state->pads->try_fmt = *mf;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 		return 0;
 	}
 
diff --git a/drivers/media/i2c/ov9640.c b/drivers/media/i2c/ov9640.c
index 9f44ed52d164..091ccc7a47ae 100644
--- a/drivers/media/i2c/ov9640.c
+++ b/drivers/media/i2c/ov9640.c
@@ -547,7 +547,7 @@ static int ov9640_set_fmt(struct v4l2_subdev *sd,
 	if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
 		return ov9640_s_fmt(sd, mf);
 
-	sd_state->pads->try_fmt = *mf;
+	*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 
 	return 0;
 }
diff --git a/drivers/media/i2c/rj54n1cb0c.c b/drivers/media/i2c/rj54n1cb0c.c
index 2e4018c26912..d8e7ee7a3fca 100644
--- a/drivers/media/i2c/rj54n1cb0c.c
+++ b/drivers/media/i2c/rj54n1cb0c.c
@@ -1009,7 +1009,7 @@ static int rj54n1_set_fmt(struct v4l2_subdev *sd,
 			      &mf->height, 84, RJ54N1_MAX_HEIGHT, align, 0);
 
 	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
-		sd_state->pads->try_fmt = *mf;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 		return 0;
 	}
 
diff --git a/drivers/media/i2c/saa6752hs.c b/drivers/media/i2c/saa6752hs.c
index a7f043cad149..85514cd83433 100644
--- a/drivers/media/i2c/saa6752hs.c
+++ b/drivers/media/i2c/saa6752hs.c
@@ -595,7 +595,7 @@ static int saa6752hs_set_fmt(struct v4l2_subdev *sd,
 	f->colorspace = V4L2_COLORSPACE_SMPTE170M;
 
 	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
-		sd_state->pads->try_fmt = *f;
+		*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *f;
 		return 0;
 	}
 
diff --git a/drivers/media/i2c/tw9910.c b/drivers/media/i2c/tw9910.c
index 09f5b3986928..230873fc78d4 100644
--- a/drivers/media/i2c/tw9910.c
+++ b/drivers/media/i2c/tw9910.c
@@ -829,7 +829,7 @@ static int tw9910_set_fmt(struct v4l2_subdev *sd,
 	if (format->which == V4L2_SUBDEV_FORMAT_ACTIVE)
 		return tw9910_s_fmt(sd, mf);
 
-	sd_state->pads->try_fmt = *mf;
+	*v4l2_subdev_get_pad_format(sd, sd_state, 0) = *mf;
 
 	return 0;
 }
