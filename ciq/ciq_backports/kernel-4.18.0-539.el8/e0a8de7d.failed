xfs: fix agf/agfl verification on v4 filesystems

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-539.el8
commit-author Dave Chinner <dchinner@redhat.com>
commit e0a8de7da35e5b22b44fa1013ccc0716e17b0c14
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-539.el8/e0a8de7d.failed

When a v4 filesystem has fl_last - fl_first != fl_count, we do not
not detect the corruption and allow the AGF to be used as it if was
fully valid. On V5 filesystems, we reset the AGFL to empty in these
cases and avoid the corruption at a small cost of leaked blocks.

If we don't catch the corruption on V4 filesystems, bad things
happen later when an allocation attempts to trim the free list
and either double-frees stale entries in the AGFl or tries to free
NULLAGBNO entries.

Either way, this is bad. Prevent this from happening by using the
AGFL_NEED_RESET logic for v4 filesysetms, too.

	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
	Signed-off-by: Dave Chinner <david@fromorbit.com>
(cherry picked from commit e0a8de7da35e5b22b44fa1013ccc0716e17b0c14)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_alloc.c
diff --cc fs/xfs/libxfs/xfs_alloc.c
index b934df0ec264,fd3293a8c659..000000000000
--- a/fs/xfs/libxfs/xfs_alloc.c
+++ b/fs/xfs/libxfs/xfs_alloc.c
@@@ -610,13 -656,7 +629,17 @@@ xfs_agfl_verify
  	__be32		*agfl_bno = xfs_buf_to_agfl_bno(bp);
  	int		i;
  
++<<<<<<< HEAD
 +	/*
 +	 * There is no verification of non-crc AGFLs because mkfs does not
 +	 * initialise the AGFL to zero or NULL. Hence the only valid part of the
 +	 * AGFL is what the AGF says is active. We can't get to the AGF, so we
 +	 * can't verify just those entries are valid.
 +	 */
 +	if (!xfs_sb_version_hascrc(&mp->m_sb))
++=======
+ 	if (!xfs_has_crc(mp))
++>>>>>>> e0a8de7da35e (xfs: fix agf/agfl verification on v4 filesystems)
  		return NULL;
  
  	if (!xfs_verify_magic(bp, agfl->agfl_magicnum))
@@@ -2390,10 -2359,6 +2417,13 @@@ xfs_agfl_needs_reset
  	int			agfl_size = xfs_agfl_size(mp);
  	int			active;
  
++<<<<<<< HEAD
 +	/* no agfl header on v4 supers */
 +	if (!xfs_sb_version_hascrc(&mp->m_sb))
 +		return false;
 +
++=======
++>>>>>>> e0a8de7da35e (xfs: fix agf/agfl verification on v4 filesystems)
  	/*
  	 * The agf read verifier catches severe corruption of these fields.
  	 * Repeat some sanity checks to cover a packed -> unpacked mismatch if
* Unmerged path fs/xfs/libxfs/xfs_alloc.c
