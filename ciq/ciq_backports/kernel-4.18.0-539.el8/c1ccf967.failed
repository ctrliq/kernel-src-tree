xfs: fix uninitialized list head in struct xfs_refcount_recovery

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-539.el8
commit-author Darrick J. Wong <djwong@kernel.org>
commit c1ccf967bf962b998f0c096e06a658ece27d10a0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-539.el8/c1ccf967.failed

We're supposed to initialize the list head of an object before adding it
to another list.  Fix that, and stop using the kmem_{alloc,free} calls
from the Irix days.

Fixes: 174edb0e46e5 ("xfs: store in-progress CoW allocations in the refcount btree")
	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
	Reviewed-by: Dave Chinner <dchinner@redhat.com>
(cherry picked from commit c1ccf967bf962b998f0c096e06a658ece27d10a0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_refcount.c
diff --cc fs/xfs/libxfs/xfs_refcount.c
index e13109e87225,44d4667d4301..000000000000
--- a/fs/xfs/libxfs/xfs_refcount.c
+++ b/fs/xfs/libxfs/xfs_refcount.c
@@@ -1778,10 -1767,18 +1778,22 @@@ xfs_refcount_recover_extent
  			   be32_to_cpu(rec->refc.rc_refcount) != 1))
  		return -EFSCORRUPTED;
  
- 	rr = kmem_alloc(sizeof(struct xfs_refcount_recovery), 0);
+ 	rr = kmalloc(sizeof(struct xfs_refcount_recovery),
+ 			GFP_KERNEL | __GFP_NOFAIL);
+ 	INIT_LIST_HEAD(&rr->rr_list);
  	xfs_refcount_btrec_to_irec(rec, &rr->rr_rrec);
++<<<<<<< HEAD
++=======
+ 
+ 	if (XFS_IS_CORRUPT(cur->bc_mp,
+ 			   rr->rr_rrec.rc_domain != XFS_REFC_DOMAIN_COW)) {
+ 		kfree(rr);
+ 		return -EFSCORRUPTED;
+ 	}
+ 
++>>>>>>> c1ccf967bf96 (xfs: fix uninitialized list head in struct xfs_refcount_recovery)
  	list_add_tail(&rr->rr_list, debris);
 +
  	return 0;
  }
  
* Unmerged path fs/xfs/libxfs/xfs_refcount.c
