futex: Don't include process MM in futex key on no-MMU

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-538.el8
commit-author Ben Wolsieffer <ben.wolsieffer@hefring.com>
commit c73801ae4f22b390228ebf471d55668e824198b6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-538.el8/c73801ae.failed

On no-MMU, all futexes are treated as private because there is no need
to map a virtual address to physical to match the futex across
processes. This doesn't quite work though, because private futexes
include the current process's mm_struct as part of their key. This makes
it impossible for one process to wake up a shared futex being waited on
in another process.

Fix this bug by excluding the mm_struct from the key. With
a single address space, the futex address is already a unique key.

Fixes: 784bdf3bb694 ("futex: Assume all mappings are private on !MMU systems")
	Signed-off-by: Ben Wolsieffer <ben.wolsieffer@hefring.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Darren Hart <dvhart@infradead.org>
	Cc: Davidlohr Bueso <dave@stgolabs.net>
	Cc: Andr√© Almeida <andrealmeid@igalia.com>
Link: https://lore.kernel.org/r/20231019204548.1236437-2-ben.wolsieffer@hefring.com
(cherry picked from commit c73801ae4f22b390228ebf471d55668e824198b6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/futex/core.c
* Unmerged path kernel/futex/core.c
* Unmerged path kernel/futex/core.c
