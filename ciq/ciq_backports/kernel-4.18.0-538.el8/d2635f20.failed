mm: create a new system state and fix core_kernel_text()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-538.el8
commit-author Christophe Leroy <christophe.leroy@csgroup.eu>
commit d2635f2012a44e3d469ab9a4022162dbe0e53f21
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-538.el8/d2635f20.failed

core_kernel_text() considers that until system_state in at least
SYSTEM_RUNNING, init memory is valid.

But init memory is freed a few lines before setting SYSTEM_RUNNING, so
we have a small period of time when core_kernel_text() is wrong.

Create an intermediate system state called SYSTEM_FREEING_INIT that is
set before starting freeing init memory, and use it in
core_kernel_text() to report init memory invalid earlier.

Link: https://lkml.kernel.org/r/9ecfdee7dd4d741d172cb93ff1d87f1c58127c9a.1633001016.git.christophe.leroy@csgroup.eu
	Signed-off-by: Christophe Leroy <christophe.leroy@csgroup.eu>
	Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
	Cc: Kefeng Wang <wangkefeng.wang@huawei.com>
	Cc: Benjamin Herrenschmidt <benh@kernel.crashing.org>
	Cc: Paul Mackerras <paulus@ozlabs.org>
	Cc: Heiko Carstens <hca@linux.ibm.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit d2635f2012a44e3d469ab9a4022162dbe0e53f21)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	init/main.c
diff --cc init/main.c
index 2efcb78797a3,767ee2672176..000000000000
--- a/init/main.c
+++ b/init/main.c
@@@ -1087,9 -1501,26 +1087,15 @@@ static int __ref kernel_init(void *unus
  	kernel_init_freeable();
  	/* need to finish all async __init code before freeing the memory */
  	async_synchronize_full();
++<<<<<<< HEAD
++=======
+ 
+ 	system_state = SYSTEM_FREEING_INITMEM;
+ 	kprobe_free_init_mem();
++>>>>>>> d2635f2012a4 (mm: create a new system state and fix core_kernel_text())
  	ftrace_free_init_mem();
 -	kgdb_free_init_mem();
 -	exit_boot_config();
  	free_initmem();
  	mark_readonly();
 -
 -	/*
 -	 * Kernel mappings are now finalized - update the userspace page-table
 -	 * to finalize PTI.
 -	 */
 -	pti_finalize();
 -
  	system_state = SYSTEM_RUNNING;
  	numa_default_policy();
  
diff --git a/include/linux/kernel.h b/include/linux/kernel.h
index ef453b518988..f448aa985302 100644
--- a/include/linux/kernel.h
+++ b/include/linux/kernel.h
@@ -324,6 +324,7 @@ extern bool early_boot_irqs_disabled;
 extern enum system_states {
 	SYSTEM_BOOTING,
 	SYSTEM_SCHEDULING,
+	SYSTEM_FREEING_INITMEM,
 	SYSTEM_RUNNING,
 	SYSTEM_HALT,
 	SYSTEM_POWER_OFF,
* Unmerged path init/main.c
diff --git a/kernel/extable.c b/kernel/extable.c
index 3dcfc97d941d..4eb6f6d1722f 100644
--- a/kernel/extable.c
+++ b/kernel/extable.c
@@ -87,7 +87,7 @@ int notrace core_kernel_text(unsigned long addr)
 	    addr < (unsigned long)_etext)
 		return 1;
 
-	if (system_state < SYSTEM_RUNNING &&
+	if (system_state < SYSTEM_FREEING_INITMEM &&
 	    init_kernel_text(addr))
 		return 1;
 	return 0;
