s390/ap: introduce new AP bus sysfs attribute features

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-514.el8
commit-author Harald Freudenberger <freude@linux.ibm.com>
commit d7b1813af6a589597290cd5f720e138c0a2bf913
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-514.el8/d7b1813a.failed

Introduce a new AP bus sysfs attribute /sys/bus/ap/features
which shows the features from the QCI information.
Currently these feature bits are evaluated:

- QCI S bit is shown as 'APSC'
- QCI N bit is shown as 'APXA'
- QCI C bit is shown as 'QACT'
- QCI R bit is shown as 'RC8A'
- QCI B bit is shown as 'APSB'

	Signed-off-by: Harald Freudenberger <freude@linux.ibm.com>
	Reviewed-by: Tony Krowiak <akrowiak@linux.ibm.com>
	Reviewed-by: Holger Dengler <dengler@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit d7b1813af6a589597290cd5f720e138c0a2bf913)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/ap_bus.c
diff --cc drivers/s390/crypto/ap_bus.c
index fa9838d65c2c,4e1926cf7a3d..000000000000
--- a/drivers/s390/crypto/ap_bus.c
+++ b/drivers/s390/crypto/ap_bus.c
@@@ -1688,23 -1557,59 +1688,67 @@@ static ssize_t bindings_show(struct bus
  
  static BUS_ATTR_RO(bindings);
  
++<<<<<<< HEAD
 +static struct bus_attribute *const ap_bus_attrs[] = {
 +	&bus_attr_ap_domain,
 +	&bus_attr_ap_control_domain_mask,
 +	&bus_attr_ap_usage_domain_mask,
 +	&bus_attr_ap_adapter_mask,
 +	&bus_attr_config_time,
 +	&bus_attr_poll_thread,
 +	&bus_attr_ap_interrupts,
 +	&bus_attr_poll_timeout,
 +	&bus_attr_ap_max_domain_id,
 +	&bus_attr_ap_max_adapter_id,
 +	&bus_attr_apmask,
 +	&bus_attr_aqmask,
 +	&bus_attr_scans,
 +	&bus_attr_bindings,
++=======
+ static ssize_t features_show(struct bus_type *bus, char *buf)
+ {
+ 	int n = 0;
+ 
+ 	if (!ap_qci_info)	/* QCI not supported */
+ 		return sysfs_emit(buf, "-\n");
+ 
+ 	if (ap_qci_info->apsc)
+ 		n += sysfs_emit_at(buf, n, "APSC ");
+ 	if (ap_qci_info->apxa)
+ 		n += sysfs_emit_at(buf, n, "APXA ");
+ 	if (ap_qci_info->qact)
+ 		n += sysfs_emit_at(buf, n, "QACT ");
+ 	if (ap_qci_info->rc8a)
+ 		n += sysfs_emit_at(buf, n, "RC8A ");
+ 	if (ap_qci_info->apsb)
+ 		n += sysfs_emit_at(buf, n, "APSB ");
+ 
+ 	sysfs_emit_at(buf, n == 0 ? 0 : n - 1, "\n");
+ 
+ 	return n;
+ }
+ 
+ static BUS_ATTR_RO(features);
+ 
+ static struct attribute *ap_bus_attrs[] = {
+ 	&bus_attr_ap_domain.attr,
+ 	&bus_attr_ap_control_domain_mask.attr,
+ 	&bus_attr_ap_usage_domain_mask.attr,
+ 	&bus_attr_ap_adapter_mask.attr,
+ 	&bus_attr_config_time.attr,
+ 	&bus_attr_poll_thread.attr,
+ 	&bus_attr_ap_interrupts.attr,
+ 	&bus_attr_poll_timeout.attr,
+ 	&bus_attr_ap_max_domain_id.attr,
+ 	&bus_attr_ap_max_adapter_id.attr,
+ 	&bus_attr_apmask.attr,
+ 	&bus_attr_aqmask.attr,
+ 	&bus_attr_scans.attr,
+ 	&bus_attr_bindings.attr,
+ 	&bus_attr_features.attr,
++>>>>>>> d7b1813af6a5 (s390/ap: introduce new AP bus sysfs attribute features)
  	NULL,
  };
 -ATTRIBUTE_GROUPS(ap_bus);
 -
 -static struct bus_type ap_bus_type = {
 -	.name = "ap",
 -	.bus_groups = ap_bus_groups,
 -	.match = &ap_bus_match,
 -	.uevent = &ap_uevent,
 -	.probe = ap_device_probe,
 -	.remove = ap_device_remove,
 -};
  
  /**
   * ap_select_domain(): Select an AP domain if possible and we haven't
* Unmerged path drivers/s390/crypto/ap_bus.c
