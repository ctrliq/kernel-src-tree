devlink: Notify users when objects are accessible

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Leon Romanovsky <leonro@nvidia.com>
commit cf530217408e3686f7002429769ede59dd931151
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/cf530217.failed

The devlink core code notified users about add/remove objects without
relation if this object can be accessible or not. In this patch we unify
such user visible notifications in one place.

	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cf530217408e3686f7002429769ede59dd931151)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/devlink.c
diff --cc net/core/devlink.c
index 85ceb7c34a71,06edb2f1d21e..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -8945,17 -9029,13 +9015,22 @@@ static void devlink_notify_unregister(s
   *	devlink_register - Register devlink instance
   *
   *	@devlink: devlink
 + *	@dev: parent device
   */
 -void devlink_register(struct devlink *devlink)
 +int devlink_register(struct devlink *devlink, struct device *dev)
  {
 +	WARN_ON(devlink->dev);
 +	devlink->dev = dev;
  	mutex_lock(&devlink_mutex);
++<<<<<<< HEAD
 +	list_add_tail(&devlink->list, &devlink_list);
 +	devlink_notify(devlink, DEVLINK_CMD_NEW);
++=======
+ 	xa_set_mark(&devlinks, devlink->index, DEVLINK_REGISTERED);
+ 	devlink_notify_register(devlink);
++>>>>>>> cf530217408e (devlink: Notify users when objects are accessible)
  	mutex_unlock(&devlink_mutex);
 +	return 0;
  }
  EXPORT_SYMBOL_GPL(devlink_register);
  
@@@ -8972,8 -9052,8 +9047,13 @@@ void devlink_unregister(struct devlink 
  	mutex_lock(&devlink_mutex);
  	WARN_ON(devlink_reload_supported(devlink->ops) &&
  		devlink->reload_enabled);
++<<<<<<< HEAD
 +	devlink_notify(devlink, DEVLINK_CMD_DEL);
 +	list_del(&devlink->list);
++=======
+ 	devlink_notify_unregister(devlink);
+ 	xa_clear_mark(&devlinks, devlink->index, DEVLINK_REGISTERED);
++>>>>>>> cf530217408e (devlink: Notify users when objects are accessible)
  	mutex_unlock(&devlink_mutex);
  }
  EXPORT_SYMBOL_GPL(devlink_unregister);
* Unmerged path net/core/devlink.c
