NFSD: Update the NFSv2 READDIR result encoder to use struct xdr_stream

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 94c8f8c682a6497af7ea71351b18f637c6337d42
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/94c8f8c6.failed

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit 94c8f8c682a6497af7ea71351b18f637c6337d42)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfsxdr.c
diff --cc fs/nfsd/nfsxdr.c
index 0d6a28d055ec,9522e5c5f49d..000000000000
--- a/fs/nfsd/nfsxdr.c
+++ b/fs/nfsd/nfsxdr.c
@@@ -572,17 -574,21 +572,33 @@@ nfssvc_encode_readres(struct svc_rqst *
  int
  nfssvc_encode_readdirres(struct svc_rqst *rqstp, __be32 *p)
  {
+ 	struct xdr_stream *xdr = &rqstp->rq_res_stream;
  	struct nfsd_readdirres *resp = rqstp->rq_resp;
  
++<<<<<<< HEAD
 +	*p++ = resp->status;
 +	if (resp->status != nfs_ok)
 +		return xdr_ressize_check(rqstp, p);
 +
 +	xdr_ressize_check(rqstp, p);
 +	p = resp->buffer;
 +	*p++ = 0;			/* no more entries */
 +	*p++ = htonl((resp->common.err == nfserr_eof));
 +	rqstp->rq_res.page_len = (((unsigned long)p-1) & ~PAGE_MASK)+1;
++=======
+ 	if (!svcxdr_encode_stat(xdr, resp->status))
+ 		return 0;
+ 	switch (resp->status) {
+ 	case nfs_ok:
+ 		xdr_write_pages(xdr, &resp->page, 0, resp->count << 2);
+ 		/* no more entries */
+ 		if (xdr_stream_encode_item_absent(xdr) < 0)
+ 			return 0;
+ 		if (xdr_stream_encode_bool(xdr, resp->common.err == nfserr_eof) < 0)
+ 			return 0;
+ 		break;
+ 	}
++>>>>>>> 94c8f8c682a6 (NFSD: Update the NFSv2 READDIR result encoder to use struct xdr_stream)
  
  	return 1;
  }
* Unmerged path fs/nfsd/nfsxdr.c
diff --git a/fs/nfsd/xdr.h b/fs/nfsd/xdr.h
index d5a6096482b0..3b70e82b6875 100644
--- a/fs/nfsd/xdr.h
+++ b/fs/nfsd/xdr.h
@@ -115,6 +115,7 @@ struct nfsd_readdirres {
 	__be32 *		buffer;
 	int			buflen;
 	__be32 *		offset;
+	struct page		*page;
 };
 
 struct nfsd_statfsres {
