rcu-tasks: Don't delete holdouts within trc_inspect_reader()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit 1d10bf55d85d34eb73dd8263635f43fd72135d2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/1d10bf55.failed

As Yanfei pointed out, although invoking trc_del_holdout() is safe
from the viewpoint of the integrity of the holdout list itself,
the put_task_struct() invoked by trc_del_holdout() can result in
use-after-free errors due to later accesses to this task_struct structure
by the RCU Tasks Trace grace-period kthread.

This commit therefore removes this call to trc_del_holdout() from
trc_inspect_reader() in favor of the grace-period thread's existing call
to trc_del_holdout(), thus eliminating that particular class of
use-after-free errors.

	Reported-by: "Xu, Yanfei" <yanfei.xu@windriver.com>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit 1d10bf55d85d34eb73dd8263635f43fd72135d2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tasks.h
diff --cc kernel/rcu/tasks.h
index d5009760436d,3d5cb6cb8a6d..000000000000
--- a/kernel/rcu/tasks.h
+++ b/kernel/rcu/tasks.h
@@@ -917,13 -950,12 +917,19 @@@ static bool trc_inspect_reader(struct t
  			n_heavy_reader_ofl_updates++;
  		in_qs = true;
  	} else {
 -		in_qs = likely(!t->trc_reader_nesting);
 +		in_qs = likely(!t_rh->trc_reader_nesting);
  	}
  
++<<<<<<< HEAD
 +	// Mark as checked.  Because this is called from the grace-period
 +	// kthread, also remove the task from the holdout list.
 +	t_rh->trc_reader_checked = true;
 +	trc_del_holdout(t);
++=======
+ 	// Mark as checked so that the grace-period kthread will
+ 	// remove it from the holdout list.
+ 	t->trc_reader_checked = true;
++>>>>>>> 1d10bf55d85d (rcu-tasks: Don't delete holdouts within trc_inspect_reader())
  
  	if (in_qs)
  		return true;  // Already in quiescent state, done!!!
* Unmerged path kernel/rcu/tasks.h
