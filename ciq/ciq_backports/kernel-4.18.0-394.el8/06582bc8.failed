block: loop:use kstatfs.f_bsize of backing file to set discard granularity

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Ming Lei <ming.lei@redhat.com>
commit 06582bc86d7f48d35cd044098ca1e246e8c7c52e
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/06582bc8.failed

If backing file's filesystem has implemented ->fallocate(), we think the
loop device can support discard, then pass sb->s_blocksize as
discard_granularity. However, some underlying FS, such as overlayfs,
doesn't set sb->s_blocksize, and causes discard_granularity to be set as
zero, then the warning in __blkdev_issue_discard() is triggered.

Christoph suggested to pass kstatfs.f_bsize as discard granularity, and
this way is fine because kstatfs.f_bsize means 'Optimal transfer block
size', which still matches with definition of discard granularity.

So fix the issue by setting discard_granularity as kstatfs.f_bsize if it
is available, otherwise claims discard isn't supported.

	Cc: Christoph Hellwig <hch@lst.de>
	Cc: Vivek Goyal <vgoyal@redhat.com>
	Reported-by: Pei Zhang <pezhang@redhat.com>
	Signed-off-by: Ming Lei <ming.lei@redhat.com>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20220126035830.296465-1-ming.lei@redhat.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit 06582bc86d7f48d35cd044098ca1e246e8c7c52e)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/block/loop.c
diff --cc drivers/block/loop.c
index d6f65ba4bf0a,19fe19eaa50e..000000000000
--- a/drivers/block/loop.c
+++ b/drivers/block/loop.c
@@@ -78,6 -78,8 +78,11 @@@
  #include <linux/uio.h>
  #include <linux/ioprio.h>
  #include <linux/blk-cgroup.h>
++<<<<<<< HEAD
++=======
+ #include <linux/sched/mm.h>
+ #include <linux/statfs.h>
++>>>>>>> 06582bc86d7f (block: loop:use kstatfs.f_bsize of backing file to set discard granularity)
  
  #include "loop.h"
  
* Unmerged path drivers/block/loop.c
