kernel/locking: Use a pointer in ww_mutex_trylock().

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Sebastian Andrzej Siewior <bigeasy@linutronix.de>
commit 2202e15b2b1a946ce760d96748cd7477589701ab
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/2202e15b.failed

mutex_acquire_nest() expects a pointer, pass the pointer.

Fixes: 12235da8c80a1 ("kernel/locking: Add context to ww_mutex_trylock()")
	Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lkml.kernel.org/r/20211104122706.frk52zxbjorso2kv@linutronix.de
(cherry picked from commit 2202e15b2b1a946ce760d96748cd7477589701ab)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/locking/ww_rt_mutex.c
diff --cc kernel/locking/ww_rt_mutex.c
index 3f1fff7d2780,d1473c624105..000000000000
--- a/kernel/locking/ww_rt_mutex.c
+++ b/kernel/locking/ww_rt_mutex.c
@@@ -9,6 -9,31 +9,34 @@@
  #define WW_RT
  #include "rtmutex.c"
  
++<<<<<<< HEAD
++=======
+ int ww_mutex_trylock(struct ww_mutex *lock, struct ww_acquire_ctx *ww_ctx)
+ {
+ 	struct rt_mutex *rtm = &lock->base;
+ 
+ 	if (!ww_ctx)
+ 		return rt_mutex_trylock(rtm);
+ 
+ 	/*
+ 	 * Reset the wounded flag after a kill. No other process can
+ 	 * race and wound us here, since they can't have a valid owner
+ 	 * pointer if we don't have any locks held.
+ 	 */
+ 	if (ww_ctx->acquired == 0)
+ 		ww_ctx->wounded = 0;
+ 
+ 	if (__rt_mutex_trylock(&rtm->rtmutex)) {
+ 		ww_mutex_set_context_fastpath(lock, ww_ctx);
+ 		mutex_acquire_nest(&rtm->dep_map, 0, 1, &ww_ctx->dep_map, _RET_IP_);
+ 		return 1;
+ 	}
+ 
+ 	return 0;
+ }
+ EXPORT_SYMBOL(ww_mutex_trylock);
+ 
++>>>>>>> 2202e15b2b1a (kernel/locking: Use a pointer in ww_mutex_trylock().)
  static int __sched
  __ww_rt_mutex_lock(struct ww_mutex *lock, struct ww_acquire_ctx *ww_ctx,
  		   unsigned int state, unsigned long ip)
* Unmerged path kernel/locking/ww_rt_mutex.c
