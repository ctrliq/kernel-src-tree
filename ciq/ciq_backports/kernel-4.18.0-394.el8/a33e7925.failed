scsi: qedf: Stop using the SCSI pointer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Bart Van Assche <bvanassche@acm.org>
commit a33e7925b5e61f9de1c5cc59d1a92569665fdfe5
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/a33e7925.failed

Set .cmd_size in the SCSI host template instead of using the SCSI pointer
from struct scsi_cmnd. Remove the CMD_SCSI_STATUS() assignment because the
assigned value is not used.

This patch prepares for removal of the SCSI pointer from struct scsi_cmnd.

Link: https://lore.kernel.org/r/20220218195117.25689-30-bvanassche@acm.org
	Reviewed-by: Hannes Reinecke <hare@suse.de>
	Signed-off-by: Bart Van Assche <bvanassche@acm.org>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit a33e7925b5e61f9de1c5cc59d1a92569665fdfe5)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qedf/qedf_io.c
diff --cc drivers/scsi/qedf/qedf_io.c
index 30ec7f2ef5d4,2ec1f710fd1d..000000000000
--- a/drivers/scsi/qedf/qedf_io.c
+++ b/drivers/scsi/qedf/qedf_io.c
@@@ -1318,8 -1311,8 +1317,13 @@@ out
  	clear_bit(QEDF_CMD_OUTSTANDING, &io_req->flags);
  
  	io_req->sc_cmd = NULL;
++<<<<<<< HEAD
 +	sc_cmd->SCp.ptr =  NULL;
 +	sc_cmd->scsi_done(sc_cmd);
++=======
+ 	qedf_priv(sc_cmd)->io_req =  NULL;
+ 	scsi_done(sc_cmd);
++>>>>>>> a33e7925b5e6 (scsi: qedf: Stop using the SCSI pointer)
  	kref_put(&io_req->refcount, qedf_release_cmd);
  }
  
@@@ -1422,8 -1408,8 +1426,13 @@@ void qedf_scsi_done(struct qedf_ctx *qe
  		qedf_trace_io(io_req->fcport, io_req, QEDF_IO_TRACE_RSP);
  
  	io_req->sc_cmd = NULL;
++<<<<<<< HEAD
 +	sc_cmd->SCp.ptr = NULL;
 +	sc_cmd->scsi_done(sc_cmd);
++=======
+ 	qedf_priv(sc_cmd)->io_req = NULL;
+ 	scsi_done(sc_cmd);
++>>>>>>> a33e7925b5e6 (scsi: qedf: Stop using the SCSI pointer)
  	kref_put(&io_req->refcount, qedf_release_cmd);
  	return;
  
diff --git a/drivers/scsi/qedf/qedf.h b/drivers/scsi/qedf/qedf.h
index 631a15969d21..873dc4c40faa 100644
--- a/drivers/scsi/qedf/qedf.h
+++ b/drivers/scsi/qedf/qedf.h
@@ -91,7 +91,6 @@ enum qedf_ioreq_event {
 #define FC_GOOD		0
 #define FCOE_FCP_RSP_FLAGS_FCP_RESID_OVER	(0x1<<2)
 #define FCOE_FCP_RSP_FLAGS_FCP_RESID_UNDER	(0x1<<3)
-#define CMD_SCSI_STATUS(Cmnd)			((Cmnd)->SCp.Status)
 #define FCOE_FCP_RSP_FLAGS_FCP_RSP_LEN_VALID	(0x1<<0)
 #define FCOE_FCP_RSP_FLAGS_FCP_SNS_LEN_VALID	(0x1<<1)
 struct qedf_ioreq {
@@ -189,6 +188,15 @@ struct qedf_ioreq {
 	unsigned int alloc;
 };
 
+struct qedf_cmd_priv {
+	struct qedf_ioreq *io_req;
+};
+
+static inline struct qedf_cmd_priv *qedf_priv(struct scsi_cmnd *cmd)
+{
+	return scsi_cmd_priv(cmd);
+}
+
 extern struct workqueue_struct *qedf_io_wq;
 
 struct qedf_rport {
* Unmerged path drivers/scsi/qedf/qedf_io.c
diff --git a/drivers/scsi/qedf/qedf_main.c b/drivers/scsi/qedf/qedf_main.c
index ec566a0143f0..b7b22db482fc 100644
--- a/drivers/scsi/qedf/qedf_main.c
+++ b/drivers/scsi/qedf/qedf_main.c
@@ -740,7 +740,7 @@ static int qedf_eh_abort(struct scsi_cmnd *sc_cmd)
 	}
 
 
-	io_req = (struct qedf_ioreq *)sc_cmd->SCp.ptr;
+	io_req = qedf_priv(sc_cmd)->io_req;
 	if (!io_req) {
 		QEDF_ERR(&qedf->dbg_ctx,
 			 "sc_cmd not queued with lld, sc_cmd=%p op=0x%02x, port_id=%06x\n",
@@ -997,6 +997,7 @@ static struct scsi_host_template qedf_host_template = {
 	.sg_tablesize = QEDF_MAX_BDS_PER_CMD,
 	.can_queue = FCOE_PARAMS_NUM_TASKS,
 	.change_queue_depth = scsi_change_queue_depth,
+	.cmd_size = sizeof(struct qedf_cmd_priv),
 };
 
 static int qedf_get_paged_crc_eof(struct sk_buff *skb, int tlen)
