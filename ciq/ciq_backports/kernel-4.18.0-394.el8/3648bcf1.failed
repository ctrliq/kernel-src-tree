scsi: qla2xxx: Increase max limit of ql2xnvme_queues

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Shreyas Deodhar <sdeodhar@marvell.com>
commit 3648bcf1c1374e9f42d241d83e2e50c0ef07a852
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/3648bcf1.failed

Increase max limit of ql2xnvme_queues to (max_qpair - 1).

Link: https://lore.kernel.org/r/20220310092604.22950-13-njavali@marvell.com
Fixes: 65120de26a54 ("scsi: qla2xxx: Add ql2xnvme_queues module param to configure number of NVMe queues")
	Cc: stable@vger.kernel.org
	Reviewed-by: Himanshu Madhani <himanshu.madhani@oracle.com>
	Signed-off-by: Shreyas Deodhar <sdeodhar@marvell.com>
	Signed-off-by: Nilesh Javali <njavali@marvell.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit 3648bcf1c1374e9f42d241d83e2e50c0ef07a852)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/scsi/qla2xxx/qla_nvme.c
#	drivers/scsi/qla2xxx/qla_nvme.h
#	drivers/scsi/qla2xxx/qla_os.c
diff --cc drivers/scsi/qla2xxx/qla_nvme.c
index 1339a672e2ad,87c9404aa401..000000000000
--- a/drivers/scsi/qla2xxx/qla_nvme.c
+++ b/drivers/scsi/qla2xxx/qla_nvme.c
@@@ -795,11 -799,26 +795,30 @@@ int qla_nvme_register_hba(struct scsi_q
  	ha = vha->hw;
  	tmpl = &qla_nvme_fc_transport;
  
++<<<<<<< HEAD
 +	WARN_ON(vha->nvme_local_port);
 +
 +	qla_nvme_fc_transport.max_hw_queues =
 +	    min((uint8_t)(qla_nvme_fc_transport.max_hw_queues),
 +		(uint8_t)(ha->max_qpairs ? ha->max_qpairs : 1));
++=======
+ 	if (ql2xnvme_queues < MIN_NVME_HW_QUEUES) {
+ 		ql_log(ql_log_warn, vha, 0xfffd,
+ 		    "ql2xnvme_queues=%d is lower than minimum queues: %d. Resetting ql2xnvme_queues to:%d\n",
+ 		    ql2xnvme_queues, MIN_NVME_HW_QUEUES, DEF_NVME_HW_QUEUES);
+ 		ql2xnvme_queues = DEF_NVME_HW_QUEUES;
+ 	} else if (ql2xnvme_queues > (ha->max_qpairs - 1)) {
+ 		ql_log(ql_log_warn, vha, 0xfffd,
+ 		       "ql2xnvme_queues=%d is greater than available IRQs: %d. Resetting ql2xnvme_queues to: %d\n",
+ 		       ql2xnvme_queues, (ha->max_qpairs - 1),
+ 		       (ha->max_qpairs - 1));
+ 		ql2xnvme_queues = ((ha->max_qpairs - 1));
+ 	}
+ 
+ 	qla_nvme_fc_transport.max_hw_queues =
+ 	    min((uint8_t)(ql2xnvme_queues),
+ 		(uint8_t)((ha->max_qpairs - 1) ? (ha->max_qpairs - 1) : 1));
 -
 -	ql_log(ql_log_info, vha, 0xfffb,
 -	       "Number of NVME queues used for this port: %d\n",
 -	    qla_nvme_fc_transport.max_hw_queues);
++>>>>>>> 3648bcf1c137 (scsi: qla2xxx: Increase max limit of ql2xnvme_queues)
  
  	pinfo.node_name = wwn_to_u64(vha->node_name);
  	pinfo.port_name = wwn_to_u64(vha->port_name);
diff --cc drivers/scsi/qla2xxx/qla_nvme.h
index 5d5f115a77c3,d299478371b2..000000000000
--- a/drivers/scsi/qla2xxx/qla_nvme.h
+++ b/drivers/scsi/qla2xxx/qla_nvme.h
@@@ -14,6 -13,9 +14,12 @@@
  #include "qla_def.h"
  #include "qla_dsd.h"
  
++<<<<<<< HEAD
++=======
+ #define MIN_NVME_HW_QUEUES 1
+ #define DEF_NVME_HW_QUEUES 8
+ 
++>>>>>>> 3648bcf1c137 (scsi: qla2xxx: Increase max limit of ql2xnvme_queues)
  #define NVME_ATIO_CMD_OFF 32
  #define NVME_FIRST_PACKET_CMDLEN (64 - NVME_ATIO_CMD_OFF)
  #define Q2T_NVME_NUM_TAGS 2048
diff --cc drivers/scsi/qla2xxx/qla_os.c
index 811b433558bd,762229d495a8..000000000000
--- a/drivers/scsi/qla2xxx/qla_os.c
+++ b/drivers/scsi/qla2xxx/qla_os.c
@@@ -339,6 -338,14 +339,17 @@@ static void qla2x00_free_device(scsi_ql
  static int qla2xxx_map_queues(struct Scsi_Host *shost);
  static void qla2x00_destroy_deferred_work(struct qla_hw_data *);
  
++<<<<<<< HEAD
++=======
+ u32 ql2xnvme_queues = DEF_NVME_HW_QUEUES;
+ module_param(ql2xnvme_queues, uint, S_IRUGO);
+ MODULE_PARM_DESC(ql2xnvme_queues,
+ 	"Number of NVMe Queues that can be configured.\n"
+ 	"Final value will be min(ql2xnvme_queues, num_cpus,num_chip_queues)\n"
+ 	"1 - Minimum number of queues supported\n"
+ 	"8 - Default value");
+ 
++>>>>>>> 3648bcf1c137 (scsi: qla2xxx: Increase max limit of ql2xnvme_queues)
  static struct scsi_transport_template *qla2xxx_transport_template = NULL;
  struct scsi_transport_template *qla2xxx_transport_vport_template = NULL;
  
* Unmerged path drivers/scsi/qla2xxx/qla_nvme.c
* Unmerged path drivers/scsi/qla2xxx/qla_nvme.h
* Unmerged path drivers/scsi/qla2xxx/qla_os.c
