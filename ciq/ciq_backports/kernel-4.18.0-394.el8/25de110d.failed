irq_work: Define irq_work_single() on !CONFIG_IRQ_WORK too

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Ingo Molnar <mingo@kernel.org>
commit 25de110d148666752dc0e0da7a0b69de31cd7098
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/25de110d.failed

Some SMP platforms don't have CONFIG_IRQ_WORK defined, resulting in a link
error at build time.

Define a stub and clean up the prototype definitions.

	Reported-by: kbuild test robot <lkp@intel.com>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
	Acked-by: Peter Zijlstra <peterz@infradead.org>
	Cc: linux-kernel@vger.kernel.org
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
(cherry picked from commit 25de110d148666752dc0e0da7a0b69de31cd7098)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/smp.c
diff --cc kernel/smp.c
index db3e44b3aed3,c80486a7e3b8..000000000000
--- a/kernel/smp.c
+++ b/kernel/smp.c
@@@ -191,16 -192,8 +191,19 @@@ static int generic_exec_single(int cpu
  void generic_smp_call_function_single_interrupt(void)
  {
  	flush_smp_call_function_queue(true);
 +
++<<<<<<< HEAD
 +	/*
 +	 * Handle irq works queued remotely by irq_work_queue_on().
 +	 * Smp functions above are typically synchronous so they
 +	 * better run first since some other CPUs may be busy waiting
 +	 * for them.
 +	 */
 +	irq_work_run();
  }
  
++=======
++>>>>>>> 25de110d1486 (irq_work: Define irq_work_single() on !CONFIG_IRQ_WORK too)
  /**
   * flush_smp_call_function_queue - Flush pending smp-call-function callbacks
   *
diff --git a/include/linux/irq_work.h b/include/linux/irq_work.h
index 52859a85ce23..f50badd47308 100644
--- a/include/linux/irq_work.h
+++ b/include/linux/irq_work.h
@@ -54,9 +54,11 @@ void irq_work_sync(struct irq_work *work);
 
 void irq_work_run(void);
 bool irq_work_needs_cpu(void);
+void irq_work_single(void *arg);
 #else
 static inline bool irq_work_needs_cpu(void) { return false; }
 static inline void irq_work_run(void) { }
+static inline void irq_work_single(void *arg) { }
 #endif
 
 #endif /* _LINUX_IRQ_WORK_H */
* Unmerged path kernel/smp.c
