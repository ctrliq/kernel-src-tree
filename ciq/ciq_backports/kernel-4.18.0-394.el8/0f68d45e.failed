lib, stackdepot: add helper to print stack entries into buffer

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Imran Khan <imran.f.khan@oracle.com>
commit 0f68d45ef41abb618a9ca33996348ae73800a106
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/0f68d45e.failed

To print stack entries into a buffer, users of stackdepot, first get a
list of stack entries using stack_depot_fetch and then print this list
into a buffer using stack_trace_snprint.  Provide a helper in stackdepot
for this purpose.  Also change above mentioned users to use this helper.

[imran.f.khan@oracle.com: fix build error]
  Link: https://lkml.kernel.org/r/20210915175321.3472770-4-imran.f.khan@oracle.com
[imran.f.khan@oracle.com: export stack_depot_snprint() to modules]
  Link: https://lkml.kernel.org/r/20210916133535.3592491-4-imran.f.khan@oracle.com

Link: https://lkml.kernel.org/r/20210915014806.3206938-4-imran.f.khan@oracle.com
	Signed-off-by: Imran Khan <imran.f.khan@oracle.com>
	Suggested-by: Vlastimil Babka <vbabka@suse.cz>
	Acked-by: Vlastimil Babka <vbabka@suse.cz>
	Acked-by: Jani Nikula <jani.nikula@intel.com>	[i915]
	Cc: Alexander Potapenko <glider@google.com>
	Cc: Andrey Konovalov <andreyknvl@gmail.com>
	Cc: Andrey Ryabinin <ryabinin.a.a@gmail.com>
	Cc: Daniel Vetter <daniel@ffwll.ch>
	Cc: David Airlie <airlied@linux.ie>
	Cc: Dmitry Vyukov <dvyukov@google.com>
	Cc: Geert Uytterhoeven <geert@linux-m68k.org>
	Cc: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
	Cc: Maxime Ripard <mripard@kernel.org>
	Cc: Thomas Zimmermann <tzimmermann@suse.de>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 0f68d45ef41abb618a9ca33996348ae73800a106)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/stackdepot.h
#	lib/stackdepot.c
diff --cc include/linux/stackdepot.h
index 93144d111c09,c34b55a6e554..000000000000
--- a/include/linux/stackdepot.h
+++ b/include/linux/stackdepot.h
@@@ -33,6 -25,18 +33,22 @@@ depot_stack_handle_t stack_depot_save(u
  unsigned int stack_depot_fetch(depot_stack_handle_t handle,
  			       unsigned long **entries);
  
++<<<<<<< HEAD
 +unsigned int filter_irq_stacks(unsigned long *entries, unsigned int nr_entries);
++=======
+ int stack_depot_snprint(depot_stack_handle_t handle, char *buf, size_t size,
+ 		       int spaces);
+ 
+ void stack_depot_print(depot_stack_handle_t stack);
+ 
+ #ifdef CONFIG_STACKDEPOT
+ int stack_depot_init(void);
+ #else
+ static inline int stack_depot_init(void)
+ {
+ 	return 0;
+ }
+ #endif	/* CONFIG_STACKDEPOT */
++>>>>>>> 0f68d45ef41a (lib, stackdepot: add helper to print stack entries into buffer)
  
  #endif
diff --cc lib/stackdepot.c
index 692b731d9b52,b437ae79aca1..000000000000
--- a/lib/stackdepot.c
+++ b/lib/stackdepot.c
@@@ -200,6 -214,49 +200,52 @@@ static inline struct stack_record *find
  }
  
  /**
++<<<<<<< HEAD
++=======
+  * stack_depot_snprint - print stack entries from a depot into a buffer
+  *
+  * @handle:	Stack depot handle which was returned from
+  *		stack_depot_save().
+  * @buf:	Pointer to the print buffer
+  *
+  * @size:	Size of the print buffer
+  *
+  * @spaces:	Number of leading spaces to print
+  *
+  * Return:	Number of bytes printed.
+  */
+ int stack_depot_snprint(depot_stack_handle_t handle, char *buf, size_t size,
+ 		       int spaces)
+ {
+ 	unsigned long *entries;
+ 	unsigned int nr_entries;
+ 
+ 	nr_entries = stack_depot_fetch(handle, &entries);
+ 	return nr_entries ? stack_trace_snprint(buf, size, entries, nr_entries,
+ 						spaces) : 0;
+ }
+ EXPORT_SYMBOL_GPL(stack_depot_snprint);
+ 
+ /**
+  * stack_depot_print - print stack entries from a depot
+  *
+  * @stack:		Stack depot handle which was returned from
+  *			stack_depot_save().
+  *
+  */
+ void stack_depot_print(depot_stack_handle_t stack)
+ {
+ 	unsigned long *entries;
+ 	unsigned int nr_entries;
+ 
+ 	nr_entries = stack_depot_fetch(stack, &entries);
+ 	if (nr_entries > 0)
+ 		stack_trace_print(entries, nr_entries, 0);
+ }
+ EXPORT_SYMBOL_GPL(stack_depot_print);
+ 
+ /**
++>>>>>>> 0f68d45ef41a (lib, stackdepot: add helper to print stack entries into buffer)
   * stack_depot_fetch - Fetch stack entries from a depot
   *
   * @handle:		Stack depot handle which was returned from
diff --git a/drivers/gpu/drm/drm_dp_mst_topology.c b/drivers/gpu/drm/drm_dp_mst_topology.c
index 86d13d6bc463..2d1adab9e360 100644
--- a/drivers/gpu/drm/drm_dp_mst_topology.c
+++ b/drivers/gpu/drm/drm_dp_mst_topology.c
@@ -1668,13 +1668,10 @@ __dump_topology_ref_history(struct drm_dp_mst_topology_ref_history *history,
 	for (i = 0; i < history->len; i++) {
 		const struct drm_dp_mst_topology_ref_entry *entry =
 			&history->entries[i];
-		ulong *entries;
-		uint nr_entries;
 		u64 ts_nsec = entry->ts_nsec;
 		u32 rem_nsec = do_div(ts_nsec, 1000000000);
 
-		nr_entries = stack_depot_fetch(entry->backtrace, &entries);
-		stack_trace_snprint(buf, PAGE_SIZE, entries, nr_entries, 4);
+		stack_depot_snprint(entry->backtrace, buf, PAGE_SIZE, 4);
 
 		drm_printf(&p, "  %d %ss (last at %5llu.%06u):\n%s",
 			   entry->count,
diff --git a/drivers/gpu/drm/drm_mm.c b/drivers/gpu/drm/drm_mm.c
index a4a04d246135..6db626ea765c 100644
--- a/drivers/gpu/drm/drm_mm.c
+++ b/drivers/gpu/drm/drm_mm.c
@@ -118,8 +118,6 @@ static noinline void save_stack(struct drm_mm_node *node)
 static void show_leaks(struct drm_mm *mm)
 {
 	struct drm_mm_node *node;
-	unsigned long *entries;
-	unsigned int nr_entries;
 	char *buf;
 
 	buf = kmalloc(BUFSZ, GFP_KERNEL);
@@ -133,8 +131,7 @@ static void show_leaks(struct drm_mm *mm)
 			continue;
 		}
 
-		nr_entries = stack_depot_fetch(node->stack, &entries);
-		stack_trace_snprint(buf, BUFSZ, entries, nr_entries, 0);
+		stack_depot_snprint(node->stack, buf, BUFSZ, 0);
 		DRM_ERROR("node [%08llx + %08llx]: inserted at\n%s",
 			  node->start, node->size, buf);
 	}
diff --git a/drivers/gpu/drm/i915/i915_vma.c b/drivers/gpu/drm/i915/i915_vma.c
index ba01e4957d38..e58ce1ef9dc7 100644
--- a/drivers/gpu/drm/i915/i915_vma.c
+++ b/drivers/gpu/drm/i915/i915_vma.c
@@ -60,8 +60,6 @@ void i915_vma_free(struct i915_vma *vma)
 
 static void vma_print_allocator(struct i915_vma *vma, const char *reason)
 {
-	unsigned long *entries;
-	unsigned int nr_entries;
 	char buf[512];
 
 	if (!vma->node.stack) {
@@ -70,8 +68,7 @@ static void vma_print_allocator(struct i915_vma *vma, const char *reason)
 		return;
 	}
 
-	nr_entries = stack_depot_fetch(vma->node.stack, &entries);
-	stack_trace_snprint(buf, sizeof(buf), entries, nr_entries, 0);
+	stack_depot_snprint(vma->node.stack, buf, sizeof(buf), 0);
 	DRM_DEBUG_DRIVER("vma.node [%08llx + %08llx] %s: inserted at %s\n",
 			 vma->node.start, vma->node.size, reason, buf);
 }
diff --git a/drivers/gpu/drm/i915/intel_runtime_pm.c b/drivers/gpu/drm/i915/intel_runtime_pm.c
index eaf7688f517d..0d85f3c5c526 100644
--- a/drivers/gpu/drm/i915/intel_runtime_pm.c
+++ b/drivers/gpu/drm/i915/intel_runtime_pm.c
@@ -65,16 +65,6 @@ static noinline depot_stack_handle_t __save_depot_stack(void)
 	return stack_depot_save(entries, n, GFP_NOWAIT | __GFP_NOWARN);
 }
 
-static void __print_depot_stack(depot_stack_handle_t stack,
-				char *buf, int sz, int indent)
-{
-	unsigned long *entries;
-	unsigned int nr_entries;
-
-	nr_entries = stack_depot_fetch(stack, &entries);
-	stack_trace_snprint(buf, sz, entries, nr_entries, indent);
-}
-
 static void init_intel_runtime_pm_wakeref(struct intel_runtime_pm *rpm)
 {
 	spin_lock_init(&rpm->debug.lock);
@@ -146,12 +136,12 @@ static void untrack_intel_runtime_pm_wakeref(struct intel_runtime_pm *rpm,
 		if (!buf)
 			return;
 
-		__print_depot_stack(stack, buf, PAGE_SIZE, 2);
+		stack_depot_snprint(stack, buf, PAGE_SIZE, 2);
 		DRM_DEBUG_DRIVER("wakeref %x from\n%s", stack, buf);
 
 		stack = READ_ONCE(rpm->debug.last_release);
 		if (stack) {
-			__print_depot_stack(stack, buf, PAGE_SIZE, 2);
+			stack_depot_snprint(stack, buf, PAGE_SIZE, 2);
 			DRM_DEBUG_DRIVER("wakeref last released at\n%s", buf);
 		}
 
@@ -183,12 +173,12 @@ __print_intel_runtime_pm_wakeref(struct drm_printer *p,
 		return;
 
 	if (dbg->last_acquire) {
-		__print_depot_stack(dbg->last_acquire, buf, PAGE_SIZE, 2);
+		stack_depot_snprint(dbg->last_acquire, buf, PAGE_SIZE, 2);
 		drm_printf(p, "Wakeref last acquired:\n%s", buf);
 	}
 
 	if (dbg->last_release) {
-		__print_depot_stack(dbg->last_release, buf, PAGE_SIZE, 2);
+		stack_depot_snprint(dbg->last_release, buf, PAGE_SIZE, 2);
 		drm_printf(p, "Wakeref last released:\n%s", buf);
 	}
 
@@ -203,7 +193,7 @@ __print_intel_runtime_pm_wakeref(struct drm_printer *p,
 		rep = 1;
 		while (i + 1 < dbg->count && dbg->owners[i + 1] == stack)
 			rep++, i++;
-		__print_depot_stack(stack, buf, PAGE_SIZE, 2);
+		stack_depot_snprint(stack, buf, PAGE_SIZE, 2);
 		drm_printf(p, "Wakeref x%lu taken at:\n%s", rep, buf);
 	}
 
* Unmerged path include/linux/stackdepot.h
* Unmerged path lib/stackdepot.c
diff --git a/mm/page_owner.c b/mm/page_owner.c
index 2da0e96ddc7e..572859970ca3 100644
--- a/mm/page_owner.c
+++ b/mm/page_owner.c
@@ -333,8 +333,6 @@ print_page_owner(char __user *buf, size_t count, unsigned long pfn,
 		depot_stack_handle_t handle)
 {
 	int ret, pageblock_mt, page_mt;
-	unsigned long *entries;
-	unsigned int nr_entries;
 	char *kbuf;
 
 	count = min_t(size_t, count, PAGE_SIZE);
@@ -365,8 +363,7 @@ print_page_owner(char __user *buf, size_t count, unsigned long pfn,
 	if (ret >= count)
 		goto err;
 
-	nr_entries = stack_depot_fetch(handle, &entries);
-	ret += stack_trace_snprint(kbuf + ret, count - ret, entries, nr_entries, 0);
+	ret += stack_depot_snprint(handle, kbuf + ret, count - ret, 0);
 	if (ret >= count)
 		goto err;
 
