rcu: Add ->rt_priority and ->gp_start to show_rcu_gp_kthreads() output

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Paul E. McKenney <paulmck@kernel.org>
commit e44111ed20d8b2d7b05b20d694358ae77d4e93e2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/e44111ed.failed

This commit adds ->rt_priority and ->gp_start to show_rcu_gp_kthreads()
output in order to better diagnose RCU priority boosting failures.

	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit e44111ed20d8b2d7b05b20d694358ae77d4e93e2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/rcu/tree_stall.h
diff --cc kernel/rcu/tree_stall.h
index e91afc200a7c,fb4702570316..000000000000
--- a/kernel/rcu/tree_stall.h
+++ b/kernel/rcu/tree_stall.h
@@@ -734,11 -735,12 +735,19 @@@ void show_rcu_gp_kthreads(void
  	j = jiffies;
  	ja = j - data_race(rcu_state.gp_activity);
  	jr = j - data_race(rcu_state.gp_req_activity);
+ 	js = j - data_race(rcu_state.gp_start);
  	jw = j - data_race(rcu_state.gp_wake_time);
++<<<<<<< HEAD
 +	pr_info("%s: wait state: %s(%d) ->state: %#x delta ->gp_activity %lu ->gp_req_activity %lu ->gp_wake_time %lu ->gp_wake_seq %ld ->gp_seq %ld ->gp_seq_needed %ld ->gp_flags %#x\n",
 +		rcu_state.name, gp_state_getname(rcu_state.gp_state),
 +		rcu_state.gp_state, t ? t->__state : 0x1ffff,
 +		ja, jr, jw, (long)data_race(rcu_state.gp_wake_seq),
++=======
+ 	pr_info("%s: wait state: %s(%d) ->state: %#lx ->rt_priority %u delta ->gp_start %lu ->gp_activity %lu ->gp_req_activity %lu ->gp_wake_time %lu ->gp_wake_seq %ld ->gp_seq %ld ->gp_seq_needed %ld ->gp_flags %#x\n",
+ 		rcu_state.name, gp_state_getname(rcu_state.gp_state),
+ 		rcu_state.gp_state, t ? t->state : 0x1ffffL, t ? t->rt_priority : 0xffU,
+ 		js, ja, jr, jw, (long)data_race(rcu_state.gp_wake_seq),
++>>>>>>> e44111ed20d8 (rcu: Add ->rt_priority and ->gp_start to show_rcu_gp_kthreads() output)
  		(long)data_race(rcu_state.gp_seq),
  		(long)data_race(rcu_get_root()->gp_seq_needed),
  		data_race(rcu_state.gp_flags));
* Unmerged path kernel/rcu/tree_stall.h
