partitions/efi: Fix partition name parsing in GUID partition entry

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Nikolai Merinov <n.merinov@inango-systems.com>
commit d5528d5e91041e68e8eab9792ce627705a0ed273
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/d5528d5e.failed

GUID partition entry defined to have a partition name as 36 UTF-16LE
code units. This means that on big-endian platforms ASCII symbols
would be read with 0xXX00 efi_char16_t character code. In order to
correctly extract ASCII characters from a partition name field we
should be converted from 16LE to CPU architecture.

The problem exists on all big endian platforms.

[ mingo: Minor edits. ]

Fixes: eec7ecfede74 ("genhd, efi: add efi partition metadata to hd_structs")
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Nikolai Merinov <n.merinov@inango-systems.com>
	Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
	Signed-off-by: Ingo Molnar <mingo@kernel.org>
Link: https://lore.kernel.org/r/20200308080859.21568-29-ardb@kernel.org
Link: https://lore.kernel.org/r/797777312.1324734.1582544319435.JavaMail.zimbra@inango-systems.com/
(cherry picked from commit d5528d5e91041e68e8eab9792ce627705a0ed273)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/partitions/efi.c
diff --cc block/partitions/efi.c
index 48907c3dcba1,b64bfdd4326c..000000000000
--- a/block/partitions/efi.c
+++ b/block/partitions/efi.c
@@@ -671,7 -657,32 +671,36 @@@ static int find_valid_gpt(struct parsed
  }
  
  /**
++<<<<<<< HEAD
 + * efi_partition - scan for GPT partitions
++=======
+  * utf16_le_to_7bit(): Naively converts a UTF-16LE string to 7-bit ASCII characters
+  * @in: input UTF-16LE string
+  * @size: size of the input string
+  * @out: output string ptr, should be capable to store @size+1 characters
+  *
+  * Description: Converts @size UTF16-LE symbols from @in string to 7-bit
+  * ASCII characters and stores them to @out. Adds trailing zero to @out array.
+  */
+ static void utf16_le_to_7bit(const __le16 *in, unsigned int size, u8 *out)
+ {
+ 	unsigned int i = 0;
+ 
+ 	out[size] = 0;
+ 
+ 	while (i < size) {
+ 		u8 c = le16_to_cpu(in[i]) & 0xff;
+ 
+ 		if (c && !isprint(c))
+ 			c = '!';
+ 		out[i] = c;
+ 		i++;
+ 	}
+ }
+ 
+ /**
+  * efi_partition(struct parsed_partitions *state)
++>>>>>>> d5528d5e9104 (partitions/efi: Fix partition name parsing in GUID partition entry)
   * @state: disk parsed partitions
   *
   * Description: called from check.c, if the disk contains GPT
* Unmerged path block/partitions/efi.c
diff --git a/block/partitions/efi.h b/block/partitions/efi.h
index 13dd57fa6c19..c443d629a201 100644
--- a/block/partitions/efi.h
+++ b/block/partitions/efi.h
@@ -102,7 +102,7 @@ typedef struct _gpt_entry {
 	__le64 starting_lba;
 	__le64 ending_lba;
 	gpt_entry_attributes attributes;
-	efi_char16_t partition_name[72 / sizeof (efi_char16_t)];
+	__le16 partition_name[72/sizeof(__le16)];
 } __packed gpt_entry;
 
 typedef struct _gpt_mbr_record {
