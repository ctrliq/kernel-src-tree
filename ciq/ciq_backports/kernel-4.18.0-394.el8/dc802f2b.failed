arm64: Rework ARM_ERRATUM_1414080 handling

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Marc Zyngier <maz@kernel.org>
commit dc802f2bc0208f4abca420705a860c5175db4bee
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/dc802f2b.failed

The current handling of erratum 1414080 has the side effect that
cntkctl_el1 can get changed for both 32 and 64bit tasks.

This isn't a problem so far, but if we ever need to mitigate another
of these errata on the 64bit side, we'd better keep the messing with
cntkctl_el1 local to 32bit tasks.

For that, make sure that on entering the kernel from a 32bit tasks,
userspace access to cntvct gets enabled, and disabled returning to
userspace, while it never gets changed for 64bit tasks.

	Signed-off-by: Marc Zyngier <maz@kernel.org>
	Reviewed-by: Mark Rutland <mark.rutland@arm.com>
Link: https://lore.kernel.org/r/20200706163802.1836732-5-maz@kernel.org
[will: removed branch instructions per Mark's review comments]
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit dc802f2bc0208f4abca420705a860c5175db4bee)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index 0227e1cf5b0b,9757a8d5fd94..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -342,23 -350,12 +361,32 @@@ alternative_if ARM64_WORKAROUND_84571
  alternative_else_nop_endif
  #endif
  3:
++<<<<<<< HEAD
 +#ifdef CONFIG_ARM64_ERRATUM_1418040
 +alternative_if_not ARM64_WORKAROUND_1418040
 +	b	4f
 +alternative_else_nop_endif
 +	/*
 +	 * if (x22.mode32 == cntkctl_el1.el0vcten)
 +	 *     cntkctl_el1.el0vcten = ~cntkctl_el1.el0vcten
 +	 */
 +	mrs	x1, cntkctl_el1
 +	eon	x0, x1, x22, lsr #3
 +	tbz	x0, #1, 4f
 +	eor	x1, x1, #2	// ARCH_TIMER_USR_VCT_ACCESS_EN
 +	msr	cntkctl_el1, x1
 +4:
 +#endif
 +	apply_ssbd 0, 5f, x0, x1
 +5:
++=======
+ 	scs_save tsk, x0
+ 
+ 	/* No kernel C function calls after this as user keys are set. */
+ 	ptrauth_keys_install_user tsk, x0, x1, x2
+ 
+ 	apply_ssbd 0, x0, x1
++>>>>>>> dc802f2bc020 (arm64: Rework ARM_ERRATUM_1414080 handling)
  	.endif
  
  	msr	elr_el1, x21			// set up the return data
* Unmerged path arch/arm64/kernel/entry.S
