NFS: Simplify cache consistency in nfs_check_inode_attributes()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 04c63498b6d4ea445cd2cb02599467b48687244b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/04c63498.failed

We should not be invalidating the access or acl caches in
nfs_check_inode_attributes(), since the point is we're unsure about
whether the contents of the struct nfs_fattr are fully up to date.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 04c63498b6d4ea445cd2cb02599467b48687244b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/inode.c
diff --cc fs/nfs/inode.c
index 6a79a5779031,fc8e92794636..000000000000
--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@@ -1511,17 -1511,11 +1509,17 @@@ static int nfs_check_inode_attributes(s
  
  	/* Have any file permissions changed? */
  	if ((fattr->valid & NFS_ATTR_FATTR_MODE) && (inode->i_mode & S_IALLUGO) != (fattr->mode & S_IALLUGO))
++<<<<<<< HEAD
 +		invalid |= NFS_INO_INVALID_ACCESS
 +			| NFS_INO_INVALID_ACL
 +			| NFS_INO_INVALID_OTHER;
++=======
+ 		invalid |= NFS_INO_INVALID_MODE;
++>>>>>>> 04c63498b6d4 (NFS: Simplify cache consistency in nfs_check_inode_attributes())
  	if ((fattr->valid & NFS_ATTR_FATTR_OWNER) && !uid_eq(inode->i_uid, fattr->uid))
- 		invalid |= NFS_INO_INVALID_ACCESS
- 			| NFS_INO_INVALID_ACL
- 			| NFS_INO_INVALID_OTHER;
+ 		invalid |= NFS_INO_INVALID_OTHER;
  	if ((fattr->valid & NFS_ATTR_FATTR_GROUP) && !gid_eq(inode->i_gid, fattr->gid))
- 		invalid |= NFS_INO_INVALID_ACCESS
- 			| NFS_INO_INVALID_ACL
- 			| NFS_INO_INVALID_OTHER;
+ 		invalid |= NFS_INO_INVALID_OTHER;
  
  	/* Has the link count changed? */
  	if ((fattr->valid & NFS_ATTR_FATTR_NLINK) && inode->i_nlink != fattr->nlink)
* Unmerged path fs/nfs/inode.c
