arm64: module: create module allocations without exec permissions

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Ard Biesheuvel <ard.biesheuvel@arm.com>
commit 7dfac3c5f40eb92841147eccf1b96f428b10131f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/7dfac3c5.failed

Now that the core code manages the executable permissions of code
regions of modules explicitly, it is no longer necessary to create
the module vmalloc regions with RWX permissions, and we can create
them with RW- permissions instead, which is preferred from a
security perspective.

	Acked-by: Will Deacon <will@kernel.org>
	Signed-off-by: Ard Biesheuvel <ard.biesheuvel@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit 7dfac3c5f40eb92841147eccf1b96f428b10131f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/module.c
diff --cc arch/arm64/kernel/module.c
index 3663ab450f1d,5b5936b7868c..000000000000
--- a/arch/arm64/kernel/module.c
+++ b/arch/arm64/kernel/module.c
@@@ -57,8 -56,8 +57,13 @@@ void *module_alloc(unsigned long size
  		 * can simply omit this fallback in that case.
  		 */
  		p = __vmalloc_node_range(size, MODULE_ALIGN, module_alloc_base,
++<<<<<<< HEAD
 +				module_alloc_base + SZ_4G, GFP_KERNEL,
 +				PAGE_KERNEL_EXEC, 0, NUMA_NO_NODE,
++=======
+ 				module_alloc_base + SZ_2G, GFP_KERNEL,
+ 				PAGE_KERNEL, 0, NUMA_NO_NODE,
++>>>>>>> 7dfac3c5f40e (arm64: module: create module allocations without exec permissions)
  				__builtin_return_address(0));
  
  	if (p && (kasan_module_alloc(p, size) < 0)) {
* Unmerged path arch/arm64/kernel/module.c
