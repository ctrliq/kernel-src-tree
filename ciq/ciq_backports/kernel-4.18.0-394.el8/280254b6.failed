SUNRPC: Clean up xs_tcp_setup_sock()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 280254b605ffb6ec88f33b43a360aa6b5247bef7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/280254b6.failed

Move the error handling into a single switch statement for clarity.

	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit 280254b605ffb6ec88f33b43a360aa6b5247bef7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/sunrpc/xprtsock.c
diff --cc net/sunrpc/xprtsock.c
index b1806c2b9a6a,aa293e4a77fa..000000000000
--- a/net/sunrpc/xprtsock.c
+++ b/net/sunrpc/xprtsock.c
@@@ -2213,22 -2209,7 +2212,26 @@@ static int xs_tcp_finish_connecting(str
  
  	/* Tell the socket layer to start connecting... */
  	set_bit(XPRT_SOCK_CONNECTING, &transport->sock_state);
++<<<<<<< HEAD
 +	ret = kernel_connect(sock, xs_addr(xprt), xprt->addrlen, O_NONBLOCK);
 +	switch (ret) {
 +	case 0:
 +		xs_set_srcport(transport, sock);
 +		/* fall through */
 +	case -EINPROGRESS:
 +		/* SYN_SENT! */
 +		if (xprt->reestablish_timeout < XS_TCP_INIT_REEST_TO)
 +			xprt->reestablish_timeout = XS_TCP_INIT_REEST_TO;
 +		break;
 +	case -EADDRNOTAVAIL:
 +		/* Source port number is unavailable. Try a new one! */
 +		transport->srcport = 0;
 +	}
 +out:
 +	return ret;
++=======
+ 	return kernel_connect(sock, xs_addr(xprt), xprt->addrlen, O_NONBLOCK);
++>>>>>>> 280254b605ff (SUNRPC: Clean up xs_tcp_setup_sock())
  }
  
  /**
@@@ -2267,21 -2248,21 +2270,34 @@@ static void xs_tcp_setup_socket(struct 
  			xprt, -status, xprt_connected(xprt),
  			sock->sk->sk_state);
  	switch (status) {
++<<<<<<< HEAD
 +	default:
 +		printk("%s: connect returned unhandled error %d\n",
 +			__func__, status);
 +		/* fall through */
 +	case -EADDRNOTAVAIL:
 +		/* We're probably in TIME_WAIT. Get rid of existing socket,
 +		 * and retry
 +		 */
 +		xs_tcp_force_close(xprt);
 +		break;
++=======
++>>>>>>> 280254b605ff (SUNRPC: Clean up xs_tcp_setup_sock())
  	case 0:
+ 		xs_set_srcport(transport, sock);
+ 		fallthrough;
  	case -EINPROGRESS:
+ 		/* SYN_SENT! */
+ 		if (xprt->reestablish_timeout < XS_TCP_INIT_REEST_TO)
+ 			xprt->reestablish_timeout = XS_TCP_INIT_REEST_TO;
+ 		fallthrough;
  	case -EALREADY:
- 		xprt_unlock_connect(xprt, transport);
- 		return;
+ 		goto out_unlock;
+ 	case -EADDRNOTAVAIL:
+ 		/* Source port number is unavailable. Try a new one! */
+ 		transport->srcport = 0;
+ 		status = -EAGAIN;
+ 		break;
  	case -EINVAL:
  		/* Happens, for instance, if the user specified a link
  		 * local IPv6 address without a scope-id.
* Unmerged path net/sunrpc/xprtsock.c
