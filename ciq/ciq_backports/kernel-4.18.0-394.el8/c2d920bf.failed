kconfig: Add support for 'as-option'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Vincenzo Frascino <vincenzo.frascino@arm.com>
commit c2d920bf1fffc3a61cb77db24464caf39496b32d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/c2d920bf.failed

Currently kconfig does not have a feature that allows to detect if the
used assembler supports a specific compilation option.

Introduce 'as-option' to serve this purpose in the context of Kconfig:

        config X
                def_bool $(as-option,...)

	Signed-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>
	Signed-off-by: Vincenzo Frascino <vincenzo.frascino@arm.com>
	Acked-by: Masahiro Yamada <masahiroy@kernel.org>
	Cc: linux-kbuild@vger.kernel.org
	Cc: Masahiro Yamada <yamada.masahiro@socionext.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit c2d920bf1fffc3a61cb77db24464caf39496b32d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	scripts/Kconfig.include
diff --cc scripts/Kconfig.include
index dad5583451af,a1c19255a030..000000000000
--- a/scripts/Kconfig.include
+++ b/scripts/Kconfig.include
@@@ -26,5 -31,22 +26,25 @@@ cc-option = $(success,$(CC) -Werror $(1
  # Return y if the linker supports <flag>, n otherwise
  ld-option = $(success,$(LD) -v $(1))
  
++<<<<<<< HEAD
++=======
+ # $(as-option,<flag>)
+ # /dev/zero is used as output instead of /dev/null as some assembler cribs when
+ # both input and output are same. Also both of them have same write behaviour so
+ # can be easily substituted.
+ as-option = $(success, $(CC) $(CLANG_FLAGS) $(1) -c -x assembler /dev/null -o /dev/zero)
+ 
+ # $(as-instr,<instr>)
+ # Return y if the assembler supports <instr>, n otherwise
+ as-instr = $(success,printf "%b\n" "$(1)" | $(CC) $(CLANG_FLAGS) -c -x assembler -o /dev/null -)
+ 
+ # check if $(CC) and $(LD) exist
+ $(error-if,$(failure,command -v $(CC)),compiler '$(CC)' not found)
+ $(error-if,$(failure,command -v $(LD)),linker '$(LD)' not found)
+ 
+ # Fail if the linker is gold as it's not capable of linking the kernel proper
+ $(error-if,$(success, $(LD) -v | grep -q gold), gold linker '$(LD)' not supported)
+ 
++>>>>>>> c2d920bf1fff (kconfig: Add support for 'as-option')
  # gcc version including patch level
 -gcc-version := $(shell,$(srctree)/scripts/gcc-version.sh $(CC))
 +gcc-version := $(shell,$(srctree)/scripts/gcc-version.sh -p $(CC) | sed 's/^0*//')
* Unmerged path scripts/Kconfig.include
