SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit b4776a341ec05e809d21e98db5ed49dbdc81d5d8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/b4776a34.failed

For certain special cases, RPC-related tracepoints record a -1 as
the task ID or the client ID. It's ugly for a trace event to display
4 billion in these cases.

To help keep SUNRPC tracepoints consistent, create a macro that
defines the print format specifiers for tk_pid and cl_clid. At some
point in the future we might try tk_pid with a wider range of values
than 0..64K so this makes it easier to make that change.

RPC tracepoints now look like this:

<...>-1276  [009]   149.720358: rpc_clnt_new:         client=00000005 peer=[192.168.2.55]:20049 program=nfs server=klimt.ib

<...>-1342  [004]   149.921234: rpc_xdr_recvfrom:     task:0000001a@00000005 head=[0xff1242d9ab6dc01c,144] page=0 tail=[(nil),0] len=144
<...>-1342  [004]   149.921235: xprt_release_cong:    task:0000001a@00000005 snd_task:ffffffff cong=256 cwnd=16384
<...>-1342  [004]   149.921235: xprt_put_cong:        task:0000001a@00000005 snd_task:ffffffff cong=0 cwnd=16384

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
(cherry picked from commit b4776a341ec05e809d21e98db5ed49dbdc81d5d8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/nfstrace.h
#	include/trace/events/sunrpc.h
diff --cc fs/nfs/nfstrace.h
index 2f72045b3d3a,82b51120450f..000000000000
--- a/fs/nfs/nfstrace.h
+++ b/fs/nfs/nfstrace.h
@@@ -11,15 -11,7 +11,19 @@@
  #include <linux/tracepoint.h>
  #include <linux/iversion.h>
  
++<<<<<<< HEAD
 +TRACE_DEFINE_ENUM(DT_UNKNOWN);
 +TRACE_DEFINE_ENUM(DT_FIFO);
 +TRACE_DEFINE_ENUM(DT_CHR);
 +TRACE_DEFINE_ENUM(DT_DIR);
 +TRACE_DEFINE_ENUM(DT_BLK);
 +TRACE_DEFINE_ENUM(DT_REG);
 +TRACE_DEFINE_ENUM(DT_LNK);
 +TRACE_DEFINE_ENUM(DT_SOCK);
 +TRACE_DEFINE_ENUM(DT_WHT);
++=======
+ #include <trace/events/sunrpc_base.h>
++>>>>>>> b4776a341ec0 (SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field)
  
  #define nfs_show_file_type(ftype) \
  	__print_symbolic(ftype, \
@@@ -1425,12 -1407,12 +1429,12 @@@ DECLARE_EVENT_CLASS(nfs_xdr_event
  			__entry->version = task->tk_client->cl_vers;
  			__entry->error = error;
  			__assign_str(program,
 -				     task->tk_client->cl_program->name);
 -			__assign_str(procedure, task->tk_msg.rpc_proc->p_name);
 +				     task->tk_client->cl_program->name)
 +			__assign_str(procedure, task->tk_msg.rpc_proc->p_name)
  		),
  
- 		TP_printk(
- 			"task:%u@%d xid=0x%08x %sv%d %s error=%ld (%s)",
+ 		TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+ 			  " xid=0x%08x %sv%d %s error=%ld (%s)",
  			__entry->task_id, __entry->client_id, __entry->xid,
  			__get_str(program), __entry->version,
  			__get_str(procedure), -__entry->error,
diff --cc include/trace/events/sunrpc.h
index cb8624f91d5b,92def7d6663e..000000000000
--- a/include/trace/events/sunrpc.h
+++ b/include/trace/events/sunrpc.h
@@@ -80,12 -80,11 +82,17 @@@ DECLARE_EVENT_CLASS(rpc_xdr_buf_class
  		__entry->msg_len = xdr->len;
  	),
  
++<<<<<<< HEAD
 +	TP_printk("task:%u@%u head=[%p,%zu] page=%u(%u) tail=[%p,%zu] len=%u",
++=======
+ 	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+ 		  " head=[%p,%zu] page=%u tail=[%p,%zu] len=%u",
++>>>>>>> b4776a341ec0 (SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field)
  		__entry->task_id, __entry->client_id,
 -		__entry->head_base, __entry->head_len, __entry->page_len,
 -		__entry->tail_base, __entry->tail_len, __entry->msg_len
 +		__entry->head_base, __entry->head_len,
 +		__entry->page_len, __entry->page_base,
 +		__entry->tail_base, __entry->tail_len,
 +		__entry->msg_len
  	)
  );
  
@@@ -158,11 -157,12 +165,12 @@@ TRACE_EVENT(rpc_clnt_new
  		__entry->client_id = clnt->cl_clid;
  		__assign_str(addr, xprt->address_strings[RPC_DISPLAY_ADDR]);
  		__assign_str(port, xprt->address_strings[RPC_DISPLAY_PORT]);
 -		__assign_str(program, program);
 -		__assign_str(server, server);
 +		__assign_str(program, program)
 +		__assign_str(server, server)
  	),
  
- 	TP_printk("client=%u peer=[%s]:%s program=%s server=%s",
+ 	TP_printk("client=" SUNRPC_TRACE_CLID_SPECIFIER
+ 		  " peer=[%s]:%s program=%s server=%s",
  		__entry->client_id, __get_str(addr), __get_str(port),
  		__get_str(program), __get_str(server))
  );
@@@ -288,11 -289,11 +297,11 @@@ TRACE_EVENT(rpc_request
  		__entry->client_id = task->tk_client->cl_clid;
  		__entry->version = task->tk_client->cl_vers;
  		__entry->async = RPC_IS_ASYNC(task);
 -		__assign_str(progname, task->tk_client->cl_program->name);
 -		__assign_str(procname, rpc_proc_name(task));
 +		__assign_str(progname, task->tk_client->cl_program->name)
 +		__assign_str(procname, rpc_proc_name(task))
  	),
  
- 	TP_printk("task:%u@%u %sv%d %s (%ssync)",
+ 	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " %sv%d %s (%ssync)",
  		__entry->task_id, __entry->client_id,
  		__get_str(progname), __entry->version,
  		__get_str(procname), __entry->async ? "a": ""
@@@ -475,13 -479,14 +486,14 @@@ DECLARE_EVENT_CLASS(rpc_reply_event
  		__entry->task_id = task->tk_pid;
  		__entry->client_id = task->tk_client->cl_clid;
  		__entry->xid = be32_to_cpu(task->tk_rqstp->rq_xid);
 -		__assign_str(progname, task->tk_client->cl_program->name);
 +		__assign_str(progname, task->tk_client->cl_program->name)
  		__entry->version = task->tk_client->cl_vers;
 -		__assign_str(procname, rpc_proc_name(task));
 -		__assign_str(servername, task->tk_xprt->servername);
 +		__assign_str(procname, rpc_proc_name(task))
 +		__assign_str(servername, task->tk_xprt->servername)
  	),
  
- 	TP_printk("task:%u@%d server=%s xid=0x%08x %sv%d %s",
+ 	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+ 		  " server=%s xid=0x%08x %sv%d %s",
  		__entry->task_id, __entry->client_id, __get_str(servername),
  		__entry->xid, __get_str(progname), __entry->version,
  		__get_str(procname))
@@@ -650,15 -658,15 +665,21 @@@ TRACE_EVENT(rpc_xdr_overflow
  			__entry->task_id = task->tk_pid;
  			__entry->client_id = task->tk_client->cl_clid;
  			__assign_str(progname,
 -				     task->tk_client->cl_program->name);
 +				     task->tk_client->cl_program->name)
  			__entry->version = task->tk_client->cl_vers;
 -			__assign_str(procedure, task->tk_msg.rpc_proc->p_name);
 +			__assign_str(procedure, task->tk_msg.rpc_proc->p_name)
  		} else {
++<<<<<<< HEAD
 +			__entry->task_id = 0;
 +			__entry->client_id = 0;
 +			__assign_str(progname, "unknown")
++=======
+ 			__entry->task_id = -1;
+ 			__entry->client_id = -1;
+ 			__assign_str(progname, "unknown");
++>>>>>>> b4776a341ec0 (SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field)
  			__entry->version = 0;
 -			__assign_str(procedure, "unknown");
 +			__assign_str(procedure, "unknown")
  		}
  		__entry->requested = requested;
  		__entry->end = xdr->end;
@@@ -1089,17 -1087,19 +1111,22 @@@ TRACE_EVENT(xprt_retransmit
  			task->tk_client->cl_clid : -1;
  		__entry->xid = be32_to_cpu(rqst->rq_xid);
  		__entry->ntrans = rqst->rq_ntrans;
 -		__entry->timeout = task->tk_timeout;
  		__assign_str(progname,
 -			     task->tk_client->cl_program->name);
 +			     task->tk_client->cl_program->name)
  		__entry->version = task->tk_client->cl_vers;
 -		__assign_str(procname, rpc_proc_name(task));
 +		__assign_str(procedure, task->tk_msg.rpc_proc->p_name)
  	),
  
++<<<<<<< HEAD
 +	TP_printk(
 +		"task:%u@%u xid=0x%08x %sv%d %s ntrans=%d",
++=======
+ 	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+ 		  " xid=0x%08x %sv%d %s ntrans=%d timeout=%lu",
++>>>>>>> b4776a341ec0 (SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field)
  		__entry->task_id, __entry->client_id, __entry->xid,
 -		__get_str(progname), __entry->version, __get_str(procname),
 -		__entry->ntrans, __entry->timeout
 -	)
 +		__get_str(progname), __entry->version, __get_str(procedure),
 +		__entry->ntrans)
  );
  
  TRACE_EVENT(xprt_ping,
@@@ -1145,14 -1145,12 +1172,15 @@@ DECLARE_EVENT_CLASS(xprt_writelock_even
  			__entry->task_id = -1;
  			__entry->client_id = -1;
  		}
 -		__entry->snd_task_id = xprt->snd_task ?
 -					xprt->snd_task->tk_pid : -1;
 +		if (xprt->snd_task &&
 +		    !test_bit(XPRT_SND_IS_COOKIE, &xprt->state))
 +			__entry->snd_task_id = xprt->snd_task->tk_pid;
 +		else
 +			__entry->snd_task_id = -1;
  	),
  
- 	TP_printk("task:%u@%u snd_task:%u",
+ 	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+ 		  " snd_task:" SUNRPC_TRACE_PID_SPECIFIER,
  			__entry->task_id, __entry->client_id,
  			__entry->snd_task_id)
  );
diff --git a/fs/nfs/nfs4trace.h b/fs/nfs/nfs4trace.h
index 2ef75caad6da..beecd57a9426 100644
--- a/fs/nfs/nfs4trace.h
+++ b/fs/nfs/nfs4trace.h
@@ -9,6 +9,7 @@
 #define _TRACE_NFS4_H
 
 #include <linux/tracepoint.h>
+#include <trace/events/sunrpc_base.h>
 
 TRACE_DEFINE_ENUM(EPERM);
 TRACE_DEFINE_ENUM(ENOENT);
@@ -694,8 +695,8 @@ TRACE_EVENT(nfs4_xdr_bad_operation,
 			__entry->expected = expected;
 		),
 
-		TP_printk(
-			"task:%u@%d xid=0x%08x operation=%u, expected=%u",
+		TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+			  " xid=0x%08x operation=%u, expected=%u",
 			__entry->task_id, __entry->client_id, __entry->xid,
 			__entry->op, __entry->expected
 		)
@@ -729,8 +730,8 @@ DECLARE_EVENT_CLASS(nfs4_xdr_event,
 			__entry->error = error;
 		),
 
-		TP_printk(
-			"task:%u@%d xid=0x%08x error=%ld (%s) operation=%u",
+		TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+			  " xid=0x%08x error=%ld (%s) operation=%u",
 			__entry->task_id, __entry->client_id, __entry->xid,
 			-__entry->error, show_nfsv4_errors(__entry->error),
 			__entry->op
* Unmerged path fs/nfs/nfstrace.h
diff --git a/include/trace/events/rpcgss.h b/include/trace/events/rpcgss.h
index ffdbe6f85da8..f6ed01a3757e 100644
--- a/include/trace/events/rpcgss.h
+++ b/include/trace/events/rpcgss.h
@@ -13,6 +13,8 @@
 
 #include <linux/tracepoint.h>
 
+#include <trace/events/sunrpc_base.h>
+
 /**
  ** GSS-API related trace events
  **/
@@ -99,7 +101,7 @@ DECLARE_EVENT_CLASS(rpcgss_gssapi_event,
 		__entry->maj_stat = maj_stat;
 	),
 
-	TP_printk("task:%u@%u maj_stat=%s",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " maj_stat=%s",
 		__entry->task_id, __entry->client_id,
 		__entry->maj_stat == 0 ?
 		"GSS_S_COMPLETE" : show_gss_status(__entry->maj_stat))
@@ -332,7 +334,8 @@ TRACE_EVENT(rpcgss_unwrap_failed,
 		__entry->client_id = task->tk_client->cl_clid;
 	),
 
-	TP_printk("task:%u@%u", __entry->task_id, __entry->client_id)
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER,
+		__entry->task_id, __entry->client_id)
 );
 
 TRACE_EVENT(rpcgss_bad_seqno,
@@ -358,7 +361,8 @@ TRACE_EVENT(rpcgss_bad_seqno,
 		__entry->received = received;
 	),
 
-	TP_printk("task:%u@%u expected seqno %u, received seqno %u",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " expected seqno %u, received seqno %u",
 		__entry->task_id, __entry->client_id,
 		__entry->expected, __entry->received)
 );
@@ -386,7 +390,7 @@ TRACE_EVENT(rpcgss_seqno,
 		__entry->seqno = rqst->rq_seqno;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x seqno=%u",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x seqno=%u",
 		__entry->task_id, __entry->client_id,
 		__entry->xid, __entry->seqno)
 );
@@ -418,7 +422,8 @@ TRACE_EVENT(rpcgss_need_reencode,
 		__entry->ret = ret;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x rq_seqno=%u seq_xmit=%u reencode %sneeded",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " xid=0x%08x rq_seqno=%u seq_xmit=%u reencode %sneeded",
 		__entry->task_id, __entry->client_id,
 		__entry->xid, __entry->seqno, __entry->seq_xmit,
 		__entry->ret ? "" : "un")
@@ -452,7 +457,8 @@ TRACE_EVENT(rpcgss_update_slack,
 		__entry->verfsize = auth->au_verfsize;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x auth=%p rslack=%u ralign=%u verfsize=%u\n",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " xid=0x%08x auth=%p rslack=%u ralign=%u verfsize=%u\n",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->auth, __entry->rslack, __entry->ralign,
 		__entry->verfsize)
diff --git a/include/trace/events/rpcrdma.h b/include/trace/events/rpcrdma.h
index 3c5a7889ad0d..fcd3b3f1020a 100644
--- a/include/trace/events/rpcrdma.h
+++ b/include/trace/events/rpcrdma.h
@@ -14,7 +14,9 @@
 #include <linux/sunrpc/rpc_rdma_cid.h>
 #include <linux/tracepoint.h>
 #include <rdma/ib_cm.h>
+
 #include <trace/events/rdma.h>
+#include <trace/events/sunrpc_base.h>
 
 /**
  ** Event classes
@@ -418,7 +420,8 @@ DECLARE_EVENT_CLASS(xprtrdma_rdch_event,
 		__entry->nsegs = nsegs;
 	),
 
-	TP_printk("task:%u@%u pos=%u %u@0x%016llx:0x%08x (%s)",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " pos=%u %u@0x%016llx:0x%08x (%s)",
 		__entry->task_id, __entry->client_id,
 		__entry->pos, __entry->length,
 		(unsigned long long)__entry->offset, __entry->handle,
@@ -465,7 +468,8 @@ DECLARE_EVENT_CLASS(xprtrdma_wrch_event,
 		__entry->nsegs = nsegs;
 	),
 
-	TP_printk("task:%u@%u %u@0x%016llx:0x%08x (%s)",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " %u@0x%016llx:0x%08x (%s)",
 		__entry->task_id, __entry->client_id,
 		__entry->length, (unsigned long long)__entry->offset,
 		__entry->handle,
@@ -532,7 +536,8 @@ DECLARE_EVENT_CLASS(xprtrdma_mr_class,
 		__entry->dir    = mr->mr_dir;
 	),
 
-	TP_printk("task:%u@%u mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " mr.id=%u nents=%d %u@0x%016llx:0x%08x (%s)",
 		__entry->task_id, __entry->client_id,
 		__entry->mr_id, __entry->nents, __entry->length,
 		(unsigned long long)__entry->offset, __entry->handle,
@@ -775,9 +780,9 @@ TRACE_EVENT(xprtrdma_nomrs_err,
 		__assign_str(port, rpcrdma_portstr(r_xprt));
 	),
 
-	TP_printk("peer=[%s]:%s task:%u@%u",
-		__get_str(addr), __get_str(port),
-		__entry->task_id, __entry->client_id
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " peer=[%s]:%s",
+		__entry->task_id, __entry->client_id,
+		__get_str(addr), __get_str(port)
 	)
 );
 
@@ -839,7 +844,8 @@ TRACE_EVENT(xprtrdma_marshal,
 		__entry->wtype = wtype;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x: hdr=%u xdr=%u/%u/%u %s/%s",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER
+		  " xid=0x%08x hdr=%u xdr=%u/%u/%u %s/%s",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->hdrlen,
 		__entry->headlen, __entry->pagelen, __entry->taillen,
@@ -869,7 +875,7 @@ TRACE_EVENT(xprtrdma_marshal_failed,
 		__entry->ret = ret;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x: ret=%d",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x ret=%d",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->ret
 	)
@@ -896,7 +902,7 @@ TRACE_EVENT(xprtrdma_prepsend_failed,
 		__entry->ret = ret;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x: ret=%d",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x ret=%d",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->ret
 	)
@@ -931,7 +937,7 @@ TRACE_EVENT(xprtrdma_post_send,
 		__entry->signaled = req->rl_wr.send_flags & IB_SEND_SIGNALED;
 	),
 
-	TP_printk("task:%u@%u cq.id=%u cid=%d (%d SGE%s) %s",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " cq.id=%u cid=%d (%d SGE%s) %s",
 		__entry->task_id, __entry->client_id,
 		__entry->cq_id, __entry->completion_id,
 		__entry->num_sge, (__entry->num_sge == 1 ? "" : "s"),
@@ -966,7 +972,7 @@ TRACE_EVENT(xprtrdma_post_send_err,
 		__entry->rc = rc;
 	),
 
-	TP_printk("task:%u@%u cq.id=%u rc=%d",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " cq.id=%u rc=%d",
 		__entry->task_id, __entry->client_id,
 		__entry->cq_id, __entry->rc
 	)
@@ -1078,7 +1084,7 @@ TRACE_EVENT(xprtrdma_post_linv_err,
 		__entry->status = status;
 	),
 
-	TP_printk("task:%u@%u status=%d",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " status=%d",
 		__entry->task_id, __entry->client_id, __entry->status
 	)
 );
@@ -1266,7 +1272,7 @@ TRACE_EVENT(xprtrdma_reply,
 		__entry->credits = credits;
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x credits=%u",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x credits=%u",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->credits
 	)
@@ -1302,7 +1308,7 @@ TRACE_EVENT(xprtrdma_err_vers,
 		__entry->max = be32_to_cpup(max);
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x versions=[%u, %u]",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x versions=[%u, %u]",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->min, __entry->max
 	)
@@ -1327,7 +1333,7 @@ TRACE_EVENT(xprtrdma_err_chunk,
 		__entry->xid = be32_to_cpu(rqst->rq_xid);
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x",
 		__entry->task_id, __entry->client_id, __entry->xid
 	)
 );
@@ -1353,7 +1359,7 @@ TRACE_EVENT(xprtrdma_err_unrecognized,
 		__entry->procedure = be32_to_cpup(procedure);
 	),
 
-	TP_printk("task:%u@%u xid=0x%08x procedure=%u",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " xid=0x%08x procedure=%u",
 		__entry->task_id, __entry->client_id, __entry->xid,
 		__entry->procedure
 	)
@@ -1385,7 +1391,7 @@ TRACE_EVENT(xprtrdma_fixup,
 		__entry->taillen = rqst->rq_rcv_buf.tail[0].iov_len;
 	),
 
-	TP_printk("task:%u@%u fixup=%lu xdr=%zu/%u/%zu",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER " fixup=%lu xdr=%zu/%u/%zu",
 		__entry->task_id, __entry->client_id, __entry->fixup,
 		__entry->headlen, __entry->pagelen, __entry->taillen
 	)
@@ -1435,7 +1441,7 @@ TRACE_EVENT(xprtrdma_mrs_zap,
 		__entry->client_id = task->tk_client->cl_clid;
 	),
 
-	TP_printk("task:%u@%u",
+	TP_printk(SUNRPC_TRACE_TASK_SPECIFIER,
 		__entry->task_id, __entry->client_id
 	)
 );
* Unmerged path include/trace/events/sunrpc.h
diff --git a/include/trace/events/sunrpc_base.h b/include/trace/events/sunrpc_base.h
new file mode 100644
index 000000000000..588557d07ea8
--- /dev/null
+++ b/include/trace/events/sunrpc_base.h
@@ -0,0 +1,18 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/*
+ * Copyright (c) 2021 Oracle and/or its affiliates.
+ *
+ * Common types and format specifiers for sunrpc.
+ */
+
+#if !defined(_TRACE_SUNRPC_BASE_H)
+#define _TRACE_SUNRPC_BASE_H
+
+#include <linux/tracepoint.h>
+
+#define SUNRPC_TRACE_PID_SPECIFIER	"%08x"
+#define SUNRPC_TRACE_CLID_SPECIFIER	"%08x"
+#define SUNRPC_TRACE_TASK_SPECIFIER \
+	"task:" SUNRPC_TRACE_PID_SPECIFIER "@" SUNRPC_TRACE_CLID_SPECIFIER
+
+#endif /* _TRACE_SUNRPC_BASE_H */
