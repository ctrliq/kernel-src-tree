RDMA/rxe: Copy setup parameters into rxe_pool

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Bob Pearson <rpearsonhpe@gmail.com>
commit c95acedbff6757499fcd4a55b6776c1685d12801
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/c95acedb.failed

In rxe_pool.c copy remaining pool setup parameters from rxe_pool_info into
rxe_pool. This saves looking up rxe_pool_info in the performance path.

Link: https://lore.kernel.org/r/20211103050241.61293-4-rpearsonhpe@gmail.com
	Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit c95acedbff6757499fcd4a55b6776c1685d12801)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe_pool.c
#	drivers/infiniband/sw/rxe/rxe_pool.h
diff --cc drivers/infiniband/sw/rxe/rxe_pool.c
index cac10e75f06a,50a92ec1a0bc..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_pool.c
+++ b/drivers/infiniband/sw/rxe/rxe_pool.c
@@@ -332,8 -325,7 +329,12 @@@ void __rxe_drop_index(struct rxe_pool_e
  
  void *rxe_alloc_locked(struct rxe_pool *pool)
  {
++<<<<<<< HEAD
 +	const struct rxe_type_info *info = &rxe_type_info[pool->type];
 +	struct rxe_pool_entry *elem;
++=======
+ 	struct rxe_pool_elem *elem;
++>>>>>>> c95acedbff67 (RDMA/rxe: Copy setup parameters into rxe_pool)
  	u8 *obj;
  
  	if (atomic_inc_return(&pool->num_elem) > pool->max_elem)
@@@ -343,7 -335,7 +344,11 @@@
  	if (!obj)
  		goto out_cnt;
  
++<<<<<<< HEAD
 +	elem = (struct rxe_pool_entry *)(obj + info->elem_offset);
++=======
+ 	elem = (struct rxe_pool_elem *)(obj + pool->elem_offset);
++>>>>>>> c95acedbff67 (RDMA/rxe: Copy setup parameters into rxe_pool)
  
  	elem->pool = pool;
  	kref_init(&elem->ref_cnt);
@@@ -357,8 -349,7 +362,12 @@@ out_cnt
  
  void *rxe_alloc(struct rxe_pool *pool)
  {
++<<<<<<< HEAD
 +	const struct rxe_type_info *info = &rxe_type_info[pool->type];
 +	struct rxe_pool_entry *elem;
++=======
+ 	struct rxe_pool_elem *elem;
++>>>>>>> c95acedbff67 (RDMA/rxe: Copy setup parameters into rxe_pool)
  	u8 *obj;
  
  	if (atomic_inc_return(&pool->num_elem) > pool->max_elem)
@@@ -368,7 -359,7 +377,11 @@@
  	if (!obj)
  		goto out_cnt;
  
++<<<<<<< HEAD
 +	elem = (struct rxe_pool_entry *)(obj + info->elem_offset);
++=======
+ 	elem = (struct rxe_pool_elem *)(obj + pool->elem_offset);
++>>>>>>> c95acedbff67 (RDMA/rxe: Copy setup parameters into rxe_pool)
  
  	elem->pool = pool;
  	kref_init(&elem->ref_cnt);
@@@ -397,10 -388,9 +410,9 @@@ out_cnt
  
  void rxe_elem_release(struct kref *kref)
  {
 -	struct rxe_pool_elem *elem =
 -		container_of(kref, struct rxe_pool_elem, ref_cnt);
 +	struct rxe_pool_entry *elem =
 +		container_of(kref, struct rxe_pool_entry, ref_cnt);
  	struct rxe_pool *pool = elem->pool;
- 	const struct rxe_type_info *info = &rxe_type_info[pool->type];
  	u8 *obj;
  
  	if (pool->cleanup)
@@@ -416,9 -406,8 +428,8 @@@
  
  void *rxe_pool_get_index_locked(struct rxe_pool *pool, u32 index)
  {
- 	const struct rxe_type_info *info = &rxe_type_info[pool->type];
  	struct rb_node *node;
 -	struct rxe_pool_elem *elem;
 +	struct rxe_pool_entry *elem;
  	u8 *obj;
  
  	node = pool->index.tree.rb_node;
@@@ -458,9 -446,8 +469,8 @@@ void *rxe_pool_get_index(struct rxe_poo
  
  void *rxe_pool_get_key_locked(struct rxe_pool *pool, void *key)
  {
- 	const struct rxe_type_info *info = &rxe_type_info[pool->type];
  	struct rb_node *node;
 -	struct rxe_pool_elem *elem;
 +	struct rxe_pool_entry *elem;
  	u8 *obj;
  	int cmp;
  
diff --cc drivers/infiniband/sw/rxe/rxe_pool.h
index 8ecd9f870aea,591e1c0ad438..000000000000
--- a/drivers/infiniband/sw/rxe/rxe_pool.h
+++ b/drivers/infiniband/sw/rxe/rxe_pool.h
@@@ -47,9 -45,9 +47,14 @@@ struct rxe_pool_entry 
  
  struct rxe_pool {
  	struct rxe_dev		*rxe;
+ 	const char		*name;
  	rwlock_t		pool_lock; /* protects pool add/del/search */
++<<<<<<< HEAD
 +	size_t			elem_size;
 +	void			(*cleanup)(struct rxe_pool_entry *obj);
++=======
+ 	void			(*cleanup)(struct rxe_pool_elem *obj);
++>>>>>>> c95acedbff67 (RDMA/rxe: Copy setup parameters into rxe_pool)
  	enum rxe_pool_flags	flags;
  	enum rxe_elem_type	type;
  
* Unmerged path drivers/infiniband/sw/rxe/rxe_pool.c
* Unmerged path drivers/infiniband/sw/rxe/rxe_pool.h
