HID: intel-ish-hid: add support for MODULE_DEVICE_TABLE()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Thomas Weißschuh <linux@weissschuh.net>
commit fa443bc3c1e4b28d9315dea882e8358ba6e26f8b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/fa443bc3.failed

This allows to selectively autoload drivers for ISH devices.
Currently all ISH drivers are loaded for all systems having any ISH
device.

	Signed-off-by: Thomas Weißschuh <linux@weissschuh.net>
	Acked-by: Srinivas Pandruvada <srinivas.pandruvada@linux.intel.com>
	Acked-by: Hans de Goede <hdegoede@redhat.com>
	Signed-off-by: Jiri Kosina <jkosina@suse.cz>
(cherry picked from commit fa443bc3c1e4b28d9315dea882e8358ba6e26f8b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/mod_devicetable.h
#	scripts/mod/devicetable-offsets.c
#	scripts/mod/file2alias.c
diff --cc include/linux/mod_devicetable.h
index 0925c5ba2c1f,befbf53c4b7c..000000000000
--- a/include/linux/mod_devicetable.h
+++ b/include/linux/mod_devicetable.h
@@@ -815,4 -853,59 +815,62 @@@ struct auxiliary_device_id 
  	kernel_ulong_t driver_data;
  };
  
++<<<<<<< HEAD
++=======
+ /* Surface System Aggregator Module */
+ 
+ #define SSAM_MATCH_TARGET	0x1
+ #define SSAM_MATCH_INSTANCE	0x2
+ #define SSAM_MATCH_FUNCTION	0x4
+ 
+ struct ssam_device_id {
+ 	__u8 match_flags;
+ 
+ 	__u8 domain;
+ 	__u8 category;
+ 	__u8 target;
+ 	__u8 instance;
+ 	__u8 function;
+ 
+ 	kernel_ulong_t driver_data;
+ };
+ 
+ /*
+  * DFL (Device Feature List)
+  *
+  * DFL defines a linked list of feature headers within the device MMIO space to
+  * provide an extensible way of adding features. Software can walk through these
+  * predefined data structures to enumerate features. It is now used in the FPGA.
+  * See Documentation/fpga/dfl.rst for more information.
+  *
+  * The dfl bus type is introduced to match the individual feature devices (dfl
+  * devices) for specific dfl drivers.
+  */
+ 
+ /**
+  * struct dfl_device_id -  dfl device identifier
+  * @type: DFL FIU type of the device. See enum dfl_id_type.
+  * @feature_id: feature identifier local to its DFL FIU type.
+  * @driver_data: driver specific data.
+  */
+ struct dfl_device_id {
+ 	__u16 type;
+ 	__u16 feature_id;
+ 	kernel_ulong_t driver_data;
+ };
+ 
+ /* ISHTP (Integrated Sensor Hub Transport Protocol) */
+ 
+ #define ISHTP_MODULE_PREFIX	"ishtp:"
+ 
+ /**
+  * struct ishtp_device_id - ISHTP device identifier
+  * @guid_string: 36 char string of the form fa50ff2b-f2e8-45de-83fa-65417f2f49ba
+  * @context: pointer to driver specific data
+  */
+ struct ishtp_device_id {
+ 	guid_t guid;
+ };
+ 
++>>>>>>> fa443bc3c1e4 (HID: intel-ish-hid: add support for MODULE_DEVICE_TABLE())
  #endif /* LINUX_MOD_DEVICETABLE_H */
diff --cc scripts/mod/devicetable-offsets.c
index 467def86c584,c0d3bcb99138..000000000000
--- a/scripts/mod/devicetable-offsets.c
+++ b/scripts/mod/devicetable-offsets.c
@@@ -233,5 -247,20 +233,23 @@@ int main(void
  	DEVID(auxiliary_device_id);
  	DEVID_FIELD(auxiliary_device_id, name);
  
++<<<<<<< HEAD
++=======
+ 	DEVID(ssam_device_id);
+ 	DEVID_FIELD(ssam_device_id, match_flags);
+ 	DEVID_FIELD(ssam_device_id, domain);
+ 	DEVID_FIELD(ssam_device_id, category);
+ 	DEVID_FIELD(ssam_device_id, target);
+ 	DEVID_FIELD(ssam_device_id, instance);
+ 	DEVID_FIELD(ssam_device_id, function);
+ 
+ 	DEVID(dfl_device_id);
+ 	DEVID_FIELD(dfl_device_id, type);
+ 	DEVID_FIELD(dfl_device_id, feature_id);
+ 
+ 	DEVID(ishtp_device_id);
+ 	DEVID_FIELD(ishtp_device_id, guid);
+ 
++>>>>>>> fa443bc3c1e4 (HID: intel-ish-hid: add support for MODULE_DEVICE_TABLE())
  	return 0;
  }
diff --cc scripts/mod/file2alias.c
index c6f7caf06667,5258247d78ac..000000000000
--- a/scripts/mod/file2alias.c
+++ b/scripts/mod/file2alias.c
@@@ -1373,8 -1516,13 +1396,14 @@@ static const struct devtable devtable[
  	{"fslmc", SIZE_fsl_mc_device_id, do_fsl_mc_entry},
  	{"tbsvc", SIZE_tb_service_id, do_tbsvc_entry},
  	{"typec", SIZE_typec_device_id, do_typec_entry},
 -	{"tee", SIZE_tee_client_device_id, do_tee_entry},
 -	{"wmi", SIZE_wmi_device_id, do_wmi_entry},
  	{"mhi", SIZE_mhi_device_id, do_mhi_entry},
  	{"auxiliary", SIZE_auxiliary_device_id, do_auxiliary_entry},
++<<<<<<< HEAD
++=======
+ 	{"ssam", SIZE_ssam_device_id, do_ssam_entry},
+ 	{"dfl", SIZE_dfl_device_id, do_dfl_entry},
+ 	{"ishtp", SIZE_ishtp_device_id, do_ishtp_entry},
++>>>>>>> fa443bc3c1e4 (HID: intel-ish-hid: add support for MODULE_DEVICE_TABLE())
  };
  
  /* Create MODULE_ALIAS() statements.
* Unmerged path include/linux/mod_devicetable.h
* Unmerged path scripts/mod/devicetable-offsets.c
* Unmerged path scripts/mod/file2alias.c
