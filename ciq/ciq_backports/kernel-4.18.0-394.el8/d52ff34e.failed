component: Rename 'dev' to 'parent'

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Stephen Boyd <swboyd@chromium.org>
commit d52ff34ee952b68c6d08eb56f2e99b926188f9e6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/d52ff34e.failed

Let's rename this struct member to 'parent' to better reflect the
reality that it's the parent device of this psuedo-device. In the next
patch we'll put a 'struct device' inside of this struct so moving this
away simplifies that patch by reducing the number of places that 'dev'
is modified.

	Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
	Cc: "Rafael J. Wysocki" <rafael@kernel.org>
	Cc: Rob Clark <robdclark@gmail.com>
	Cc: Russell King <rmk+kernel@arm.linux.org.uk>
	Cc: Saravana Kannan <saravanak@google.com>
	Signed-off-by: Stephen Boyd <swboyd@chromium.org>
Link: https://lore.kernel.org/r/20210520002519.3538432-3-swboyd@chromium.org
	Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
(cherry picked from commit d52ff34ee952b68c6d08eb56f2e99b926188f9e6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/base/component.c
diff --cc drivers/base/component.c
index 39e8d4452e11,5e79299f6c3f..000000000000
--- a/drivers/base/component.c
+++ b/drivers/base/component.c
@@@ -261,10 -250,11 +261,16 @@@ static int try_to_bring_up_master(struc
  		return -ENOMEM;
  
  	/* Found all components */
- 	ret = master->ops->bind(master->dev);
+ 	ret = master->ops->bind(master->parent);
  	if (ret < 0) {
++<<<<<<< HEAD
 +		devres_release_group(master->dev, NULL);
 +		dev_info(master->dev, "master bind failed: %d\n", ret);
++=======
+ 		devres_release_group(master->parent, NULL);
+ 		if (ret != -EPROBE_DEFER)
+ 			dev_info(master->parent, "master bind failed: %d\n", ret);
++>>>>>>> d52ff34ee952 (component: Rename 'dev' to 'parent')
  		return ret;
  	}
  
@@@ -535,7 -520,8 +536,12 @@@ static void component_unbind(struct com
  {
  	WARN_ON(!component->bound);
  
++<<<<<<< HEAD
 +	component->ops->unbind(component->dev, master->dev, data);
++=======
+ 	if (component->ops && component->ops->unbind)
+ 		component->ops->unbind(component->dev, master->parent, data);
++>>>>>>> d52ff34ee952 (component: Rename 'dev' to 'parent')
  	component->bound = false;
  
  	/* Release all resources claimed in the binding of this component */
@@@ -543,11 -529,11 +549,19 @@@
  }
  
  /**
++<<<<<<< HEAD
 + * component_unbind_all - unbind all component to an aggregate driver
 + * @master_dev: device with the aggregate driver
 + * @data: opaque pointer, passed to all components
 + *
 + * Unbinds all components to the aggregate @dev by passing @data to their
++=======
+  * component_unbind_all - unbind all components of an aggregate driver
+  * @parent: parent device of the aggregate driver
+  * @data: opaque pointer, passed to all components
+  *
+  * Unbinds all components of the aggregate device by passing @data to their
++>>>>>>> d52ff34ee952 (component: Rename 'dev' to 'parent')
   * &component_ops.unbind functions. Should be called from
   * &component_master_ops.unbind.
   */
@@@ -615,21 -601,22 +629,32 @@@ static int component_bind(struct compon
  			 dev_name(component->dev), component->ops);
  	} else {
  		devres_release_group(component->dev, NULL);
- 		devres_release_group(master->dev, NULL);
+ 		devres_release_group(master->parent, NULL);
  
++<<<<<<< HEAD
 +		dev_err(master->dev, "failed to bind %s (ops %ps): %d\n",
 +			dev_name(component->dev), component->ops, ret);
++=======
+ 		if (ret != -EPROBE_DEFER)
+ 			dev_err(master->parent, "failed to bind %s (ops %ps): %d\n",
+ 				dev_name(component->dev), component->ops, ret);
++>>>>>>> d52ff34ee952 (component: Rename 'dev' to 'parent')
  	}
  
  	return ret;
  }
  
  /**
++<<<<<<< HEAD
 + * component_bind_all - bind all component to an aggregate driver
 + * @master_dev: device with the aggregate driver
++=======
+  * component_bind_all - bind all components of an aggregate driver
+  * @parent: parent device of the aggregate driver
++>>>>>>> d52ff34ee952 (component: Rename 'dev' to 'parent')
   * @data: opaque pointer, passed to all components
   *
 - * Binds all components of the aggregate @dev by passing @data to their
 + * Binds all components to the aggregate @dev by passing @data to their
   * &component_ops.bind functions. Should be called from
   * &component_master_ops.bind.
   */
* Unmerged path drivers/base/component.c
