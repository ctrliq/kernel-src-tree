xfs: default attr fork size does not handle device inodes

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Dave Chinner <dchinner@redhat.com>
commit 683ec9ba887d096a6cbd9a5778be9400efe6468c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/683ec9ba.failed

Device inodes have a non-default data fork size of 8 bytes
as checked/enforced by xfs_repair. xfs_default_attroffset() doesn't
handle this, so lets do a minor refactor so it does.

Fixes: e6a688c33238 ("xfs: initialise attr fork on inode create")
	Signed-off-by: Dave Chinner <dchinner@redhat.com>
	Tested-by: Brian Foster <bfoster@redhat.com>
	Reviewed-by: Darrick J. Wong <djwong@kernel.org>
	Reviewed-by: Christoph Hellwig <hch@lst.de>
	Signed-off-by: Darrick J. Wong <djwong@kernel.org>
	Reviewed-by: Allison Henderson <allison.henderson@oracle.com>
(cherry picked from commit 683ec9ba887d096a6cbd9a5778be9400efe6468c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/xfs/libxfs/xfs_bmap.c
diff --cc fs/xfs/libxfs/xfs_bmap.c
index 7d20ed482867,61bd20ecdda1..000000000000
--- a/fs/xfs/libxfs/xfs_bmap.c
+++ b/fs/xfs/libxfs/xfs_bmap.c
@@@ -1036,16 -1041,18 +1039,28 @@@ xfs_bmap_set_attrforkoff
  	int			size,
  	int			*version)
  {
+ 	int			default_size = xfs_default_attroffset(ip) >> 3;
+ 
  	switch (ip->i_df.if_format) {
  	case XFS_DINODE_FMT_DEV:
++<<<<<<< HEAD
 +		ip->i_d.di_forkoff = roundup(sizeof(xfs_dev_t), 8) >> 3;
++=======
+ 		ip->i_forkoff = default_size;
++>>>>>>> 683ec9ba887d (xfs: default attr fork size does not handle device inodes)
  		break;
  	case XFS_DINODE_FMT_LOCAL:
  	case XFS_DINODE_FMT_EXTENTS:
  	case XFS_DINODE_FMT_BTREE:
++<<<<<<< HEAD
 +		ip->i_d.di_forkoff = xfs_attr_shortform_bytesfit(ip, size);
 +		if (!ip->i_d.di_forkoff)
 +			ip->i_d.di_forkoff = xfs_default_attroffset(ip) >> 3;
++=======
+ 		ip->i_forkoff = xfs_attr_shortform_bytesfit(ip, size);
+ 		if (!ip->i_forkoff)
+ 			ip->i_forkoff = default_size;
++>>>>>>> 683ec9ba887d (xfs: default attr fork size does not handle device inodes)
  		else if ((ip->i_mount->m_flags & XFS_MOUNT_ATTR2) && version)
  			*version = 2;
  		break;
* Unmerged path fs/xfs/libxfs/xfs_bmap.c
