RDMA/rdmavt: Fix error code in rvt_create_qp()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit 663991f32857b3b63c94c97de9dbb0ec8600144f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/663991f3.failed

Return negative -ENOMEM instead of positive ENOMEM.  Returning a postive
value will cause an Oops because it becomes an ERR_PTR() in the
create_qp() function.

Fixes: 514aee660df4 ("RDMA: Globally allocate and release QP memory")
Link: https://lore.kernel.org/r/20211013080645.GD6010@kili
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Acked-by: Dennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit 663991f32857b3b63c94c97de9dbb0ec8600144f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rdmavt/qp.c
diff --cc drivers/infiniband/sw/rdmavt/qp.c
index 2eb41b8bd222,3305f2744bfa..000000000000
--- a/drivers/infiniband/sw/rdmavt/qp.c
+++ b/drivers/infiniband/sw/rdmavt/qp.c
@@@ -1239,7 -1223,7 +1239,11 @@@ struct ib_qp *rvt_create_qp(struct ib_p
  	spin_lock(&rdi->n_qps_lock);
  	if (rdi->n_qps_allocated == rdi->dparms.props.max_qp) {
  		spin_unlock(&rdi->n_qps_lock);
++<<<<<<< HEAD
 +		ret = ERR_PTR(-ENOMEM);
++=======
+ 		ret = -ENOMEM;
++>>>>>>> 663991f32857 (RDMA/rdmavt: Fix error code in rvt_create_qp())
  		goto bail_ip;
  	}
  
* Unmerged path drivers/infiniband/sw/rdmavt/qp.c
