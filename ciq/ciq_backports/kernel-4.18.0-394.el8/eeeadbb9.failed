nfsd: move some commit_metadata()s outside the inode lock

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author J. Bruce Fields <bfields@redhat.com>
commit eeeadbb9bd5652c47bb9b31aa9ad8b4f1b4aa8b3
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/eeeadbb9.failed

The commit may be time-consuming and there's no need to hold the lock
for it.

More of these are possible, these were just some easy ones.

	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit eeeadbb9bd5652c47bb9b31aa9ad8b4f1b4aa8b3)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/vfs.c
diff --cc fs/nfsd/vfs.c
index 35fe9815aeca,d73d3c9126fc..000000000000
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@@ -1617,11 -1611,11 +1617,11 @@@ nfsd_symlink(struct svc_rqst *rqstp, st
  	if (IS_ERR(dnew))
  		goto out_nfserr;
  
 -	host_err = vfs_symlink(&init_user_ns, d_inode(dentry), dnew, path);
 +	host_err = vfs_symlink(d_inode(dentry), dnew, path);
  	err = nfserrno(host_err);
+ 	fh_unlock(fhp);
  	if (!err)
  		err = nfserrno(commit_metadata(fhp));
- 	fh_unlock(fhp);
  
  	fh_drop_write(fhp);
  
@@@ -1685,7 -1679,8 +1685,12 @@@ nfsd_link(struct svc_rqst *rqstp, struc
  	err = nfserr_noent;
  	if (d_really_is_negative(dold))
  		goto out_dput;
++<<<<<<< HEAD
 +	host_err = vfs_link(dold, dirp, dnew, NULL);
++=======
+ 	host_err = vfs_link(dold, &init_user_ns, dirp, dnew, NULL);
+ 	fh_unlock(ffhp);
++>>>>>>> eeeadbb9bd56 (nfsd: move some commit_metadata()s outside the inode lock)
  	if (!host_err) {
  		err = nfserrno(commit_metadata(ffhp));
  		if (!err)
@@@ -1850,10 -1895,15 +1855,22 @@@ nfsd_unlink(struct svc_rqst *rqstp, str
  	if (!type)
  		type = d_inode(rdentry)->i_mode & S_IFMT;
  
++<<<<<<< HEAD
 +	if (type != S_IFDIR)
 +		host_err = vfs_unlink(dirp, rdentry, NULL);
 +	else
 +		host_err = vfs_rmdir(dirp, rdentry);
++=======
+ 	if (type != S_IFDIR) {
+ 		if (rdentry->d_sb->s_export_op->flags & EXPORT_OP_CLOSE_BEFORE_UNLINK)
+ 			nfsd_close_cached_files(rdentry);
+ 		host_err = vfs_unlink(&init_user_ns, dirp, rdentry, NULL);
+ 	} else {
+ 		host_err = vfs_rmdir(&init_user_ns, dirp, rdentry);
+ 	}
+ 
+ 	fh_unlock(fhp);
++>>>>>>> eeeadbb9bd56 (nfsd: move some commit_metadata()s outside the inode lock)
  	if (!host_err)
  		host_err = commit_metadata(fhp);
  	dput(rdentry);
* Unmerged path fs/nfsd/vfs.c
