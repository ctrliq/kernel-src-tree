RDMA/rxe: Move rxe_crc32 to a subroutine

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Bob Pearson <rpearsonhpe@gmail.com>
commit b6c6cc4acdf68f4c98c25fd8975d068009993cd8
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/b6c6cc4a.failed

Move rxe_crc32() from rxe.h to rxe_icrc.c as a static local function.

Link: https://lore.kernel.org/r/20210707040040.15434-6-rpearsonhpe@gmail.com
	Signed-off-by: Bob Pearson <rpearsonhpe@gmail.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit b6c6cc4acdf68f4c98c25fd8975d068009993cd8)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/rxe/rxe.h
diff --cc drivers/infiniband/sw/rxe/rxe.h
index 586bc28974ef,65a73c1c8b35..000000000000
--- a/drivers/infiniband/sw/rxe/rxe.h
+++ b/drivers/infiniband/sw/rxe/rxe.h
@@@ -42,28 -42,6 +42,31 @@@
  
  extern bool rxe_initialized;
  
++<<<<<<< HEAD
 +static inline u32 rxe_crc32(struct rxe_dev *rxe,
 +			    u32 crc, void *next, size_t len)
 +{
 +	u32 retval;
 +	int err;
 +
 +	SHASH_DESC_ON_STACK(shash, rxe->tfm);
 +
 +	shash->tfm = rxe->tfm;
 +	shash->flags = 0;
 +	*(u32 *)shash_desc_ctx(shash) = crc;
 +	err = crypto_shash_update(shash, next, len);
 +	if (unlikely(err)) {
 +		pr_warn_ratelimited("failed crc calculation, err: %d\n", err);
 +		return crc32_le(crc, next, len);
 +	}
 +
 +	retval = *(u32 *)shash_desc_ctx(shash);
 +	barrier_data(shash_desc_ctx(shash));
 +	return retval;
 +}
 +
++=======
++>>>>>>> b6c6cc4acdf6 (RDMA/rxe: Move rxe_crc32 to a subroutine)
  void rxe_set_mtu(struct rxe_dev *rxe, unsigned int dev_mtu);
  
  int rxe_add(struct rxe_dev *rxe, unsigned int mtu, const char *ibdev_name);
* Unmerged path drivers/infiniband/sw/rxe/rxe.h
diff --git a/drivers/infiniband/sw/rxe/rxe_icrc.c b/drivers/infiniband/sw/rxe/rxe_icrc.c
index 08ab32eb6445..00916440f17b 100644
--- a/drivers/infiniband/sw/rxe/rxe_icrc.c
+++ b/drivers/infiniband/sw/rxe/rxe_icrc.c
@@ -7,6 +7,27 @@
 #include "rxe.h"
 #include "rxe_loc.h"
 
+static u32 rxe_crc32(struct rxe_dev *rxe, u32 crc, void *next, size_t len)
+{
+	u32 icrc;
+	int err;
+
+	SHASH_DESC_ON_STACK(shash, rxe->tfm);
+
+	shash->tfm = rxe->tfm;
+	*(u32 *)shash_desc_ctx(shash) = crc;
+	err = crypto_shash_update(shash, next, len);
+	if (unlikely(err)) {
+		pr_warn_ratelimited("failed crc calculation, err: %d\n", err);
+		return crc32_le(crc, next, len);
+	}
+
+	icrc = *(u32 *)shash_desc_ctx(shash);
+	barrier_data(shash_desc_ctx(shash));
+
+	return icrc;
+}
+
 /* Compute a partial ICRC for all the IB transport headers. */
 u32 rxe_icrc_hdr(struct rxe_pkt_info *pkt, struct sk_buff *skb)
 {
