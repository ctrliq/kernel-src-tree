NFSD: Relocate nfsd4_decode_opaque()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 5dcbfabb676b2b6d97767209cf707eb463ca232a
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/5dcbfabb.failed

Enable nfsd4_decode_opaque() to be used in more decoders, and
replace the READ* macros in nfsd4_decode_opaque().

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit 5dcbfabb676b2b6d97767209cf707eb463ca232a)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4xdr.c
diff --cc fs/nfsd/nfs4xdr.c
index 7e07b070e680,3c67634963d0..000000000000
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@@ -318,6 -207,54 +318,33 @@@ static char *savemem(struct nfsd4_compo
  	return ret;
  }
  
+ 
+ /*
+  * NFSv4 basic data type decoders
+  */
+ 
+ static __be32
+ nfsd4_decode_opaque(struct nfsd4_compoundargs *argp, struct xdr_netobj *o)
+ {
+ 	__be32 *p;
+ 	u32 len;
+ 
+ 	if (xdr_stream_decode_u32(argp->xdr, &len) < 0)
+ 		return nfserr_bad_xdr;
+ 	if (len == 0 || len > NFS4_OPAQUE_LIMIT)
+ 		return nfserr_bad_xdr;
+ 	p = xdr_inline_decode(argp->xdr, len);
+ 	if (!p)
+ 		return nfserr_bad_xdr;
+ 	o->data = svcxdr_tmpalloc(argp, len);
+ 	if (!o->data)
+ 		return nfserr_jukebox;
+ 	o->len = len;
+ 	memcpy(o->data, p, len);
+ 
+ 	return nfs_ok;
+ }
+ 
 -static __be32
 -nfsd4_decode_component4(struct nfsd4_compoundargs *argp, char **namp, u32 *lenp)
 -{
 -	__be32 *p, status;
 -
 -	if (xdr_stream_decode_u32(argp->xdr, lenp) < 0)
 -		return nfserr_bad_xdr;
 -	p = xdr_inline_decode(argp->xdr, *lenp);
 -	if (!p)
 -		return nfserr_bad_xdr;
 -	status = check_filename((char *)p, *lenp);
 -	if (status)
 -		return status;
 -	*namp = svcxdr_tmpalloc(argp, *lenp);
 -	if (!*namp)
 -		return nfserr_jukebox;
 -	memcpy(*namp, p, *lenp);
 -
 -	return nfs_ok;
 -}
 -
  static __be32
  nfsd4_decode_time(struct nfsd4_compoundargs *argp, struct timespec64 *tv)
  {
@@@ -949,23 -970,6 +976,26 @@@ xdr_error
  	return nfserr_bad_xdr;
  }
  
++<<<<<<< HEAD
 +static __be32 nfsd4_decode_opaque(struct nfsd4_compoundargs *argp, struct xdr_netobj *o)
 +{
 +	__be32 *p;
 +
 +	READ_BUF(4);
 +	o->len = be32_to_cpup(p++);
 +
 +	if (o->len == 0 || o->len > NFS4_OPAQUE_LIMIT)
 +		return nfserr_bad_xdr;
 +
 +	READ_BUF(o->len);
 +	SAVEMEM(o->data, o->len);
 +	return nfs_ok;
 +xdr_error:
 +	return nfserr_bad_xdr;
 +}
 +
++=======
++>>>>>>> 5dcbfabb676b (NFSD: Relocate nfsd4_decode_opaque())
  static __be32
  nfsd4_decode_open(struct nfsd4_compoundargs *argp, struct nfsd4_open *open)
  {
* Unmerged path fs/nfsd/nfs4xdr.c
