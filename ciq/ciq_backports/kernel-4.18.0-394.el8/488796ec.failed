NFS: Don't set NFS_INO_DATA_INVAL_DEFER and NFS_INO_INVALID_DATA

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Trond Myklebust <trond.myklebust@hammerspace.com>
commit 488796ec1e39fb9194cc8175f770823d40fbf0ed
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/488796ec.failed

NFS_INO_DATA_INVAL_DEFER and NFS_INO_INVALID_DATA should be considered
mutually exclusive.

Fixes: 1c341b777501 ("NFS: Add deferred cache invalidation for close-to-open consistency violations")
	Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
	Tested-by: Benjamin Coddington <bcodding@redhat.com>
	Reviewed-by: Benjamin Coddington <bcodding@redhat.com>
(cherry picked from commit 488796ec1e39fb9194cc8175f770823d40fbf0ed)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfs/inode.c
diff --cc fs/nfs/inode.c
index a0989d931520,dcb885b7ad73..000000000000
--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@@ -226,9 -210,15 +226,20 @@@ void nfs_set_cache_invalid(struct inod
  		flags &= ~NFS_INO_INVALID_XATTR;
  	if (flags & NFS_INO_INVALID_DATA)
  		nfs_fscache_invalidate(inode);
++<<<<<<< HEAD
 +	if (inode->i_mapping->nrpages == 0)
 +		flags &= ~(NFS_INO_INVALID_DATA|NFS_INO_DATA_INVAL_DEFER);
++=======
+ 	flags &= ~(NFS_INO_REVAL_PAGECACHE | NFS_INO_REVAL_FORCED);
+ 
++>>>>>>> 488796ec1e39 (NFS: Don't set NFS_INO_DATA_INVAL_DEFER and NFS_INO_INVALID_DATA)
  	nfsi->cache_validity |= flags;
+ 
+ 	if (inode->i_mapping->nrpages == 0)
+ 		nfsi->cache_validity &= ~(NFS_INO_INVALID_DATA |
+ 					  NFS_INO_DATA_INVAL_DEFER);
+ 	else if (nfsi->cache_validity & NFS_INO_INVALID_DATA)
+ 		nfsi->cache_validity &= ~NFS_INO_DATA_INVAL_DEFER;
  }
  EXPORT_SYMBOL_GPL(nfs_set_cache_invalid);
  
* Unmerged path fs/nfs/inode.c
