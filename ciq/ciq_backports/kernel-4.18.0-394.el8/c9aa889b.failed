md: raid10 add nowait support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Vishal Verma <vverma@digitalocean.com>
commit c9aa889b035fca4598ae985a0f0c76ebbb547ad2
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/c9aa889b.failed

This adds nowait support to the RAID10 driver. Very similar to
raid1 driver changes. It makes RAID10 driver return with EAGAIN
for situations where it could wait for eg:

  - Waiting for the barrier,
  - Reshape operation,
  - Discard operation.

wait_barrier() and regular_request_wait() fn are modified to return bool
to support error for wait barriers. They returns true in case of wait
or if wait is not required and returns false if wait was required
but not performed to support nowait.

	Reviewed-by: Jens Axboe <axboe@kernel.dk>
	Signed-off-by: Vishal Verma <vverma@digitalocean.com>
	Signed-off-by: Song Liu <song@kernel.org>
(cherry picked from commit c9aa889b035fca4598ae985a0f0c76ebbb547ad2)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/raid10.c
diff --cc drivers/md/raid10.c
index c3a0c599819b,2b969f70a31f..000000000000
--- a/drivers/md/raid10.c
+++ b/drivers/md/raid10.c
@@@ -1212,8 -1198,8 +1232,13 @@@ static void raid10_read_request(struct 
  					      gfp, &conf->bio_split);
  		bio_chain(split, bio);
  		allow_barrier(conf);
++<<<<<<< HEAD
 +		generic_make_request(bio);
 +		wait_barrier(conf);
++=======
+ 		submit_bio_noacct(bio);
+ 		wait_barrier(conf, false);
++>>>>>>> c9aa889b035f (md: raid10 add nowait support)
  		bio = split;
  		r10_bio->master_bio = bio;
  		r10_bio->sectors = max_sectors;
@@@ -1517,8 -1506,8 +1553,13 @@@ static void raid10_write_request(struc
  					      GFP_NOIO, &conf->bio_split);
  		bio_chain(split, bio);
  		allow_barrier(conf);
++<<<<<<< HEAD
 +		generic_make_request(bio);
 +		wait_barrier(conf);
++=======
+ 		submit_bio_noacct(bio);
+ 		wait_barrier(conf, false);
++>>>>>>> c9aa889b035f (md: raid10 add nowait support)
  		bio = split;
  		r10_bio->master_bio = bio;
  	}
@@@ -1684,8 -1677,8 +1729,13 @@@ static int raid10_handle_discard(struc
  		bio_chain(split, bio);
  		allow_barrier(conf);
  		/* Resend the fist split part */
++<<<<<<< HEAD
 +		generic_make_request(split);
 +		wait_barrier(conf);
++=======
+ 		submit_bio_noacct(split);
+ 		wait_barrier(conf, false);
++>>>>>>> c9aa889b035f (md: raid10 add nowait support)
  	}
  	div_u64_rem(bio_end, stripe_size, &remainder);
  	if (remainder) {
@@@ -1694,9 -1687,9 +1744,9 @@@
  		bio_chain(split, bio);
  		allow_barrier(conf);
  		/* Resend the second split part */
 -		submit_bio_noacct(bio);
 +		generic_make_request(bio);
  		bio = split;
- 		wait_barrier(conf);
+ 		wait_barrier(conf, false);
  	}
  
  	bio_start = bio->bi_iter.bi_sector;
@@@ -5279,5 -5271,3 +5329,8 @@@ MODULE_DESCRIPTION("RAID10 (striped mir
  MODULE_ALIAS("md-personality-9"); /* RAID10 */
  MODULE_ALIAS("md-raid10");
  MODULE_ALIAS("md-level-10");
++<<<<<<< HEAD
 +
 +module_param(max_queued_requests, int, S_IRUGO|S_IWUSR);
++=======
++>>>>>>> c9aa889b035f (md: raid10 add nowait support)
* Unmerged path drivers/md/raid10.c
