arm64: entry: Tidy up block comments and label numbers

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Will Deacon <will@kernel.org>
commit 8c3001b9252d8dbf72289d3590a723eea8cfe824
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/8c3001b9.failed

Continually butchering our entry code with CPU errata workarounds has
led to it looking a little scruffy. Consistently used /* */ comment
style for multi-line block comments and ensure that small numeric labels
use consecutive integers.

No functional change, but the state of things was irritating.

	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 8c3001b9252d8dbf72289d3590a723eea8cfe824)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index 0227e1cf5b0b,35de8ba60e3d..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -135,17 -126,19 +135,25 @@@ alternative_else_nop_endi
  	add	\dst, \dst, #(\sym - .entry.tramp.text)
  	.endm
  
++<<<<<<< HEAD
 +	// This macro corrupts x0-x3. It is the caller's duty
 +	// to save/restore them if required.
 +	.macro	apply_ssbd, state, targ, tmp1, tmp2
++=======
+ 	/*
+ 	 * This macro corrupts x0-x3. It is the caller's duty  to save/restore
+ 	 * them if required.
+ 	 */
+ 	.macro	apply_ssbd, state, tmp1, tmp2
++>>>>>>> 8c3001b9252d (arm64: entry: Tidy up block comments and label numbers)
  #ifdef CONFIG_ARM64_SSBD
  alternative_cb	arm64_enable_wa2_handling
 -	b	.L__asm_ssbd_skip\@
 +	b	\targ
  alternative_cb_end
  	ldr_this_cpu	\tmp2, arm64_ssbd_callback_required, \tmp1
 -	cbz	\tmp2,	.L__asm_ssbd_skip\@
 +	cbz	\tmp2, \targ
  	ldr	\tmp2, [tsk, #TSK_TI_FLAGS]
 -	tbnz	\tmp2, #TIF_SSBD, .L__asm_ssbd_skip\@
 +	tbnz	\tmp2, #TIF_SSBD, \targ
  	mov	w0, #ARM_SMCCC_ARCH_WORKAROUND_2
  	mov	w1, #\state
  alternative_cb	arm64_update_smccc_conduit
@@@ -175,6 -169,19 +183,22 @@@ alternative_cb_en
  	stp	x28, x29, [sp, #16 * 14]
  
  	.if	\el == 0
++<<<<<<< HEAD
++=======
+ 	.if	\regsize == 32
+ 	/*
+ 	 * If we're returning from a 32-bit task on a system affected by
+ 	 * 1418040 then re-enable userspace access to the virtual counter.
+ 	 */
+ #ifdef CONFIG_ARM64_ERRATUM_1418040
+ alternative_if ARM64_WORKAROUND_1418040
+ 	mrs	x0, cntkctl_el1
+ 	orr	x0, x0, #2	// ARCH_TIMER_USR_VCT_ACCESS_EN
+ 	msr	cntkctl_el1, x0
+ alternative_else_nop_endif
+ #endif
+ 	.endif
++>>>>>>> 8c3001b9252d (arm64: entry: Tidy up block comments and label numbers)
  	clear_gp_regs
  	mrs	x21, sp_el0
  	ldr_this_cpu	tsk, __entry_task, x20
* Unmerged path arch/arm64/kernel/entry.S
