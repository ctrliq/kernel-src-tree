RDMA/siw: Fix refcounting leak in siw_create_qp()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Dan Carpenter <dan.carpenter@oracle.com>
commit a75badebfdc0b3823054bedf112edb54d6357c75
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/a75badeb.failed

The atomic_inc() needs to be paired with an atomic_dec() on the error
path.

Fixes: 514aee660df4 ("RDMA: Globally allocate and release QP memory")
Link: https://lore.kernel.org/r/20220118091104.GA11671@kili
	Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
	Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
	Reviewed-by: Bernard Metzler <bmt@zurich.ibm.com>
	Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
(cherry picked from commit a75badebfdc0b3823054bedf112edb54d6357c75)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/infiniband/sw/siw/siw_verbs.c
diff --cc drivers/infiniband/sw/siw/siw_verbs.c
index 0c224736787f,54ef367b074a..000000000000
--- a/drivers/infiniband/sw/siw/siw_verbs.c
+++ b/drivers/infiniband/sw/siw/siw_verbs.c
@@@ -314,7 -314,7 +314,11 @@@ struct ib_qp *siw_create_qp(struct ib_p
  	if (atomic_inc_return(&sdev->num_qp) > SIW_MAX_QP) {
  		siw_dbg(base_dev, "too many QP's\n");
  		rv = -ENOMEM;
++<<<<<<< HEAD
 +		goto err_out;
++=======
+ 		goto err_atomic;
++>>>>>>> a75badebfdc0 (RDMA/siw: Fix refcounting leak in siw_create_qp())
  	}
  	if (attrs->qp_type != IB_QPT_RC) {
  		siw_dbg(base_dev, "only RC QP's supported\n");
* Unmerged path drivers/infiniband/sw/siw/siw_verbs.c
