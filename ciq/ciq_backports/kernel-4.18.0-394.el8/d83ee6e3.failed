arm64: ptrace: Use NO_SYSCALL instead of -1 in syscall_trace_enter()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Will Deacon <will@kernel.org>
commit d83ee6e3e75db6f518ef2b0858f163849f2ddeb7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/d83ee6e3.failed

Setting a system call number of -1 is special, as it indicates that the
current system call should be skipped.

Use NO_SYSCALL instead of -1 when checking for this scenario, which is
different from the -1 returned due to a seccomp failure.

	Cc: Mark Rutland <mark.rutland@arm.com>
	Cc: Keno Fischer <keno@juliacomputing.com>
	Cc: Luis Machado <luis.machado@linaro.org>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit d83ee6e3e75db6f518ef2b0858f163849f2ddeb7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/kernel/ptrace.c
diff --cc arch/arm64/kernel/ptrace.c
index e7125cb2c489,1e02e98e68dd..000000000000
--- a/arch/arm64/kernel/ptrace.c
+++ b/arch/arm64/kernel/ptrace.c
@@@ -1717,12 -1851,17 +1717,22 @@@ static void tracehook_report_syscall(st
  
  int syscall_trace_enter(struct pt_regs *regs)
  {
 -	unsigned long flags = READ_ONCE(current_thread_info()->flags);
 -
 -	if (flags & (_TIF_SYSCALL_EMU | _TIF_SYSCALL_TRACE)) {
 +	if (test_thread_flag(TIF_SYSCALL_TRACE))
  		tracehook_report_syscall(regs, PTRACE_SYSCALL_ENTER);
++<<<<<<< HEAD
 +
 +	/* Do the secure computing after ptrace; failures should be fast. */
 +	if (secure_computing(NULL) == -1)
 +		return -1;
++=======
+ 		if (!in_syscall(regs) || (flags & _TIF_SYSCALL_EMU))
+ 			return NO_SYSCALL;
+ 	}
+ 
+ 	/* Do the secure computing after ptrace; failures should be fast. */
+ 	if (secure_computing() == -1)
+ 		return NO_SYSCALL;
++>>>>>>> d83ee6e3e75d (arm64: ptrace: Use NO_SYSCALL instead of -1 in syscall_trace_enter())
  
  	if (test_thread_flag(TIF_SYSCALL_TRACEPOINT))
  		trace_sys_enter(regs, regs->syscallno);
* Unmerged path arch/arm64/kernel/ptrace.c
