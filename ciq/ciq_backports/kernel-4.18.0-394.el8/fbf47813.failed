ip: unconditionally set cork gso_size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Willem de Bruijn <willemb@google.com>
commit fbf47813607ba8c4e5c5b81da3c47fc66ac314b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/fbf47813.failed

Now that ipc(6)->gso_size is correctly initialized in all callers of
ip(6)_setup_cork, it is safe to unconditionally pass it to the cork.

Link: http://lkml.kernel.org/r/20180619164752.143249-1-willemdebruijn.kernel@gmail.com
	Signed-off-by: Willem de Bruijn <willemb@google.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit fbf47813607ba8c4e5c5b81da3c47fc66ac314b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/ipv6/ip6_output.c
diff --cc net/ipv6/ip6_output.c
index ce8b1db50df5,8047fd41ba88..000000000000
--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@@ -1354,8 -1219,9 +1354,14 @@@ static int ip6_setup_cork(struct sock *
  	if (mtu < IPV6_MIN_MTU)
  		return -EINVAL;
  	cork->base.fragsize = mtu;
++<<<<<<< HEAD
 +	cork->base.gso_size = sk->sk_type == SOCK_DGRAM &&
 +			      sk->sk_protocol == IPPROTO_UDP ? ipc6->gso_size : 0;
++=======
+ 	cork->base.gso_size = ipc6->gso_size;
+ 	cork->base.tx_flags = 0;
+ 	sock_tx_timestamp(sk, ipc6->sockc.tsflags, &cork->base.tx_flags);
++>>>>>>> fbf47813607b (ip: unconditionally set cork gso_size)
  
  	if (dst_allfrag(xfrm_dst_path(&rt->dst)))
  		cork->base.flags |= IPCORK_ALLFRAG;
diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
index e18239b9a992..c2a8479aa0ec 100644
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -1171,8 +1171,7 @@ static int ip_setup_cork(struct sock *sk, struct inet_cork *cork,
 	if (!inetdev_valid_mtu(cork->fragsize))
 		return -ENETUNREACH;
 
-	cork->gso_size = sk->sk_type == SOCK_DGRAM &&
-			 sk->sk_protocol == IPPROTO_UDP ? ipc->gso_size : 0;
+	cork->gso_size = ipc->gso_size;
 	cork->dst = &rt->dst;
 	/* We stole this route, caller should not release it. */
 	*rtp = NULL;
* Unmerged path net/ipv6/ip6_output.c
