Rebuild_History BUILDABLERebuilding Kernel from rpm changelog with Fuzz Limit: 87.50%
Number of commits in upstream range v4.18~1..master: 488125
Number of commits in rpm: 2292
Number of commits matched with upstream: 2255 (98.39%)
Number of commits in upstream but not in rpm: 485877
Number of commits NOT found in upstream: 37 (1.61%)

Rebuilding Kernel on Branch centos8_rebuild_kernel-4.18.0-394.el8 for kernel-4.18.0-394.el8
Clean Cherry Picks: 1652 (73.26%)
Empty Cherry Picks: 585 (25.94%)
_______________________________

__EMPTY COMMITS__________________________
a458b76a4171f893efa7657dc079924580a8746a mm: gup: pack has_pinned in MMF_HAS_PINNED
12235da8c80a1f9909008e4ca6036d5772b81192 kernel/locking: Add context to ww_mutex_trylock()
1415b49bcd321bca7347f43f8b269c91ec46d1dc locking/ww-mutex: Fix uninitialized use of ret in test_aa()
2202e15b2b1a946ce760d96748cd7477589701ab kernel/locking: Use a pointer in ww_mutex_trylock().
d2a8ebbf8192b84b11f1b204c4f7c602df32aeac kernel.h: split out container_of() and typeof_member() macros
ea4692c75e1c63926e4fb0728f5775ef0d733888 lib/string_helpers: Consolidate string helpers implementation
b8779475869a26ffcd2fde279f7b364ec5722d0d vgaarb: provide a vga_client_unregister wrapper
f6b1772b255504e9666cb8b1beabfd00abb2da56 vgaarb: remove the unused irq_set_state argument to vga_client_register
bf44e8cecc03c9c6197c0b65d54703746a62fb35 vgaarb: don't pass a cookie to vga_client_register
2502960fba7e94e090112069694365295c32ccc5 component: Add common helper for compare/release functions
50d7bd38c3aafc4749e05e8d7fcb616979143602 stddef: Introduce struct_group() helper macro
55037ed7bdc62151a726f5685f88afa6a82959b1 uapi/linux/stddef.h: Add include guards
74c578759f15cb5a0d0107759bdad671d7b52ab9 context_tracking: Rename context_tracking_is_enabled() => context_tracking_enabled()
2a0a24ebb499c9d499eea948d3fc108f936e36d4 sched: Make scheduler_ipi inline
b2a02fc43a1f40ef4eb2fb2b06357382608d4d84 smp: Optimize send_call_function_single_ipi()
4b44a21dd640b692d4e9b12d3e37c24825f90baa irq_work, smp: Allow irq_work on call_single_queue
126c2092e5c8b28623cb890cd2930aa292410676 sched: Add rq::ttwu_pending
a148866489fbe243c936fe43e4525d8dbfa0318f sched: Replace rq::wake_list
1f8db4150536431b031585ecc2a6793f69245de2 sched/headers: Split out open-coded prototypes into kernel/sched/smp.h
25de110d148666752dc0e0da7a0b69de31cd7098 irq_work: Define irq_work_single() on !CONFIG_IRQ_WORK too
8c4890d1c3358fb8023d46e1e554c41d54f02878 smp, irq_work: Continue smp_call_function*() and irq_work*() integration
7a9f50a05843fee8366bd3a65addbebaa7cf7f07 irq_work: Cleanup
2914b0ba61a9d253535e51af16c7122a8148995d irq_work: Optimize irq_work_single()
66040b2d5d41f85cb1a752a75260595344c5ec3b smp: Process pending softirqs in flush_smp_call_function_from_idle()
dd02d4234c9a2214a81c57a16484304a1a51872a sched/cpuacct: Fix user/system in shown cpuacct.usage*
248cc9993d1cc12b8e9ed716cc3fc09f6c3517dd sched/cpuacct: Fix charge percpu cpuusage
dc6e0818bc9a0336d9accf3ea35d146d72aa7a18 sched/cpuacct: Optimize away RCU read lock
fa5d823b16a9442d609617abeec31da8b6afa224 dmaengine: ptdma: Initial driver for the AMD PTDMA
b0b4a6b10577a2e7eaf36f46781f4759b03321a7 dmaengine: ptdma: register PTDMA controller as a DMA resource
e2fb2e2a33fae6009bf68574a7eec8fcfdf9c78e dmaengine: ptdma: Add debugfs entries for PTDMA
e037e36c35c2587879ba6db90e626ffd9d3e2618 dmaengine: ptdma: remove PT_OFFSET to avoid redefnition
8f031494df0e5bed90f262c138f592535946910d MAINTAINERS: Fix AMD PTDMA DRIVER entry
3c62fd3406e0b2277c76a6984d3979c7f3f1d129 dmaengine: ptdma: Fix the error handling path in pt_core_init()
6fa7e0e836e23e2c758ac3930b040c8abbbf8a6f dmaengine: ptdma: fix concurrency issue with multiple dma transfer
b6ccf01975976066901e0d5130669d743040d0e3 dmaengine: ptdma: handle the cases based on DMA is complete
8151b4c8bee43cea7a28cb0300123df90880e60c mm: add readahead address space operation
2c684234d36f7e8c80414e4a772911d407e821fa mm: add page_cache_readahead_unbounded
d4388340ae0bc8397ef5b24342279f7739982918 fs: convert mpage_readpages to mpage_readahead
9d24a13a93d995e4c980fdaa389aa3e2f1ea0b12 iomap: convert from readpages to readahead
7b6bf51de9746b43ec56567a0297378cd0172946 platform/x86: Add Intel ishtp eclite driver
f155dfeaa4ee21bce3f8f76b2addaec396b41b39 platform/x86: isthp_eclite: only load for matching devices
fa443bc3c1e4b28d9315dea882e8358ba6e26f8b HID: intel-ish-hid: add support for MODULE_DEVICE_TABLE()
64355db3caf6468dc711995239efe0cbcd7d0091 mod_devicetable: fix kdocs for ishtp_device_id
bf9167a8b40c9cf463521da05342db81808c1b6e HID: intel-ish-hid: fix module device-id handling
76d85049173ba0138ab61b29c0f1ee35bf7da5fa net: broadcom: bnx2x: Fix wrong function name in comments
3c6ae371b8a1ffba1fc415989fd581ebf841ed0a scsi: iscsi: Release endpoint ID when its freed
0aadafb5c34403a7cced1a8d61877048dc059f70 scsi: iscsi: Fix endpoint reuse regression
7c6e99c18167ed89729bf167ccb4a7e3ab3115ba scsi: iscsi: Fix conn cleanup and stop race during iscsid restart
03690d81974535f228e892a14f0d2d44404fe555 scsi: iscsi: Fix unbound endpoint error handling
c8064e5b4adac5e1255cf4f3b374e75b5376e7ca bpf: Let bpf_warn_invalid_xdp_action() report more info
1194372db6f3c917c9c6f6907e8378cf1076c557 s390/mm: better annotate 2KB pagetable fragments handling
4c88bb96e40b757f4796f70a4a7507df554467c4 s390/mm: check 2KB-fragment page on release
fe2640bd7a62f1f7c3f55fbda31084085075bc30 powerpc/pseries: Fix use after free in remove_phb_dynamic()
99ed3ed08d629eb0db6866d266e2bbe35efa5f9d arm64: don't reload GPRs after apply_ssbd
8a60419d36762a1131c2b29f7bd14371db4df1b5 arm64: force_signal_inject: WARN if called from kernel context
8a695a5873339c2e7c746ee51e3774fedd07d0a9 arm64: Kconfig: Remove ARCH_HAS_HOLES_MEMORYMODEL
97bebc5facf7d495e72df0b7c50be3699c7bdd73 arm64: sysreg: Use _BITUL() when defining register bits
7e0b44e870cf265bb4a73fd25e0508c7363fcbd6 arm64: compat: Hook up io_pgetevents() for 32-bit tasks
84c187afa210fcd5e34a7506c6e0dc2d69bc6641 arm64: don't trash config with compat symbol if COMPAT is disabled
f086f67485c5c126bcec4b0e96ac7319a2e59ab8 arm64: ptrace: add support for syscall emulation
7dfac3c5f40eb92841147eccf1b96f428b10131f arm64: module: create module allocations without exec permissions
fe6ba88b251aa76a94be2cb441d2e6b7c623b989 arch: replace _BITUL() in kernel-space headers with BIT()
b6143d10d23ebb4a77af311e8b8b7f019d0163e6 arm64: ftrace: Ensure module ftrace trampoline is coherent with I-side
e112b032a72c78f15d0c803c5dc6be444c2e6c66 arm64: map FDT as RW for early_init_dt_scan()
63f0c60379650d82250f22e4cf4137ef3dc4f43d arm64: Introduce prctl() options to control the tagged user addresses ABI
413235fcedc7f61e925fe9818bc3f5eff8ad2494 arm64: Change the tagged_addr sysctl control semantics to only prevent the opt-in
0795edaf3f1ff1ea58048515211280db004bbd68 arm64: pgtable: Implement p[mu]d_valid() and check in set_p[mu]d()
d0b7a302d58abe24ed0f32a0672dd4c356bb73db Revert "arm64: Remove unnecessary ISBs from set_{pte,pmd,pud}"
68933aa973740796895e297e7dbf7baf3e9c51b1 arm64: memory: Add comments to end of non-trivial #ifdef blocks
d0b3c32ed9220616548ff63808751cf2f6608df1 arm64: memory: Cosmetic cleanups
b907b80d7ae7b2b65ef9f534f3e9a32ce6a4b539 arm64: remove pointless __KERNEL__ guards
73961dc1182ed7e1eb80a90ee28871ab3547af7e arm64: sysreg: Remove unused and rotting SCTLR_ELx field definitions
22ec71615d824f4f11d38d0e55a88d8956b7e45f arm64: io: Relax implicit barriers in default I/O accessors
13776f9d40a028a245bb766269e360f5b7a62721 arm64: mm: free the initrd reserved memblock in a aligned manner
66cbdf5d0c96f5fe570b548e764583ea9d793077 arm64: Move TIF_* documentation to individual definitions
dd8a1f13488438c6c220b7cafa500baaf21a6e53 arm64: ftrace: Ensure synchronisation in PLT setup for Neoverse-N1 #1542419
bfc97f9f199cb041cf897af3af096540948cc705 arm64: apply ARM64_ERRATUM_845719 workaround for Brahma-B53 core
1cf45b8fdbb87040e1d1bd793891089f4678aa41 arm64: apply ARM64_ERRATUM_843419 workaround for Brahma-B53 core
47d7b15b88f96a90694cfc607d0717d62dff6c45 arm64: cpufeature: introduce helper cpu_has_hw_af()
b6e43c0e3129ffe87e65c85f20fcbdf0eb86fba0 arm64: remove __exception annotations
e540e0a7fa1ff889e37ca9af44eb44ec3d2c8a01 arm64: Add prototypes for functions called by entry.S
ed3768db588291ddb5dc794daed12cc751373566 arm64: entry: convert el1_sync to C
582f95835a8fc812cd38dce0447fe9386b78913e arm64: entry: convert el0_sync to C
afa7c0e5b965cdb945ad8a2e2973c6d7e19969f9 arm64: Remove asmlinkage from updated functions
bfe298745afc9548ad9344a9a3f26c81fd1a76c4 arm64: entry-common: don't touch daif before bp-hardening
f4659254a327f5e61c24e21b91c5aea0291bc65b arm64: mm: Use modern annotations for assembly functions
73d6890fe8ff40e357039b626537ac82d8782aeb arm64: kernel: Correct annotation of end of el0_sync
c9d66999f064947e6b577ceacc1eb2fbca6a8d3c arm64: ptrace: nofpsimd: Fail FP/SIMD regset operations
2d226c1e1c194a4737bf17ad8432a479e4e7e4a6 arm64: entry: mark all entry code as notrace
7a2c094464e39a54f5b9228cd78208cd43872bbd arm64: entry: cleanup el0 svc handler naming
5cb7a1113f94cec20ff16d3981b94b7fdd8d73fa arm64: Drop do_el0_ia_bp_hardening() & do_sp_pc_abort() declarations
2c614c1194f2803750c14b751871bd168dcc8054 arm64: use shared sysctl constants
2c9d45b43c39e26fd2a73f2203321cdaee98b58b arm64: add support for the AMU extension v1
25b92693a1b67a47b0c64a3410009d09e9658412 arm64: mm: convert cpu_do_switch_mm() to C
f0c0d4b74d59809568f560001c8f88e8211334a4 arm64: entry: unmask IRQ in el0_sp()
cfef06bd0686a578aa53e039c9aec0b1a5581d3b arm64: cpufeature: add pointer auth meta-capabilities
be129842566599f2c6f8fbba277c098802cd4b3d arm64: install user ptrauth keys at kernel exit time
df3551011b8188e7a9291a66c2c0a04c4eb9d8eb arm64: ptrauth: Add bootup/runtime flags for __cpu_setup
6982934e19f8ebb4152ba77308facdb1a38533f9 arm64: enable ptrauth earlier
33e45234987ea3ed4b05fc512f4441696478f12d arm64: initialize and switch ptrauth kernel keys
28321582334c261c13b20d7efe634e610b4c100b arm64: initialize ptrauth keys for kernel booting task
04f264d3a8b0eb25d378127bd78c3c9a0261c828 compiler.h: Allow arch-specific asm/compiler.h
04ad99a0b160450ae615e41b839e444eccb5c99b arm64: unwind: strip PAC from kernel addresses
e51f5f56dd69e009e22af8a4354dce0817a7addb arm64: suspend: restore the kernel ptrauth keys
c2d920bf1fffc3a61cb77db24464caf39496b32d kconfig: Add support for 'as-option'
0ccbd98a92c19a34921adb082cd00c58e134ba02 arm64: entry: Annotate vector table and handlers as code
c63d9f82db94399022a193cdfd57dbafa2a871cb arm64: head.S: Convert to modern annotations for assembly functions
e16e65a02913d29a7b27c4e3a415ceec967b0629 arm64: remove CONFIG_DEBUG_ALIGN_RODATA feature
3fabb43818c9bfe7c4084badfa21d4e8187021a6 arm64: sync kernel APIAKey when installing
1cf6022bd9161081215028203919c33fcfa6debb arm64: Fix PTRACE_SYSEMU semantics
8ef8f360cf30be12382f89ff48a57fbbd9b31c14 arm64: Basic Branch Target Identification support
d0055da5266acd316b8cb22b6086b8f9ac2d72cb arm64: remove ptrauth_keys_install_kernel sync arg
62a679cb2825488387f458c16dff32be41eb3d32 arm64: simplify ptrauth initialization
ebcea694e69270f563e69d82bd9930905c954ef1 arm64: Sort vendor-specific errata
357dd8a2aff25270971e11a37ddec807f37488e9 arm64: cpufeature: Add "or" to mitigations for multiple errata
0dd2334fd5b99e610ceccba0e5263e6969207880 arm64: entry: remove unneeded semicolon in el1_sync_handler()
a2a69963524dc4aebba047732dce5d256a70bb3d arm64: cpufeature: Add an overview comment for the cpufeature framework
433022b58e628418020155e1f6a3d59c06a474c0 arm64: cpufeature: Extend comment to describe absence of field info
011e5f5bf529f8ec2988ef7667d1a52f83273c36 arm64/cpufeature: Add remaining feature bits in ID_AA64PFR0 register
a9e821b89daa55cc940c546b124101939d3f0451 arm64: Add KRYO4XX gold CPU cores to erratum list 1463225 and 1418040
9b23d95c539ebc5d6d6b5d6f20d2d7922384e76e arm64: Add KRYO4XX silver CPU cores to erratum list 1530923 and 1024718
b8c1c9fe6a042dfbb169d14ab2000d9163f06d10 arm64: entry: Fix the typo in the comment of el1_dbg()
dc802f2bc0208f4abca420705a860c5175db4bee arm64: Rework ARM_ERRATUM_1414080 handling
8c3001b9252d8dbf72289d3590a723eea8cfe824 arm64: entry: Tidy up block comments and label numbers
09c717c92b52df54918e12cbfe6a4658233fda69 arm64: Add missing sentinel to erratum_1463225
356fdfbe8761da55c4100bd543259f349fc1ca3a arm64/cpufeature: Add remaining feature bits in ID_AA64MMFR2 register
8d3154afc10dd474265b62752cd169f66f40ae0d arm64/cpufeature: Replace all open bits shift encodings with macros
e735b98a5fe08c0f50f9fdc3e3a844e3638e6649 arm64: Add tlbi_user_level TLB invalidation helper
c4ab2cbc1d8768eb505708a58c54c277dfe4a93d arm64: tlb: Set the TTL field in flush_tlb_range
a46cec12f4a53ee5113f42b327cbb8d4cda074d2 arm64: Reserve HWCAP2_MTE as (1 << 18)
4e56de82d4ec9d98ffdc9e0387d8fdecbf496226 arm64/cpuinfo: Define HWCAP name arrays per their actual bit definitions
4ef333b2d10680b5d966a733ed7171f72164fcd5 arm64: traps: Allow force_signal_inject to pass esr error code
e16aeb072682d3dcdbdad452c974baa0d2b0c6db arm64: ptrauth: Introduce Armv8.3 pointer authentication enhancements
ba9d1d3e3e7c34826b62498f7d6563b73c22ac13 arm64: cpufeature: Modify address authentication cpufeature to exact
3b714d24ef173f81c78af16f73dcc9b40428c803 arm64: mte: CPU feature detection and initial sysreg configuration
6e5f0927846adf39aebee450f13871e3cb4ab012 arm64: Remove Spectre-related CONFIG_* options
532d581583f25d4c297c721700f74b913f8cf37b arm64: Treat SSBS as a non-strict system feature
96d389ca10110d7eefb46feb6af9a0c6832f78f5 arm64: Add workaround for Arm Cortex-A77 erratum 1508412
23c216416056148136bdaf0cdd18caf4904bb6e1 arm64: cpu_errata: Apply Erratum 845719 to KRYO2XX Silver
c0b15c25d25171db4b70cc0b7dbc1130ee94017d arm64: Extend workaround for erratum 1024718 to all versions of Cortex-A55
0c6c2d3615efb7c292573f2e6c886929a2b2da6c arm64: Generate cpucaps.h
38e0257e0e6f4fef2aa2966b089b56a8b1cfb75c arm64: errata: Fix exec handling in erratum 1418040 workaround
5e10f9887ed85d4f59266d5c60dd09be96b5dbd4 arm64: mm: Fix TLBI vs ASID rollover
d83ee6e3e75db6f518ef2b0858f163849f2ddeb7 arm64: ptrace: Use NO_SYSCALL instead of -1 in syscall_trace_enter()
df84fe94708985cdfb78a83148322bcd0a699472 arm64: ptrace: Fix seccomp of traced syscall -1 (NO_SYSCALL)
df325e05a682e9c624f471835c35bd3f870d5e8c arm64: Validate tagged addresses in access_ok() called from kernel threads
52218fcd61cb42bde0d301db4acb3ffdf3463cc7 arm64: tlb: fix the TTL value of tlb_get_level
37a8024d265564eba680575df6421f19db21dfce arm64: mte: initialize RGSR_EL1.SEED in __cpu_setup
e496132ebedd870b67f1f6d2428f9bb9d7ae27fd sched/fair: Adjust the allowed NUMA imbalance when SD_NUMA spans multiple LLCs
7f434dff76215af00c26ba6449eaa4738fe9e2ab sched/topology: Remove redundant variable and fix incorrect type in build_sched_domains
0c9d338c8443b06da8e8d3bfce824c5ea6d3488f blk-cgroup: synchronize blkg creation against policy deactivation
15c30104965101b8e76b24d27035569d6613a7d6 blk-cgroup: fix missing put device in error path from blkg_conf_pref()
86d7331299fda7634b11c1b7c911432679d525a5 block: update io_ticks when io hang
f122d103b564e5fb7c82de902c6f8f6cbdf50ec9 blk-cgroup: set blkg iostat after percpu stat aggregation
06582bc86d7f48d35cd044098ca1e246e8c7c52e block: loop:use kstatfs.f_bsize of backing file to set discard granularity
b5c63d90cc2de8ac6724fec84d1d72cfebcae41d powerpc/vas: Return paste instruction failure if no active window
b903737bc522e0ef3f45a2a60c364ff547572c9b powerpc/pseries/vas: sysfs interface to export capabilities
45f06eac30e5abebecc66e41e7c89d5b4413bac1 powerpc/pseries/vas: Add 'update_total_credits' entry for QoS capabilities
278fe1cc2205a05bfd92c794be3d207372b17289 powerpc/pseries/vas: Define global hv_cop_caps struct
37e6764895ef7431f45ff603a548549d409993d2 powerpc/pseries/vas: Add VAS migration handler
58d4277be9b66d8048054c8e57214a86b6b15da9 KVM: x86: Refactor tsc synchronization code
828ca89628bfcb1b8f27535025f69dd00eb55207 KVM: x86: Expose TSC offset controls to userspace
56f289a8d23addfa4408a08f07f42fcfe2a7bd69 KVM: x86: Add a helper to retrieve userspace address from kvm_device_attr
dd6e631220181162478984d2d46dd979e04d8e75 KVM: x86: add system attribute to retrieve full set of supported xsave states
6e37ec8825a113bc2dd1b280be10e5ac6eb4f6b1 KVM: x86: Use ERR_PTR_USR() to return -EFAULT as a __user pointer
3b50142d8528e1efc1c07f69c540f926c58ab3ad MAINTAINERS: sort field names for all entries
2224d8485492e499ca2e5d25407f8502cc06f149 mm: introduce Data Access MONitor (DAMON)
f23b8eee1871a6db5c37f90831147de5426c40b7 mm/damon/core: implement region-based sampling
b9a6ac4e4ede4172d165c133398b93e3233b0ba7 mm/damon: adaptively adjust regions
3f49584b262cf8f42b25f4c1ad9f5bfd3bdc1bca mm/damon: implement primitives for the virtual memory address spaces
2fcb93629ad8911c846cdc44521c746e53cc4e6d mm/damon: add a tracepoint
4bc05954d0076655cfaf6f0135585bdc20cd6b11 mm/damon: implement a debugfs-based user space interface
429538e85410c3ae12719ec42b89ab873ed6d47b mm/damon/dbgfs: export kdamond pid to the user space
75c1c2b53c78bf3b3188ebb7b3508dadbf98bba1 mm/damon/dbgfs: support multiple contexts
c4ba6014aec39e74ad3c10229dcfd187c42ee4f3 Documentation: add documents for DAMON
17ccae8bb5c928946f6f3af14626ec458f74e6ad mm/damon: add kunit tests
892ab4bbd063cfe7f6bbb183e6be69d9907a61de mm/damon: don't use strnlen() with known-bogus source length
2e014660b3e4b7bd0e75f845cdcf745c0f632889 mm/damon/core-test: fix wrong expectations for 'damon_split_regions_of()'
f24b0626076783d56ef41c6459fedf70ab6dcbd0 mm/damon: grammar s/works/work/
704571f997424ecd64b10b37ca6097e65690240a mm/damon/core: print kdamond start log in debug mode only
5f7fe2b9b827662cf349ab45406d6cbf0cc6251f mm/damon: remove unnecessary do_exit() from kdamond
42e4cef5fe48333e0db6e98b019edf5f2c2f11fd mm/damon: needn't hold kdamond_lock to print pid of kdamond
7ec1992b891e59dba0f04e0327980786e8f61b13 mm/damon/core: nullify pointer ctx->kdamond with a NULL
fda504fade7f124858d7022341dc46ff35b45274 mm/damon/core: account age of target regions
1f366e421c8f69583ed37b56d86e3747331869c3 mm/damon/core: implement DAMON-based Operation Schemes (DAMOS)
6dea8add4d2875b80843e4a4c8acd334a4db8c8f mm/damon/vaddr: support DAMON-based Operation Schemes
af122dd8f3c0099349bc98ff69f0d90efd8b149f mm/damon/dbgfs: support DAMON-based Operation Schemes
2f0b548c9f03a78f4ce6ab48986e3108028936a6 mm/damon/schemes: implement statistics feature
90bebce9fcd6488ba6b010af3a16a0a0d7e44cb6 mm/damon/dbgfs: allow users to set initial monitoring target regions
876d0aac2e3af10fbaf1c7a814840c71e470dc5c docs/vm/damon: remove broken reference
68536f8e01e571f553f78fa058ba543de3834452 Docs/admin-guide/mm/damon: document DAMON-based Operation Schemes
c2fe4987ed31c32591c9aea5a1e8e2540ce66e12 Docs/admin-guide/mm/damon: document 'init_regions' feature
1c2e11bfa649cc07e6322b0e5ea3cdbada9c43c3 mm/damon/dbgfs-test: add a unit test case for 'init_regions'
46c3a0accdc48c86928157fd073e66807f338485 mm/damon/vaddr: separate commonly usable functions
a28397beb55b68bd0f15c6778540e8ae1bc26d21 mm/damon: implement primitives for physical address space monitoring
c026291ab88f02247999959d01182cb8eb6e6a5b mm/damon/dbgfs: support physical memory monitoring
c638072107f52ec35f292c97b6f3df9b9f2ed87d Docs/DAMON: document physical memory monitoring support
199b50f4c9485c46c2403d8b3e0eca90ec401ed6 mm/damon/vaddr: constify static mm_walk_ops
9210622ab81f7e722da7563166d93b2a028a79d4 mm/damon/dbgfs: remove unnecessary variables
57223ac295845b1d72ec1bd02b5fab992b77a021 mm/damon/paddr: support the pageout scheme
2b8a248d5873343aa16f6c5ede30517693995f13 mm/damon/schemes: implement size quota for schemes application speed control
50585192bc2ef9309d32dabdbb5e735679f4f128 mm/damon/schemes: skip already charged targets and regions
1cd2430300594a230dba9178ac9e286d868d9da2 mm/damon/schemes: implement time quota
d7d0ec85e983945079364db3c3d2d80cc795a48c mm/damon/dbgfs: support quotas of schemes
38683e003153f7abfa612d7b7fe147efa4624af2 mm/damon/schemes: prioritize regions within the quotas
198f0f4c58b9f481e4e51c8c70a6ab9852bbab7f mm/damon/vaddr,paddr: support pageout prioritization
f4a68b4a04e6db9397f7776c51d0f9715bd1a60e mm/damon/dbgfs: support prioritization weights
ee801b7dd7822a82fd7663048ad649545fac6df3 mm/damon/schemes: activate schemes based on a watermarks mechanism
ae666a6dddfd119da55cc1bad54f7cbd8b2ef54c mm/damon/dbgfs: support watermarks
43b0536cb4710e7bb591edfda7e68a1c327a3409 mm/damon: introduce DAMON-based Reclamation (DAMON_RECLAIM)
bec976b691437d056a92964cb7af07ee1a54221a Documentation/admin-guide/mm/damon: add a document for DAMON_RECLAIM
a460a36034bad4403c2c62e04a521bc6987ae5db mm/damon: remove unnecessary variable initialization
b5ca3e83ddb05342b1b30700b999cb9b107511f6 mm/damon/dbgfs: add adaptive_targets list check before enable monitor_on
82e3fff55d0010310d3ee9005fec366c9cb3836a Docs/admin-guide/mm/damon/start: fix wrong example commands
49ce7dee10891c709da769a731a45b42cf7c54f6 Docs/admin-guide/mm/damon/start: fix a wrong link
b1eee3c5486003b247127538210f15fd6ebb5ee5 Docs/admin-guide/mm/damon/start: simplify the content
0f91d13366a402420bf98eaaf393db03946c13e0 mm/damon: simplify stop mechanism
0107865541961ee128149c9873996d32143a74d0 mm/damon: fix a few spelling mistakes in comments and a pr_debug message
658f9ae761b5965893727dd4edcdad56e5a439bb mm/damon: remove return value from before_terminate callback
db7a347b26fe05d2e8c115bb24dfd908d0252bc3 mm/damon/dbgfs: use '__GFP_NOWARN' for user-specified size buffer allocation
d78f3853f831eee46c6dbe726debf3be9e9c0d05 mm/damon/dbgfs: fix missed use of damon_dbgfs_lock
e4779015fd5d2fb8390c258268addff24d6077c7 timers: implement usleep_idle_range()
70e9274805fccfd175d0431a947bfd11ee7df40e mm/damon/core: fix fake load reports due to uninterruptible sleeps
4de46a30b9929d3d1b29e481d48e9c25f8ac7919 mm/damon/core: use better timer mechanisms selection threshold
0bceffa236af401f5206feaf3538526cbc427209 mm/damon/dbgfs: remove an unnecessary error message
1afaf5cb687de85c5e00ac70f6eea5597077cbc5 mm/damon/core: remove unnecessary error messages
09e12289cc044afa484e70c0b379d579d52caf9a mm/damon/vaddr: remove an unnecessary warning message
044cd9750fe010170f5dc812e4824d98f5ea928c mm/damon/vaddr-test: split a test function having >1024 bytes frame size
9f86d624292c238203b3687cdb870a2cde1a6f9b mm/damon/vaddr-test: remove unnecessary variables
34796417964b8d0aef45a99cf6c2d20cebe33733 mm/damon/dbgfs: protect targets destructions with kdamond_lock
ebb3f994dd92f8fb4d70c7541091216c1e10cb71 mm/damon/dbgfs: fix 'struct pid' leaks in 'dbgfs_target_ids_write()'
c46b0bb6a735db0b6140e12e750b5acb1b032982 mm/damon: add 'age' of region tracepoint support
b627b774911660852ce7f3f3817955ddad2bd130 mm/damon: unified access_check function naming rules
d720bbbd70e968f8a0257393b575c3a29b56f990 mm/damon/core: use abs() instead of diff_of()
cdeed009f3bceee41f73f0137db785fd29a05cb8 mm/damon: remove some unneeded function definitions in damon.h
8bd0b9da03c9154e279b1a502636103887b9fbed mm/damon/vaddr: remove swap_ranges() and replace it with swap()
c89ae63eb0662b6c9f82dbfad3ef010239b8c1b1 mm/damon/schemes: add the validity judgment of thresholds
9b2a38d6ef25c1748e3964b0ff30a89e4ed26583 mm/damon: move damon_rand() definition into damon.h
234d68732b6c135087bdebfa0630a43ae8c27758 mm/damon: modify damon_rand() macro to static inline function
88f86dcfa454784f7de550966c60fc78a3e95d6d mm/damon: convert macro functions to static inline functions
6322416b2d51f359efa7d875ab28bd195a5eb230 Docs/admin-guide/mm/damon/usage: update for scheme quotas and watermarks
35b43d4092008ad33d3bcccee4b262ffbf8a551c Docs/admin-guide/mm/damon/usage: remove redundant information
4492bf452af532493b6591d2e090a0f8f7c11674 Docs/admin-guide/mm/damon/usage: mention tracepoint at the beginning
995d739cde879a35ef6e890ecf80226b605ad36c Docs/admin-guide/mm/damon/usage: update for kdamond_pid and (mk|rm)_contexts
f4c6d22c6cf282ef7d24a724b9bd978ee2b74fc6 mm/damon: remove a mistakenly added comment for a future feature
0e92c2ee9f459542c5384d9cfab24873c3dd6398 mm/damon/schemes: account scheme actions that successfully applied
6268eac34ca30af7f6313504d556ec7fcd295621 mm/damon/schemes: account how many times quota limit has exceeded
60e52e7c46a127bca5ddd48b89002564f3862063 mm/damon/reclaim: provide reclamation statistics
3a619fdb8de8a3ecd4200e7d183d2c8ceb32289e mm/damon/dbgfs: support all DAMOS stats
dbcb9b9f954f71fb46be34af624c9edaaa171414 Docs/admin-guide/mm/damon/usage: update for schemes statistics
49f4203aae06ba9d67b500c90339b262b0a52637 mm/damon: add access checking for hugetlb pages
2cd4b8e10cc31eadb5b10b1d73b3f28156f3776c mm/damon: move the implementation of damon_insert_region to damon.h
70b8480812d0a3930049a44820a1fa149b090c10 mm/damon/dbgfs: remove an unnecessary variable
251403f19aab6a122f4dcfb14149814e85564202 mm/damon/vaddr: use pr_debug() for damon_va_three_regions() failure logging
962fe7a6b1b2f9deb1b31b3344afa3b11afdf7ab mm/damon/vaddr: hide kernel pointer from damon_va_three_regions() failure log
76fd0285b447991267e838842c0be7395eb454bb mm/damon: hide kernel pointer from tracepoint event
81f0895f1f5ed0d2bb80559ba9fbc6ce814e7235 Docs/admin-guide/mm/damon/reclaim: document statistics parameters
8520e224f547cd070c7c8f97b1fc6d58cff7ccaa bpf, cgroups: Fix cgroup v2 fallback on v1/v2 mixed mode
78cc316e9583067884eb8bd154301dc1e9ee945c bpf, cgroup: Assign cgroup in cgroup_sk_alloc when called from interrupt
a06247c6804f1a7c86a2e5398a4c1f1db1471848 psi: Fix uaf issue when psi trigger is destroyed while being polled
d5528d5e91041e68e8eab9792ce627705a0ed273 partitions/efi: Fix partition name parsing in GUID partition entry
9c9211a3fc7aa41b2952765b62000443b3bb6f23 net_tstamp: add new flag HWTSTAMP_FLAG_BONDED_PHC_INDEX
1bb412d46ca9df90a3fe4b704f5385f03621455d net_tstamp: define new flag HWTSTAMP_FLAG_BONDED_PHC_INDEX
d48e0cd8fcaf314175a15d3076d7a1e71bd4e628 timekeeping: Boot should be boottime for coarse ns accessor
f39f21b3ddc7fc0f87eb6dc75ddc81b5bbfb7672 stacktrace: move filter_irq_stacks() to kernel/stacktrace.c
505be48165fa2f2cb795659b4fc61f35563d105e lib, stackdepot: add helper to print stack entries
0f68d45ef41abb618a9ca33996348ae73800a106 lib, stackdepot: add helper to print stack entries into buffer
3ebc439761273274ea00258da84d997841f01e72 mm/page_owner: use scnprintf() to avoid excessive buffer overrun check
865ed6a3278654ce4a55eb74c5283eeb82ad4699 mm/page_owner: record task command name
bf215eab785a30756ea1e53b62a5638d1177a795 mm/page_owner.c: record tgid
fdb68dd30e92c5a2e0897f644b58b6d3616db44a RDMA: Delete not-used static inline functions
b6c6cc4acdf68f4c98c25fd8975d068009993cd8 RDMA/rxe: Move rxe_crc32 to a subroutine
add2b3b80e3a9b8f06562efe79b44809f64640db RDMA/rxe: Move crc32 init code to rxe_icrc.c
e4f5c82fefa9bce9a5e010901c2d16f2654b1f18 RDMA/rxe: Add kernel-doc comments to rxe_icrc.c
923232bbea88a29f18a2361790582a6474a538fc RDMA/rxe: Fix types in rxe_icrc.c
0dc0da15ed7d1f50ec3ef0cdbb7f2975abefec1f RDMA/mlx5: Rework custom driver QP type creation
514aee660df493cd673154a6ba6bab745ec47b8c RDMA: Globally allocate and release QP memory
60fab1076636493cfa2686e712446595fe43bc16 rdma/qedr: Fix crash due to redundant release of device's qp memory
8da9fe4e4fa7d561df0f3fe65bfa6dbf78aa7590 RDMA/core: Reorganize create QP low-level functions
00a79d6b996d46e9077b0d02a19c87b99305b94a RDMA/core: Configure selinux QP during creation
5507f67d08cdd947714647caa5c60f96b719fcb7 RDMA/core: Properly increment and decrement QP usecnts
d2b10794fc1312f856d67d0a6454aaa3ae96c595 RDMA/core: Create clean QP creations interface for uverbs
663991f32857b3b63c94c97de9dbb0ec8600144f RDMA/rdmavt: Fix error code in rvt_create_qp()
ae6e843fe08d0ea8e158815809dcc20e3a1afc22 RDMA/rxe: Add memory barriers to kernel queues
f5dc70a0e1420fa95c9f3f0dd65e27a89a5c787d IB/hfi1: Tune netdev xmit cachelines
b4b90a50cbb97f327b9231bd61d6592296093309 IB/hfi1: Remove atomic completion count
fd92213e9af3b8e5cb3b4d3bf925c9baafb46c9e RDMA: Constify netdev->dev_addr accesses
6cd7397d01c4a3e09757840299e4f114f0aa5fa0 RDMA/core: Set send and receive CQ before forwarding to the driver
fc9d19e18aaac489e6ea86fd5bb59d50d151515b RDMA/irdma: Use helper function to set GUIDs
21adfa7a3c4e7758a43dbfa33782dbef42c76ec5 RDMA/rxe: Replace irqsave locks with bh locks
02827b6708516231cd5cc2b4b59b79690bf2a40c RDMA/rxe: Cleanup rxe_pool_entry
c95acedbff6757499fcd4a55b6776c1685d12801 RDMA/rxe: Copy setup parameters into rxe_pool
b92d766c87022fc82cd6da774010b71ee92fc3d3 RDMA/rxe: Save object pointer in pool element
36783dec8d7932099d920dd44bc4c457b8272938 RDMA/rxe: Delete deprecated module parameters interface
b5c7e7ec7d3418af2544452b45cc67297c857a86 all: replace find_next{,_zero}_bit with find_first{,_zero}_bit where appropriate
8c83d39cc730378bbac64d67a551897b203a606e IB/hfi1: Fix panic with larger ipoib send_queue_size
b1151b74ff68cc83c2a8e1a618efe7d056e4f237 IB/hfi1: Fix alloc failure with larger txqueuelen
a75badebfdc0b3823054bedf112edb54d6357c75 RDMA/siw: Fix refcounting leak in siw_create_qp()
758c7f1e9cc9f1d1da480dcde34430ae56888c76 RDMA/rxe: Move rxe_mcast_attach/detach to rxe_mcast.c
02e3524474b857d52f9005cd33717670dc966e8b RDMA/rxe: Rename rxe_mc_grp and rxe_mc_elem
f9f484605779fbdc1dcbb820834ace80d8211cad RDMA/rxe: Enforce IBA o10-2.2.3
8a7fa872ff7922db1477208ba27cae6dd7e48012 RDMA/rxe: Remove rxe_drop_all_macst_groups
d3f6899b0b5617e8900d6b1ae60414e611b1a0f1 RDMA/rxe: Remove qp->grp_lock and qp->grp_list
a099b08599e6ae6b8e9faccee83760dab622c11e RDMA/rxe: Revert changes from irqsave to bh locks
3c14b73454cf9f6e2146443fdfbdfb912c0efed3 powerpc/pseries: Interface to represent PAPR firmware attributes
3fef46fc43ca12a0006d6683c8ac114628ad53a1 xfs: rename the blockgc workqueue
0f98b4ece18da9d8287bb4cc4e8f78b8760ea0d0 xfs: rename variable mp to parsing_mp
e6a688c3323840f3e388ba28fd2db86675b79917 xfs: initialise attr fork on inode create
c789c83c7ef8f98f9f6f0864ce6a58dc4c4012d1 xfs: hoist out xfs_resizefs_init_new_ags()
fb2fc172018599a6564aab4ac0dce79bf94bd6bc xfs: support shrinking unused space in the last AG
13d2c10b05d8e67cb9b4c2d1d4a09a906148a72e xfs: move the di_size field to struct xfs_inode
6e73a545f91e128d8dd7da1769dca200225f5d82 xfs: move the di_nblocks field to struct xfs_inode
031474c28a3a9a2772a715d1ec9770f9068ea5a4 xfs: move the di_extsize field to struct xfs_inode
b33ce57d3e61020328582ce6d7dbae1d694ac496 xfs: move the di_cowextsize field to struct xfs_inode
965e0a1ad273ba61a8040220ef8ec09c9d065875 xfs: move the di_flushiter field to struct xfs_inode
4800887b457460a0a1edbf7d657be47d4d8758cd xfs: cleanup xfs_fill_fsxattr
b231b1221b39bdf7ec4e45b05656bcba7d6a2153 xfs: use XFS_B_TO_FSB in xfs_ioctl_setattr
ee7b83fd365e32beaa405d60b8c42f42ec5f42c2 xfs: use a union for i_cowextsize and i_flushiter
7821ea302dca72469c558e382d6e4ae09232b7a7 xfs: move the di_forkoff field to struct xfs_inode
db07349da2f564742c0f23528691991e641e315e xfs: move the di_flags field to struct xfs_inode
3e09ab8fdc4d4c9d0afee7a63a3b39e5ade3c863 xfs: move the di_flags2 field to struct xfs_inode
e98d5e882b3ccb0f7f38d4e893fe60c1dd7934db xfs: move the di_crtime field to struct xfs_inode
4422501da6b3265c52af2740ba9925f15f08cc7d xfs: merge _xfs_dic2xflags into xfs_ip2xflags
2442ee15bb1e726e0db1b90faf02211f88fb5d71 xfs: eager inode attr fork init needs attr feature awareness
8de1cb0038026a35dca276c69fa5caa5453879f3 xfs: inode fork allocation depends on XFS_IFEXTENT flag
683ec9ba887d096a6cbd9a5778be9400efe6468c xfs: default attr fork size does not handle device inodes
b2941046ea85d2cd94b485831bf03402f34f4060 xfs: precalculate default inode attribute offset
2ac131df03d4f06bb0d825335663cc5064421993 xfs: rename and simplify xfs_bmap_one_block
605e74e29218bb22edd5ddcf90a4d37df00446cc xfs: simplify xfs_attr_remove_args
0779f4a68d4df539a7ea624f7e1560f48aa46ad9 xfs: remove XFS_IFINLINE
b2197a36c0ef5b35a0ed83de744610a462da1ad3 xfs: remove XFS_IFEXTENTS
9d5e8492eee017ffdaa9f0957e91d39d83163197 xfs: adjust rt allocation minlen when extszhint > rtextsize
676a659b60afb13166371580f3f6f434e9ba6f21 xfs: retry allocations when locality-based search fails
6b69e485894b355b333bd286f0f0958e41d8754a xfs: standardize extent size hint validation
603f000b15f21ce8932f76689c7aa9fe58261cf5 xfs: validate extsz hints against rt extent size when rtinherit is set
991c2c5980fb97ae6194f7c46b44f9446629eb4e xfs: btree format inode forks can have zero extents
83193e5ebb0164d612aa620ceab7d3746e80e2a4 xfs: correct the narrative around misaligned rtinherit/extszinherit dirs
5aa5b278237f356f86205c4b03d4cc64a293850a xfs: don't expose misaligned extszinherit hints to userspace
2a47834d9452812f68c8894994e95adad56e4b60 scsi: smartpqi: Enable SATA NCQ priority in sysfs
b4dc06a9070e3ca9d18a33fe649df594832dde1a scsi: smartpqi: Fix a name typo and cleanup code
6d872df3e3b91532b142de9044e5b4984017a55f net: annotate accesses to dev->gso_max_segs
3f98c753717c600eb5708e9b78b3eba6664bddf1 block: don't check bio in blk_throtl_dispatch_work_fn
9f5ede3c01f9951b0ae7d68b28762ad51d9bacc8 block: throttle split bio in case of iops limit
5a93b6027eb4ef5db60a4bc5bdbeba5fb9f29384 block: don't try to throttle split bio if iops limit isn't set
4aa9340584e37debef06fa99b56d064beb723891 s390/kexec: fix memory leak of ipl report buffer
351782067b6be81879b0af0daf7bd3acbb32d986 ipv4: ipcm_cookie initializers
b515430ac9c25d5192cf498af3c6be6c4f51caad ipv6: ipcm6_cookie initializer
5fdaa88dfefa87ee1ea92750e99950dca182ea41 ipv6: fold sockcm_cookie into ipcm6_cookie
678ca42d688534adfc780b150abefaaac7c86687 ip: remove tx_flags from ipcm_cookie and use same logic for v4 and v6
fbf47813607ba8c4e5c5b81da3c47fc66ac314b1 ip: unconditionally set cork gso_size
c6af0c227a22bb6bb8ff72f043e0fb6d99fd6515 ip: support SO_MARK cmsg
0da7536fb47f51df89ccfcb1fa09f249d9accec5 ip: Fix SO_MARK in RST, ACK and ICMP packets
42dcfd850e514b229d616a53dec06d0f2533217c udp6: allow SO_MARK ctrl msg to affect routing
a29cb6914681a55667436a9eb7a42e28da8cf387 net: tcp better handling of reordering then loss cases
0d5924ec4b89613910366c890305e46821a31f01 ntb_hw_amd: Add NTB PCI ID for new gen CPU
5337824f4dc4bb26f38fbbba4ffb425a92803f15 net: annotate accesses to queue->trans_start
9cb7c013420f98fa6fd12fc6a5dc055170c108db ipv6: make ip6_rt_gc_expire an atomic_t
bcb74e132a76ce0502bb33d5b65533a4ed72d159 net/sched: act_ct: fix ref leak when switching zones
f2db85b64f0af1410ccb8ebcc9d7fa38e99feee9 driver core: Avoid pointless deferred probe attempts
d46f3e3ed5276e756caf40f760d4902d15c12dcb driver core: Improve fw_devlink & deferred_probe_timeout interaction
33b688e3854d6ad76d0acbeebc601ce2ddb8513d PM: clk: remove kernel-doc warning
ea030ca688193462b8d612c1628c37129aa30072 regmap-i2c: Set regmap max raw r/w from quirks
1f89d2fe16072a74b34bdb895160910091427891 regmap: Add MDIO bus support
e56360d6a119f531506658ea87238e48ad4c95c2 regmap: mdio: Don't modify output if error happened
d52ff34ee952b68c6d08eb56f2e99b926188f9e6 component: Rename 'dev' to 'parent'
bcd23f93d3984a94d64ce0b6bbfa3789c0e8ebaf regmap-irq: Introduce inverted status registers support
dff404deb8493e6154ad75a62ce7c4e37ff8fccd regmap: mdio: Clean up invalid clause-22 addresses
f083be9db060fbac09123d80bdffb2c001ac0e2b regmap: mdio: Add clause-45 support
ce62df2290bb86b39f826a835d6060bc3b43dae7 regmap: mdio: Fix regmap_bus pointer constness
0df0240946b1ffbe852fa302c04c0d322229c9ce regmap: mdio: Reject invalid addresses
09705dcb63d269000595284b5dd7f5c938d647b9 devres: Enable trace events
43e76d463c09a0272b84775bcc727c1eb8b384b2 driver core: add a helper to setup both the of_node and fwnode of a device
e1499647c69c72c4583273e773d8c2786cb4bee9 driver core: Better distinguish probe errors in really_probe
ef6dcbdd8eb2f44dce70a3abecc32d43cc5f3e64 driver core: Flow the return code from ->probe() through to sysfs bind
45ddcb42949f825f0caa25352e825cede94b6aba driver core: Don't return EPROBE_DEFER to userspace during sysfs bind
0d9f837c6958a4c14e6bcb5c5edf6c851d65f507 driver core: Export device_driver_attach()
40ba55e40d0bd740fb1cb2b77c1630013536e440 PM: domains: Shrink locking area of the gpd_list_lock
8d495477d62e4397207f22a432fcaa86d9f2bc2d sched/cputime: Spare a seqcount lock/unlock cycle on context switch
14faf6fcac4ba33f8fd8d9b2d0278010a9eb1742 sched/cputime: Add vtime idle task state
e6d5bf3e321ca664d12eb00ceb40bd58987ce8a1 sched/cputime: Add vtime guest task state
5a1c95580f1d89c8a736bb02ecd82a8858388b8a sched/cputime: Support other fields on kcpustat_field()
271225fd57c2f1e0b3f8826df51be6c634affefe ixgbe: Document how to enable NBASE-T support
4709272f6327cc4a8ee1dc55771bcf9718346980 scsi: qla2xxx: Indicate correct supported speeds for Mezz card
52cca50d35f814e737791e2c2cf8c279219a9f29 scsi: qla2xxx: Display 16G only as supported speeds for 3830c card
65120de26a547298d2718e7c4e8bdb7b3adc0cb7 scsi: qla2xxx: Add ql2xnvme_queues module param to configure number of NVMe queues
5597616333ea8a8d1327749176e70a4bb2e59c5c scsi: qla2xxx: Stop using the SCSI pointer
db212f2eb3fb7f546366777e93c8f54614d39269 scsi: qla2xxx: Fix loss of NVMe namespaces after driver reload test
3648bcf1c1374e9f42d241d83e2e50c0ef07a852 scsi: qla2xxx: Increase max limit of ql2xnvme_queues
fddb5d430ad9fa91b49b1d34d0202ffe2fa0e179 open: introduce openat2(2) syscall
398840f8bb935d33c64df4ec4fed77a7d24c267d openat2: reject RESOLVE_BENEATH|RESOLVE_IN_ROOT
cfe80306a0dd6d363934913e47c3f30d71b721e5 open: don't silently ignore unknown O-flags in openat2()
c452833387624d1990c9bbb0ee1e98c10c147478 tools include UAPI: Sync x86's syscalls_64.tbl, generic unistd.h and fcntl.h to pick up openat2 and pidfd_getfd
571e5c0efcb29c5dac8cf2949d3eed84ec43056c audit: add OPENAT2 record to list "how" info
8be70a842f70c0fe8e00fd488b1966344fa10ff4 scsi: target: pscsi: Set SCF_TREAT_READ_AS_NORMAL flag only if there is valid data
35f6986743d78544779a892415c2edefa1f36a1c net/mlx5: Don't rely on always true registered field
919d13a7e455c2e7676042d7a5f94c164e859d8a devlink: Set device as early as possible
11a861d767cdd87a34397821b0fd2095893b84b3 devlink: Use xarray to store devlink instances
cf530217408e3686f7002429769ede59dd931151 devlink: Notify users when objects are accessible
5df290e7a70367d476406420d19c4dea14d45dd1 bnxt_en: Register devlink instance at the end devlink configuration
8d44b5cf60602568f951fbff86f1e0e0435d2a57 liquidio: Overcome missing device lock protection in init/remove flows
1e726859167cdeaedc9af412242c3b53fd6fd811 net/mlx4: Move devlink_register to be the last initialization command
64ea2d0e7263b67d8efc93fa1baace041ed36d1e net/mlx5: Accept devlink user input after driver initialization complete
b2ab483fcbc30484aecea2a143bf541f7e5a35d8 mlxsw: core: Register devlink instance last
4f2a81c40c3c4260facdcde995b3441b2858c4eb nfp: Move delink_register to be last command
7911c8bd546fa85e408544426646dd1f1a684286 ionic: Move devlink registration to be last devlink command
1b8e0bdbea654bd11d285e4e01e68b3bdab196b4 qed: Move devlink registration to be last devlink command
71c1b525934d5a50b404457d9eb7aa2c6d6b21a6 netdevsim: Move devlink registration to be last devlink command
ef91abfb20c743c0cbe98e4351cd0ce05c81340a devlink: Add missed notifications iterators
21314638c9f251bb40c8ad3b4e1c232057789b8b devlink: Reduce struct devlink exposure
b88f7b1203bf481af58291c28957aaab09503f43 devlink: Annotate devlink API calls
bd032e35c568ff7cfa347aa4ddd6491e2453f00c devlink: Allow control devlink ops behavior through feature mask
82465bec3e9713c395b0a02f5aaf7949443cb877 devlink: Delete reload enable/disable interface
cb3dc8901ba4f748f46287a42049a3a5c1f6b63c devlink: Remove extra device_lock assert checks
99ad92eff76491331a90d839dd6b7225cf8dd53e devlink: Delete obsolete parameters publish API
96d0c9be432dfd4908e96dde7cab860368a348ab devlink: fix flexible_array.cocci warning
fec1faf221f61118aa52f44c65a13c3e173a64c2 devlink: Don't throw an error if flash notification sent before devlink visible
4c897cfc46a554a523343fc3296333c473a2fc52 devlink: Simplify devlink resources unregister call
5bb1bb353cfe343fc3c84faf06f72ba309fde541 mm: Don't build mm_dump_obj() on CONFIG_PRINTK=n kernels
0d3dd2c8eadb7d4404b8788f552fb2b824fe2c7e rcutorture: Add crude tests for mem_dump_obj()
e44111ed20d8b2d7b05b20d694358ae77d4e93e2 rcu: Add ->rt_priority and ->gp_start to show_rcu_gp_kthreads() output
27ba76e164fc83ffe6ceeb0415c427ad1191af6c rcu: Add ->gp_max to show_rcu_gp_kthreads() output
3066820034b5dd4e89bd74a7739c51c2d6f5e554 rcu: Reject RCU_LOCKDEP_WARN() false positives
1d10bf55d85d34eb73dd8263635f43fd72135d2d rcu-tasks: Don't delete holdouts within trc_inspect_reader()
a9ab9cce9367a2cc02a3c7eb57a004dc0b8f380d rcu-tasks: Don't delete holdouts within trc_wait_for_one_reader()
938cca9e4109b30ee1d476904538225a825e54eb sock: fix /proc/net/sockstat underflow in sk_clone_lock()
8bda81a4d400cf8a72e554012f0d8c45e07a3904 lwtunnel: Validate RTA_ENCAP_TYPE attribute length
19198e4ec97dc9d173b458a75ace3c3ca55c2d85 qed: Fix kernel-doc warnings
ee824f4bcc109f6db5f2bb89bb3749fe1dcb7fa9 qed: Split huge qed_hsi.h header file
f2a74107f1e1b43621da2220fa835b965d3eb332 qed: Update qed_mfw_hsi.h for FW ver 8.59.1.0
fe40a830dcded26f012739fd6dac0da9c805bc38 qed: Update qed_hsi.h for fw 8.59.1.0
3091be065f11797593ffa88f93a5d31a25f31bcb qed: Use enum as per FW 8.59.1.0 in qed_iro_hsi.h
e2dbc2237692dbf297e2f2886a201ee44c30ae81 qed: Add '_GTT' suffix to the IRO RAM macros
6c95dd8f0aa1d983e857a755fca7001677d1dcb5 qed: Update debug related changes
7e9979e360075ef5db77e77d1e8ab3efbcba6eef qed: Enhance rammod debug prints to provide pretty details
0cc3a8017900f856f9bf4fdc41c2b5cb1670aabe qed*: enhance tx timeout debug info
823163ba6e52e644be5df4539a19e3df8d0988dd qed*: esl priv flag support through ethtool
4f9f531e1505a126b4d66d8a8a29e8e54fa4075c qed: Use dma_set_mask_and_coherent() and simplify code
ef10bd49df234aadd4e0ab693e151c10e5338c65 qed: use msleep() in qed_mcp_cmd() and add qed_mcp_cmd_nosleep() for udelay.
20921c0c86092b4082c91bd7c88305da74e5520b qed: fix ethtool register dump
433baf0719d6a81d0587ea27545a120a3880abf6 device property: move mac addr helpers to eth.c
8017c4d8173cfe086420dc5710d631cabd03ef67 eth: fwnode: change the return type of mac address helpers
0a14501ed818ff51eed237bbe5009d0d784e4450 eth: fwnode: remove the addr len from mac helpers
a33e7925b5e61f9de1c5cc59d1a92569665fdfe5 scsi: qedf: Stop using the SCSI pointer
7ad1069166c0ccdd572d27e01cc7f7f84477df1e md: properly unwind when failing to add the kobject in md_alloc
2e94275ed582d9bfe1abc5d5ee565715cc3e6b38 md/raid1: use rdev in raid1_write_request directly
5aa705039c4fca84575539bfa2b8a28454a3d2ca md: raid1 add nowait support
c9aa889b035fca4598ae985a0f0c76ebbb547ad2 md: raid10 add nowait support
b74525f21e33aba6360978d2af81e920a1806c78 RDMA/core: Delete useless module.h include
9fd0eb7c3c73c80a7bbe28dc71ae8ec5698a7e84 RDMA/rxe: Move mcg_lock to rxe
d572405518ffd7c21882c1f2e9a568f2e8548d0b RDMA/rxe: Use kzmalloc/kfree for mca
5bc15d1f7e3c9b84b40e020983e2cee19a546e72 RDMA/rxe: Replace grp by mcg, mce by mca
8a99c81f1231786c364963a9f335eab2cca816a4 RDMA/rxe: Replace int num_qp by atomic_t qp_num
8a0a5fe0c462438a8c423ebaa0fbb7af5055a155 RDMA/rxe: Replace pool key by rxe->mcg_tree
d2ccf0411d253433409278cd517a091a5b7b613e RDMA/rxe: Remove key'ed object support
3810c1a1cbe8f3157f644b4e42f6c0157dfd22cb RDMA/rxe: Remove mcg from rxe pools
4a4f1073475796bcb343998bb1eddf6844b77963 RDMA/rxe: Collect mca init code in a subroutine
a181c4c81a7104370c6144df5daf914780f8e89e RDMA/rxe: Collect cleanup mca code in a subroutine
6090a0c4c7c6156f267ee217f6577eecd610a652 RDMA/rxe: Cleanup rxe_mcast.c
7c4a539ec38f4ce400a0f3fcb5ff6c940fcd67bb RDMA/core: Fix ib_qp_usecnt_dec() called when error
7922d3de4d270a9aedb71212fc0d5ae697ced516 Revert "RDMA/core: Fix ib_qp_usecnt_dec() called when error"
c9f4c695835c9c2085065a3adc1b57d2005b508b RDMA/rxe: Reverse the sense of RXE_POOL_NO_ALLOC
3c3e4d582bdc461081abea9de54eb4112a9a6283 RDMA/rxe: Delete _locked() APIs for pool objects
b4a47f6836b9c8fa60ccd8ff64f3c5f5b7d35afa RDMA/rxe: Replace obj by elem in declaration
3ccffe8abf2febab4642033d4675a20bbade151b RDMA/rxe: Move max_elem into rxe_type_info
3225717f6dfa29a6f03629b7a7f8492e1521d06d RDMA/rxe: Replace red-black trees by xarrays
3197706abd053275d2a561cfb7dc8f6cfaf7d02c RDMA/rxe: Use standard names for ref counting
290c4a902b79246ec55e477fc313f27f98393dee RDMA/rxe: Fix "Replace mr by rkey in responder resources"
a926a903b7dc39a8a949150258c09290998dd812 RDMA/rxe: Do not call  dev_mc_add/del() under a spinlock
bfdc0edd11f9501b891a069b5bbd3b16731941e1 RDMA/rxe: Change mcg_lock to a _bh lock
a9e8503def0fd4ed89ade1f61c315f904581d439 netfilter: nft_payload: don't allow th access for fragments
f2dd495a8d589371289981d5ed33e6873df94ecc netfilter: nf_conntrack_tcp: preserve liberal flag in tcp options
743b83f15d4069ea57c3e40996bf4a1077e0cdc1 netfilter: nft_socket: only do sk lookups when indev is available
c6a4254c18c6a2195cdf01f58a362392fbe81e85 doc/ip-sysctl: add bc_forwarding
dae181349f1e9d279f171afc708d2824ab35a86f tracing/osnoise: Support a list of trace_array *tr
ccb6754495ef253af5e1253434f0d21b6225c4ad tracing/osnoise: Remove TIMERLAT ifdefs from inside functions
2fac8d6486d5c34e2ec7028580142b8209da3f92 tracing/osnoise: Allow multiple instances of the same tracer
b14f4568d391c3b9bda9c078a32977e3f939f020 tracing/osnoise: Remove STACKTRACE ifdefs from inside functions
d7458bc0d8b409460713228d2ed279addb38947a tracing/osnoise: Make osnoise_instances static
0878355b51f5f26632e652c848a8e174bb02d22d tracing/osnoise: Properly unhook events if start_per_cpu_kthreads() fails
8abec36d1274bbd5ae8f36f3658b9abb3db56c31 dm crypt: do not wait for backlogged crypto request completion in softirq
c1346a1216ab5cb04a265380ac9035d91b16b6d5 NFSD: Replace the internals of the READ_BUF() macro
c941a96823cf52e742606b486b81ab346bf111c9 NFSD: Replace READ* macros that decode the fattr4 acl attribute
dabe91828f92cd493e9e75efbc10f9878d2a73fe NFSD: Replace READ* macros that decode the fattr4 security label attribute
66f0476c704c86d44aa9da19d4753df66f2dbc96 NFSD: Replace READ* macros that decode the fattr4 umask attribute
d1c263a031e876ac3ca5223c728e4d98ed50b3c0 NFSD: Replace READ* macros in nfsd4_decode_fattr()
000dfa18b3df9c62df5f768f9187cf1a94ded71d NFSD: Replace READ* macros in nfsd4_decode_create()
5dcbfabb676b2b6d97767209cf707eb463ca232a NFSD: Relocate nfsd4_decode_opaque()
796dd1c6b680959ac968b52aa507911b288b1749 NFSD: Add helper to decode NFSv4 verifiers
bf33bab3c4182cdd795983f14de5606e82fab377 NFSD: Add helper to decode OPEN's createhow4 argument
e6ec04b27bfb4869c0e35fbcf24333d379f101d5 NFSD: Add helper to decode OPEN's openflag4 argument
1708e50b0145f393acbec9e319bdf0e33f765d25 NFSD: Add helper to decode OPEN's open_claim4 argument
61e5e0b3ec713d1365008c8af3fe5fdd262e2a60 NFSD: Replace READ* macros in nfsd4_decode_open()
244e2befcba80f42c65293b6c56282bb78f9f417 NFSD: Replace READ* macros in nfsd4_decode_write()
1a99440807bfc66597aaa2e0f0213c319b023e34 NFSD: Replace READ* macros in nfsd4_decode_cb_sec()
571e0451c4de0a545960ffaea16d969931afc563 NFSD: Replace READ* macros in nfsd4_decode_bind_conn_to_session()
2548aa784d760567c2a77cbd8b7c55b211167c37 NFSD: Add a separate decoder to handle state_protect_ops
547bfeb4cd8d491aabbd656d5a6f410cb4249b4e NFSD: Add a separate decoder for ssv_sp_parms
523ec6ed6fb80fd1537d748a06bffd060a8b3235 NFSD: Add a helper to decode state_protect4_a
10ff84228197f47401833495ba19a50131323b4a NFSD: Add a helper to decode nfs_impl_id4
044959715f370b24870c95df3940add8710c5a29 NFSD: Replace READ* macros in nfsd4_decode_getdeviceinfo()
5185980d8a23001c2317c290129ab7ab20067e20 NFSD: Replace READ* macros in nfsd4_decode_layoutcommit()
645fcad371420913c30e9aca80fc0a38f3acf432 NFSD: Replace READ* macros in nfsd4_decode_layoutreturn()
e8febea7190bcbd1e608093acb67f2a5009556aa NFSD: Replace READ* macros in nfsd4_decode_copy()
3dfd0b0e15671e2b4047ccb9222432f0b2d930be NFSD: Replace READ* macros in nfsd4_decode_clone()
403366a7e8e2930002157525cd44add7fa01bca9 NFSD: Replace READ* macros in nfsd4_decode_setxattr()
d9b74bdac6f24afc3101b6a5b6f59842610c9c94 NFSD: Replace READ* macros in nfsd4_decode_compound()
5cfc822f3e77b0477e6602d399116130317f537a NFSD: Remove macros that are no longer used
7b723008f9c95624c848fad661c01b06e47b20da NFSD: Restore NFSv4 decoding's SAVEMEM functionality
9cedc2e64c296efb3bebe93a0ceeb5e71e8d722d NFSD: Update READDIR3args decoders to use struct xdr_stream
8688361ae2edb8f7e61d926dc5000c9a44f29370 NFSD: Update the NFSv2 READDIR argument decoder to use struct xdr_stream
bddfdbcddbe267519cd36aeb115fdf8620980111 NFSD: Extract the svcxdr_init_encode() helper
ecb7a085ac15a8844ebf12fca6ae51ce71ac9b3b NFSD: Update the NFSv3 WRITE3res encoder to use struct xdr_stream
5ef2826c761079e27904c85034df34e601b82d94 NFSD: Update the NFSv3 COMMIT3res encoder to use struct xdr_stream
a1409e2de4f11034c8eb30775cc3e37039a4ef13 NFSD: Count bytes instead of pages in the NFSv3 READDIR encoder
e4ccfe3014de435984939a3d84b7f241d3b57b0d NFSD: Update the NFSv3 READDIR3res encoder to use struct xdr_stream
7f87fc2d34d475225e78b7f5c4eabb121f4282b2 NFSD: Update NFSv3 READDIR entry encoders to use struct xdr_stream
1411934627f9fe31a36ac8c43179ce9b63edce5c NFSD: Remove unused NFSv3 directory entry encoders
8141d6a2bb6c655ff0c0b81ced80d9025f03e926 NFSD: Count bytes instead of pages in the NFSv2 READDIR encoder
94c8f8c682a6497af7ea71351b18f637c6337d42 NFSD: Update the NFSv2 READDIR result encoder to use struct xdr_stream
f5dcccd647da513a89f3b6ca392b0c1eb050b9fc NFSD: Update the NFSv2 READDIR entry encoder to use struct xdr_stream
8a2cf9f5709cc20a1114a7d22655928314fc86f8 NFSD: Remove unused NFSv2 directory entry encoders
1416f435303d81070c6bcf5a4a9b4ed0f7a9f013 NFSD: Clean up after updating NFSv3 ACL encoders
63cdd7edfd2871e63f4ca001ff6b8e1e166a74ae NFS: Fix up statx() results
1f3208b2d6975f31b9c7c6bf174b84fe9c97492f NFS: Add a cache validity flag argument to nfs_revalidate_inode()
13c0b082b6a90b1b87b5fb100983d05bcc75d9b6 NFS: Replace use of NFS_INO_REVAL_PAGECACHE when checking cache validity
fabf2b341502e894001d70f91309dd6f3785e2dc NFS: Separate tracking of file nlinks cache validity from the mode/uid/gid
720869eb19f3161980d6d4631d3df7e8c5355993 NFS: Separate tracking of file mode cache validity from the uid/gid
04c63498b6d4ea445cd2cb02599467b48687244b NFS: Simplify cache consistency in nfs_check_inode_attributes()
7f08a3359a3c1e39c2a118fbbe583d8c8db14ace NFSv4: Add support for the NFSv4.2 "change_attr_type" attribute
82eae5a432cb2d50d7ea51428dcad7894e4165fe NFSv4: nfs4_inc/dec_nlink_locked should also invalidate ctime
1301e421b75b90b1a6101961b3aca2d91a9a0599 NFSv4: link must update the inode nlink.
cc7f2dae63bca9579d65a46f3bf2c48a15961e19 NFS: Don't store NFS_INO_REVAL_FORCED
ce62b114bbad9346641d16853c528ba01513e1b0 NFS: Split attribute support out from the server capabilities
0b4f132b15f988831dfca8f96af272e437eacf05 NFS: Ensure the NFS_CAP_SECURITY_LABEL capability is set when appropriate
0bfaacac57e64aa342f865b8ddcab06ca59a6f83 NFSD: Remove trace_nfsd_clid_inuse_err
7e3b32ace6094aadfa2e1e54ca4c6bbfd07646af NFSD: Add nfsd_clid_confirmed tracepoint
cee8aa074281e5269d8404be2b6388bb29ea8efc NFSD: Add nfsd_clid_reclaim_complete tracepoint
c41a9b7a906fb872f8b2b1a34d2a1d5ef7f94adb NFSD: Add nfsd_clid_destroyed tracepoint
2958d2ee71021b6c44212ec6c2a39cc71d9cd4a9 NFSD: Add a couple more nfsd_clid_expired call sites
237f91c85acef206a33bc02f3c4e856128fd7994 NFSD: Add tracepoints for SETCLIENTID edge cases
e8f80c5545ec5794644b48537449e48b009d608d NFSD: Add tracepoints for EXCHANGEID edge cases
eeeadbb9bd5652c47bb9b31aa9ad8b4f1b4aa8b3 nfsd: move some commit_metadata()s outside the inode lock
e93a5e9306a576011f03011b492d4fbaa274477b NFSv4: Add support for application leases underpinned by a delegation
213bb58475b57786e4336bc8bfd5029e16257c49 NFS: Fix up inode attribute revalidation timeouts
df2c7b951f439a0342495a4a049d808f679c474c NFSv4: setlease should return EAGAIN if locks are not available
78c14b385c195d4f25ab7c19186b8897a5b9ae3f treewide: Add missing semicolons to __assign_str uses
be630b9150b0321e21dbd951d715cff72c73b0c6 SUNRPC: xprt_retransmit() displays the the NULL procedure incorrectly
be17b8caf3a3a20c4d910265a6287b07ab444795 SUNRPC: Record timeout value in xprt_retransmit tracepoint
71d3d0ebc894294ef9454e45a3ac2e9ba60b3351 SUNRPC: Convert rpc_client refcount to use refcount_t
d27b74a8675ca34dfd54c4bc4b3a11b7aa87e1a3 NFSD: Use new __string_len C macros for nfsd_clid_class
ef5825e3cf0d0af657f5fb4dd86d750ed42fee0a NFSD: move filehandle format declarations out of "uapi".
c645a883df34ee10b884ec921e850def54b7f461 NFSD: drop support for ancient filehandles
d8b26071e65e80a348602b939e333242f989221b NFSD: simplify struct nfsfh
f49b68ddc9d7dddf1530312108a648dd815a2f30 SUNRPC: xdr_stream_subsegment() must handle non-zero page_bases
dae9a6cab8009e526570e7477ce858dcdfeb256e NFSD: Have legacy NFSD WRITE decoders use xdr_stream_subsegment()
eea413308f2e6deb00f061f18081a53f3ecc8cc6 NFS: Default change_attr_type to NFS4_CHANGE_TYPE_IS_UNDEFINED
488796ec1e39fb9194cc8175f770823d40fbf0ed NFS: Don't set NFS_INO_DATA_INVAL_DEFER and NFS_INO_INVALID_DATA
36a10a3c4cb6ea7c8bd895c16b3f59e1f0db2f6a NFS: Remove unnecessary page cache invalidations
8e09650f5ec68858f4b8b67cdef9e2ece9b208f3 NFS: Remove unnecessary TRACE_DEFINE_ENUM()s
110cb2d2f9326030f13b7ec85d6d482934ea5462 NFS: Instrument i_size_write()
16c663642c7ec03cd4cee5fec520bb69e97babe4 SUNRPC: Replace the "__be32 *p" parameter to .pc_decode
c44b31c263798ec34614dd394c31ef1a2e7e716e SUNRPC: Change return value type of .pc_decode
3b0ebb255fdc49a3d340846deebf045ef58ec744 NFSD: Save location of NFSv4 COMPOUND status
fda494411485aff91768842c532f90fb8eb54943 SUNRPC: Replace the "__be32 *p" parameter to .pc_encode
130e2054d4a652a2bd79fb1557ddcd19c053cb37 SUNRPC: Change return value type of .pc_encode
133a48abf6ecc535d7eddc6da1c3e4c972445882 NFS: Fix up commit deadlocks
b4776a341ec05e809d21e98db5ed49dbdc81d5d8 SUNRPC: Tracepoints should display tk_pid and cl_clid as a fixed-size field
76497b1adb89175eee85afc437f08a68247314b3 SUNRPC: Use BIT() macro in rpc_show_xprt_state()
86882c75464920684d39b747d7f52a75200cc24f NFS: Remove --> and <-- dprintk call sites
01dde76e471229e3437a2686c572f4980b2c483e NFS: Create an nfs4_server_set_init_caps() function
280254b605ffb6ec88f33b43a360aa6b5247bef7 SUNRPC: Clean up xs_tcp_setup_sock()
9d2d48bbbdabf7b2f029369c4f926d133c1d47ad NFS: Move generic FS show macros to global header
8791545eda52e8f3bc48e3cd902e38bf4ba4c9de NFS: Move NFS protocol display macros to global header
127becabad7bef13b2e2ab795953cf8e9cce8aab NFSv4.2 add tracepoint to OFFLOAD_CANCEL
2ef61e0eaa333e4e9c348c41a4b7abfb34b8736d NFS: Remove the nfs4_label from the nfs4_getattr_res
cf7ab00aabbf9c8f1ec72edff15849ddc23aa6a7 NFS: Remove the nfs4_label argument from nfs_fhget()
dd225cb3b02b827271a2284f89102fc81efcbf6f NFS: Remove the nfs4_label argument from nfs_setsecurity
1e2f67da89310c3b879c4e18d0d1d57e9d901745 NFS: Remove the nfs4_label argument from decode_getattr_*() functions
c0019b7db1d7ac62c711cda6b357a659d46428fe NFSD: Fix exposure in nfsd4_decode_bitmap()
93c2e5e0a9ecfc183ab1204e1ecaa7ee7eb2a61a NFS: Add a tracepoint to show the results of nfs_set_cache_invalid()
53b1119a6e5028b125f431a0116ba73510d82a72 NFSD: Fix READDIR buffer overflow
0cb4d23ae08c48f6bf3c29a8e5c4a74b8388b960 NFSD: Fix the behavior of READ near OFFSET_MAX
e6faac3f58c7c4176b66f63def17a34232a17b0e NFSD: Fix ia_size underflow
3f965021c8bc38965ecb1924f570c4842b33d408 NFSD: COMMIT operations must not return NFS?ERR_INVAL
c306d737691ef84305d4ed0d302c63db2932f0bb NFSD: Deprecate NFS_OFFSET_MAX

__CHANGES NOT IN UPSTREAM________________
redhat: disable more noisy rpminspect tests
mm: thp: replace the page lock with the seqlock for the THP mapcount
mm: do_wp_page: deduplicate smart_lock_page
mm: hugetlbfs: gup_must_unshare() cleanup
mm: GUP: cleanup FOLL_UNSHARE
mm: COW: skip the page lock in the COW copy path
mm: gup: gup_must_unshare() use can_read_pin_swap_page()
mm: hugetlbfs: gup: gup_must_unshare(): enable hugetlbfs
mm: hugetlbfs: FOLL_FAULT_UNSHARE
mm: hugetlbfs: COR: copy-on-read fault
mm: gup: FOLL_UNSHARE RHEL
mm: gup: FOLL_NOUNSHARE: optimize follow_page
mm: gup: FOLL_UNSHARE
mm: gup: gup_must_unshare()
mm: gup: COR: copy-on-read fault
mm: thp: introduce page_trans_huge_anon_shared
mm: thp: stabilize the THP mapcount in page_remove_anon_compound_rmap
mm: thp: make the THP mapcount atomic with a seqlock
mm: thp: consolidate mapcount logic on THP split
Fix up versioning for maintainer builds
redhat: indicate HEAD state in tarball/rpm name
RHEL only Changes to support block changes not picked up
kabi: introduce the kabi_aux_*() helpers
sched/vtime: Move task_struct_rh->vtime_cpu back to vtime structure
redhat/configs: Add CONFIG_X86_AMD_PSTATE
redhat: further rpminspect tuning
enable DAMON configs
Revert: sched: Disable allowing small imbalance to preserve RHEL performance
ahci: thunderx2: Fix workaround to use new inline function
redhat/configs: Add CONFIG_ARM64_TAGGED_ADDR_ABI
bnxt_en: make hw-tc-offload default to off
platform/x86: Add config file for Intel ishtp eclite driver
redhat/configs: enable CONFIG_AMD_PTDMA for x86_64
isert: support for unsolicited NOPIN with no response
iscsit: increment max_cmd_sn for isert on command release
redhat: configs: Disable CONFIG_MPLS for s390x/zfcpdump
CI: Drop baseline runs
