arm64: memory: Add comments to end of non-trivial #ifdef blocks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Will Deacon <will@kernel.org>
commit 68933aa973740796895e297e7dbf7baf3e9c51b1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/68933aa9.failed

Commenting the #endif of a multi-statement #ifdef block with the
condition which guards it is useful and can save having to scroll back
through the file to figure out which set of Kconfig options apply to
a particular piece of code.

	Reviewed-by: Steve Capper <steve.capper@arm.com>
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Reviewed-by: Mark Rutland <mark.rutland@arm.com>
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 68933aa973740796895e297e7dbf7baf3e9c51b1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/memory.h
diff --cc arch/arm64/include/asm/memory.h
index 6d1182b5d477,27f35ce2e2ed..000000000000
--- a/arch/arm64/include/asm/memory.h
+++ b/arch/arm64/include/asm/memory.h
@@@ -82,7 -63,8 +83,12 @@@
  #else
  #define VA_BITS_MIN		(VA_BITS)
  #endif
++<<<<<<< HEAD
 +#define _PAGE_END(va)		(-(UL(1) << ((va) - 1)))
++=======
+ 
+ #define _VA_START(va)		(-(UL(1) << ((va) - 1)))
++>>>>>>> 68933aa97374 (arm64: memory: Add comments to end of non-trivial #ifdef blocks)
  
  #define KERNEL_START      _text
  #define KERNEL_END        _end
@@@ -101,7 -87,7 +107,11 @@@
  #define KASAN_THREAD_SHIFT	1
  #else
  #define KASAN_THREAD_SHIFT	0
++<<<<<<< HEAD
 +#define PAGE_END		(_PAGE_END(VA_BITS_MIN))
++=======
+ #define KASAN_SHADOW_END	(_VA_START(VA_BITS_MIN))
++>>>>>>> 68933aa97374 (arm64: memory: Add comments to end of non-trivial #ifdef blocks)
  #endif /* CONFIG_KASAN */
  
  #define MIN_THREAD_SHIFT	(14 + KASAN_THREAD_SHIFT)
@@@ -252,7 -226,7 +262,11 @@@ static inline unsigned long kaslr_offse
  #define __tag_shifted(tag)	0UL
  #define __tag_reset(addr)	(addr)
  #define __tag_get(addr)		0
++<<<<<<< HEAD
 +#endif /* CONFIG_KASAN_SW_TAGS || CONFIG_KASAN_HW_TAGS */
++=======
+ #endif /* CONFIG_KASAN_SW_TAGS */
++>>>>>>> 68933aa97374 (arm64: memory: Add comments to end of non-trivial #ifdef blocks)
  
  static inline const void *__tag_set(const void *addr, u8 tag)
  {
@@@ -300,9 -265,9 +314,9 @@@ extern phys_addr_t __phys_addr_symbol(u
  #else
  #define __virt_to_phys(x)	__virt_to_phys_nodebug(x)
  #define __phys_addr_symbol(x)	__pa_symbol_nodebug(x)
- #endif
+ #endif /* CONFIG_DEBUG_VIRTUAL */
  
 -#define __phys_to_virt(x)	((unsigned long)((x) - physvirt_offset))
 +#define __phys_to_virt(x)	((unsigned long)((x) - PHYS_OFFSET) | PAGE_OFFSET)
  #define __phys_to_kimg(x)	((unsigned long)((x) + kimage_voffset))
  
  /*
@@@ -360,10 -325,10 +374,10 @@@ static inline void *phys_to_virt(phys_a
  	u64 __addr = VMEMMAP_START + (__idx * sizeof(struct page));	\
  	(struct page *)__addr;						\
  })
- #endif
+ #endif /* !CONFIG_SPARSEMEM_VMEMMAP || CONFIG_DEBUG_VIRTUAL */
  
  #define virt_addr_valid(addr)	({					\
 -	__typeof__(addr) __addr = addr;					\
 +	__typeof__(addr) __addr = __tag_reset(addr);			\
  	__is_lm_address(__addr) && pfn_valid(virt_to_pfn(__addr));	\
  })
  
* Unmerged path arch/arm64/include/asm/memory.h
