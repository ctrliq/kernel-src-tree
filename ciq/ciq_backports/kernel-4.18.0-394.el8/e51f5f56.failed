arm64: suspend: restore the kernel ptrauth keys

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Amit Daniel Kachhap <amit.kachhap@arm.com>
commit e51f5f56dd69e009e22af8a4354dce0817a7addb
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/e51f5f56.failed

This patch restores the kernel keys from current task during cpu resume
after the mmu is turned on and ptrauth is enabled.

A flag is added in macro ptrauth_keys_install_kernel to check if isb
instruction needs to be executed.

	Signed-off-by: Amit Daniel Kachhap <amit.kachhap@arm.com>
	Reviewed-by: Vincenzo Frascino <Vincenzo.Frascino@arm.com>
	Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
(cherry picked from commit e51f5f56dd69e009e22af8a4354dce0817a7addb)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/asm_pointer_auth.h
#	arch/arm64/kernel/entry.S
diff --cc arch/arm64/kernel/entry.S
index 2ca4c88164f6,6273d7bed962..000000000000
--- a/arch/arm64/kernel/entry.S
+++ b/arch/arm64/kernel/entry.S
@@@ -185,14 -176,9 +185,18 @@@ alternative_cb_en
  	ldr	x19, [tsk, #TSK_TI_FLAGS]
  	disable_step_tsk x19, x20
  
 -	apply_ssbd 1, x22, x23
 +	apply_ssbd 1, 1f, x22, x23
  
 +#ifdef CONFIG_ARM64_SSBD
 +	ldp	x0, x1, [sp, #16 * 0]
 +	ldp	x2, x3, [sp, #16 * 1]
 +#endif
 +1:
 +
++<<<<<<< HEAD
++=======
+ 	ptrauth_keys_install_kernel tsk, 1, x20, x22, x23
++>>>>>>> e51f5f56dd69 (arm64: suspend: restore the kernel ptrauth keys)
  	.else
  	add	x21, sp, #S_FRAME_SIZE
  	get_current_task tsk
@@@ -1169,6 -900,7 +1173,10 @@@ ENTRY(cpu_switch_to
  	ldr	lr, [x8]
  	mov	sp, x9
  	msr	sp_el0, x1
++<<<<<<< HEAD
++=======
+ 	ptrauth_keys_install_kernel x1, 1, x8, x9, x10
++>>>>>>> e51f5f56dd69 (arm64: suspend: restore the kernel ptrauth keys)
  	ret
  ENDPROC(cpu_switch_to)
  NOKPROBE(cpu_switch_to)
* Unmerged path arch/arm64/include/asm/asm_pointer_auth.h
* Unmerged path arch/arm64/include/asm/asm_pointer_auth.h
* Unmerged path arch/arm64/kernel/entry.S
diff --git a/arch/arm64/mm/proc.S b/arch/arm64/mm/proc.S
index 768b1405972d..6184644e0a1b 100644
--- a/arch/arm64/mm/proc.S
+++ b/arch/arm64/mm/proc.S
@@ -22,6 +22,7 @@
 #include <linux/linkage.h>
 #include <asm/assembler.h>
 #include <asm/asm-offsets.h>
+#include <asm/asm_pointer_auth.h>
 #include <asm/hwcap.h>
 #include <asm/pgtable.h>
 #include <asm/pgtable-hwdef.h>
@@ -148,6 +149,7 @@ alternative_if ARM64_HAS_RAS_EXTN
 	msr_s	SYS_DISR_EL1, xzr
 alternative_else_nop_endif
 
+	ptrauth_keys_install_kernel x14, 0, x1, x2, x3
 	isb
 	ret
 ENDPROC(cpu_do_resume)
