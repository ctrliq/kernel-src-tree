devlink: Remove extra device_lock assert checks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Leon Romanovsky <leonro@nvidia.com>
commit cb3dc8901ba4f748f46287a42049a3a5c1f6b63c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/cb3dc890.failed

PCI core code in the pci_call_probe() has a path that doesn't hold
device_lock. It happens because the ->probe() is called through the
workqueue mechanism.

   349 static int pci_call_probe(struct pci_driver *drv, struct pci_dev *dev,
   350                           const struct pci_device_id *id)
   351 {
   352
....
   377         if (cpu < nr_cpu_ids)
   378                 error = work_on_cpu(cpu, local_pci_probe, &ddi);

Luckily enough, the core still ensures that only single flow is executed,
so it safe to remove the assert checks that anyway were added for annotations
purposes.

Fixes: b88f7b1203bf ("devlink: Annotate devlink API calls")
	Reported-by: Amit Cohen <amcohen@nvidia.com>
	Signed-off-by: Leon Romanovsky <leonro@nvidia.com>
	Signed-off-by: David S. Miller <davem@davemloft.net>
(cherry picked from commit cb3dc8901ba4f748f46287a42049a3a5c1f6b63c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	net/core/devlink.c
diff --cc net/core/devlink.c
index 3e56c892bf42,3464854015a2..000000000000
--- a/net/core/devlink.c
+++ b/net/core/devlink.c
@@@ -8950,17 -9142,16 +8950,23 @@@ EXPORT_SYMBOL_GPL(devlink_alloc_ns)
   *	devlink_register - Register devlink instance
   *
   *	@devlink: devlink
 + *	@dev: parent device
   */
 -void devlink_register(struct devlink *devlink)
 +int devlink_register(struct devlink *devlink, struct device *dev)
  {
++<<<<<<< HEAD
 +	WARN_ON(devlink->dev);
 +	devlink->dev = dev;
++=======
+ 	ASSERT_DEVLINK_NOT_REGISTERED(devlink);
+ 	/* Make sure that we are in .probe() routine */
+ 
++>>>>>>> cb3dc8901ba4 (devlink: Remove extra device_lock assert checks)
  	mutex_lock(&devlink_mutex);
 -	xa_set_mark(&devlinks, devlink->index, DEVLINK_REGISTERED);
 -	devlink_notify_register(devlink);
 +	list_add_tail(&devlink->list, &devlink_list);
 +	devlink_notify(devlink, DEVLINK_CMD_NEW);
  	mutex_unlock(&devlink_mutex);
 +	return 0;
  }
  EXPORT_SYMBOL_GPL(devlink_register);
  
@@@ -8971,6 -9162,9 +8977,12 @@@
   */
  void devlink_unregister(struct devlink *devlink)
  {
++<<<<<<< HEAD
++=======
+ 	ASSERT_DEVLINK_REGISTERED(devlink);
+ 	/* Make sure that we are in .remove() routine */
+ 
++>>>>>>> cb3dc8901ba4 (devlink: Remove extra device_lock assert checks)
  	devlink_put(devlink);
  	wait_for_completion(&devlink->comp);
  
* Unmerged path net/core/devlink.c
