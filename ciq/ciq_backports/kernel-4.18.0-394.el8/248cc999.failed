sched/cpuacct: Fix charge percpu cpuusage

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chengming Zhou <zhouchengming@bytedance.com>
commit 248cc9993d1cc12b8e9ed716cc3fc09f6c3517dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/248cc999.failed

The cpuacct_account_field() is always called by the current task
itself, so it's ok to use __this_cpu_add() to charge the tick time.

But cpuacct_charge() maybe called by update_curr() in load_balance()
on a random CPU, different from the CPU on which the task is running.
So __this_cpu_add() will charge that cputime to a random incorrect CPU.

Fixes: 73e6aafd9ea8 ("sched/cpuacct: Simplify the cpuacct code")
	Reported-by: Minye Zhu <zhuminye@bytedance.com>
	Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
	Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
	Acked-by: Tejun Heo <tj@kernel.org>
Link: https://lore.kernel.org/r/20220220051426.5274-1-zhouchengming@bytedance.com
(cherry picked from commit 248cc9993d1cc12b8e9ed716cc3fc09f6c3517dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/sched/cpuacct.c
diff --cc kernel/sched/cpuacct.c
index d66381bc98f2,307800586ac8..000000000000
--- a/kernel/sched/cpuacct.c
+++ b/kernel/sched/cpuacct.c
@@@ -344,17 -334,13 +344,22 @@@ static struct cftype files[] = 
   */
  void cpuacct_charge(struct task_struct *tsk, u64 cputime)
  {
+ 	unsigned int cpu = task_cpu(tsk);
  	struct cpuacct *ca;
 +	int index = CPUACCT_STAT_SYSTEM;
 +	struct pt_regs *regs = get_irq_regs() ? : task_pt_regs(tsk);
 +
 +	if (regs && user_mode(regs))
 +		index = CPUACCT_STAT_USER;
  
  	rcu_read_lock();
  
  	for (ca = task_ca(tsk); ca; ca = parent_ca(ca))
++<<<<<<< HEAD
 +		__this_cpu_add(ca->cpuusage->usages[index], cputime);
++=======
+ 		*per_cpu_ptr(ca->cpuusage, cpu) += cputime;
++>>>>>>> 248cc9993d1c (sched/cpuacct: Fix charge percpu cpuusage)
  
  	rcu_read_unlock();
  }
* Unmerged path kernel/sched/cpuacct.c
