arm64: compat: Hook up io_pgetevents() for 32-bit tasks

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Will Deacon <will.deacon@arm.com>
commit 7e0b44e870cf265bb4a73fd25e0508c7363fcbd6
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/7e0b44e8.failed

Commit 73aeb2cbcdc9 ("ARM: 8787/1: wire up io_pgetevents syscall")
hooked up the io_pgetevents() system call for 32-bit ARM, so we can
do the same for the compat wrapper on arm64.

	Signed-off-by: Will Deacon <will.deacon@arm.com>
(cherry picked from commit 7e0b44e870cf265bb4a73fd25e0508c7363fcbd6)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/unistd.h
#	arch/arm64/include/asm/unistd32.h
diff --cc arch/arm64/include/asm/unistd.h
index 90cf35e237bb,a7b1fc58ffdf..000000000000
--- a/arch/arm64/include/asm/unistd.h
+++ b/arch/arm64/include/asm/unistd.h
@@@ -49,7 -44,7 +49,11 @@@
  #define __ARM_NR_compat_set_tls		(__ARM_NR_COMPAT_BASE + 5)
  #define __ARM_NR_COMPAT_END		(__ARM_NR_COMPAT_BASE + 0x800)
  
++<<<<<<< HEAD
 +#define __NR_compat_syscalls		440
++=======
+ #define __NR_compat_syscalls		400
++>>>>>>> 7e0b44e870cf (arm64: compat: Hook up io_pgetevents() for 32-bit tasks)
  #endif
  
  #define __ARCH_WANT_SYS_CLONE
diff --cc arch/arm64/include/asm/unistd32.h
index 4a2dce9fb679,04ee190b90fe..000000000000
--- a/arch/arm64/include/asm/unistd32.h
+++ b/arch/arm64/include/asm/unistd32.h
@@@ -819,63 -819,8 +819,68 @@@ __SYSCALL(__NR_pkey_free, sys_pkey_free
  __SYSCALL(__NR_statx, sys_statx)
  #define __NR_rseq 398
  __SYSCALL(__NR_rseq, sys_rseq)
++<<<<<<< HEAD
 +/* 402 is unused */
 +#define __NR_clock_gettime64 403
 +__SYSCALL(__NR_clock_gettime64, sys_clock_gettime)
 +#define __NR_clock_settime64 404
 +__SYSCALL(__NR_clock_settime64, sys_clock_settime)
 +#define __NR_clock_adjtime64 405
 +__SYSCALL(__NR_clock_adjtime64, sys_clock_adjtime)
 +#define __NR_clock_getres_time64 406
 +__SYSCALL(__NR_clock_getres_time64, sys_clock_getres)
 +#define __NR_clock_nanosleep_time64 407
 +__SYSCALL(__NR_clock_nanosleep_time64, sys_clock_nanosleep)
 +#define __NR_timer_gettime64 408
 +__SYSCALL(__NR_timer_gettime64, sys_timer_gettime)
 +#define __NR_timer_settime64 409
 +__SYSCALL(__NR_timer_settime64, sys_timer_settime)
 +#define __NR_timerfd_gettime64 410
 +__SYSCALL(__NR_timerfd_gettime64, sys_timerfd_gettime)
 +#define __NR_timerfd_settime64 411
 +__SYSCALL(__NR_timerfd_settime64, sys_timerfd_settime)
 +#define __NR_utimensat_time64 412
 +__SYSCALL(__NR_utimensat_time64, sys_utimensat)
 +#define __NR_io_pgetevents_time64 416
 +__SYSCALL(__NR_io_pgetevents_time64, sys_io_pgetevents)
 +#define __NR_mq_timedsend_time64 418
 +__SYSCALL(__NR_mq_timedsend_time64, sys_mq_timedsend)
 +#define __NR_mq_timedreceive_time64 419
 +__SYSCALL(__NR_mq_timedreceive_time64, sys_mq_timedreceive)
 +#define __NR_semtimedop_time64 420
 +__SYSCALL(__NR_semtimedop_time64, sys_semtimedop)
 +#define __NR_futex_time64 422
 +__SYSCALL(__NR_futex_time64, sys_futex)
 +#define __NR_sched_rr_get_interval_time64 423
 +__SYSCALL(__NR_sched_rr_get_interval_time64, sys_sched_rr_get_interval)
 +#define __NR_pidfd_send_signal 424
 +__SYSCALL(__NR_pidfd_send_signal, sys_pidfd_send_signal)
 +#define __NR_io_uring_setup 425
 +__SYSCALL(__NR_io_uring_setup, sys_io_uring_setup)
 +#define __NR_io_uring_enter 426
 +__SYSCALL(__NR_io_uring_enter, sys_io_uring_enter)
 +#define __NR_io_uring_register 427
 +__SYSCALL(__NR_io_uring_register, sys_io_uring_register)
 +#define __NR_open_tree 428
 +__SYSCALL(__NR_open_tree, sys_open_tree)
 +#define __NR_move_mount 429
 +__SYSCALL(__NR_move_mount, sys_move_mount)
 +#define __NR_fsopen 430
 +__SYSCALL(__NR_fsopen, sys_fsopen)
 +#define __NR_fsconfig 431
 +__SYSCALL(__NR_fsconfig, sys_fsconfig)
 +#define __NR_fsmount 432
 +__SYSCALL(__NR_fsmount, sys_fsmount)
 +#define __NR_fspick 433
 +__SYSCALL(__NR_fspick, sys_fspick)
 +#define __NR_close_range 436
 +__SYSCALL(__NR_close_range, sys_close_range)
 +#define __NR_faccessat2 439
 +__SYSCALL(__NR_faccessat2, sys_faccessat2)
++=======
+ #define __NR_io_pgetevents 399
+ __SYSCALL(__NR_io_pgetevents, compat_sys_io_pgetevents)
++>>>>>>> 7e0b44e870cf (arm64: compat: Hook up io_pgetevents() for 32-bit tasks)
  
  /*
   * Please add new compat syscalls above this comment and update
* Unmerged path arch/arm64/include/asm/unistd.h
* Unmerged path arch/arm64/include/asm/unistd32.h
