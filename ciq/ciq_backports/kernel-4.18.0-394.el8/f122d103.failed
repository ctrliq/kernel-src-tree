blk-cgroup: set blkg iostat after percpu stat aggregation

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chengming Zhou <zhouchengming@bytedance.com>
commit f122d103b564e5fb7c82de902c6f8f6cbdf50ec9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/f122d103.failed

Don't need to do blkg_iostat_set for top blkg iostat on each CPU,
so move it after percpu stat aggregation.

Fixes: ef45fe470e1e ("blk-cgroup: show global disk stats in root cgroup io.stat")
	Signed-off-by: Chengming Zhou <zhouchengming@bytedance.com>
	Acked-by: Tejun Heo <tj@kernel.org>
Link: https://lore.kernel.org/r/20220213085902.88884-1-zhouchengming@bytedance.com
	Signed-off-by: Jens Axboe <axboe@kernel.dk>
(cherry picked from commit f122d103b564e5fb7c82de902c6f8f6cbdf50ec9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	block/blk-cgroup.c
diff --cc block/blk-cgroup.c
index dce32aa3e90c,fa063c6c0338..000000000000
--- a/block/blk-cgroup.c
+++ b/block/blk-cgroup.c
@@@ -877,18 -851,18 +877,18 @@@ static void blkcg_fill_root_iostats(voi
  
  	class_dev_iter_init(&iter, &block_class, NULL, &disk_type);
  	while ((dev = class_dev_iter_next(&iter))) {
 -		struct block_device *bdev = dev_to_bdev(dev);
 -		struct blkcg_gq *blkg =
 -			blk_queue_root_blkg(bdev_get_queue(bdev));
 +		struct gendisk *disk = dev_to_disk(dev);
 +		struct hd_struct *part = disk_get_part(disk, 0);
 +		struct blkcg_gq *blkg = blk_queue_root_blkg(disk->queue);
  		struct blkg_iostat tmp;
  		int cpu;
+ 		unsigned long flags;
  
  		memset(&tmp, 0, sizeof(tmp));
  		for_each_possible_cpu(cpu) {
  			struct disk_stats *cpu_dkstats;
- 			unsigned long flags;
  
 -			cpu_dkstats = per_cpu_ptr(bdev->bd_stats, cpu);
 +			cpu_dkstats = per_cpu_ptr(part->dkstats, cpu);
  			tmp.ios[BLKG_IOSTAT_READ] +=
  				cpu_dkstats->ios[STAT_READ];
  			tmp.ios[BLKG_IOSTAT_WRITE] +=
@@@ -902,12 -876,11 +902,15 @@@
  				cpu_dkstats->sectors[STAT_WRITE] << 9;
  			tmp.bytes[BLKG_IOSTAT_DISCARD] +=
  				cpu_dkstats->sectors[STAT_DISCARD] << 9;
- 
- 			flags = u64_stats_update_begin_irqsave(&blkg->iostat.sync);
- 			blkg_iostat_set(&blkg->iostat.cur, &tmp);
- 			u64_stats_update_end_irqrestore(&blkg->iostat.sync, flags);
  		}
++<<<<<<< HEAD
 +		disk_put_part(part);
++=======
+ 
+ 		flags = u64_stats_update_begin_irqsave(&blkg->iostat.sync);
+ 		blkg_iostat_set(&blkg->iostat.cur, &tmp);
+ 		u64_stats_update_end_irqrestore(&blkg->iostat.sync, flags);
++>>>>>>> f122d103b564 (blk-cgroup: set blkg iostat after percpu stat aggregation)
  	}
  }
  
* Unmerged path block/blk-cgroup.c
