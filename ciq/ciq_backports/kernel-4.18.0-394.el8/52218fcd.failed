arm64: tlb: fix the TTL value of tlb_get_level

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Zhenyu Ye <yezhenyu2@huawei.com>
commit 52218fcd61cb42bde0d301db4acb3ffdf3463cc7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/52218fcd.failed

The TTL field indicates the level of page table walk holding the *leaf*
entry for the address being invalidated. But currently, the TTL field
may be set to an incorrent value in the following stack:

pte_free_tlb
    __pte_free_tlb
        tlb_remove_table
            tlb_table_invalidate
                tlb_flush_mmu_tlbonly
                    tlb_flush

In this case, we just want to flush a PTE page, but the tlb->cleared_pmds
is set and we get tlb_level = 2 in the tlb_get_level() function. This may
cause some unexpected problems.

This patch set the TTL field to 0 if tlb->freed_tables is set. The
tlb->freed_tables indicates page table pages are freed, not the leaf
entry.

	Cc: <stable@vger.kernel.org> # 5.9.x
Fixes: c4ab2cbc1d87 ("arm64: tlb: Set the TTL field in flush_tlb_range")
	Acked-by: Catalin Marinas <catalin.marinas@arm.com>
	Reported-by: ZhuRui <zhurui3@huawei.com>
	Signed-off-by: Zhenyu Ye <yezhenyu2@huawei.com>
Link: https://lore.kernel.org/r/b80ead47-1f88-3a00-18e1-cacc22f54cc4@huawei.com
	Signed-off-by: Will Deacon <will@kernel.org>
(cherry picked from commit 52218fcd61cb42bde0d301db4acb3ffdf3463cc7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/arm64/include/asm/tlb.h
diff --cc arch/arm64/include/asm/tlb.h
index f3b4951d7cf6,c995d1f4594f..000000000000
--- a/arch/arm64/include/asm/tlb.h
+++ b/arch/arm64/include/asm/tlb.h
@@@ -32,6 -21,35 +32,38 @@@ static void tlb_flush(struct mmu_gathe
  
  #include <asm-generic/tlb.h>
  
++<<<<<<< HEAD
++=======
+ /*
+  * get the tlbi levels in arm64.  Default value is 0 if more than one
+  * of cleared_* is set or neither is set.
+  * Arm64 doesn't support p4ds now.
+  */
+ static inline int tlb_get_level(struct mmu_gather *tlb)
+ {
+ 	/* The TTL field is only valid for the leaf entry. */
+ 	if (tlb->freed_tables)
+ 		return 0;
+ 
+ 	if (tlb->cleared_ptes && !(tlb->cleared_pmds ||
+ 				   tlb->cleared_puds ||
+ 				   tlb->cleared_p4ds))
+ 		return 3;
+ 
+ 	if (tlb->cleared_pmds && !(tlb->cleared_ptes ||
+ 				   tlb->cleared_puds ||
+ 				   tlb->cleared_p4ds))
+ 		return 2;
+ 
+ 	if (tlb->cleared_puds && !(tlb->cleared_ptes ||
+ 				   tlb->cleared_pmds ||
+ 				   tlb->cleared_p4ds))
+ 		return 1;
+ 
+ 	return 0;
+ }
+ 
++>>>>>>> 52218fcd61cb (arm64: tlb: fix the TTL value of tlb_get_level)
  static inline void tlb_flush(struct mmu_gather *tlb)
  {
  	struct vm_area_struct vma = TLB_FLUSH_VMA(tlb->mm, 0);
* Unmerged path arch/arm64/include/asm/tlb.h
