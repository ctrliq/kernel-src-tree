NFSD: Save location of NFSv4 COMPOUND status

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit 3b0ebb255fdc49a3d340846deebf045ef58ec744
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/3b0ebb25.failed

Refactor: Currently nfs4svc_encode_compoundres() relies on the NFS
dispatcher to pass in the buffer location of the COMPOUND status.
Instead, save that buffer location in struct nfsd4_compoundres.

The compound tag follows immediately after.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
	Signed-off-by: J. Bruce Fields <bfields@redhat.com>
(cherry picked from commit 3b0ebb255fdc49a3d340846deebf045ef58ec744)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4proc.c
diff --cc fs/nfsd/nfs4proc.c
index 64ce01620a25,a36261f89bdf..000000000000
--- a/fs/nfsd/nfs4proc.c
+++ b/fs/nfsd/nfs4proc.c
@@@ -1998,10 -2460,14 +1998,19 @@@ nfsd4_proc_compound(struct svc_rqst *rq
  	struct nfsd_net *nn = net_generic(SVC_NET(rqstp), nfsd_net_id);
  	__be32		status;
  
++<<<<<<< HEAD
 +	svcxdr_init_encode(rqstp, resp);
 +	resp->tagp = resp->xdr.p;
++=======
+ 	resp->xdr = &rqstp->rq_res_stream;
+ 	resp->statusp = resp->xdr->p;
+ 
+ 	/* reserve space for: NFS status code */
+ 	xdr_reserve_space(resp->xdr, XDR_UNIT);
+ 
++>>>>>>> 3b0ebb255fdc (NFSD: Save location of NFSv4 COMPOUND status)
  	/* reserve space for: taglen, tag, and opcnt */
 -	xdr_reserve_space(resp->xdr, XDR_UNIT * 2 + args->taglen);
 +	xdr_reserve_space(&resp->xdr, 8 + args->taglen);
  	resp->taglen = args->taglen;
  	resp->tag = args->tag;
  	resp->rqstp = rqstp;
* Unmerged path fs/nfsd/nfs4proc.c
diff --git a/fs/nfsd/nfs4xdr.c b/fs/nfsd/nfs4xdr.c
index cf0d08d4c2a7..c91bcb8be9d6 100644
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@ -5044,11 +5044,16 @@ nfs4svc_encode_compoundres(struct svc_rqst *rqstp, __be32 *p)
 	WARN_ON_ONCE(buf->len != buf->head[0].iov_len + buf->page_len +
 				 buf->tail[0].iov_len);
 
-	*p = resp->cstate.status;
+	/*
+	 * Send buffer space for the following items is reserved
+	 * at the top of nfsd4_proc_compound().
+	 */
+	p = resp->statusp;
+
+	*p++ = resp->cstate.status;
 
 	rqstp->rq_next_page = resp->xdr.page_ptr + 1;
 
-	p = resp->tagp;
 	*p++ = htonl(resp->taglen);
 	memcpy(p, resp->tag, resp->taglen);
 	p += XDR_QUADLEN(resp->taglen);
diff --git a/fs/nfsd/xdr4.h b/fs/nfsd/xdr4.h
index 4ef0f6d3f1d7..883e9866bc8d 100644
--- a/fs/nfsd/xdr4.h
+++ b/fs/nfsd/xdr4.h
@@ -696,10 +696,11 @@ struct nfsd4_compoundres {
 	struct xdr_stream		xdr;
 	struct svc_rqst *		rqstp;
 
+	__be32				*statusp;
 	u32				taglen;
 	char *				tag;
 	u32				opcnt;
-	__be32 *			tagp; /* tag, opcount encode location */
+
 	struct nfsd4_compound_state	cstate;
 };
 
