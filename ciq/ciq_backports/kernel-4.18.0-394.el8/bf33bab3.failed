NFSD: Add helper to decode OPEN's createhow4 argument

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-394.el8
commit-author Chuck Lever <chuck.lever@oracle.com>
commit bf33bab3c4182cdd795983f14de5606e82fab377
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-394.el8/bf33bab3.failed

Refactor for clarity.

	Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
(cherry picked from commit bf33bab3c4182cdd795983f14de5606e82fab377)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/nfsd/nfs4xdr.c
diff --cc fs/nfsd/nfs4xdr.c
index 730647def9cd,22e6542499a0..000000000000
--- a/fs/nfsd/nfs4xdr.c
+++ b/fs/nfsd/nfs4xdr.c
@@@ -1030,35 -1088,9 +1072,41 @@@ nfsd4_decode_open(struct nfsd4_compound
  	case NFS4_OPEN_NOCREATE:
  		break;
  	case NFS4_OPEN_CREATE:
++<<<<<<< HEAD
 +		READ_BUF(4);
 +		open->op_createmode = be32_to_cpup(p++);
 +		switch (open->op_createmode) {
 +		case NFS4_CREATE_UNCHECKED:
 +		case NFS4_CREATE_GUARDED:
 +			status = nfsd4_decode_fattr(argp, open->op_bmval,
 +				&open->op_iattr, &open->op_acl, &open->op_label,
 +				&open->op_umask);
 +			if (status)
 +				goto out;
 +			break;
 +		case NFS4_CREATE_EXCLUSIVE:
 +			READ_BUF(NFS4_VERIFIER_SIZE);
 +			COPYMEM(open->op_verf.data, NFS4_VERIFIER_SIZE);
 +			break;
 +		case NFS4_CREATE_EXCLUSIVE4_1:
 +			if (argp->minorversion < 1)
 +				goto xdr_error;
 +			READ_BUF(NFS4_VERIFIER_SIZE);
 +			COPYMEM(open->op_verf.data, NFS4_VERIFIER_SIZE);
 +			status = nfsd4_decode_fattr(argp, open->op_bmval,
 +				&open->op_iattr, &open->op_acl, &open->op_label,
 +				&open->op_umask);
 +			if (status)
 +				goto out;
 +			break;
 +		default:
 +			goto xdr_error;
 +		}
++=======
+ 		status = nfsd4_decode_createhow4(argp, open);
+ 		if (status)
+ 			return status;
++>>>>>>> bf33bab3c418 (NFSD: Add helper to decode OPEN's createhow4 argument)
  		break;
  	default:
  		goto xdr_error;
* Unmerged path fs/nfsd/nfs4xdr.c
