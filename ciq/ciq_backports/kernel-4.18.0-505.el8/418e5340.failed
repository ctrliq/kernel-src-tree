ice: move devlink port creation/deletion

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-505.el8
commit-author Paul M Stillwell Jr <paul.m.stillwell.jr@intel.com>
commit 418e53401e478a743cf33b1c32ea0728f0afef66
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-505.el8/418e5340.failed

Commit a286ba738714 ("ice: reorder PF/representor devlink
port register/unregister flows") moved the code to create
and destroy the devlink PF port. This was fine, but created
a corner case issue in the case of ice_register_netdev()
failing. In that case, the driver would end up calling
ice_devlink_destroy_pf_port() twice.

Additionally, it makes no sense to tie creation of the devlink
PF port to the creation of the netdev so separate out the
code to create/destroy the devlink PF port from the netdev
code. This makes it a cleaner interface.

Fixes: a286ba738714 ("ice: reorder PF/representor devlink port register/unregister flows")
	Signed-off-by: Paul M Stillwell Jr <paul.m.stillwell.jr@intel.com>
	Tested-by: Gurucharan G <gurucharanx.g@intel.com> (A Contingent worker at Intel)
	Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
	Reviewed-by: Leon Romanovsky <leonro@nvidia.com>
Link: https://lore.kernel.org/r/20230124005714.3996270-1-anthony.l.nguyen@intel.com
	Signed-off-by: Jakub Kicinski <kuba@kernel.org>
(cherry picked from commit 418e53401e478a743cf33b1c32ea0728f0afef66)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/intel/ice/ice_main.c
diff --cc drivers/net/ethernet/intel/ice/ice_main.c
index f17be1af4d89,237ede2cffb0..000000000000
--- a/drivers/net/ethernet/intel/ice/ice_main.c
+++ b/drivers/net/ethernet/intel/ice/ice_main.c
@@@ -4630,10 -4602,6 +4630,13 @@@ static int ice_register_netdev(struct i
  	if (!vsi || !vsi->netdev)
  		return -EIO;
  
++<<<<<<< HEAD
 +	err = ice_devlink_create_pf_port(pf);
 +	if (err)
 +		goto err_devlink_create;
 +
++=======
++>>>>>>> 418e53401e47 (ice: move devlink port creation/deletion)
  	err = register_netdev(vsi->netdev);
  	if (err)
  		goto err_register_netdev;
@@@ -4642,12 -4610,8 +4645,10 @@@
  	netif_carrier_off(vsi->netdev);
  	netif_tx_stop_all_queues(vsi->netdev);
  
 +	devlink_port_type_eth_set(&pf->devlink_port, vsi->netdev);
 +
  	return 0;
  err_register_netdev:
- 	ice_devlink_destroy_pf_port(pf);
- err_devlink_create:
  	free_netdev(vsi->netdev);
  	vsi->netdev = NULL;
  	clear_bit(ICE_VSI_NETDEV_ALLOCD, vsi->state);
@@@ -5104,7 -5090,8 +5120,12 @@@ static void ice_remove(struct pci_dev *
  		ice_remove_arfs(pf);
  	ice_setup_mc_magic_wake(pf);
  	ice_vsi_release_all(pf);
++<<<<<<< HEAD
 +	mutex_destroy(&hw->fdir_fltr_lock);
++=======
+ 	mutex_destroy(&(&pf->hw)->fdir_fltr_lock);
+ 	ice_devlink_destroy_pf_port(pf);
++>>>>>>> 418e53401e47 (ice: move devlink port creation/deletion)
  	ice_set_wake(pf);
  	ice_free_irq_msix_misc(pf);
  	ice_for_each_vsi(pf, i) {
diff --git a/drivers/net/ethernet/intel/ice/ice_lib.c b/drivers/net/ethernet/intel/ice/ice_lib.c
index 5a7867ad1ffd..936d038bff47 100644
--- a/drivers/net/ethernet/intel/ice/ice_lib.c
+++ b/drivers/net/ethernet/intel/ice/ice_lib.c
@@ -3072,9 +3072,6 @@ int ice_vsi_release(struct ice_vsi *vsi)
 		}
 	}
 
-	if (vsi->type == ICE_VSI_PF)
-		ice_devlink_destroy_pf_port(pf);
-
 	if (vsi->type == ICE_VSI_VF &&
 	    vsi->agg_node && vsi->agg_node->valid)
 		vsi->agg_node->num_vsis--;
* Unmerged path drivers/net/ethernet/intel/ice/ice_main.c
