cgroup: Make cgroup_get_from_id() prettier

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-505.el8
commit-author Tejun Heo <tj@kernel.org>
commit 7e1eb5437d3c3fdb61d45378579aab383cafc694
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-505.el8/7e1eb543.failed

After merging 836ac87d ("cgroup: fix cgroup_get_from_id") into for-6.1, its
combination with two commits in for-6.1 - 4534dee9 ("cgroup: cgroup: Honor
caller's cgroup NS when resolving cgroup id") and fa7e439c ("cgroup:
Homogenize cgroup_get_from_id() return value") - makes the gotos in the
error handling path too ugly while not adding anything of value.

All that the gotos are saving is one extra kernfs_put() call. Let's remove
the gotos and perform error returns directly.

	Signed-off-by: Tejun Heo <tj@kernel.org>
	Cc: Ming Lei <ming.lei@redhat.com>
	Cc: Michal Koutn√Ω <mkoutny@suse.com>
(cherry picked from commit 7e1eb5437d3c3fdb61d45378579aab383cafc694)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/cgroup/cgroup.c
diff --cc kernel/cgroup/cgroup.c
index cf641e706714,c1f1ef6090da..000000000000
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@@ -5939,12 -6066,17 +5939,20 @@@ void cgroup_path_from_kernfs_id(u64 id
  struct cgroup *cgroup_get_from_id(u64 id)
  {
  	struct kernfs_node *kn;
- 	struct cgroup *cgrp = NULL, *root_cgrp;
+ 	struct cgroup *cgrp, *root_cgrp;
  
 -	kn = kernfs_find_and_get_node_by_id(cgrp_dfl_root.kf_root, id);
 +	kn = kernfs_get_node_by_id(cgrp_dfl_root.kf_root, id);
  	if (!kn)
- 		goto out;
+ 		return ERR_PTR(-ENOENT);
+ 
++<<<<<<< HEAD
++=======
+ 	if (kernfs_type(kn) != KERNFS_DIR) {
+ 		kernfs_put(kn);
+ 		return ERR_PTR(-ENOENT);
+ 	}
  
++>>>>>>> 7e1eb5437d3c (cgroup: Make cgroup_get_from_id() prettier)
  	rcu_read_lock();
  
  	cgrp = rcu_dereference(*(void __rcu __force **)&kn->priv);
@@@ -5962,9 -6094,9 +5970,13 @@@
  	spin_unlock_irq(&css_set_lock);
  	if (!cgroup_is_descendant(cgrp, root_cgrp)) {
  		cgroup_put(cgrp);
- 		cgrp = NULL;
+ 		return ERR_PTR(-ENOENT);
  	}
++<<<<<<< HEAD
 +out:
++=======
+ 
++>>>>>>> 7e1eb5437d3c (cgroup: Make cgroup_get_from_id() prettier)
  	return cgrp;
  }
  EXPORT_SYMBOL_GPL(cgroup_get_from_id);
* Unmerged path kernel/cgroup/cgroup.c
