iommu/amd: Process all IVHDs before enabling IOMMU features

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit ae180ba42662afe2ed7620bdb863c7c6b61f6f2d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/ae180ba4.failed

The ACPI IVRS table can contain multiple IVHD blocks. Each block contains
information used to initialize each IOMMU instance.

Currently, init_iommu_all sequentially process IVHD block and initialize
IOMMU instance one-by-one. However, certain features require all IOMMUs
to be configured in the same way system-wide. In case certain IVHD blocks
contain inconsistent information (most likely FW bugs), the driver needs
to go through and try to revert settings on IOMMUs that have already been
configured.

A solution is to split IOMMU initialization into 3 phases:

Phase1 : Processes information of the IVRS table for all IOMMU instances.
This allow all IVHDs to be processed prior to enabling features.

Phase2 : Early feature support check on all IOMMUs (using information in
IVHD blocks.

Phase3 : Iterates through all IOMMU instances and enabling features.

	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Link: https://lore.kernel.org/r/20220713225651.20758-5-suravee.suthikulpanit@amd.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit ae180ba42662afe2ed7620bdb863c7c6b61f6f2d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/amd/init.c
diff --cc drivers/iommu/amd/init.c
index 3552acd84afd,371f0b276696..000000000000
--- a/drivers/iommu/amd/init.c
+++ b/drivers/iommu/amd/init.c
@@@ -1827,13 -1829,11 +1833,21 @@@ static int __init init_iommu_one_late(s
  	if (amd_iommu_pre_enabled)
  		amd_iommu_pre_enabled = translation_pre_enabled(iommu);
  
++<<<<<<< HEAD
 +	ret = init_iommu_from_acpi(iommu, h);
 +	if (ret)
 +		return ret;
 +
 +	ret = amd_iommu_create_irq_domain(iommu);
 +	if (ret)
 +		return ret;
++=======
+ 	if (amd_iommu_irq_remap) {
+ 		ret = amd_iommu_create_irq_domain(iommu);
+ 		if (ret)
+ 			return ret;
+ 	}
++>>>>>>> ae180ba42662 (iommu/amd: Process all IVHDs before enabling IOMMU features)
  
  	/*
  	 * Make sure IOMMU is not considered to translate itself. The IVRS
* Unmerged path drivers/iommu/amd/init.c
