s390/vfio-ap: always filter entire AP matrix

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Tony Krowiak <akrowiak@linux.ibm.com>
commit 850fb7fa8c684a4c6bf0e4b6978f4ddcc5d43d11
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/850fb7fa.failed

The vfio_ap_mdev_filter_matrix function is called whenever a new adapter or
domain is assigned to the mdev. The purpose of the function is to update
the guest's AP configuration by filtering the matrix of adapters and
domains assigned to the mdev. When an adapter or domain is assigned, only
the APQNs associated with the APID of the new adapter or APQI of the new
domain are inspected. If an APQN does not reference a queue device bound to
the vfio_ap device driver, then it's APID will be filtered from the mdev's
matrix when updating the guest's AP configuration.

Inspecting only the APID of the new adapter or APQI of the new domain will
result in passing AP queues through to a guest that are not bound to the
vfio_ap device driver under certain circumstances. Consider the following:

guest's AP configuration (all also assigned to the mdev's matrix):
14.0004
14.0005
14.0006
16.0004
16.0005
16.0006

unassign domain 4
unbind queue 16.0005
assign domain 4

When domain 4 is re-assigned, since only domain 4 will be inspected, the
APQNs that will be examined will be:
14.0004
16.0004

Since both of those APQNs reference queue devices that are bound to the
vfio_ap device driver, nothing will get filtered from the mdev's matrix
when updating the guest's AP configuration. Consequently, queue 16.0005
will get passed through despite not being bound to the driver. This
violates the linux device model requirement that a guest shall only be
given access to devices bound to the device driver facilitating their
pass-through.

To resolve this problem, every adapter and domain assigned to the mdev will
be inspected when filtering the mdev's matrix.

	Signed-off-by: Tony Krowiak <akrowiak@linux.ibm.com>
	Acked-by: Halil Pasic <pasic@linux.ibm.com>
Fixes: 48cae940c31d ("s390/vfio-ap: refresh guest's APCB by filtering AP resources assigned to mdev")
	Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20240115185441.31526-2-akrowiak@linux.ibm.com
	Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
(cherry picked from commit 850fb7fa8c684a4c6bf0e4b6978f4ddcc5d43d11)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/vfio_ap_ops.c
diff --cc drivers/s390/crypto/vfio_ap_ops.c
index cc0a2dfafc79,1f7a6c106786..000000000000
--- a/drivers/s390/crypto/vfio_ap_ops.c
+++ b/drivers/s390/crypto/vfio_ap_ops.c
@@@ -934,9 -961,7 +933,13 @@@ static ssize_t assign_adapter_store(str
  {
  	int ret;
  	unsigned long apid;
++<<<<<<< HEAD
 +	DECLARE_BITMAP(apm_delta, AP_DEVICES);
 +	struct mdev_device *mdev = mdev_from_dev(dev);
 +	struct ap_matrix_mdev *matrix_mdev = mdev_get_drvdata(mdev);
++=======
+ 	struct ap_matrix_mdev *matrix_mdev = dev_get_drvdata(dev);
++>>>>>>> 850fb7fa8c68 (s390/vfio-ap: always filter entire AP matrix)
  
  	mutex_lock(&ap_perms_mutex);
  	get_update_locks_for_mdev(matrix_mdev);
@@@ -1145,9 -1166,7 +1145,13 @@@ static ssize_t assign_domain_store(stru
  {
  	int ret;
  	unsigned long apqi;
++<<<<<<< HEAD
 +	DECLARE_BITMAP(aqm_delta, AP_DOMAINS);
 +	struct mdev_device *mdev = mdev_from_dev(dev);
 +	struct ap_matrix_mdev *matrix_mdev = mdev_get_drvdata(mdev);
++=======
+ 	struct ap_matrix_mdev *matrix_mdev = dev_get_drvdata(dev);
++>>>>>>> 850fb7fa8c68 (s390/vfio-ap: always filter entire AP matrix)
  
  	mutex_lock(&ap_perms_mutex);
  	get_update_locks_for_mdev(matrix_mdev);
* Unmerged path drivers/s390/crypto/vfio_ap_ops.c
