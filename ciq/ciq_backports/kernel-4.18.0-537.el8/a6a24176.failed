swiotlb: use the calculated number of areas

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Ross Lagerwall <ross.lagerwall@citrix.com>
commit a6a241764f69c62d23fc6960920cc662ae4069e9
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/a6a24176.failed

Commit 8ac04063354a ("swiotlb: reduce the number of areas to match
actual memory pool size") calculated the reduced number of areas in
swiotlb_init_remap() but didn't actually use the value. Replace usage of
default_nareas accordingly.

Fixes: 8ac04063354a ("swiotlb: reduce the number of areas to match actual memory pool size")
	Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit a6a241764f69c62d23fc6960920cc662ae4069e9)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/swiotlb.c
diff --cc kernel/dma/swiotlb.c
index e417b7dddc33,85dd94323b98..000000000000
--- a/kernel/dma/swiotlb.c
+++ b/kernel/dma/swiotlb.c
@@@ -321,15 -398,15 +321,25 @@@ void __init swiotlb_init_remap(bool add
  		return;
  	}
  
++<<<<<<< HEAD
 +	mem->areas = memblock_alloc_nopanic(array_size(sizeof(struct io_tlb_area),
 +		default_nareas), SMP_CACHE_BYTES);
++=======
+ 	mem->areas = memblock_alloc(array_size(sizeof(struct io_tlb_area),
+ 		nareas), SMP_CACHE_BYTES);
++>>>>>>> a6a241764f69 (swiotlb: use the calculated number of areas)
  	if (!mem->areas) {
  		pr_warn("%s: Failed to allocate mem->areas.\n", __func__);
  		return;
  	}
  
++<<<<<<< HEAD
 +	swiotlb_init_io_tlb_mem(mem, __pa(tlb), nslabs, flags, false,
 +				default_nareas);
++=======
+ 	swiotlb_init_io_tlb_pool(mem, __pa(tlb), nslabs, false, nareas);
+ 	add_mem_pool(&io_tlb_default_mem, mem);
++>>>>>>> a6a241764f69 (swiotlb: use the calculated number of areas)
  
  	if (flags & SWIOTLB_VERBOSE)
  		swiotlb_print_info();
* Unmerged path kernel/dma/swiotlb.c
