s390/vfio-ap: let on_scan_complete() callback filter matrix and update guest's APCB

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Tony Krowiak <akrowiak@linux.ibm.com>
commit 774d10196e648e2c0b78da817f631edfb3dfa557
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/774d1019.failed

When adapters and/or domains are added to the host's AP configuration, this
may result in multiple queue devices getting created and probed by the
vfio_ap device driver. For each queue device probed, the matrix of adapters
and domains assigned to a matrix mdev will be filtered to update the
guest's APCB. If any adapters or domains get added to or removed from the
APCB, the guest's AP configuration will be dynamically updated (i.e., hot
plug/unplug). To dynamically update the guest's configuration, its VCPUs
must be taken out of SIE for the period of time it takes to make the
update. This is disruptive to the guest's operation and if there are many
queues probed due to a change in the host's AP configuration, this could be
troublesome. The problem is exacerbated by the fact that the
'on_scan_complete' callback also filters the mdev's matrix and updates
the guest's AP configuration.

In order to reduce the potential amount of disruption to the guest that may
result from a change to the host's AP configuration, let's bypass the
filtering of the matrix and updating of the guest's AP configuration in the
probe callback - if due to a host config change - and defer it until the
'on_scan_complete' callback is invoked after the AP bus finishes its device
scan operation. This way the filtering and updating will be performed only
once regardless of the number of queues added.

	Signed-off-by: Tony Krowiak <akrowiak@linux.ibm.com>
	Reviewed-by: Halil Pasic <pasic@linux.ibm.com>
Fixes: 48cae940c31d ("s390/vfio-ap: refresh guest's APCB by filtering AP resources assigned to mdev")
	Cc: stable@vger.kernel.org
Link: https://lore.kernel.org/r/20240115185441.31526-4-akrowiak@linux.ibm.com
	Signed-off-by: Alexander Gordeev <agordeev@linux.ibm.com>
(cherry picked from commit 774d10196e648e2c0b78da817f631edfb3dfa557)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/crypto/vfio_ap_ops.c
diff --cc drivers/s390/crypto/vfio_ap_ops.c
index cc0a2dfafc79,e45d0bf7b126..000000000000
--- a/drivers/s390/crypto/vfio_ap_ops.c
+++ b/drivers/s390/crypto/vfio_ap_ops.c
@@@ -1983,11 -2101,22 +1983,28 @@@ int vfio_ap_mdev_probe_queue(struct ap_
  	if (matrix_mdev) {
  		vfio_ap_mdev_link_queue(matrix_mdev, q);
  
++<<<<<<< HEAD
 +		if (vfio_ap_mdev_filter_matrix(matrix_mdev->matrix.apm,
 +					       matrix_mdev->matrix.aqm,
 +					       matrix_mdev))
++=======
+ 		/*
+ 		 * If we're in the process of handling the adding of adapters or
+ 		 * domains to the host's AP configuration, then let the
+ 		 * vfio_ap device driver's on_scan_complete callback filter the
+ 		 * matrix and update the guest's AP configuration after all of
+ 		 * the new queue devices are probed.
+ 		 */
+ 		if (!bitmap_empty(matrix_mdev->apm_add, AP_DEVICES) ||
+ 		    !bitmap_empty(matrix_mdev->aqm_add, AP_DOMAINS))
+ 			goto done;
+ 
+ 		if (vfio_ap_mdev_filter_matrix(matrix_mdev))
++>>>>>>> 774d10196e64 (s390/vfio-ap: let on_scan_complete() callback filter matrix and update guest's APCB)
  			vfio_ap_mdev_update_guest_apcb(matrix_mdev);
  	}
+ 
+ done:
  	dev_set_drvdata(&apdev->device, q);
  	release_update_locks_for_mdev(matrix_mdev);
  
* Unmerged path drivers/s390/crypto/vfio_ap_ops.c
