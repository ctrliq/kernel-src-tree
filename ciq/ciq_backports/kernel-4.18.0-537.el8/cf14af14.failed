net/mlx5e: Add vnic devlink health reporter to representors

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Maher Sanalla <msanalla@nvidia.com>
commit cf14af140a5ad0937d385ce693100f33f02e9c54
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/cf14af14.failed

Create a new devlink health reporter for representor interface, which
reports the values of representor vnic diagnostic counters when diagnosed.

This patch will allow admins to monitor VF diagnostic counters through
the representor-interface vnic reporter.

Example of usage:
$ devlink health diagnose pci/0000:08:00.0/65537 reporter vnic
  vNIC env counters:
    total_error_queues: 0 send_queue_priority_update_flow: 0
    comp_eq_overrun: 0 async_eq_overrun: 0 cq_overrun: 0
    invalid_command: 0 quota_exceeded_command: 0
    nic_receive_steering_discard: 0

	Signed-off-by: Maher Sanalla <msanalla@nvidia.com>
	Reviewed-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit cf14af140a5ad0937d385ce693100f33f02e9c54)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/networking/device_drivers/ethernet/mellanox/mlx5/devlink.rst
#	drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
index 7be5dd84be46,2d87068f63fd..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
@@@ -1427,6 -1437,13 +1472,16 @@@ mlx5e_vport_vf_rep_load(struct mlx5_cor
  		goto err_cleanup_profile;
  	}
  
++<<<<<<< HEAD
++=======
+ 	dl_port = mlx5_esw_offloads_devlink_port(dev->priv.eswitch,
+ 						 rpriv->rep->vport);
+ 	if (dl_port) {
+ 		SET_NETDEV_DEVLINK_PORT(netdev, dl_port);
+ 		mlx5e_rep_vnic_reporter_create(priv, dl_port);
+ 	}
+ 
++>>>>>>> cf14af140a5a (net/mlx5e: Add vnic devlink health reporter to representors)
  	err = register_netdev(netdev);
  	if (err) {
  		netdev_warn(netdev,
@@@ -1492,10 -1504,8 +1547,11 @@@ mlx5e_vport_rep_unload(struct mlx5_eswi
  		goto free_ppriv;
  	}
  
 +	dl_port = mlx5_esw_offloads_devlink_port(dev->priv.eswitch, rpriv->rep->vport);
 +	if (dl_port)
 +		devlink_port_type_clear(dl_port);
  	unregister_netdev(netdev);
+ 	mlx5e_rep_vnic_reporter_destroy(priv);
  	mlx5e_detach_netdev(priv);
  	priv->profile->cleanup(priv);
  	mlx5e_destroy_netdev(priv);
* Unmerged path Documentation/networking/device_drivers/ethernet/mellanox/mlx5/devlink.rst
* Unmerged path Documentation/networking/device_drivers/ethernet/mellanox/mlx5/devlink.rst
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/en_rep.c
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
index dcfad0bf0f45..80b7f5079a5a 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_rep.h
@@ -118,6 +118,7 @@ struct mlx5e_rep_priv {
 	struct rtnl_link_stats64 prev_vf_vport_stats;
 	struct mlx5_flow_handle *send_to_vport_meta_rule;
 	struct rhashtable tc_ht;
+	struct devlink_health_reporter *rep_vnic_reporter;
 };
 
 static inline
