swiotlb: always set the number of areas before allocating the pool

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Petr Tesarik <petr.tesarik.ext@huawei.com>
commit aabd12609f91155f26584508b01f548215cc3c0c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/aabd1260.failed

The number of areas defaults to the number of possible CPUs. However, the
total number of slots may have to be increased after adjusting the number
of areas. Consequently, the number of areas must be determined before
allocating the memory pool. This is even explained with a comment in
swiotlb_init_remap(), but swiotlb_init_late() adjusts the number of areas
after slots are already allocated. The areas may end up being smaller than
IO_TLB_SEGSIZE, which breaks per-area locking.

While fixing swiotlb_init_late(), move all relevant comments before the
definition of swiotlb_adjust_nareas() and convert them to kernel-doc.

Fixes: 20347fca71a3 ("swiotlb: split up the global swiotlb lock")
	Signed-off-by: Petr Tesarik <petr.tesarik.ext@huawei.com>
	Reviewed-by: Roberto Sassu <roberto.sassu@huawei.com>
	Signed-off-by: Christoph Hellwig <hch@lst.de>
(cherry picked from commit aabd12609f91155f26584508b01f548215cc3c0c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	kernel/dma/swiotlb.c
diff --cc kernel/dma/swiotlb.c
index 2f75af589723,89db590f931f..000000000000
--- a/kernel/dma/swiotlb.c
+++ b/kernel/dma/swiotlb.c
@@@ -114,9 -115,19 +114,23 @@@ static bool round_up_default_nslabs(voi
  	return true;
  }
  
+ /**
+  * swiotlb_adjust_nareas() - adjust the number of areas and slots
+  * @nareas:	Desired number of areas. Zero is treated as 1.
+  *
+  * Adjust the default number of areas in a memory pool.
+  * The default size of the memory pool may also change to meet minimum area
+  * size requirements.
+  */
  static void swiotlb_adjust_nareas(unsigned int nareas)
  {
++<<<<<<< HEAD
 +	if (!is_power_of_2(nareas))
++=======
+ 	if (!nareas)
+ 		nareas = 1;
+ 	else if (!is_power_of_2(nareas))
++>>>>>>> aabd12609f91 (swiotlb: always set the number of areas before allocating the pool)
  		nareas = roundup_pow_of_two(nareas);
  
  	default_nareas = nareas;
* Unmerged path kernel/dma/swiotlb.c
