iommu/vt-d: Remove BUG_ON in map/unmap()

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Tina Zhang <tina.zhang@intel.com>
commit cbf2f9e8badd483e2ee17a56ad8dbd1cfdcead20
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/cbf2f9e8.failed

Domain map/unmap with invalid parameters shouldn't crash the kernel.
Therefore, using if() replaces the BUG_ON.

	Signed-off-by: Tina Zhang <tina.zhang@intel.com>
Link: https://lore.kernel.org/r/20230406065944.2773296-6-tina.zhang@intel.com
	Signed-off-by: Lu Baolu <baolu.lu@linux.intel.com>
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit cbf2f9e8badd483e2ee17a56ad8dbd1cfdcead20)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/iommu/intel/iommu.c
diff --cc drivers/iommu/intel/iommu.c
index 3e45f424e687,ab21ef1ddb3c..000000000000
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@@ -5050,7 -4315,9 +5051,13 @@@ static size_t intel_iommu_unmap(struct 
  
  	/* Cope with horrid API which requires us to unmap more than the
  	   size argument if it happens to be a large-page mapping. */
++<<<<<<< HEAD
 +	BUG_ON(!pfn_to_dma_pte(dmar_domain, iova >> VTD_PAGE_SHIFT, &level));
++=======
+ 	if (unlikely(!pfn_to_dma_pte(dmar_domain, iova >> VTD_PAGE_SHIFT,
+ 				     &level, GFP_ATOMIC)))
+ 		return 0;
++>>>>>>> cbf2f9e8badd (iommu/vt-d: Remove BUG_ON in map/unmap())
  
  	if (size < VTD_PAGE_SIZE << level_to_offset_bits(level))
  		size = VTD_PAGE_SIZE << level_to_offset_bits(level);
* Unmerged path drivers/iommu/intel/iommu.c
