iommu/amd: Introduce Disable IRTE Caching Support

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
commit 66419036f68a838c00cbccacd6cb2e99da6e5710
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/66419036.failed

An Interrupt Remapping Table (IRT) stores interrupt remapping configuration
for each device. In a normal operation, the AMD IOMMU caches the table
to optimize subsequent data accesses. This requires the IOMMU driver to
invalidate IRT whenever it updates the table. The invalidation process
includes issuing an INVALIDATE_INTERRUPT_TABLE command following by
a COMPLETION_WAIT command.

However, there are cases in which the IRT is updated at a high rate.
For example, for IOMMU AVIC, the IRTE[IsRun] bit is updated on every
vcpu scheduling (i.e. amd_iommu_update_ga()). On system with large
amount of vcpus and VFIO PCI pass-through devices, the invalidation
process could potentially become a performance bottleneck.

Introducing a new kernel boot option:

    amd_iommu=irtcachedis

which disables IRTE caching by setting the IRTCachedis bit in each IOMMU
Control register, and bypass the IRT invalidation process.

	Reviewed-by: Jerry Snitselaar <jsnitsel@redhat.com>
Co-developed-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
	Signed-off-by: Alejandro Jimenez <alejandro.j.jimenez@oracle.com>
	Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
Link: https://lore.kernel.org/r/20230530141137.14376-4-suravee.suthikulpanit@amd.com
	Signed-off-by: Joerg Roedel <jroedel@suse.de>
(cherry picked from commit 66419036f68a838c00cbccacd6cb2e99da6e5710)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/admin-guide/kernel-parameters.txt
#	drivers/iommu/amd/amd_iommu_types.h
#	drivers/iommu/amd/init.c
diff --cc Documentation/admin-guide/kernel-parameters.txt
index cbd8b762dc71,986ac2b73ea2..000000000000
--- a/Documentation/admin-guide/kernel-parameters.txt
+++ b/Documentation/admin-guide/kernel-parameters.txt
@@@ -308,6 -321,9 +308,12 @@@
  			force_enable - Force enable the IOMMU on platforms known
  				       to be buggy with IOMMU enabled. Use this
  				       option with care.
++<<<<<<< HEAD
++=======
+ 			pgtbl_v1     - Use v1 page table for DMA-API (Default).
+ 			pgtbl_v2     - Use v2 page table for DMA-API.
+ 			irtcachedis  - Disable Interrupt Remapping Table (IRT) caching.
++>>>>>>> 66419036f68a (iommu/amd: Introduce Disable IRTE Caching Support)
  
  	amd_iommu_dump=	[HW,X86-64]
  			Enable AMD IOMMU driver option to dump the ACPI table
diff --cc drivers/iommu/amd/amd_iommu_types.h
index 5a41926ec904,8eeea1f25e69..000000000000
--- a/drivers/iommu/amd/amd_iommu_types.h
+++ b/drivers/iommu/amd/amd_iommu_types.h
@@@ -175,6 -174,8 +175,11 @@@
  #define CONTROL_GAINT_EN	29
  #define CONTROL_XT_EN		50
  #define CONTROL_INTCAPXT_EN	51
++<<<<<<< HEAD
++=======
+ #define CONTROL_IRTCACHEDIS	59
+ #define CONTROL_SNPAVIC_EN	61
++>>>>>>> 66419036f68a (iommu/amd: Introduce Disable IRTE Caching Support)
  
  #define CTRL_INV_TO_MASK	(7 << CONTROL_INV_TIMEOUT)
  #define CTRL_INV_TO_NONE	0
diff --cc drivers/iommu/amd/init.c
index 3552acd84afd,418da641ee3d..000000000000
--- a/drivers/iommu/amd/init.c
+++ b/drivers/iommu/amd/init.c
@@@ -3350,13 -3426,25 +3384,30 @@@ static int __init parse_amd_iommu_optio
  		if (strncmp(str, "fullflush", 9) == 0) {
  			pr_warn("amd_iommu=fullflush deprecated; use iommu.strict=1 instead\n");
  			iommu_set_dma_strict();
++<<<<<<< HEAD
++=======
+ 		} else if (strncmp(str, "force_enable", 12) == 0) {
+ 			amd_iommu_force_enable = true;
+ 		} else if (strncmp(str, "off", 3) == 0) {
+ 			amd_iommu_disabled = true;
+ 		} else if (strncmp(str, "force_isolation", 15) == 0) {
+ 			amd_iommu_force_isolation = true;
+ 		} else if (strncmp(str, "pgtbl_v1", 8) == 0) {
+ 			amd_iommu_pgtable = AMD_IOMMU_V1;
+ 		} else if (strncmp(str, "pgtbl_v2", 8) == 0) {
+ 			amd_iommu_pgtable = AMD_IOMMU_V2;
+ 		} else if (strncmp(str, "irtcachedis", 11) == 0) {
+ 			amd_iommu_irtcachedis = true;
+ 		} else {
+ 			pr_notice("Unknown option - '%s'\n", str);
++>>>>>>> 66419036f68a (iommu/amd: Introduce Disable IRTE Caching Support)
  		}
 -
 -		str += strcspn(str, ",");
 -		while (*str == ',')
 -			str++;
 +		if (strncmp(str, "force_enable", 12) == 0)
 +			amd_iommu_force_enable = true;
 +		if (strncmp(str, "off", 3) == 0)
 +			amd_iommu_disabled = true;
 +		if (strncmp(str, "force_isolation", 15) == 0)
 +			amd_iommu_force_isolation = true;
  	}
  
  	return 1;
* Unmerged path Documentation/admin-guide/kernel-parameters.txt
* Unmerged path drivers/iommu/amd/amd_iommu_types.h
* Unmerged path drivers/iommu/amd/init.c
