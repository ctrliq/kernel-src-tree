docs: fix memory.low description in cgroup-v2.rst

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-537.el8
commit-author Jon Haslam <jonhaslam@fb.com>
commit 6ee0fac199e108f544b0ac23b2419a03ff6dc18f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-537.el8/6ee0fac1.failed

The current cgroup-v2.rst file contains an incorrect description of when
memory is reclaimed from a cgroup that is using the 'memory.low'
mechanism. This fix simply corrects the text to reflect the actual
implementation.

Fixes: 7854207fe954 ("mm/docs: describe memory.low refinements")
	Signed-off-by: Jon Haslam <jonhaslam@fb.com>
	Acked-by: Roman Gushchin <guro@fb.com>
	Signed-off-by: Jonathan Corbet <corbet@lwn.net>
(cherry picked from commit 6ee0fac199e108f544b0ac23b2419a03ff6dc18f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/admin-guide/cgroup-v2.rst
diff --cc Documentation/admin-guide/cgroup-v2.rst
index 01135e02e4ce,26d1cde6b34a..000000000000
--- a/Documentation/admin-guide/cgroup-v2.rst
+++ b/Documentation/admin-guide/cgroup-v2.rst
@@@ -1098,11 -1117,8 +1098,16 @@@ PAGE_SIZE multiple when read back
  
  	Best-effort memory protection.  If the memory usage of a
  	cgroup is within its effective low boundary, the cgroup's
++<<<<<<< HEAD
 +	memory won't be reclaimed unless memory can be reclaimed
 +	from unprotected cgroups.  Above the effective low boundary (or
 +	effective min boundary if it is higher), pages are reclaimed
 +	proportionally to the overage, reducing reclaim pressure for
 +	smaller overages.
++=======
+ 	memory won't be reclaimed unless there is no reclaimable
+ 	memory available in unprotected cgroups.
++>>>>>>> 6ee0fac199e1 (docs: fix memory.low description in cgroup-v2.rst)
  
  	Effective low boundary is limited by memory.low values of
  	all ancestor cgroups. If there is memory.low overcommitment
* Unmerged path Documentation/admin-guide/cgroup-v2.rst
