x86/kexec: Add EFI config table identity mapping for kexec kernel

jira LE-3064
Rebuild_History Non-Buildable kernel-4.18.0-553.53.1.el8_10
commit-author Tao Liu <ltao@redhat.com>
commit 5760929f6545c651682de3c2c6c6786816b17bb1
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-553.53.1.el8_10/5760929f.failed

A kexec kernel boot failure is sometimes observed on AMD CPUs due to an
unmapped EFI config table array.  This can be seen when "nogbpages" is on
the kernel command line, and has been observed as a full BIOS reboot rather
than a successful kexec.

This was also the cause of reported regressions attributed to Commit
7143c5f4cf20 ("x86/mm/ident_map: Use gbpages only where full GB page should
be mapped.") which was subsequently reverted.

To avoid this page fault, explicitly include the EFI config table array in
the kexec identity map.

Further explanation:

The following 2 commits caused the EFI config table array to be
accessed when enabling sev at kernel startup.

    commit ec1c66af3a30 ("x86/compressed/64: Detect/setup SEV/SME features
                          earlier during boot")
    commit c01fce9cef84 ("x86/compressed: Add SEV-SNP feature
                          detection/setup")

This is in the code that examines whether SEV should be enabled or not, so
it can even affect systems that are not SEV capable.

This may result in a page fault if the EFI config table array's address is
unmapped. Since the page fault occurs before the new kernel establishes its
own identity map and page fault routines, it is unrecoverable and kexec
fails.

Most often, this problem is not seen because the EFI config table array
gets included in the map by the luck of being placed at a memory address
close enough to other memory areas that *are* included in the map created
by kexec.

Both the "nogbpages" command line option and the "use gpbages only where
full GB page should be mapped" change greatly reduce the chance of being
included in the map by luck, which is why the problem appears.

	Signed-off-by: Tao Liu <ltao@redhat.com>
	Signed-off-by: Steve Wahl <steve.wahl@hpe.com>
	Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
	Tested-by: Pavin Joseph <me@pavinjoseph.com>
	Tested-by: Sarah Brofeldt <srhb@dbc.dk>
	Tested-by: Eric Hagberg <ehagberg@gmail.com>
	Reviewed-by: Ard Biesheuvel <ardb@kernel.org>
Link: https://lore.kernel.org/all/20240717213121.3064030-2-steve.wahl@hpe.com
(cherry picked from commit 5760929f6545c651682de3c2c6c6786816b17bb1)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	arch/x86/kernel/machine_kexec_64.c
diff --cc arch/x86/kernel/machine_kexec_64.c
index e84671b8657e,9c9ac606893e..000000000000
--- a/arch/x86/kernel/machine_kexec_64.c
+++ b/arch/x86/kernel/machine_kexec_64.c
@@@ -30,6 -27,8 +30,11 @@@
  #include <asm/kexec-bzimage64.h>
  #include <asm/setup.h>
  #include <asm/set_memory.h>
++<<<<<<< HEAD
++=======
+ #include <asm/cpu.h>
+ #include <asm/efi.h>
++>>>>>>> 5760929f6545 (x86/kexec: Add EFI config table identity mapping for kexec kernel)
  
  #ifdef CONFIG_ACPI
  /*
* Unmerged path arch/x86/kernel/machine_kexec_64.c
