net/mlx5: Reload auxiliary devices in pci error handlers

jira LE-3201
Rebuild_History Non-Buildable kernel-rt-4.18.0-553.44.1.rt7.385.el8_10
commit-author Moshe Shemesh <moshe@nvidia.com>
commit aab8e1a200b926147db51e3f82fd07bb9edf6a98
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-rt-4.18.0-553.44.1.rt7.385.el8_10/aab8e1a2.failed

Handling pci errors should fully teardown and load back auxiliary
devices, same as done through mlx5 health recovery flow.

Fixes: 72ed5d5624af ("net/mlx5: Suspend auxiliary devices only in case of PCI device suspend")
	Signed-off-by: Moshe Shemesh <moshe@nvidia.com>
	Signed-off-by: Saeed Mahameed <saeedm@nvidia.com>
(cherry picked from commit aab8e1a200b926147db51e3f82fd07bb9edf6a98)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/net/ethernet/mellanox/mlx5/core/main.c
diff --cc drivers/net/ethernet/mellanox/mlx5/core/main.c
index 50b7af5238f8,72ae560a1c68..000000000000
--- a/drivers/net/ethernet/mellanox/mlx5/core/main.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/main.c
@@@ -1849,7 -1989,7 +1849,11 @@@ static pci_ers_result_t mlx5_pci_err_de
  
  	mlx5_enter_error_state(dev, false);
  	mlx5_error_sw_reset(dev);
++<<<<<<< HEAD
 +	mlx5_unload_one(dev);
++=======
+ 	mlx5_unload_one(dev, false);
++>>>>>>> aab8e1a200b9 (net/mlx5: Reload auxiliary devices in pci error handlers)
  	mlx5_drain_health_wq(dev);
  	mlx5_pci_disable_device(dev);
  
* Unmerged path drivers/net/ethernet/mellanox/mlx5/core/main.c
