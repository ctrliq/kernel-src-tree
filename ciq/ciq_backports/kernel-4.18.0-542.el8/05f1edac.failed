selftests/mm: run all tests from run_vmtests.sh

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-542.el8
commit-author Ryan Roberts <ryan.roberts@arm.com>
commit 05f1edac80095634638a2ba8ae8d0f3d2b3e653b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-542.el8/05f1edac.failed

It is very unclear to me how one is supposed to run all the mm selftests
consistently and get clear results.

Most of the test programs are launched by both run_vmtests.sh and
run_kselftest.sh:

  hugepage-mmap
  hugepage-shm
  map_hugetlb
  hugepage-mremap
  hugepage-vmemmap
  hugetlb-madvise
  map_fixed_noreplace
  gup_test
  gup_longterm
  uffd-unit-tests
  uffd-stress
  compaction_test
  on-fault-limit
  map_populate
  mlock-random-test
  mlock2-tests
  mrelease_test
  mremap_test
  thuge-gen
  virtual_address_range
  va_high_addr_switch
  mremap_dontunmap
  hmm-tests
  madv_populate
  memfd_secret
  ksm_tests
  ksm_functional_tests
  soft-dirty
  cow

However, of this set, when launched by run_vmtests.sh, some of the
programs are invoked multiple times with different arguments. When
invoked by run_kselftest.sh, they are invoked without arguments (and as
a consequence, some fail immediately).

Some test programs are only launched by run_vmtests.sh:

  test_vmalloc.sh

And some test programs and only launched by run_kselftest.sh:

  khugepaged
  migration
  mkdirty
  transhuge-stress
  split_huge_page_test
  mdwe_test
  write_to_hugetlbfs

Furthermore, run_vmtests.sh is invoked by run_kselftest.sh, so in this
case all the test programs invoked by both scripts are run twice!

Needless to say, this is a bit of a mess. In the absence of fully
understanding the history here, it looks to me like the best solution is
to launch ALL test programs from run_vmtests.sh, and ONLY invoke
run_vmtests.sh from run_kselftest.sh. This way, we get full control over
the parameters, each program is only invoked the intended number of
times, and regardless of which script is used, the same tests get run in
the same way.

The only drawback is that if using run_kselftest.sh, it's top-level tap
result reporting reports only a single test and it fails if any of the
contained tests fail. I don't see this as a big deal though since we
still see all the nested reporting from multiple layers. The other issue
with this is that all of run_vmtests.sh must execute within a single
kselftest timeout period, so let's increase that to something more
suitable.

In the Makefile, TEST_GEN_PROGS will compile and install the tests and
will add them to the list of tests that run_kselftest.sh will run.
TEST_GEN_FILES will compile and install the tests but will not add them
to the test list. So let's move all the programs from TEST_GEN_PROGS to
TEST_GEN_FILES so that they are built but not executed by
run_kselftest.sh. Note that run_vmtests.sh is added to TEST_PROGS, which
means it ends up in the test list. (the lack of "_GEN" means it won't be
compiled, but simply copied).

Link: https://lkml.kernel.org/r/20230724082522.1202616-9-ryan.roberts@arm.com
	Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
	Acked-by: David Hildenbrand <david@redhat.com>
	Acked-by: Peter Xu <peterx@redhat.com>
	Cc: Florent Revest <revest@chromium.org>
	Cc: Jérôme Glisse <jglisse@redhat.com>
	Cc: John Hubbard <jhubbard@nvidia.com>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: Shuah Khan <shuah@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 05f1edac80095634638a2ba8ae8d0f3d2b3e653b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/mm/run_vmtests.sh
#	tools/testing/selftests/mm/settings
#	tools/testing/selftests/vm/Makefile
diff --cc tools/testing/selftests/vm/Makefile
index 57fa1e16c23b,6a9fc5693145..000000000000
--- a/tools/testing/selftests/vm/Makefile
+++ b/tools/testing/selftests/vm/Makefile
@@@ -29,25 -32,48 +29,67 @@@ MACHINE ?= $(shell echo $(uname_M) | se
  # LDLIBS.
  MAKEFLAGS += --no-builtin-rules
  
 -CFLAGS = -Wall -I $(top_srcdir) $(EXTRA_CFLAGS) $(KHDR_INCLUDES)
 +CFLAGS = -Wall -I ../../../../usr/include $(EXTRA_CFLAGS) $(KHDR_INCLUDES)
  LDLIBS = -lrt -lpthread
 +TEST_GEN_FILES = compaction_test
 +TEST_GEN_FILES += gup_test
 +TEST_GEN_FILES += hmm-tests
 +TEST_GEN_FILES += hugepage-mmap
 +TEST_GEN_FILES += hugepage-shm
 +TEST_GEN_FILES += khugepaged
 +TEST_GEN_FILES += map_fixed_noreplace
 +TEST_GEN_FILES += map_hugetlb
 +TEST_GEN_FILES += map_populate
 +TEST_GEN_FILES += mlock-random-test
 +TEST_GEN_FILES += mlock2-tests
 +TEST_GEN_FILES += on-fault-limit
 +TEST_GEN_FILES += thuge-gen
 +TEST_GEN_FILES += transhuge-stress
 +TEST_GEN_FILES += userfaultfd
  
++<<<<<<< HEAD:tools/testing/selftests/vm/Makefile
 +ifeq ($(MACHINE),x86_64)
++=======
+ TEST_GEN_FILES = cow
+ TEST_GEN_FILES += compaction_test
+ TEST_GEN_FILES += gup_longterm
+ TEST_GEN_FILES += gup_test
+ TEST_GEN_FILES += hmm-tests
+ TEST_GEN_FILES += hugetlb-madvise
+ TEST_GEN_FILES += hugetlb-read-hwpoison
+ TEST_GEN_FILES += hugepage-mmap
+ TEST_GEN_FILES += hugepage-mremap
+ TEST_GEN_FILES += hugepage-shm
+ TEST_GEN_FILES += hugepage-vmemmap
+ TEST_GEN_FILES += khugepaged
+ TEST_GEN_FILES += madv_populate
+ TEST_GEN_FILES += map_fixed_noreplace
+ TEST_GEN_FILES += map_hugetlb
+ TEST_GEN_FILES += map_populate
+ TEST_GEN_FILES += memfd_secret
+ TEST_GEN_FILES += migration
+ TEST_GEN_FILES += mkdirty
+ TEST_GEN_FILES += mlock-random-test
+ TEST_GEN_FILES += mlock2-tests
+ TEST_GEN_FILES += mrelease_test
+ TEST_GEN_FILES += mremap_dontunmap
+ TEST_GEN_FILES += mremap_test
+ TEST_GEN_FILES += on-fault-limit
+ TEST_GEN_FILES += thuge-gen
+ TEST_GEN_FILES += transhuge-stress
+ TEST_GEN_FILES += uffd-stress
+ TEST_GEN_FILES += uffd-unit-tests
+ TEST_GEN_FILES += split_huge_page_test
+ TEST_GEN_FILES += ksm_tests
+ TEST_GEN_FILES += ksm_functional_tests
+ TEST_GEN_FILES += mdwe_test
+ 
+ ifneq ($(ARCH),arm64)
+ TEST_GEN_PROGS += soft-dirty
+ endif
+ 
+ ifeq ($(ARCH),x86_64)
++>>>>>>> 05f1edac8009 (selftests/mm: run all tests from run_vmtests.sh):tools/testing/selftests/mm/Makefile
  CAN_BUILD_I386 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_32bit_program.c -m32)
  CAN_BUILD_X86_64 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_64bit_program.c)
  CAN_BUILD_WITH_NOPIE := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_program.c -no-pie)
@@@ -69,14 -95,14 +111,23 @@@ TEST_GEN_FILES += $(BINARIES_64
  endif
  else
  
++<<<<<<< HEAD:tools/testing/selftests/vm/Makefile
 +ifneq (,$(findstring $(MACHINE),ppc64))
++=======
+ ifneq (,$(findstring $(ARCH),ppc64))
++>>>>>>> 05f1edac8009 (selftests/mm: run all tests from run_vmtests.sh):tools/testing/selftests/mm/Makefile
  TEST_GEN_FILES += protection_keys
  endif
  
  endif
  
++<<<<<<< HEAD:tools/testing/selftests/vm/Makefile
 +ifneq (,$(filter $(MACHINE),arm64 ia64 mips64 parisc64 ppc64 riscv64 s390x sh64 sparc64 x86_64))
 +TEST_GEN_FILES += va_128TBswitch
++=======
+ ifneq (,$(filter $(ARCH),arm64 ia64 mips64 parisc64 ppc64 riscv64 s390x sparc64 x86_64))
+ TEST_GEN_FILES += va_high_addr_switch
++>>>>>>> 05f1edac8009 (selftests/mm: run all tests from run_vmtests.sh):tools/testing/selftests/mm/Makefile
  TEST_GEN_FILES += virtual_address_range
  TEST_GEN_FILES += write_to_hugetlbfs
  endif
@@@ -85,11 -111,17 +136,21 @@@ TEST_PROGS := run_vmtests.s
  
  TEST_FILES := test_vmalloc.sh
  TEST_FILES += test_hmm.sh
 -TEST_FILES += va_high_addr_switch.sh
  
 +KSFT_KHDR_INSTALL := 1
  include ../lib.mk
  
++<<<<<<< HEAD:tools/testing/selftests/vm/Makefile
 +ifeq ($(MACHINE),x86_64)
++=======
+ $(TEST_GEN_PROGS): vm_util.c
+ $(TEST_GEN_FILES): vm_util.c
+ 
+ $(OUTPUT)/uffd-stress: uffd-common.c
+ $(OUTPUT)/uffd-unit-tests: uffd-common.c
+ 
+ ifeq ($(ARCH),x86_64)
++>>>>>>> 05f1edac8009 (selftests/mm: run all tests from run_vmtests.sh):tools/testing/selftests/mm/Makefile
  BINARIES_32 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_32))
  BINARIES_64 := $(patsubst %,$(OUTPUT)/%,$(BINARIES_64))
  
* Unmerged path tools/testing/selftests/mm/run_vmtests.sh
* Unmerged path tools/testing/selftests/mm/settings
* Unmerged path tools/testing/selftests/mm/run_vmtests.sh
* Unmerged path tools/testing/selftests/mm/settings
* Unmerged path tools/testing/selftests/vm/Makefile
