selftests/mm: fix invocation of tests that are run via shell scripts

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-542.el8
commit-author John Hubbard <jhubbard@nvidia.com>
commit 3ff47a5837ef00121fe880338255f8e2d1a5621f
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-542.el8/3ff47a58.failed

We cannot depend upon git to reliably retain the executable bit on shell
scripts, or so I was told several years ago while working on this same
run_vmtests.sh script. And sure enough, things such as test_hmm.sh are
lately failing to run, due to lacking execute permissions.

Fix this by explicitly adding "bash" to each of the shell script
invocations. Leave fixing the overall approach to another day.

Link: https://lkml.kernel.org/r/20230606071637.267103-5-jhubbard@nvidia.com
	Signed-off-by: John Hubbard <jhubbard@nvidia.com>
	Acked-by: David Hildenbrand <david@redhat.com>
	Tested-by: Muhammad Usama Anjum <usama.anjum@collabora.com>
	Cc: Peter Xu <peterx@redhat.com>
	Cc: Jonathan Corbet <corbet@lwn.net>
	Cc: Nathan Chancellor <nathan@kernel.org>
	Cc: Shuah Khan <shuah@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit 3ff47a5837ef00121fe880338255f8e2d1a5621f)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/vm/run_vmtests.sh
diff --cc tools/testing/selftests/vm/run_vmtests.sh
index e8a1591aca37,3f26f6e15b2a..000000000000
mode 100755,100644..100755
--- a/tools/testing/selftests/vm/run_vmtests.sh
+++ b/tools/testing/selftests/vm/run_vmtests.sh
@@@ -212,14 -238,46 +212,33 @@@ if [ $VADDR64 -ne 0 ]; the
  	CATEGORY="hugevm" run_test ./virtual_address_range
  	echo $prev_policy > /proc/sys/vm/overcommit_memory
  
++<<<<<<< HEAD:tools/testing/selftests/vm/run_vmtests.sh
 +	# virtual address 128TB switch test
 +	CATEGORY="hugevm" run_test ./va_128TBswitch
++=======
+ 	# va high address boundary switch test
+ 	ARCH_ARM64="arm64"
+ 	prev_nr_hugepages=$(cat /proc/sys/vm/nr_hugepages)
+ 	if [ "$ARCH" == "$ARCH_ARM64" ]; then
+ 		echo 6 > /proc/sys/vm/nr_hugepages
+ 	fi
+ 	CATEGORY="hugevm" run_test bash ./va_high_addr_switch.sh
+ 	if [ "$ARCH" == "$ARCH_ARM64" ]; then
+ 		echo $prev_nr_hugepages > /proc/sys/vm/nr_hugepages
+ 	fi
++>>>>>>> 3ff47a5837ef (selftests/mm: fix invocation of tests that are run via shell scripts):tools/testing/selftests/mm/run_vmtests.sh
  fi # VADDR64
  
  # vmalloc stability smoke test
- CATEGORY="vmalloc" run_test ./test_vmalloc.sh smoke
+ CATEGORY="vmalloc" run_test bash ./test_vmalloc.sh smoke
  
++<<<<<<< HEAD:tools/testing/selftests/vm/run_vmtests.sh
 +CATEGORY="hmm" run_test ./test_hmm.sh smoke
++=======
+ CATEGORY="mremap" run_test ./mremap_dontunmap
+ 
+ CATEGORY="hmm" run_test bash ./test_hmm.sh smoke
 -
 -# MADV_POPULATE_READ and MADV_POPULATE_WRITE tests
 -CATEGORY="madv_populate" run_test ./madv_populate
 -
 -CATEGORY="memfd_secret" run_test ./memfd_secret
 -
 -# KSM MADV_MERGEABLE test with 10 identical pages
 -CATEGORY="ksm" run_test ./ksm_tests -M -p 10
 -# KSM unmerge test
 -CATEGORY="ksm" run_test ./ksm_tests -U
 -# KSM test with 10 zero pages and use_zero_pages = 0
 -CATEGORY="ksm" run_test ./ksm_tests -Z -p 10 -z 0
 -# KSM test with 10 zero pages and use_zero_pages = 1
 -CATEGORY="ksm" run_test ./ksm_tests -Z -p 10 -z 1
 -# KSM test with 2 NUMA nodes and merge_across_nodes = 1
 -CATEGORY="ksm_numa" run_test ./ksm_tests -N -m 1
 -# KSM test with 2 NUMA nodes and merge_across_nodes = 0
 -CATEGORY="ksm_numa" run_test ./ksm_tests -N -m 0
 -
 -CATEGORY="ksm" run_test ./ksm_functional_tests
 -
 -run_test ./ksm_functional_tests
++>>>>>>> 3ff47a5837ef (selftests/mm: fix invocation of tests that are run via shell scripts):tools/testing/selftests/mm/run_vmtests.sh
  
  # protection_keys tests
  if [ -x ./protection_keys_32 ]
* Unmerged path tools/testing/selftests/vm/run_vmtests.sh
