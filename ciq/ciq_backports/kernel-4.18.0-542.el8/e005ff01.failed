selftests/kselftest/runner.sh: Pass optional command parameters in environment

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-542.el8
commit-author Cristian Marussi <cristian.marussi@arm.com>
commit e005ff01bfdb653ac2f03614625cb9aefa86fa9c
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-542.el8/e005ff01.failed

Some testcases allow for optional commandline parameters but as of now
there is now way to provide such arguments to the runner script.

Add support to retrieve such optional command parameters fron environment
variables named so as to include the all-uppercase test executable name,
sanitized substituting any non-acceptable varname characters with "_",
following the pattern:

	KSELFTEST_<UPPERCASE_SANITIZED_TEST_NAME>_ARGS="options"

Optional command parameters support is not available if 'tr' is not
installed on the test system.

	Cc: Kees Cook <keescook@chromium.org>
	Signed-off-by: Cristian Marussi <cristian.marussi@arm.com>
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit e005ff01bfdb653ac2f03614625cb9aefa86fa9c)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/kselftest/runner.sh
diff --cc tools/testing/selftests/kselftest/runner.sh
index e6812f7157f4,294619ade49f..000000000000
--- a/tools/testing/selftests/kselftest/runner.sh
+++ b/tools/testing/selftests/kselftest/runner.sh
@@@ -64,34 -90,28 +91,51 @@@ run_one(
  		done < "$settings"
  	fi
  
 +	# Command line timeout overrides the settings file
 +	if [ -n "$kselftest_override_timeout" ]; then
 +		kselftest_timeout="$kselftest_override_timeout"
 +		echo "# overriding timeout to $kselftest_timeout" >> "$logfile"
 +	else
 +		echo "# timeout set to $kselftest_timeout" >> "$logfile"
 +	fi
 +
  	TEST_HDR_MSG="selftests: $DIR: $BASENAME_TEST"
  	echo "# $TEST_HDR_MSG"
 -	if [ ! -e "$TEST" ]; then
 -		echo "# Warning: file $TEST is missing!"
 +	rharch=$(uname -m)
 +	for rhskipped in $kselftest_rhskip; do
 +		if [ $rhskipped = $BASENAME_TEST -o $rhskipped = $BASENAME_TEST:$rharch ]; then
 +			echo "ok $test_num $TEST_HDR_MSG # skipped in RHEL"
 +			return 0
 +		fi
 +	done
 +	if [ ! -x "$TEST" ]; then
 +		echo -n "# Warning: file $TEST is "
 +		if [ ! -e "$TEST" ]; then
 +			echo "missing!"
 +		else
 +			echo "not executable, correct this."
 +		fi
  		echo "not ok $test_num $TEST_HDR_MSG"
  	else
++<<<<<<< HEAD
++=======
+ 		eval kselftest_cmd_args="\$${kselftest_cmd_args_ref:-}"
+ 		cmd="./$BASENAME_TEST $kselftest_cmd_args"
+ 		if [ ! -x "$TEST" ]; then
+ 			echo "# Warning: file $TEST is not executable"
+ 
+ 			if [ $(head -n 1 "$TEST" | cut -c -2) = "#!" ]
+ 			then
+ 				interpreter=$(head -n 1 "$TEST" | cut -c 3-)
+ 				cmd="$interpreter ./$BASENAME_TEST"
+ 			else
+ 				echo "not ok $test_num $TEST_HDR_MSG"
+ 				return
+ 			fi
+ 		fi
++>>>>>>> e005ff01bfdb (selftests/kselftest/runner.sh: Pass optional command parameters in environment)
  		cd `dirname $TEST` > /dev/null
 -		((((( tap_timeout "$cmd" 2>&1; echo $? >&3) |
 +		((((( tap_timeout ./$BASENAME_TEST 2>&1; echo $? >&3) |
  			tap_prefix >&4) 3>&1) |
  			(read xs; exit $xs)) 4>>"$logfile" &&
  		echo "ok $test_num $TEST_HDR_MSG") ||
* Unmerged path tools/testing/selftests/kselftest/runner.sh
