selftests/mm: skip soft-dirty tests on arm64

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-542.el8
commit-author Ryan Roberts <ryan.roberts@arm.com>
commit f6dd4e223d8798319d0e2815a468b9fb0a276446
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-542.el8/f6dd4e22.failed

arm64 does not support the soft-dirty PTE bit.  However, the `soft-dirty`
test suite is currently run unconditionally and therefore generates
spurious test failures on arm64.  There are also some tests in
`madv_populate` which assume it is supported.

For `soft-dirty` lets disable the whole suite for arm64; it is no longer
built and run_vmtests.sh will skip it if its not present.

For `madv_populate`, we need a runtime mechanism so that the remaining
tests continue to be run.  Unfortunately, the only way to determine if the
soft-dirty dirty bit is supported is to write to a page, then see if the
bit is set in /proc/self/pagemap.  But the tests that we want to
conditionally execute are testing precicesly this.  So if we introduced
this feature check, we could accedentally turn a real failure (on a system
that claims to support soft-dirty) into a skip.  So instead, do the check
based on architecture; for arm64, we report that soft-dirty is not
supported.

Link: https://lkml.kernel.org/r/20230724082522.1202616-3-ryan.roberts@arm.com
	Signed-off-by: Ryan Roberts <ryan.roberts@arm.com>
	Acked-by: David Hildenbrand <david@redhat.com>
	Cc: Florent Revest <revest@chromium.org>
	Cc: Jérôme Glisse <jglisse@redhat.com>
	Cc: John Hubbard <jhubbard@nvidia.com>
	Cc: Mark Brown <broonie@kernel.org>
	Cc: Peter Xu <peterx@redhat.com>
	Cc: Shuah Khan <shuah@kernel.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit f6dd4e223d8798319d0e2815a468b9fb0a276446)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	tools/testing/selftests/mm/madv_populate.c
#	tools/testing/selftests/mm/run_vmtests.sh
#	tools/testing/selftests/vm/Makefile
diff --cc tools/testing/selftests/vm/Makefile
index 57fa1e16c23b,f35977a2bbf3..000000000000
--- a/tools/testing/selftests/vm/Makefile
+++ b/tools/testing/selftests/vm/Makefile
@@@ -29,25 -32,48 +29,67 @@@ MACHINE ?= $(shell echo $(uname_M) | se
  # LDLIBS.
  MAKEFLAGS += --no-builtin-rules
  
 -CFLAGS = -Wall -I $(top_srcdir) $(EXTRA_CFLAGS) $(KHDR_INCLUDES)
 +CFLAGS = -Wall -I ../../../../usr/include $(EXTRA_CFLAGS) $(KHDR_INCLUDES)
  LDLIBS = -lrt -lpthread
 -
 +TEST_GEN_FILES = compaction_test
 +TEST_GEN_FILES += gup_test
 +TEST_GEN_FILES += hmm-tests
 +TEST_GEN_FILES += hugepage-mmap
 +TEST_GEN_FILES += hugepage-shm
 +TEST_GEN_FILES += khugepaged
 +TEST_GEN_FILES += map_fixed_noreplace
 +TEST_GEN_FILES += map_hugetlb
 +TEST_GEN_FILES += map_populate
 +TEST_GEN_FILES += mlock-random-test
 +TEST_GEN_FILES += mlock2-tests
 +TEST_GEN_FILES += on-fault-limit
 +TEST_GEN_FILES += thuge-gen
 +TEST_GEN_FILES += transhuge-stress
 +TEST_GEN_FILES += userfaultfd
 +
++<<<<<<< HEAD:tools/testing/selftests/vm/Makefile
 +ifeq ($(MACHINE),x86_64)
++=======
+ TEST_GEN_PROGS = cow
+ TEST_GEN_PROGS += compaction_test
+ TEST_GEN_PROGS += gup_longterm
+ TEST_GEN_PROGS += gup_test
+ TEST_GEN_PROGS += hmm-tests
+ TEST_GEN_PROGS += hugetlb-madvise
+ TEST_GEN_PROGS += hugetlb-read-hwpoison
+ TEST_GEN_PROGS += hugepage-mmap
+ TEST_GEN_PROGS += hugepage-mremap
+ TEST_GEN_PROGS += hugepage-shm
+ TEST_GEN_PROGS += hugepage-vmemmap
+ TEST_GEN_PROGS += khugepaged
+ TEST_GEN_PROGS += madv_populate
+ TEST_GEN_PROGS += map_fixed_noreplace
+ TEST_GEN_PROGS += map_hugetlb
+ TEST_GEN_PROGS += map_populate
+ TEST_GEN_PROGS += memfd_secret
+ TEST_GEN_PROGS += migration
+ TEST_GEN_PROGS += mkdirty
+ TEST_GEN_PROGS += mlock-random-test
+ TEST_GEN_PROGS += mlock2-tests
+ TEST_GEN_PROGS += mrelease_test
+ TEST_GEN_PROGS += mremap_dontunmap
+ TEST_GEN_PROGS += mremap_test
+ TEST_GEN_PROGS += on-fault-limit
+ TEST_GEN_PROGS += thuge-gen
+ TEST_GEN_PROGS += transhuge-stress
+ TEST_GEN_PROGS += uffd-stress
+ TEST_GEN_PROGS += uffd-unit-tests
+ TEST_GEN_PROGS += split_huge_page_test
+ TEST_GEN_PROGS += ksm_tests
+ TEST_GEN_PROGS += ksm_functional_tests
+ TEST_GEN_PROGS += mdwe_test
+ 
+ ifneq ($(ARCH),arm64)
+ TEST_GEN_PROGS += soft-dirty
+ endif
+ 
+ ifeq ($(ARCH),x86_64)
++>>>>>>> f6dd4e223d87 (selftests/mm: skip soft-dirty tests on arm64):tools/testing/selftests/mm/Makefile
  CAN_BUILD_I386 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_32bit_program.c -m32)
  CAN_BUILD_X86_64 := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_64bit_program.c)
  CAN_BUILD_WITH_NOPIE := $(shell ./../x86/check_cc.sh "$(CC)" ../x86/trivial_program.c -no-pie)
* Unmerged path tools/testing/selftests/mm/madv_populate.c
* Unmerged path tools/testing/selftests/mm/run_vmtests.sh
* Unmerged path tools/testing/selftests/mm/madv_populate.c
* Unmerged path tools/testing/selftests/mm/run_vmtests.sh
* Unmerged path tools/testing/selftests/vm/Makefile
