ceph: avoid putting the realm twice when decoding snaps fails

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.13.1.el8_7
commit-author Xiubo Li <xiubli@redhat.com>
commit 51884d153f7ec85e18d607b2467820a90e0f4359
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.13.1.el8_7/51884d15.failed

When decoding the snaps fails it maybe leaving the 'first_realm'
and 'realm' pointing to the same snaprealm memory. And then it'll
put it twice and could cause random use-after-free, BUG_ON, etc
issues.

	Cc: stable@vger.kernel.org
Link: https://tracker.ceph.com/issues/57686
	Signed-off-by: Xiubo Li <xiubli@redhat.com>
	Reviewed-by: Ilya Dryomov <idryomov@gmail.com>
	Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
(cherry picked from commit 51884d153f7ec85e18d607b2467820a90e0f4359)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	fs/ceph/snap.c
diff --cc fs/ceph/snap.c
index b41e6724c591,e4151852184e..000000000000
--- a/fs/ceph/snap.c
+++ b/fs/ceph/snap.c
@@@ -705,16 -763,19 +705,21 @@@ int ceph_update_snap_trace(struct ceph_
  	struct ceph_mds_snap_realm *ri;    /* encoded */
  	__le64 *snaps;                     /* encoded */
  	__le64 *prior_parent_snaps;        /* encoded */
- 	struct ceph_snap_realm *realm = NULL;
+ 	struct ceph_snap_realm *realm;
  	struct ceph_snap_realm *first_realm = NULL;
 -	struct ceph_snap_realm *realm_to_rebuild = NULL;
 -	int rebuild_snapcs;
 +	int invalidate = 0;
  	int err = -ENOMEM;
  	LIST_HEAD(dirty_realms);
  
  	lockdep_assert_held_write(&mdsc->snap_rwsem);
  
 -	dout("%s deletion=%d\n", __func__, deletion);
 +	dout("update_snap_trace deletion=%d\n", deletion);
  more:
++<<<<<<< HEAD
++=======
+ 	realm = NULL;
+ 	rebuild_snapcs = 0;
++>>>>>>> 51884d153f7e (ceph: avoid putting the realm twice when decoding snaps fails)
  	ceph_decode_need(&p, e, sizeof(*ri), bad);
  	ri = p;
  	p += sizeof(*ri);
* Unmerged path fs/ceph/snap.c
