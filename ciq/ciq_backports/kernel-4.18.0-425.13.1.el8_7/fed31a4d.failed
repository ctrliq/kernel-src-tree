rcu: Fix macro name CONFIG_TASKS_RCU_TRACE

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-425.13.1.el8_7
commit-author Zhouyi Zhou <zhouzhouyi@gmail.com>
commit fed31a4dd3adb5455df7c704de2abb639a1dc1c0
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-425.13.1.el8_7/fed31a4d.failed

This commit fixes several typos where CONFIG_TASKS_RCU_TRACE should
instead be CONFIG_TASKS_TRACE_RCU.  Among other things, these typos
could cause CONFIG_TASKS_TRACE_RCU_READ_MB=y kernels to suffer from
memory-ordering bugs that could result in false-positive quiescent
states and too-short grace periods.

	Signed-off-by: Zhouyi Zhou <zhouzhouyi@gmail.com>
	Signed-off-by: Paul E. McKenney <paulmck@kernel.org>
(cherry picked from commit fed31a4dd3adb5455df7c704de2abb639a1dc1c0)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/rcupdate.h
#	kernel/rcu/tree_plugin.h
diff --cc include/linux/rcupdate.h
index 03a38c00e786,955c82b4737c..000000000000
--- a/include/linux/rcupdate.h
+++ b/include/linux/rcupdate.h
@@@ -181,13 -167,12 +181,18 @@@ void synchronize_rcu_tasks(void)
  # define synchronize_rcu_tasks synchronize_rcu
  # endif
  
++<<<<<<< HEAD
 +# ifdef CONFIG_TASKS_RCU_TRACE
 +# define rcu_tasks_trace_qs(t)					\
++=======
+ # ifdef CONFIG_TASKS_TRACE_RCU
+ # define rcu_tasks_trace_qs(t)						\
++>>>>>>> fed31a4dd3ad (rcu: Fix macro name CONFIG_TASKS_RCU_TRACE)
  	do {								\
 -		if (!likely(READ_ONCE((t)->trc_reader_checked)) &&	\
 -		    !unlikely(READ_ONCE((t)->trc_reader_nesting))) {	\
 -			smp_store_release(&(t)->trc_reader_checked, true); \
 +		struct task_struct_rh *t_rh = (t)->task_struct_rh;	\
 +		if (!likely(READ_ONCE(t_rh->trc_reader_checked)) &&	\
 +		    !unlikely(READ_ONCE(t_rh->trc_reader_nesting))) {	\
 +			smp_store_release(&t_rh->trc_reader_checked, true); \
  			smp_mb(); /* Readers partitioned by store. */	\
  		}							\
  	} while (0)
diff --cc kernel/rcu/tree_plugin.h
index 83649d7d7239,6ce104242b23..000000000000
--- a/kernel/rcu/tree_plugin.h
+++ b/kernel/rcu/tree_plugin.h
@@@ -2983,17 -2982,17 +2983,27 @@@ static void noinstr rcu_dynticks_task_e
  /* Turn on heavyweight RCU tasks trace readers on idle/user entry. */
  static void rcu_dynticks_task_trace_enter(void)
  {
- #ifdef CONFIG_TASKS_RCU_TRACE
+ #ifdef CONFIG_TASKS_TRACE_RCU
  	if (IS_ENABLED(CONFIG_TASKS_TRACE_RCU_READ_MB))
++<<<<<<< HEAD
 +		current->task_struct_rh->trc_reader_special.b.need_mb = true;
 +#endif /* #ifdef CONFIG_TASKS_RCU_TRACE */
++=======
+ 		current->trc_reader_special.b.need_mb = true;
+ #endif /* #ifdef CONFIG_TASKS_TRACE_RCU */
++>>>>>>> fed31a4dd3ad (rcu: Fix macro name CONFIG_TASKS_RCU_TRACE)
  }
  
  /* Turn off heavyweight RCU tasks trace readers on idle/user exit. */
  static void rcu_dynticks_task_trace_exit(void)
  {
- #ifdef CONFIG_TASKS_RCU_TRACE
+ #ifdef CONFIG_TASKS_TRACE_RCU
  	if (IS_ENABLED(CONFIG_TASKS_TRACE_RCU_READ_MB))
++<<<<<<< HEAD
 +		current->task_struct_rh->trc_reader_special.b.need_mb = false;
 +#endif /* #ifdef CONFIG_TASKS_RCU_TRACE */
++=======
+ 		current->trc_reader_special.b.need_mb = false;
+ #endif /* #ifdef CONFIG_TASKS_TRACE_RCU */
++>>>>>>> fed31a4dd3ad (rcu: Fix macro name CONFIG_TASKS_RCU_TRACE)
  }
* Unmerged path include/linux/rcupdate.h
* Unmerged path kernel/rcu/tree_plugin.h
