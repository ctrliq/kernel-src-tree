Documentation: kunit: fix path to .kunitconfig in start.rst

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Daniel Latypov <dlatypov@google.com>
commit 02c7efa43627163e489a8db87882445a0ff381f7
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/02c7efa4.failed

Commit ddbd60c779b4 ("kunit: use --build_dir=.kunit as default") changed
the default --build_dir, which had the side effect of making
`.kunitconfig` move to `.kunit/.kunitconfig`.

However, the first few lines of kunit/start.rst never got updated, oops.

Fix this by telling people to run kunit.py first, which will
automatically generate the .kunit directory and .kunitconfig file, and
then edit the file manually as desired.

	Reported-by: Yifan Yuan <alpc_metic@live.com>
	Signed-off-by: Daniel Latypov <dlatypov@google.com>
	Reviewed-by: David Gow <davidgow@google.com>
	Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
	Signed-off-by: Shuah Khan <skhan@linuxfoundation.org>
(cherry picked from commit 02c7efa43627163e489a8db87882445a0ff381f7)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/dev-tools/kunit/start.rst
diff --cc Documentation/dev-tools/kunit/start.rst
index 0a5e65540974,867a4bba6bf6..000000000000
--- a/Documentation/dev-tools/kunit/start.rst
+++ b/Documentation/dev-tools/kunit/start.rst
@@@ -20,25 -19,46 +20,51 @@@ The wrapper can be run with
  
  	./tools/testing/kunit/kunit.py run
  
 -For more information on this wrapper, see:
 -Documentation/dev-tools/kunit/run_wrapper.rst.
 +For more information on this wrapper (also called kunit_tool) check out the
 +Documentation/dev-tools/kunit/kunit-tool.rst page.
  
 -Creating a ``.kunitconfig``
 ----------------------------
 +Creating a .kunitconfig
 +-----------------------
 +If you want to run a specific set of tests (rather than those listed in the
 +KUnit defconfig), you can provide Kconfig options in the ``.kunitconfig`` file.
 +This file essentially contains the regular Kernel config, with the specific
 +test targets as well. The ``.kunitconfig`` should also contain any other config
 +options required by the tests.
  
++<<<<<<< HEAD
 +A good starting point for a ``.kunitconfig`` is the KUnit defconfig:
++=======
+ By default, kunit_tool runs a selection of tests. However, you can specify which
+ unit tests to run by creating a ``.kunitconfig`` file with kernel config options
+ that enable only a specific set of tests and their dependencies.
+ The ``.kunitconfig`` file contains a list of kconfig options which are required
+ to run the desired targets. The ``.kunitconfig`` also contains any other test
+ specific config options, such as test dependencies. For example: the
+ ``FAT_FS`` tests - ``FAT_KUNIT_TEST``, depends on
+ ``FAT_FS``. ``FAT_FS`` can be enabled by selecting either ``MSDOS_FS``
+ or ``VFAT_FS``. To run ``FAT_KUNIT_TEST``, the ``.kunitconfig`` has:
+ 
+ .. code-block:: none
+ 
+ 	CONFIG_KUNIT=y
+ 	CONFIG_MSDOS_FS=y
+ 	CONFIG_FAT_KUNIT_TEST=y
+ 
+ 1. A good starting point for the ``.kunitconfig`` is the KUnit default config.
+    You can generate it by running:
++>>>>>>> 02c7efa43627 (Documentation: kunit: fix path to .kunitconfig in start.rst)
  
  .. code-block:: bash
  
  	cd $PATH_TO_LINUX_REPO
- 	cp tools/testing/kunit/configs/default.config .kunitconfig
+ 	tools/testing/kunit/kunit.py config
+ 	cat .kunit/.kunitconfig
+ 
+ .. note ::
+    ``.kunitconfig`` lives in the ``--build_dir`` used by kunit.py, which is
+    ``.kunit`` by default.
  
 -.. note ::
 -   You may want to remove CONFIG_KUNIT_ALL_TESTS from the ``.kunitconfig`` as
 -   it will enable a number of additional tests that you may not want.
 -
 -2. You can then add any other Kconfig options, for example:
 +You can then add any other Kconfig options you wish, e.g.:
  
  .. code-block:: none
  
* Unmerged path Documentation/dev-tools/kunit/start.rst
