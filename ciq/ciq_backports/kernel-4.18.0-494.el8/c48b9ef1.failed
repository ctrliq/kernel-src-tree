Documentation: KUnit: Rewrite getting started

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Harinder Singh <sharinder@google.com>
commit c48b9ef1f7949e9024121702031775735e5d7418
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/c48b9ef1.failed

Clarify the purpose of kunit_tool and fixed consistency issues

	Signed-off-by: Harinder Singh <sharinder@google.com>
	Reviewed-by: Brendan Higgins <brendanhiggins@google.com>
Link: https://lore.kernel.org/r/20211217044911.798817-3-sharinder@google.com
	Signed-off-by: Jonathan Corbet <corbet@lwn.net>
(cherry picked from commit c48b9ef1f7949e9024121702031775735e5d7418)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	Documentation/dev-tools/kunit/start.rst
diff --cc Documentation/dev-tools/kunit/start.rst
index 0a5e65540974,55f8df1abd40..000000000000
--- a/Documentation/dev-tools/kunit/start.rst
+++ b/Documentation/dev-tools/kunit/start.rst
@@@ -44,23 -59,19 +59,27 @@@ or ``VFAT_FS``. To run ``FAT_KUNIT_TEST
  
  	CONFIG_LIST_KUNIT_TEST=y
  
- :doc:`kunit_tool <kunit-tool>` will ensure that all config options set in
- ``.kunitconfig`` are set in the kernel ``.config`` before running the tests.
- It'll warn you if you haven't included the dependencies of the options you're
- using.
+ Before running the tests, kunit_tool ensures that all config options
+ set in ``.kunitconfig`` are set in the kernel ``.config``. It will warn
+ you if you have not included dependencies for the options used.
  
++<<<<<<< HEAD
 +.. note::
 +   If you change the ``.kunitconfig``, kunit.py will trigger a rebuild of the
 +   ``.config`` file. But you can edit the ``.config`` file directly or with
 +   tools like ``make menuconfig O=.kunit``. As long as its a superset of
 +   ``.kunitconfig``, kunit.py won't overwrite your changes.
- 
- 
- Running the tests (KUnit Wrapper)
- ---------------------------------
- 
- To make sure that everything is set up correctly, simply invoke the Python
- wrapper from your kernel repo:
++=======
+ .. note ::
+    The configuration is only updated if the ``.kunitconfig`` is not a
+    subset of ``.config``. You can use tools (for example:
+    make menuconfig) to adjust other config options.
++>>>>>>> c48b9ef1f794 (Documentation: KUnit: Rewrite getting started)
+ 
+ Running Tests (KUnit Wrapper)
+ -----------------------------
+ 1. To make sure that everything is set up correctly, invoke the Python
+    wrapper from your kernel repository:
  
  .. code-block:: bash
  
* Unmerged path Documentation/dev-tools/kunit/start.rst
