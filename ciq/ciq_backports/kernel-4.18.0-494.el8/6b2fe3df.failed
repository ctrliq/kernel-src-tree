USB: serial: ftdi_sio: clean up driver prefix

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Johan Hovold <johan@kernel.org>
commit 6b2fe3df7c0ca3cf9ee9cea4470462fa708baf87
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/6b2fe3df.failed

Drop the "sio" infix from the few remaining definitions and symbol names
that still had it.

	Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
	Signed-off-by: Johan Hovold <johan@kernel.org>
(cherry picked from commit 6b2fe3df7c0ca3cf9ee9cea4470462fa708baf87)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/usb/serial/ftdi_sio.c
diff --cc drivers/usb/serial/ftdi_sio.c
index 958d8fdf0c0a,31b9b36f3a1c..000000000000
--- a/drivers/usb/serial/ftdi_sio.c
+++ b/drivers/usb/serial/ftdi_sio.c
@@@ -2400,7 -2333,7 +2396,11 @@@ static int ftdi_stmclite_probe(struct u
  	return 0;
  }
  
++<<<<<<< HEAD
 +static int ftdi_sio_port_remove(struct usb_serial_port *port)
++=======
+ static void ftdi_port_remove(struct usb_serial_port *port)
++>>>>>>> 6b2fe3df7c0c (USB: serial: ftdi_sio: clean up driver prefix)
  {
  	struct ftdi_private *priv = usb_get_serial_port_data(port);
  
@@@ -2930,6 -2861,41 +2930,44 @@@ static int ftdi_ioctl(struct tty_struc
  	return -ENOIOCTLCMD;
  }
  
++<<<<<<< HEAD
++=======
+ static struct usb_serial_driver ftdi_device = {
+ 	.driver = {
+ 		.owner =	THIS_MODULE,
+ 		.name =		"ftdi_sio",
+ 		.dev_groups =	ftdi_groups,
+ 	},
+ 	.description =		"FTDI USB Serial Device",
+ 	.id_table =		id_table_combined,
+ 	.num_ports =		1,
+ 	.bulk_in_size =		512,
+ 	.bulk_out_size =	256,
+ 	.probe =		ftdi_probe,
+ 	.port_probe =		ftdi_port_probe,
+ 	.port_remove =		ftdi_port_remove,
+ 	.open =			ftdi_open,
+ 	.dtr_rts =		ftdi_dtr_rts,
+ 	.throttle =		usb_serial_generic_throttle,
+ 	.unthrottle =		usb_serial_generic_unthrottle,
+ 	.process_read_urb =	ftdi_process_read_urb,
+ 	.prepare_write_buffer =	ftdi_prepare_write_buffer,
+ 	.tiocmget =		ftdi_tiocmget,
+ 	.tiocmset =		ftdi_tiocmset,
+ 	.tiocmiwait =		usb_serial_generic_tiocmiwait,
+ 	.get_icount =		usb_serial_generic_get_icount,
+ 	.ioctl =		ftdi_ioctl,
+ 	.get_serial =		get_serial_info,
+ 	.set_serial =		set_serial_info,
+ 	.set_termios =		ftdi_set_termios,
+ 	.break_ctl =		ftdi_break_ctl,
+ 	.tx_empty =		ftdi_tx_empty,
+ };
+ 
+ static struct usb_serial_driver * const serial_drivers[] = {
+ 	&ftdi_device, NULL
+ };
++>>>>>>> 6b2fe3df7c0c (USB: serial: ftdi_sio: clean up driver prefix)
  module_usb_serial_driver(serial_drivers, id_table_combined);
  
  MODULE_AUTHOR(DRIVER_AUTHOR);
* Unmerged path drivers/usb/serial/ftdi_sio.c
