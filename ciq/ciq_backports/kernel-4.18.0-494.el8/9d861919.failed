PM: runtime: Add DEFINE_RUNTIME_DEV_PM_OPS() macro

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Paul Cercueil <paul@crapouillou.net>
commit 9d8619190031af0a314bee865262d8975473e4dd
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/9d861919.failed

A lot of drivers create a dev_pm_ops struct with the system sleep
suspend/resume callbacks set to pm_runtime_force_suspend() and
pm_runtime_force_resume().

These drivers can now use the DEFINE_RUNTIME_DEV_PM_OPS() macro, which
will use pm_runtime_force_{suspend,resume}() as the system sleep
callbacks, while having the same dead code removal characteristic that
is already provided by DEFINE_SIMPLE_DEV_PM_OPS().

	Signed-off-by: Paul Cercueil <paul@crapouillou.net>
	Acked-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
	Reviewed-by: Ulf Hansson <ulf.hansson@linaro.org>
	Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
(cherry picked from commit 9d8619190031af0a314bee865262d8975473e4dd)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	include/linux/pm.h
diff --cc include/linux/pm.h
index 90fe869c4b0d,f7d2be686359..000000000000
--- a/include/linux/pm.h
+++ b/include/linux/pm.h
@@@ -392,20 -413,10 +392,26 @@@ const struct dev_pm_ops name = { 
   * suspend and "early" resume callback pointers, .suspend_late() and
   * .resume_early(), to the same routines as .runtime_suspend() and
   * .runtime_resume(), respectively (and analogously for hibernation).
++<<<<<<< HEAD
++=======
+  *
+  * Deprecated. You most likely don't want this macro. Use
+  * DEFINE_RUNTIME_DEV_PM_OPS() instead.
++>>>>>>> 9d8619190031 (PM: runtime: Add DEFINE_RUNTIME_DEV_PM_OPS() macro)
   */
 +#define DEFINE_UNIVERSAL_DEV_PM_OPS(name, suspend_fn, resume_fn, idle_fn) \
 +static const struct dev_pm_ops name = { \
 +	SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \
 +	RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) \
 +}
 +
 +/* Deprecated. Use DEFINE_SIMPLE_DEV_PM_OPS() instead. */
 +#define SIMPLE_DEV_PM_OPS(name, suspend_fn, resume_fn) \
 +const struct dev_pm_ops __maybe_unused name = { \
 +	SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \
 +}
 +
 +/* Deprecated. Use DEFINE_UNIVERSAL_DEV_PM_OPS() instead. */
  #define UNIVERSAL_DEV_PM_OPS(name, suspend_fn, resume_fn, idle_fn) \
  const struct dev_pm_ops __maybe_unused name = { \
  	SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \
* Unmerged path include/linux/pm.h
diff --git a/include/linux/pm_runtime.h b/include/linux/pm_runtime.h
index ba8583ac1370..86a11fb926d9 100644
--- a/include/linux/pm_runtime.h
+++ b/include/linux/pm_runtime.h
@@ -23,6 +23,20 @@
 					    usage_count */
 #define RPM_AUTO		0x08	/* Use autosuspend_delay */
 
+/*
+ * Use this for defining a set of PM operations to be used in all situations
+ * (system suspend, hibernation or runtime PM).
+ *
+ * Note that the behaviour differs from the deprecated UNIVERSAL_DEV_PM_OPS()
+ * macro, which uses the provided callbacks for both runtime PM and system
+ * sleep, while DEFINE_RUNTIME_DEV_PM_OPS() uses pm_runtime_force_suspend()
+ * and pm_runtime_force_resume() for its system sleep callbacks.
+ */
+#define DEFINE_RUNTIME_DEV_PM_OPS(name, suspend_fn, resume_fn, idle_fn) \
+	_DEFINE_DEV_PM_OPS(name, pm_runtime_force_suspend, \
+			   pm_runtime_force_resume, suspend_fn, \
+			   resume_fn, idle_fn)
+
 #ifdef CONFIG_PM
 extern struct workqueue_struct *pm_wq;
 
