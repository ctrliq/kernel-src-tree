vfio/ccw: simplify CCW chain fetch routines

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Eric Farman <farman@linux.ibm.com>
commit a4c6040472ba638f2719f371fad92c83365f7332
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/a4c60404.failed

The act of processing a fetched CCW has two components:

 1) Process a Transfer-in-channel (TIC) CCW
 2) Process any other CCW

The former needs to look at whether the TIC jumps backwards into
the current channel program or forwards into a new segment,
while the latter just processes the CCW data address itself.

Rather than passing the chain segment and index within it to the
handlers for the above, and requiring each to calculate the
elements it needs, simply pass the needed pointers directly.

For the TIC, that means the CCW being processed and the location
of the entire channel program which holds all segments. For the
other CCWs, the page_array pointer is also needed to perform the
page pinning, etc.

While at it, rename ccwchain_fetch_direct to _ccw, to indicate
what it is. The name "_direct" is historical, when it used to
process a direct-addressed CCW, but IDAs are processed here too.

	Signed-off-by: Eric Farman <farman@linux.ibm.com>
	Reviewed-by: Matthew Rosato <mjrosato@linux.ibm.com>
	Signed-off-by: Heiko Carstens <hca@linux.ibm.com>
(cherry picked from commit a4c6040472ba638f2719f371fad92c83365f7332)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/s390/cio/vfio_ccw_cp.c
diff --cc drivers/s390/cio/vfio_ccw_cp.c
index 3054373c1ee5,d41d94cecdf8..000000000000
--- a/drivers/s390/cio/vfio_ccw_cp.c
+++ b/drivers/s390/cio/vfio_ccw_cp.c
@@@ -504,12 -500,12 +502,17 @@@ static int ccwchain_fetch_tic(struct cc
  	return -EFAULT;
  }
  
- static int ccwchain_fetch_direct(struct ccwchain *chain,
- 				 int idx,
- 				 struct channel_program *cp)
+ static int ccwchain_fetch_ccw(struct ccw1 *ccw,
+ 			      struct page_array *pa,
+ 			      struct channel_program *cp)
  {
++<<<<<<< HEAD
 +	struct ccw1 *ccw;
 +	struct pfn_array *pa;
++=======
+ 	struct vfio_device *vdev =
+ 		&container_of(cp, struct vfio_ccw_private, cp)->vdev;
++>>>>>>> a4c6040472ba (vfio/ccw: simplify CCW chain fetch routines)
  	u64 iova;
  	unsigned long *idaws;
  	int ret;
@@@ -548,8 -542,7 +549,12 @@@
  	 * required for the data transfer, since we only only support
  	 * 4K IDAWs today.
  	 */
++<<<<<<< HEAD
 +	pa = chain->ch_pa + idx;
 +	ret = pfn_array_alloc(pa, iova, bytes);
++=======
+ 	ret = page_array_alloc(pa, iova, bytes);
++>>>>>>> a4c6040472ba (vfio/ccw: simplify CCW chain fetch routines)
  	if (ret < 0)
  		goto out_free_idaws;
  
* Unmerged path drivers/s390/cio/vfio_ccw_cp.c
