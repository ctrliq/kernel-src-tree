dm crypt: avoid accessing uninitialized tasklet

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Mike Snitzer <snitzer@kernel.org>
commit d9a02e016aaf5a57fb44e9a5e6da8ccd3b9e2e70
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/d9a02e01.failed

When neither "no_read_workqueue" nor "no_write_workqueue" are enabled,
tasklet_trylock() in crypt_dec_pending() may still return false due to
an uninitialized state, and dm-crypt will unnecessarily do io completion
in io_queue workqueue instead of current context.

Fix this by adding an 'in_tasklet' flag to dm_crypt_io struct and
initialize it to false in crypt_io_init(). Set this flag to true in
kcryptd_queue_crypt() before calling tasklet_schedule(). If set
crypt_dec_pending() will punt io completion to a workqueue.

This also nicely avoids the tasklet_trylock/unlock hack when tasklets
aren't in use.

Fixes: 8e14f610159d ("dm crypt: do not call bio_endio() from the dm-crypt tasklet")
	Cc: stable@vger.kernel.org
	Reported-by: Hou Tao <houtao1@huawei.com>
	Suggested-by: Ignat Korchagin <ignat@cloudflare.com>
	Reviewed-by: Ignat Korchagin <ignat@cloudflare.com>
	Signed-off-by: Mike Snitzer <snitzer@kernel.org>
(cherry picked from commit d9a02e016aaf5a57fb44e9a5e6da8ccd3b9e2e70)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/md/dm-crypt.c
diff --cc drivers/md/dm-crypt.c
index eb57e4bb06b5,2764b4ea18a3..000000000000
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@@ -2185,7 -2234,8 +2187,12 @@@ static void kcryptd_queue_crypt(struct 
  		 * irqs_disabled(): the kernel may run some IO completion from the idle thread, but
  		 * it is being executed with irqs disabled.
  		 */
++<<<<<<< HEAD
 +		if (in_irq() || irqs_disabled()) {
++=======
+ 		if (in_hardirq() || irqs_disabled()) {
+ 			io->in_tasklet = true;
++>>>>>>> d9a02e016aaf (dm crypt: avoid accessing uninitialized tasklet)
  			tasklet_init(&io->tasklet, kcryptd_crypt_tasklet, (unsigned long)&io->work);
  			tasklet_schedule(&io->tasklet);
  			return;
* Unmerged path drivers/md/dm-crypt.c
