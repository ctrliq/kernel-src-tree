scsi: target: iscsi: Allow AuthMethod=None

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Dmitry Bogdanov <d.bogdanov@yadro.com>
commit e52b904b49273df35766826ce8dfb8cc3dd1ff37
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/e52b904b.failed

Allow negotiating AuthMethod=None at CSG=0 (Security Negotiation) when
authentication is not required. That is required by the CHAP test in
Windows HLK.

Link: https://lore.kernel.org/r/20220718152555.17084-4-d.bogdanov@yadro.com
	Reviewed-by: Mike Christie <michael.christie@oracle.com>
	Signed-off-by: Dmitry Bogdanov <d.bogdanov@yadro.com>
	Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
(cherry picked from commit e52b904b49273df35766826ce8dfb8cc3dd1ff37)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/target/iscsi/iscsi_target_login.c
#	drivers/target/iscsi/iscsi_target_nego.c
#	drivers/target/iscsi/iscsi_target_nego.h
diff --cc drivers/target/iscsi/iscsi_target_login.c
index 7475fe7a8313,27e448c2d066..000000000000
--- a/drivers/target/iscsi/iscsi_target_login.c
+++ b/drivers/target/iscsi/iscsi_target_login.c
@@@ -346,10 -337,11 +346,15 @@@ free_sess
  }
  
  static int iscsi_login_zero_tsih_s2(
 -	struct iscsit_conn *conn)
 +	struct iscsi_conn *conn)
  {
  	struct iscsi_node_attrib *na;
++<<<<<<< HEAD
 +	struct iscsi_session *sess = conn->sess;
++=======
+ 	struct iscsit_session *sess = conn->sess;
+ 	struct iscsi_param *param;
++>>>>>>> e52b904b4927 (scsi: target: iscsi: Allow AuthMethod=None)
  	bool iser = false;
  
  	sess->tpg = conn->tpg;
diff --cc drivers/target/iscsi/iscsi_target_nego.c
index 2de20193198e,a167fab80588..000000000000
--- a/drivers/target/iscsi/iscsi_target_nego.c
+++ b/drivers/target/iscsi/iscsi_target_nego.c
@@@ -824,8 -814,44 +824,47 @@@ static int iscsi_target_do_authenticati
  	return 0;
  }
  
++<<<<<<< HEAD
++=======
+ bool iscsi_conn_auth_required(struct iscsit_conn *conn)
+ {
+ 	struct iscsi_node_acl *nacl;
+ 	struct se_node_acl *se_nacl;
+ 
+ 	if (conn->sess->sess_ops->SessionType) {
+ 		/*
+ 		 * For SessionType=Discovery
+ 		 */
+ 		return conn->tpg->tpg_attrib.authentication;
+ 	}
+ 	/*
+ 	 * For SessionType=Normal
+ 	 */
+ 	se_nacl = conn->sess->se_sess->se_node_acl;
+ 	if (!se_nacl) {
+ 		pr_debug("Unknown ACL is trying to connect\n");
+ 		return true;
+ 	}
+ 
+ 	if (se_nacl->dynamic_node_acl) {
+ 		pr_debug("Dynamic ACL %s is trying to connect\n",
+ 			 se_nacl->initiatorname);
+ 		return conn->tpg->tpg_attrib.authentication;
+ 	}
+ 
+ 	pr_debug("Known ACL %s is trying to connect\n",
+ 		 se_nacl->initiatorname);
+ 
+ 	nacl = to_iscsi_nacl(se_nacl);
+ 	if (nacl->node_attrib.authentication == NA_AUTHENTICATION_INHERITED)
+ 		return conn->tpg->tpg_attrib.authentication;
+ 
+ 	return nacl->node_attrib.authentication;
+ }
+ 
++>>>>>>> e52b904b4927 (scsi: target: iscsi: Allow AuthMethod=None)
  static int iscsi_target_handle_csg_zero(
 -	struct iscsit_conn *conn,
 +	struct iscsi_conn *conn,
  	struct iscsi_login *login)
  {
  	int ret;
diff --cc drivers/target/iscsi/iscsi_target_nego.h
index eb9c7072b41f,41c3db3ddeaa..000000000000
--- a/drivers/target/iscsi/iscsi_target_nego.h
+++ b/drivers/target/iscsi/iscsi_target_nego.h
@@@ -13,14 -13,14 +13,20 @@@ struct iscsi_np
  extern void convert_null_to_semi(char *, int);
  extern int extract_param(const char *, const char *, unsigned int, char *,
  		unsigned char *);
 -extern int iscsi_target_check_login_request(struct iscsit_conn *,
 +extern int iscsi_target_check_login_request(struct iscsi_conn *,
  		struct iscsi_login *);
 -extern int iscsi_target_get_initial_payload(struct iscsit_conn *,
 +extern int iscsi_target_get_initial_payload(struct iscsi_conn *,
  		struct iscsi_login *);
 -extern int iscsi_target_locate_portal(struct iscsi_np *, struct iscsit_conn *,
 +extern int iscsi_target_locate_portal(struct iscsi_np *, struct iscsi_conn *,
  		struct iscsi_login *);
  extern int iscsi_target_start_negotiation(
++<<<<<<< HEAD
 +		struct iscsi_login *, struct iscsi_conn *);
 +extern void iscsi_target_nego_release(struct iscsi_conn *);
 +
++=======
+ 		struct iscsi_login *, struct iscsit_conn *);
+ extern void iscsi_target_nego_release(struct iscsit_conn *);
+ extern bool iscsi_conn_auth_required(struct iscsit_conn *conn);
++>>>>>>> e52b904b4927 (scsi: target: iscsi: Allow AuthMethod=None)
  #endif /* ISCSI_TARGET_NEGO_H */
* Unmerged path drivers/target/iscsi/iscsi_target_login.c
* Unmerged path drivers/target/iscsi/iscsi_target_nego.c
* Unmerged path drivers/target/iscsi/iscsi_target_nego.h
