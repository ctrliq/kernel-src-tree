lib: kunit: suppress a compilation warning of frame size

jira LE-1907
Rebuild_History Non-Buildable kernel-4.18.0-494.el8
commit-author Zhen Lei <thunder.leizhen@huawei.com>
commit 1b6d63938a9d868df01d5bc6e2da212133121b8d
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-4.18.0-494.el8/1b6d6393.failed

lib/bitfield_kunit.c: In function `test_bitfields_constants':
lib/bitfield_kunit.c:93:1: warning: the frame size of 7456 bytes is larger than 2048 bytes [-Wframe-larger-than=]
 }
 ^

As the description of BITFIELD_KUNIT in lib/Kconfig.debug, it "Only useful
for kernel devs running the KUnit test harness, and not intended for
inclusion into a production build".  Therefore, it is not worth modifying
variable 'test_bitfields_constants' to clear this warning.  Just suppress
it.

Link: https://lkml.kernel.org/r/20210518094533.7652-1-thunder.leizhen@huawei.com
	Signed-off-by: Zhen Lei <thunder.leizhen@huawei.com>
	Cc: Shuah Khan <skhan@linuxfoundation.org>
	Cc: Vitor Massaru Iha <vitor@massaru.org>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
	Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
(cherry picked from commit 1b6d63938a9d868df01d5bc6e2da212133121b8d)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	lib/Makefile
diff --cc lib/Makefile
index 4bed89508b24,2cc359ec1fdd..000000000000
--- a/lib/Makefile
+++ b/lib/Makefile
@@@ -322,44 -348,11 +322,49 @@@ obj-$(CONFIG_OBJAGG) += objagg.
  obj-$(CONFIG_PLDMFW) += pldmfw/
  
  # KUnit tests
++<<<<<<< HEAD
 +obj-$(CONFIG_BITFIELD_KUNIT_TEST) += bitfield_kunit.o
++=======
+ CFLAGS_bitfield_kunit.o := $(call cc-option,-Wframe-larger-than=10240)
+ obj-$(CONFIG_BITFIELD_KUNIT) += bitfield_kunit.o
++>>>>>>> 1b6d63938a9d (lib: kunit: suppress a compilation warning of frame size)
  obj-$(CONFIG_LIST_KUNIT_TEST) += list-test.o
 -obj-$(CONFIG_LINEAR_RANGES_TEST) += test_linear_ranges.o
 -obj-$(CONFIG_BITS_TEST) += test_bits.o
 +obj-$(CONFIG_LINEAR_RANGES_KUNIT_TEST) += test_linear_ranges.o
 +obj-$(CONFIG_BITS_KUNIT_TEST) += test_bits.o
  obj-$(CONFIG_CMDLINE_KUNIT_TEST) += cmdline_kunit.o
 -
 -obj-$(CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED) += devmem_is_allowed.o
 +obj-$(CONFIG_SLUB_KUNIT_TEST) += slub_kunit.o
 +obj-$(CONFIG_MEMCPY_KUNIT_TEST) += memcpy_kunit.o
 +
 +# FORTIFY_SOURCE compile-time behavior tests
 +TEST_FORTIFY_SRCS = $(wildcard $(srctree)/$(src)/test_fortify/*-*.c)
 +TEST_FORTIFY_LOGS = $(patsubst $(srctree)/$(src)/%.c, %.log, $(TEST_FORTIFY_SRCS))
 +TEST_FORTIFY_LOG = test_fortify.log
 +
 +quiet_cmd_test_fortify = TEST    $@
 +      cmd_test_fortify = $(CONFIG_SHELL) $(srctree)/scripts/test_fortify.sh \
 +			$< $@ "$(NM)" $(CC) $(c_flags) \
 +			$(call cc-disable-warning,fortify-source) \
 +			-DKBUILD_EXTRA_WARN1
 +
 +targets += $(TEST_FORTIFY_LOGS)
 +clean-files += $(TEST_FORTIFY_LOGS)
 +clean-files += $(addsuffix .o, $(TEST_FORTIFY_LOGS))
 +$(obj)/test_fortify/%.log: $(src)/test_fortify/%.c \
 +			   $(src)/test_fortify/test_fortify.h \
 +			   $(srctree)/include/linux/fortify-string.h \
 +			   $(srctree)/scripts/test_fortify.sh \
 +			   FORCE
 +	$(call if_changed,test_fortify)
 +
 +quiet_cmd_gen_fortify_log = GEN     $@
 +      cmd_gen_fortify_log = cat </dev/null $(filter-out FORCE,$^) 2>/dev/null > $@ || true
 +
 +targets += $(TEST_FORTIFY_LOG)
 +clean-files += $(TEST_FORTIFY_LOG)
 +$(obj)/$(TEST_FORTIFY_LOG): $(addprefix $(obj)/, $(TEST_FORTIFY_LOGS)) FORCE
 +	$(call if_changed,gen_fortify_log)
 +
 +# Fake dependency to trigger the fortify tests.
 +ifeq ($(CONFIG_FORTIFY_SOURCE),y)
 +$(obj)/string.o: $(obj)/$(TEST_FORTIFY_LOG)
 +endif
* Unmerged path lib/Makefile
